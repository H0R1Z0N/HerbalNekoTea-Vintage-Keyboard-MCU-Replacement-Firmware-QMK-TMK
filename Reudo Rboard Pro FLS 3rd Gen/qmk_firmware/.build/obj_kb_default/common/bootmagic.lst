   1               		.file	"bootmagic.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.text.scan_keycode,"ax",@progbits
  13               	scan_keycode:
  14               	.LVL0:
  15               	.LFB108:
  16               		.file 1 "./tmk_core/common/bootmagic.c"
   1:./tmk_core/common/bootmagic.c **** #include <stdint.h>
   2:./tmk_core/common/bootmagic.c **** #include <stdbool.h>
   3:./tmk_core/common/bootmagic.c **** #include "wait.h"
   4:./tmk_core/common/bootmagic.c **** #include "matrix.h"
   5:./tmk_core/common/bootmagic.c **** #include "bootloader.h"
   6:./tmk_core/common/bootmagic.c **** #include "debug.h"
   7:./tmk_core/common/bootmagic.c **** #include "keymap.h"
   8:./tmk_core/common/bootmagic.c **** #include "host.h"
   9:./tmk_core/common/bootmagic.c **** #include "action_layer.h"
  10:./tmk_core/common/bootmagic.c **** #include "eeconfig.h"
  11:./tmk_core/common/bootmagic.c **** #include "bootmagic.h"
  12:./tmk_core/common/bootmagic.c **** 
  13:./tmk_core/common/bootmagic.c **** keymap_config_t keymap_config;
  14:./tmk_core/common/bootmagic.c **** 
  15:./tmk_core/common/bootmagic.c **** void bootmagic(void)
  16:./tmk_core/common/bootmagic.c **** {
  17:./tmk_core/common/bootmagic.c ****     /* check signature */
  18:./tmk_core/common/bootmagic.c ****     if (!eeconfig_is_enabled()) {
  19:./tmk_core/common/bootmagic.c ****         eeconfig_init();
  20:./tmk_core/common/bootmagic.c ****     }
  21:./tmk_core/common/bootmagic.c **** 
  22:./tmk_core/common/bootmagic.c ****     /* do scans in case of bounce */
  23:./tmk_core/common/bootmagic.c ****     print("bootmagic scan: ... ");
  24:./tmk_core/common/bootmagic.c ****     uint8_t scan = 100;
  25:./tmk_core/common/bootmagic.c ****     while (scan--) { matrix_scan(); wait_ms(10); }
  26:./tmk_core/common/bootmagic.c ****     print("done.\n");
  27:./tmk_core/common/bootmagic.c **** 
  28:./tmk_core/common/bootmagic.c ****     /* bootmagic skip */
  29:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SKIP)) {
  30:./tmk_core/common/bootmagic.c ****         return;
  31:./tmk_core/common/bootmagic.c ****     }
  32:./tmk_core/common/bootmagic.c **** 
  33:./tmk_core/common/bootmagic.c ****     /* eeconfig clear */
  34:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_EEPROM_CLEAR)) {
  35:./tmk_core/common/bootmagic.c ****         eeconfig_init();
  36:./tmk_core/common/bootmagic.c ****     }
  37:./tmk_core/common/bootmagic.c **** 
  38:./tmk_core/common/bootmagic.c ****     /* bootloader */
  39:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_BOOTLOADER)) {
  40:./tmk_core/common/bootmagic.c ****         bootloader_jump();
  41:./tmk_core/common/bootmagic.c ****     }
  42:./tmk_core/common/bootmagic.c **** 
  43:./tmk_core/common/bootmagic.c ****     /* debug enable */
  44:./tmk_core/common/bootmagic.c ****     debug_config.raw = eeconfig_read_debug();
  45:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_ENABLE)) {
  46:./tmk_core/common/bootmagic.c ****         if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_MATRIX)) {
  47:./tmk_core/common/bootmagic.c ****             debug_config.matrix = !debug_config.matrix;
  48:./tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_KEYBOARD)) {
  49:./tmk_core/common/bootmagic.c ****             debug_config.keyboard = !debug_config.keyboard;
  50:./tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_MOUSE)) {
  51:./tmk_core/common/bootmagic.c ****             debug_config.mouse = !debug_config.mouse;
  52:./tmk_core/common/bootmagic.c ****         } else {
  53:./tmk_core/common/bootmagic.c ****             debug_config.enable = !debug_config.enable;
  54:./tmk_core/common/bootmagic.c ****         }
  55:./tmk_core/common/bootmagic.c ****     }
  56:./tmk_core/common/bootmagic.c ****     eeconfig_update_debug(debug_config.raw);
  57:./tmk_core/common/bootmagic.c **** 
  58:./tmk_core/common/bootmagic.c ****     /* keymap config */
  59:./tmk_core/common/bootmagic.c ****     keymap_config.raw = eeconfig_read_keymap();
  60:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_CONTROL_CAPSLOCK)) {
  61:./tmk_core/common/bootmagic.c ****         keymap_config.swap_control_capslock = !keymap_config.swap_control_capslock;
  62:./tmk_core/common/bootmagic.c ****     }
  63:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_CAPSLOCK_TO_CONTROL)) {
  64:./tmk_core/common/bootmagic.c ****         keymap_config.capslock_to_control = !keymap_config.capslock_to_control;
  65:./tmk_core/common/bootmagic.c ****     }
  66:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_LALT_LGUI)) {
  67:./tmk_core/common/bootmagic.c ****         keymap_config.swap_lalt_lgui = !keymap_config.swap_lalt_lgui;
  68:./tmk_core/common/bootmagic.c ****     }
  69:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_RALT_RGUI)) {
  70:./tmk_core/common/bootmagic.c ****         keymap_config.swap_ralt_rgui = !keymap_config.swap_ralt_rgui;
  71:./tmk_core/common/bootmagic.c ****     }
  72:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_NO_GUI)) {
  73:./tmk_core/common/bootmagic.c ****         keymap_config.no_gui = !keymap_config.no_gui;
  74:./tmk_core/common/bootmagic.c ****     }
  75:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_GRAVE_ESC)) {
  76:./tmk_core/common/bootmagic.c ****         keymap_config.swap_grave_esc = !keymap_config.swap_grave_esc;
  77:./tmk_core/common/bootmagic.c ****     }
  78:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_BACKSLASH_BACKSPACE)) {
  79:./tmk_core/common/bootmagic.c ****         keymap_config.swap_backslash_backspace = !keymap_config.swap_backslash_backspace;
  80:./tmk_core/common/bootmagic.c ****     }
  81:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_HOST_NKRO)) {
  82:./tmk_core/common/bootmagic.c ****         keymap_config.nkro = !keymap_config.nkro;
  83:./tmk_core/common/bootmagic.c ****     }
  84:./tmk_core/common/bootmagic.c ****     eeconfig_update_keymap(keymap_config.raw);
  85:./tmk_core/common/bootmagic.c **** 
  86:./tmk_core/common/bootmagic.c ****     /* default layer */
  87:./tmk_core/common/bootmagic.c ****     uint8_t default_layer = 0;
  88:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_0)) { default_layer |= (1<<0); }
  89:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_1)) { default_layer |= (1<<1); }
  90:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_2)) { default_layer |= (1<<2); }
  91:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_3)) { default_layer |= (1<<3); }
  92:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_4)) { default_layer |= (1<<4); }
  93:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_5)) { default_layer |= (1<<5); }
  94:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_6)) { default_layer |= (1<<6); }
  95:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_7)) { default_layer |= (1<<7); }
  96:./tmk_core/common/bootmagic.c ****     if (default_layer) {
  97:./tmk_core/common/bootmagic.c ****         eeconfig_update_default_layer(default_layer);
  98:./tmk_core/common/bootmagic.c ****         default_layer_set((uint32_t)default_layer);
  99:./tmk_core/common/bootmagic.c ****     } else {
 100:./tmk_core/common/bootmagic.c ****         default_layer = eeconfig_read_default_layer();
 101:./tmk_core/common/bootmagic.c ****         default_layer_set((uint32_t)default_layer);
 102:./tmk_core/common/bootmagic.c ****     }
 103:./tmk_core/common/bootmagic.c **** }
 104:./tmk_core/common/bootmagic.c **** 
 105:./tmk_core/common/bootmagic.c **** static bool scan_keycode(uint8_t keycode)
 106:./tmk_core/common/bootmagic.c **** {
  17               		.loc 1 106 1 view -0
  18               		.cfi_startproc
  19               		.loc 1 106 1 is_stmt 0 view .LVU1
  20 0000 AF92      		push r10
  21               	.LCFI0:
  22               		.cfi_def_cfa_offset 3
  23               		.cfi_offset 10, -2
  24 0002 BF92      		push r11
  25               	.LCFI1:
  26               		.cfi_def_cfa_offset 4
  27               		.cfi_offset 11, -3
  28 0004 CF92      		push r12
  29               	.LCFI2:
  30               		.cfi_def_cfa_offset 5
  31               		.cfi_offset 12, -4
  32 0006 DF92      		push r13
  33               	.LCFI3:
  34               		.cfi_def_cfa_offset 6
  35               		.cfi_offset 13, -5
  36 0008 EF92      		push r14
  37               	.LCFI4:
  38               		.cfi_def_cfa_offset 7
  39               		.cfi_offset 14, -6
  40 000a FF92      		push r15
  41               	.LCFI5:
  42               		.cfi_def_cfa_offset 8
  43               		.cfi_offset 15, -7
  44 000c 0F93      		push r16
  45               	.LCFI6:
  46               		.cfi_def_cfa_offset 9
  47               		.cfi_offset 16, -8
  48 000e 1F93      		push r17
  49               	.LCFI7:
  50               		.cfi_def_cfa_offset 10
  51               		.cfi_offset 17, -9
  52 0010 CF93      		push r28
  53               	.LCFI8:
  54               		.cfi_def_cfa_offset 11
  55               		.cfi_offset 28, -10
  56               	/* prologue: function */
  57               	/* frame size = 0 */
  58               	/* stack size = 9 */
  59               	.L__stack_usage = 9
 107:./tmk_core/common/bootmagic.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
  60               		.loc 1 107 5 is_stmt 1 view .LVU2
  61               	.LBB8:
  62               		.loc 1 107 10 view .LVU3
  63               	.LVL1:
  64               		.loc 1 107 27 view .LVU4
  65               		.loc 1 107 18 is_stmt 0 view .LVU5
  66 0012 C0E0      		ldi r28,0
  67               	.LBB9:
  68               	.LBB10:
  69               	.LBB11:
 108:./tmk_core/common/bootmagic.c ****         matrix_row_t matrix_row = matrix_get_row(r);
 109:./tmk_core/common/bootmagic.c ****         for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 110:./tmk_core/common/bootmagic.c ****             if (matrix_row & ((matrix_row_t)1<<c)) {
 111:./tmk_core/common/bootmagic.c ****                 if (keycode == keymap_key_to_keycode(0, (keypos_t){ .row = r, .col = c })) {
  70               		.loc 1 111 29 view .LVU6
  71 0014 A82E      		mov r10,r24
  72 0016 B12C      		mov r11,__zero_reg__
  73               	.LVL2:
  74               	.L6:
  75               		.loc 1 111 29 view .LVU7
  76               	.LBE11:
  77               	.LBE10:
 108:./tmk_core/common/bootmagic.c ****         matrix_row_t matrix_row = matrix_get_row(r);
  78               		.loc 1 108 9 is_stmt 1 view .LVU8
 108:./tmk_core/common/bootmagic.c ****         matrix_row_t matrix_row = matrix_get_row(r);
  79               		.loc 1 108 35 is_stmt 0 view .LVU9
  80 0018 8C2F      		mov r24,r28
  81 001a 0E94 0000 		call matrix_get_row
  82               	.LVL3:
  83 001e 6B01      		movw r12,r22
  84 0020 7C01      		movw r14,r24
  85               	.LVL4:
 109:./tmk_core/common/bootmagic.c ****             if (matrix_row & ((matrix_row_t)1<<c)) {
  86               		.loc 1 109 9 is_stmt 1 view .LVU10
  87               	.LBB13:
 109:./tmk_core/common/bootmagic.c ****             if (matrix_row & ((matrix_row_t)1<<c)) {
  88               		.loc 1 109 14 view .LVU11
 109:./tmk_core/common/bootmagic.c ****             if (matrix_row & ((matrix_row_t)1<<c)) {
  89               		.loc 1 109 31 view .LVU12
  90               	.LBE13:
 108:./tmk_core/common/bootmagic.c ****         matrix_row_t matrix_row = matrix_get_row(r);
  91               		.loc 1 108 35 is_stmt 0 view .LVU13
  92 0022 10E0      		ldi r17,0
  93 0024 00E0      		ldi r16,0
  94               	.LVL5:
  95               	.L5:
  96               	.LBB14:
 110:./tmk_core/common/bootmagic.c ****                 if (keycode == keymap_key_to_keycode(0, (keypos_t){ .row = r, .col = c })) {
  97               		.loc 1 110 13 is_stmt 1 view .LVU14
 110:./tmk_core/common/bootmagic.c ****                 if (keycode == keymap_key_to_keycode(0, (keypos_t){ .row = r, .col = c })) {
  98               		.loc 1 110 17 is_stmt 0 view .LVU15
  99 0026 D701      		movw r26,r14
 100 0028 C601      		movw r24,r12
 101 002a 002E      		mov r0,r16
 102 002c 00C0      		rjmp 2f
 103               		1:
 104 002e B695      		lsr r27
 105 0030 A795      		ror r26
 106 0032 9795      		ror r25
 107 0034 8795      		ror r24
 108               		2:
 109 0036 0A94      		dec r0
 110 0038 02F4      		brpl 1b
 110:./tmk_core/common/bootmagic.c ****                 if (keycode == keymap_key_to_keycode(0, (keypos_t){ .row = r, .col = c })) {
 111               		.loc 1 110 16 view .LVU16
 112 003a 80FF      		sbrs r24,0
 113 003c 00C0      		rjmp .L2
 114               		.loc 1 111 17 is_stmt 1 view .LVU17
 115               	.LBB12:
 116               		.loc 1 111 32 is_stmt 0 view .LVU18
 117 003e 602F      		mov r22,r16
 118 0040 7C2F      		mov r23,r28
 119 0042 80E0      		ldi r24,0
 120 0044 0E94 0000 		call keymap_key_to_keycode
 121               	.LVL6:
 122               		.loc 1 111 20 view .LVU19
 123 0048 A816      		cp r10,r24
 124 004a B906      		cpc r11,r25
 125 004c 01F4      		brne .L2
 112:./tmk_core/common/bootmagic.c ****                     return true;
 126               		.loc 1 112 21 is_stmt 1 view .LVU20
 127               		.loc 1 112 28 is_stmt 0 view .LVU21
 128 004e 81E0      		ldi r24,lo8(1)
 129               	.LVL7:
 130               	.L1:
 131               	/* epilogue start */
 132               		.loc 1 112 28 view .LVU22
 133               	.LBE12:
 134               	.LBE14:
 135               	.LBE9:
 136               	.LBE8:
 113:./tmk_core/common/bootmagic.c ****                 }
 114:./tmk_core/common/bootmagic.c ****             }
 115:./tmk_core/common/bootmagic.c ****         }
 116:./tmk_core/common/bootmagic.c ****     }
 117:./tmk_core/common/bootmagic.c ****     return false;
 118:./tmk_core/common/bootmagic.c **** }
 137               		.loc 1 118 1 view .LVU23
 138 0050 CF91      		pop r28
 139               	.LVL8:
 140               		.loc 1 118 1 view .LVU24
 141 0052 1F91      		pop r17
 142 0054 0F91      		pop r16
 143 0056 FF90      		pop r15
 144 0058 EF90      		pop r14
 145 005a DF90      		pop r13
 146 005c CF90      		pop r12
 147               	.LVL9:
 148               		.loc 1 118 1 view .LVU25
 149 005e BF90      		pop r11
 150 0060 AF90      		pop r10
 151               	.LVL10:
 152               		.loc 1 118 1 view .LVU26
 153 0062 0895      		ret
 154               	.LVL11:
 155               	.L2:
 156               	.LBB17:
 157               	.LBB16:
 158               	.LBB15:
 109:./tmk_core/common/bootmagic.c ****             if (matrix_row & ((matrix_row_t)1<<c)) {
 159               		.loc 1 109 47 is_stmt 1 discriminator 2 view .LVU27
 109:./tmk_core/common/bootmagic.c ****             if (matrix_row & ((matrix_row_t)1<<c)) {
 160               		.loc 1 109 31 discriminator 2 view .LVU28
 161 0064 0F5F      		subi r16,-1
 162 0066 1F4F      		sbci r17,-1
 163               	.LVL12:
 109:./tmk_core/common/bootmagic.c ****             if (matrix_row & ((matrix_row_t)1<<c)) {
 164               		.loc 1 109 31 is_stmt 0 discriminator 2 view .LVU29
 165 0068 0931      		cpi r16,25
 166 006a 1105      		cpc r17,__zero_reg__
 167 006c 01F4      		brne .L5
 168               	.LBE15:
 169               	.LBE16:
 107:./tmk_core/common/bootmagic.c ****         matrix_row_t matrix_row = matrix_get_row(r);
 170               		.loc 1 107 43 is_stmt 1 discriminator 2 view .LVU30
 171 006e CF5F      		subi r28,lo8(-(1))
 172               	.LVL13:
 107:./tmk_core/common/bootmagic.c ****         matrix_row_t matrix_row = matrix_get_row(r);
 173               		.loc 1 107 27 discriminator 2 view .LVU31
 174 0070 C830      		cpi r28,lo8(8)
 175 0072 01F4      		brne .L6
 176               	.LBE17:
 117:./tmk_core/common/bootmagic.c **** }
 177               		.loc 1 117 12 is_stmt 0 view .LVU32
 178 0074 80E0      		ldi r24,0
 179 0076 00C0      		rjmp .L1
 180               		.cfi_endproc
 181               	.LFE108:
 183               		.section	.text.bootmagic_scan_keycode,"ax",@progbits
 184               	.global	bootmagic_scan_keycode
 186               	bootmagic_scan_keycode:
 187               	.LVL14:
 188               	.LFB109:
 119:./tmk_core/common/bootmagic.c **** 
 120:./tmk_core/common/bootmagic.c **** bool bootmagic_scan_keycode(uint8_t keycode)
 121:./tmk_core/common/bootmagic.c **** {
 189               		.loc 1 121 1 is_stmt 1 view -0
 190               		.cfi_startproc
 191               		.loc 1 121 1 is_stmt 0 view .LVU34
 192 0000 CF93      		push r28
 193               	.LCFI9:
 194               		.cfi_def_cfa_offset 3
 195               		.cfi_offset 28, -2
 196               	/* prologue: function */
 197               	/* frame size = 0 */
 198               	/* stack size = 1 */
 199               	.L__stack_usage = 1
 200 0002 C82F      		mov r28,r24
 122:./tmk_core/common/bootmagic.c ****     if (!scan_keycode(BOOTMAGIC_KEY_SALT)) return false;
 201               		.loc 1 122 5 is_stmt 1 view .LVU35
 202               		.loc 1 122 10 is_stmt 0 view .LVU36
 203 0004 8CE2      		ldi r24,lo8(44)
 204               	.LVL15:
 205               		.loc 1 122 10 view .LVU37
 206 0006 0E94 0000 		call scan_keycode
 207               	.LVL16:
 208               		.loc 1 122 8 view .LVU38
 209 000a 8823      		tst r24
 210 000c 01F0      		breq .L12
 123:./tmk_core/common/bootmagic.c **** 
 124:./tmk_core/common/bootmagic.c ****     return scan_keycode(keycode);
 211               		.loc 1 124 5 is_stmt 1 view .LVU39
 212               		.loc 1 124 12 is_stmt 0 view .LVU40
 213 000e 8C2F      		mov r24,r28
 214               	/* epilogue start */
 125:./tmk_core/common/bootmagic.c **** }...
 215               		.loc 1 125 1 view .LVU41
 216 0010 CF91      		pop r28
 217               	.LVL17:
 124:./tmk_core/common/bootmagic.c ****     return scan_keycode(keycode);
 218               		.loc 1 124 12 view .LVU42
 219 0012 0C94 0000 		jmp scan_keycode
 220               	.LVL18:
 221               	.L12:
 222               		.loc 1 125 1 view .LVU43
 223 0016 80E0      		ldi r24,0
 224               	/* epilogue start */
 225 0018 CF91      		pop r28
 226               	.LVL19:
 227               		.loc 1 125 1 view .LVU44
 228 001a 0895      		ret
 229               		.cfi_endproc
 230               	.LFE109:
 232               		.section	.text.bootmagic,"ax",@progbits
 233               	.global	bootmagic
 235               	bootmagic:
 236               	.LFB107:
  16:./tmk_core/common/bootmagic.c **** {
 237               		.loc 1 16 1 is_stmt 1 view -0
 238               		.cfi_startproc
 239 0000 CF93      		push r28
 240               	.LCFI10:
 241               		.cfi_def_cfa_offset 3
 242               		.cfi_offset 28, -2
 243 0002 DF93      		push r29
 244               	.LCFI11:
 245               		.cfi_def_cfa_offset 4
 246               		.cfi_offset 29, -3
 247 0004 00D0      		rcall .
 248 0006 00D0      		rcall .
 249               	.LCFI12:
 250               		.cfi_def_cfa_offset 8
 251 0008 CDB7      		in r28,__SP_L__
 252 000a DEB7      		in r29,__SP_H__
 253               	.LCFI13:
 254               		.cfi_def_cfa_register 28
 255               	/* prologue: function */
 256               	/* frame size = 4 */
 257               	/* stack size = 6 */
 258               	.L__stack_usage = 6
  18:./tmk_core/common/bootmagic.c ****     if (!eeconfig_is_enabled()) {
 259               		.loc 1 18 5 view .LVU46
  18:./tmk_core/common/bootmagic.c ****     if (!eeconfig_is_enabled()) {
 260               		.loc 1 18 10 is_stmt 0 view .LVU47
 261 000c 0E94 0000 		call eeconfig_is_enabled
 262               	.LVL20:
  18:./tmk_core/common/bootmagic.c ****     if (!eeconfig_is_enabled()) {
 263               		.loc 1 18 8 view .LVU48
 264 0010 8111      		cpse r24,__zero_reg__
 265 0012 00C0      		rjmp .L15
  19:./tmk_core/common/bootmagic.c ****         eeconfig_init();
 266               		.loc 1 19 9 is_stmt 1 view .LVU49
 267 0014 0E94 0000 		call eeconfig_init
 268               	.LVL21:
 269               	.L15:
  16:./tmk_core/common/bootmagic.c **** {
 270               		.loc 1 16 1 is_stmt 0 discriminator 1 view .LVU50
 271 0018 95E6      		ldi r25,lo8(101)
 272 001a 9983      		std Y+1,r25
 273 001c 00C0      		rjmp .L16
 274               	.LVL22:
 275               	.L17:
  25:./tmk_core/common/bootmagic.c ****     while (scan--) { matrix_scan(); wait_ms(10); }
 276               		.loc 1 25 22 is_stmt 1 discriminator 2 view .LVU51
 277 001e 0E94 0000 		call matrix_scan
 278               	.LVL23:
  25:./tmk_core/common/bootmagic.c ****     while (scan--) { matrix_scan(); wait_ms(10); }
 279               		.loc 1 25 37 discriminator 2 view .LVU52
 280               	.LBB18:
 281               	.LBI18:
 282               		.file 2 "/usr/avr/include/util/delay.h"
   1:/usr/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/avr/include/util/delay.h **** 
   6:/usr/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/avr/include/util/delay.h **** 
   9:/usr/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/avr/include/util/delay.h **** 
  12:/usr/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/avr/include/util/delay.h ****      distribution.
  16:/usr/avr/include/util/delay.h **** 
  17:/usr/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/avr/include/util/delay.h **** 
  21:/usr/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/avr/include/util/delay.h **** 
  33:/usr/avr/include/util/delay.h **** /* $Id: delay.h.in 2551 2020-10-10 20:33:35Z joerg_wunsch $ */
  34:/usr/avr/include/util/delay.h **** 
  35:/usr/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/avr/include/util/delay.h **** 
  38:/usr/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/usr/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/usr/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/usr/avr/include/util/delay.h **** #  endif
  42:/usr/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/usr/avr/include/util/delay.h **** 
  44:/usr/avr/include/util/delay.h **** #include <inttypes.h>
  45:/usr/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/usr/avr/include/util/delay.h **** #include <math.h>
  47:/usr/avr/include/util/delay.h **** 
  48:/usr/avr/include/util/delay.h **** /** \file */
  49:/usr/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/usr/avr/include/util/delay.h ****     \code
  51:/usr/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/usr/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/usr/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/usr/avr/include/util/delay.h ****     \endcode
  55:/usr/avr/include/util/delay.h **** 
  56:/usr/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/usr/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/usr/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/usr/avr/include/util/delay.h ****     used.
  60:/usr/avr/include/util/delay.h **** 
  61:/usr/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/usr/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/usr/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/usr/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/usr/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/usr/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/usr/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/usr/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/usr/avr/include/util/delay.h **** 
  70:/usr/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/usr/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/usr/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/usr/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/usr/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/usr/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/usr/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/usr/avr/include/util/delay.h ****     routines linked into the application.
  78:/usr/avr/include/util/delay.h **** 
  79:/usr/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/usr/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/usr/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/usr/avr/include/util/delay.h **** 
  83:/usr/avr/include/util/delay.h **** */
  84:/usr/avr/include/util/delay.h **** 
  85:/usr/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/usr/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/usr/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/usr/avr/include/util/delay.h **** #endif
  89:/usr/avr/include/util/delay.h **** 
  90:/usr/avr/include/util/delay.h **** #ifndef F_CPU
  91:/usr/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/usr/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/usr/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/usr/avr/include/util/delay.h ****     \def F_CPU
  95:/usr/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/usr/avr/include/util/delay.h **** 
  97:/usr/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/usr/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/usr/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/usr/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/usr/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/usr/avr/include/util/delay.h **** 
 103:/usr/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/usr/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/usr/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/usr/avr/include/util/delay.h ****     integer value.
 107:/usr/avr/include/util/delay.h ****  */
 108:/usr/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/usr/avr/include/util/delay.h **** #endif
 110:/usr/avr/include/util/delay.h **** 
 111:/usr/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/usr/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/usr/avr/include/util/delay.h **** #endif
 114:/usr/avr/include/util/delay.h **** 
 115:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/usr/avr/include/util/delay.h **** #  include <math.h>
 119:/usr/avr/include/util/delay.h **** #endif
 120:/usr/avr/include/util/delay.h **** 
 121:/usr/avr/include/util/delay.h **** /**
 122:/usr/avr/include/util/delay.h ****    \ingroup util_delay
 123:/usr/avr/include/util/delay.h **** 
 124:/usr/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/usr/avr/include/util/delay.h **** 
 126:/usr/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/usr/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/usr/avr/include/util/delay.h **** 
 129:/usr/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/usr/avr/include/util/delay.h **** 
 131:/usr/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/usr/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/usr/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/usr/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/usr/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/usr/avr/include/util/delay.h **** 
 137:/usr/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/usr/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/usr/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/usr/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/usr/avr/include/util/delay.h **** 
 142:/usr/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/usr/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/usr/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/usr/avr/include/util/delay.h ****    microseconds of delay.
 146:/usr/avr/include/util/delay.h **** 
 147:/usr/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/usr/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/usr/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/usr/avr/include/util/delay.h ****    respectively.
 151:/usr/avr/include/util/delay.h **** 
 152:/usr/avr/include/util/delay.h ****    \note
 153:/usr/avr/include/util/delay.h **** 
 154:/usr/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/usr/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/usr/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/usr/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/usr/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/usr/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/usr/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/usr/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/usr/avr/include/util/delay.h ****    not available to the compiler then.
 163:/usr/avr/include/util/delay.h **** 
 164:/usr/avr/include/util/delay.h ****  */
 165:/usr/avr/include/util/delay.h **** void
 166:/usr/avr/include/util/delay.h **** _delay_ms(double __ms)
 283               		.loc 2 166 1 discriminator 2 view .LVU53
 284               	.LBB19:
 167:/usr/avr/include/util/delay.h **** {
 168:/usr/avr/include/util/delay.h **** 	double __tmp ;
 285               		.loc 2 168 2 discriminator 2 view .LVU54
 169:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/usr/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 286               		.loc 2 172 2 discriminator 2 view .LVU55
 173:/usr/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 287               		.loc 2 173 2 discriminator 2 view .LVU56
 174:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 288               		.loc 2 174 2 discriminator 2 view .LVU57
 175:/usr/avr/include/util/delay.h **** 
 176:/usr/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/usr/avr/include/util/delay.h **** 
 179:/usr/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/usr/avr/include/util/delay.h **** 
 182:/usr/avr/include/util/delay.h **** 	#else
 183:/usr/avr/include/util/delay.h **** 		//round up by default
 184:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 289               		.loc 2 184 3 discriminator 2 view .LVU58
 185:/usr/avr/include/util/delay.h **** 	#endif
 186:/usr/avr/include/util/delay.h **** 
 187:/usr/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 290               		.loc 2 187 2 discriminator 2 view .LVU59
 291 0022 8FE3      		ldi r24,lo8(-25537)
 292 0024 9CE9      		ldi r25,hi8(-25537)
 293 0026 0197      	1:	sbiw r24,1
 294 0028 01F4      		brne 1b
 295 002a 00C0      		rjmp .
 296 002c 0000      		nop
 297               	.LVL24:
 298               	.L16:
 299               		.loc 2 187 2 is_stmt 0 discriminator 2 view .LVU60
 300               	.LBE19:
 301               	.LBE18:
  25:./tmk_core/common/bootmagic.c ****     while (scan--) { matrix_scan(); wait_ms(10); }
 302               		.loc 1 25 12 is_stmt 1 discriminator 1 view .LVU61
  25:./tmk_core/common/bootmagic.c ****     while (scan--) { matrix_scan(); wait_ms(10); }
 303               		.loc 1 25 12 is_stmt 0 discriminator 1 view .LVU62
 304 002e A981      		ldd r26,Y+1
 305 0030 A150      		subi r26,lo8(-(-1))
 306 0032 A983      		std Y+1,r26
 307               	.LVL25:
  25:./tmk_core/common/bootmagic.c ****     while (scan--) { matrix_scan(); wait_ms(10); }
 308               		.loc 1 25 12 discriminator 1 view .LVU63
 309 0034 A111      		cpse r26,__zero_reg__
 310 0036 00C0      		rjmp .L17
  26:./tmk_core/common/bootmagic.c ****     print("done.\n");
 311               		.loc 1 26 21 is_stmt 1 view .LVU64
  29:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SKIP)) {
 312               		.loc 1 29 5 view .LVU65
  29:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SKIP)) {
 313               		.loc 1 29 9 is_stmt 0 view .LVU66
 314 0038 89E2      		ldi r24,lo8(41)
 315 003a 0E94 0000 		call bootmagic_scan_keycode
 316               	.LVL26:
  29:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SKIP)) {
 317               		.loc 1 29 8 view .LVU67
 318 003e 8111      		cpse r24,__zero_reg__
 319 0040 00C0      		rjmp .L14
  34:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_EEPROM_CLEAR)) {
 320               		.loc 1 34 5 is_stmt 1 view .LVU68
  34:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_EEPROM_CLEAR)) {
 321               		.loc 1 34 9 is_stmt 0 view .LVU69
 322 0042 8AE2      		ldi r24,lo8(42)
 323 0044 0E94 0000 		call bootmagic_scan_keycode
 324               	.LVL27:
  34:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_EEPROM_CLEAR)) {
 325               		.loc 1 34 8 view .LVU70
 326 0048 8111      		cpse r24,__zero_reg__
  35:./tmk_core/common/bootmagic.c ****         eeconfig_init();
 327               		.loc 1 35 9 is_stmt 1 view .LVU71
 328 004a 0E94 0000 		call eeconfig_init
 329               	.LVL28:
 330               	.L19:
  39:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_BOOTLOADER)) {
 331               		.loc 1 39 5 view .LVU72
  39:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_BOOTLOADER)) {
 332               		.loc 1 39 9 is_stmt 0 view .LVU73
 333 004e 85E0      		ldi r24,lo8(5)
 334 0050 0E94 0000 		call bootmagic_scan_keycode
 335               	.LVL29:
  39:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_BOOTLOADER)) {
 336               		.loc 1 39 8 view .LVU74
 337 0054 8111      		cpse r24,__zero_reg__
  40:./tmk_core/common/bootmagic.c ****         bootloader_jump();
 338               		.loc 1 40 9 is_stmt 1 view .LVU75
 339 0056 0E94 0000 		call bootloader_jump
 340               	.LVL30:
 341               	.L20:
  44:./tmk_core/common/bootmagic.c ****     debug_config.raw = eeconfig_read_debug();
 342               		.loc 1 44 5 view .LVU76
  44:./tmk_core/common/bootmagic.c ****     debug_config.raw = eeconfig_read_debug();
 343               		.loc 1 44 24 is_stmt 0 view .LVU77
 344 005a 0E94 0000 		call eeconfig_read_debug
 345               	.LVL31:
  44:./tmk_core/common/bootmagic.c ****     debug_config.raw = eeconfig_read_debug();
 346               		.loc 1 44 22 view .LVU78
 347 005e 8093 0000 		sts debug_config,r24
  45:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_ENABLE)) {
 348               		.loc 1 45 5 is_stmt 1 view .LVU79
  45:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_ENABLE)) {
 349               		.loc 1 45 9 is_stmt 0 view .LVU80
 350 0062 87E0      		ldi r24,lo8(7)
 351 0064 0E94 0000 		call bootmagic_scan_keycode
 352               	.LVL32:
  45:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_ENABLE)) {
 353               		.loc 1 45 8 view .LVU81
 354 0068 8823      		tst r24
 355 006a 01F0      		breq .L21
  46:./tmk_core/common/bootmagic.c ****         if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_MATRIX)) {
 356               		.loc 1 46 9 is_stmt 1 view .LVU82
  46:./tmk_core/common/bootmagic.c ****         if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_MATRIX)) {
 357               		.loc 1 46 13 is_stmt 0 view .LVU83
 358 006c 8BE1      		ldi r24,lo8(27)
 359 006e 0E94 0000 		call bootmagic_scan_keycode
 360               	.LVL33:
  46:./tmk_core/common/bootmagic.c ****         if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_MATRIX)) {
 361               		.loc 1 46 12 view .LVU84
 362 0072 8823      		tst r24
 363 0074 01F4      		brne .+2
 364 0076 00C0      		rjmp .L22
  47:./tmk_core/common/bootmagic.c ****             debug_config.matrix = !debug_config.matrix;
 365               		.loc 1 47 13 is_stmt 1 view .LVU85
  47:./tmk_core/common/bootmagic.c ****             debug_config.matrix = !debug_config.matrix;
 366               		.loc 1 47 48 is_stmt 0 view .LVU86
 367 0078 9091 0000 		lds r25,debug_config
  47:./tmk_core/common/bootmagic.c ****             debug_config.matrix = !debug_config.matrix;
 368               		.loc 1 47 33 view .LVU87
 369 007c 892F      		mov r24,r25
 370 007e 8D7F      		andi r24,~(1<<1)
 371 0080 91FF      		sbrs r25,1
 372 0082 8260      		ori r24,1<<1
 373               	.L93:
  53:./tmk_core/common/bootmagic.c ****             debug_config.enable = !debug_config.enable;
 374               		.loc 1 53 33 view .LVU88
 375 0084 8093 0000 		sts debug_config,r24
 376               	.LVL34:
 377               	.L21:
  56:./tmk_core/common/bootmagic.c ****     eeconfig_update_debug(debug_config.raw);
 378               		.loc 1 56 5 is_stmt 1 view .LVU89
 379 0088 8091 0000 		lds r24,debug_config
 380 008c 0E94 0000 		call eeconfig_update_debug
 381               	.LVL35:
  59:./tmk_core/common/bootmagic.c ****     keymap_config.raw = eeconfig_read_keymap();
 382               		.loc 1 59 5 view .LVU90
  59:./tmk_core/common/bootmagic.c ****     keymap_config.raw = eeconfig_read_keymap();
 383               		.loc 1 59 25 is_stmt 0 view .LVU91
 384 0090 0E94 0000 		call eeconfig_read_keymap
 385               	.LVL36:
 386 0094 90E0      		ldi r25,0
 387 0096 9093 0000 		sts keymap_config+1,r25
 388 009a 8093 0000 		sts keymap_config,r24
  60:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_CONTROL_CAPSLOCK)) {
 389               		.loc 1 60 5 is_stmt 1 view .LVU92
  60:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_CONTROL_CAPSLOCK)) {
 390               		.loc 1 60 9 is_stmt 0 view .LVU93
 391 009e 80EE      		ldi r24,lo8(-32)
 392 00a0 0E94 0000 		call bootmagic_scan_keycode
 393               	.LVL37:
  60:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_CONTROL_CAPSLOCK)) {
 394               		.loc 1 60 8 view .LVU94
 395 00a4 8823      		tst r24
 396 00a6 01F0      		breq .L25
  61:./tmk_core/common/bootmagic.c ****         keymap_config.swap_control_capslock = !keymap_config.swap_control_capslock;
 397               		.loc 1 61 9 is_stmt 1 view .LVU95
  61:./tmk_core/common/bootmagic.c ****         keymap_config.swap_control_capslock = !keymap_config.swap_control_capslock;
 398               		.loc 1 61 61 is_stmt 0 view .LVU96
 399 00a8 9091 0000 		lds r25,keymap_config
  61:./tmk_core/common/bootmagic.c ****         keymap_config.swap_control_capslock = !keymap_config.swap_control_capslock;
 400               		.loc 1 61 45 view .LVU97
 401 00ac 892F      		mov r24,r25
 402 00ae 8E7F      		andi r24,~(1<<0)
 403 00b0 90FF      		sbrs r25,0
 404 00b2 8160      		ori r24,1<<0
 405 00b4 8093 0000 		sts keymap_config,r24
 406               	.L25:
  63:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_CAPSLOCK_TO_CONTROL)) {
 407               		.loc 1 63 5 is_stmt 1 view .LVU98
  63:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_CAPSLOCK_TO_CONTROL)) {
 408               		.loc 1 63 9 is_stmt 0 view .LVU99
 409 00b8 89E3      		ldi r24,lo8(57)
 410 00ba 0E94 0000 		call bootmagic_scan_keycode
 411               	.LVL38:
  63:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_CAPSLOCK_TO_CONTROL)) {
 412               		.loc 1 63 8 view .LVU100
 413 00be 8823      		tst r24
 414 00c0 01F0      		breq .L26
  64:./tmk_core/common/bootmagic.c ****         keymap_config.capslock_to_control = !keymap_config.capslock_to_control;
 415               		.loc 1 64 9 is_stmt 1 view .LVU101
  64:./tmk_core/common/bootmagic.c ****         keymap_config.capslock_to_control = !keymap_config.capslock_to_control;
 416               		.loc 1 64 59 is_stmt 0 view .LVU102
 417 00c2 9091 0000 		lds r25,keymap_config
  64:./tmk_core/common/bootmagic.c ****         keymap_config.capslock_to_control = !keymap_config.capslock_to_control;
 418               		.loc 1 64 43 view .LVU103
 419 00c6 892F      		mov r24,r25
 420 00c8 8D7F      		andi r24,~(1<<1)
 421 00ca 91FF      		sbrs r25,1
 422 00cc 8260      		ori r24,1<<1
 423 00ce 8093 0000 		sts keymap_config,r24
 424               	.L26:
  66:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_LALT_LGUI)) {
 425               		.loc 1 66 5 is_stmt 1 view .LVU104
  66:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_LALT_LGUI)) {
 426               		.loc 1 66 9 is_stmt 0 view .LVU105
 427 00d2 82EE      		ldi r24,lo8(-30)
 428 00d4 0E94 0000 		call bootmagic_scan_keycode
 429               	.LVL39:
  66:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_LALT_LGUI)) {
 430               		.loc 1 66 8 view .LVU106
 431 00d8 8823      		tst r24
 432 00da 01F0      		breq .L27
  67:./tmk_core/common/bootmagic.c ****         keymap_config.swap_lalt_lgui = !keymap_config.swap_lalt_lgui;
 433               		.loc 1 67 9 is_stmt 1 view .LVU107
  67:./tmk_core/common/bootmagic.c ****         keymap_config.swap_lalt_lgui = !keymap_config.swap_lalt_lgui;
 434               		.loc 1 67 54 is_stmt 0 view .LVU108
 435 00dc 9091 0000 		lds r25,keymap_config
  67:./tmk_core/common/bootmagic.c ****         keymap_config.swap_lalt_lgui = !keymap_config.swap_lalt_lgui;
 436               		.loc 1 67 38 view .LVU109
 437 00e0 892F      		mov r24,r25
 438 00e2 8B7F      		andi r24,~(1<<2)
 439 00e4 92FF      		sbrs r25,2
 440 00e6 8460      		ori r24,1<<2
 441 00e8 8093 0000 		sts keymap_config,r24
 442               	.L27:
  69:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_RALT_RGUI)) {
 443               		.loc 1 69 5 is_stmt 1 view .LVU110
  69:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_RALT_RGUI)) {
 444               		.loc 1 69 9 is_stmt 0 view .LVU111
 445 00ec 86EE      		ldi r24,lo8(-26)
 446 00ee 0E94 0000 		call bootmagic_scan_keycode
 447               	.LVL40:
  69:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_RALT_RGUI)) {
 448               		.loc 1 69 8 view .LVU112
 449 00f2 8823      		tst r24
 450 00f4 01F0      		breq .L28
  70:./tmk_core/common/bootmagic.c ****         keymap_config.swap_ralt_rgui = !keymap_config.swap_ralt_rgui;
 451               		.loc 1 70 9 is_stmt 1 view .LVU113
  70:./tmk_core/common/bootmagic.c ****         keymap_config.swap_ralt_rgui = !keymap_config.swap_ralt_rgui;
 452               		.loc 1 70 54 is_stmt 0 view .LVU114
 453 00f6 9091 0000 		lds r25,keymap_config
  70:./tmk_core/common/bootmagic.c ****         keymap_config.swap_ralt_rgui = !keymap_config.swap_ralt_rgui;
 454               		.loc 1 70 38 view .LVU115
 455 00fa 892F      		mov r24,r25
 456 00fc 877F      		andi r24,~(1<<3)
 457 00fe 93FF      		sbrs r25,3
 458 0100 8860      		ori r24,1<<3
 459 0102 8093 0000 		sts keymap_config,r24
 460               	.L28:
  72:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_NO_GUI)) {
 461               		.loc 1 72 5 is_stmt 1 view .LVU116
  72:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_NO_GUI)) {
 462               		.loc 1 72 9 is_stmt 0 view .LVU117
 463 0106 83EE      		ldi r24,lo8(-29)
 464 0108 0E94 0000 		call bootmagic_scan_keycode
 465               	.LVL41:
  72:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_NO_GUI)) {
 466               		.loc 1 72 8 view .LVU118
 467 010c 8823      		tst r24
 468 010e 01F0      		breq .L29
  73:./tmk_core/common/bootmagic.c ****         keymap_config.no_gui = !keymap_config.no_gui;
 469               		.loc 1 73 9 is_stmt 1 view .LVU119
  73:./tmk_core/common/bootmagic.c ****         keymap_config.no_gui = !keymap_config.no_gui;
 470               		.loc 1 73 46 is_stmt 0 view .LVU120
 471 0110 9091 0000 		lds r25,keymap_config
  73:./tmk_core/common/bootmagic.c ****         keymap_config.no_gui = !keymap_config.no_gui;
 472               		.loc 1 73 30 view .LVU121
 473 0114 892F      		mov r24,r25
 474 0116 8F7E      		andi r24,~(1<<4)
 475 0118 94FF      		sbrs r25,4
 476 011a 8061      		ori r24,1<<4
 477 011c 8093 0000 		sts keymap_config,r24
 478               	.L29:
  75:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_GRAVE_ESC)) {
 479               		.loc 1 75 5 is_stmt 1 view .LVU122
  75:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_GRAVE_ESC)) {
 480               		.loc 1 75 9 is_stmt 0 view .LVU123
 481 0120 85E3      		ldi r24,lo8(53)
 482 0122 0E94 0000 		call bootmagic_scan_keycode
 483               	.LVL42:
  75:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_GRAVE_ESC)) {
 484               		.loc 1 75 8 view .LVU124
 485 0126 8823      		tst r24
 486 0128 01F0      		breq .L30
  76:./tmk_core/common/bootmagic.c ****         keymap_config.swap_grave_esc = !keymap_config.swap_grave_esc;
 487               		.loc 1 76 9 is_stmt 1 view .LVU125
  76:./tmk_core/common/bootmagic.c ****         keymap_config.swap_grave_esc = !keymap_config.swap_grave_esc;
 488               		.loc 1 76 54 is_stmt 0 view .LVU126
 489 012a 9091 0000 		lds r25,keymap_config
  76:./tmk_core/common/bootmagic.c ****         keymap_config.swap_grave_esc = !keymap_config.swap_grave_esc;
 490               		.loc 1 76 38 view .LVU127
 491 012e 892F      		mov r24,r25
 492 0130 8F7D      		andi r24,~(1<<5)
 493 0132 95FF      		sbrs r25,5
 494 0134 8062      		ori r24,1<<5
 495 0136 8093 0000 		sts keymap_config,r24
 496               	.L30:
  78:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_BACKSLASH_BACKSPACE)) {
 497               		.loc 1 78 5 is_stmt 1 view .LVU128
  78:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_BACKSLASH_BACKSPACE)) {
 498               		.loc 1 78 9 is_stmt 0 view .LVU129
 499 013a 81E3      		ldi r24,lo8(49)
 500 013c 0E94 0000 		call bootmagic_scan_keycode
 501               	.LVL43:
  78:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_BACKSLASH_BACKSPACE)) {
 502               		.loc 1 78 8 view .LVU130
 503 0140 8823      		tst r24
 504 0142 01F0      		breq .L31
  79:./tmk_core/common/bootmagic.c ****         keymap_config.swap_backslash_backspace = !keymap_config.swap_backslash_backspace;
 505               		.loc 1 79 9 is_stmt 1 view .LVU131
  79:./tmk_core/common/bootmagic.c ****         keymap_config.swap_backslash_backspace = !keymap_config.swap_backslash_backspace;
 506               		.loc 1 79 64 is_stmt 0 view .LVU132
 507 0144 9091 0000 		lds r25,keymap_config
  79:./tmk_core/common/bootmagic.c ****         keymap_config.swap_backslash_backspace = !keymap_config.swap_backslash_backspace;
 508               		.loc 1 79 48 view .LVU133
 509 0148 892F      		mov r24,r25
 510 014a 8F7B      		andi r24,~(1<<6)
 511 014c 96FF      		sbrs r25,6
 512 014e 8064      		ori r24,1<<6
 513 0150 8093 0000 		sts keymap_config,r24
 514               	.L31:
  81:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_HOST_NKRO)) {
 515               		.loc 1 81 5 is_stmt 1 view .LVU134
  81:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_HOST_NKRO)) {
 516               		.loc 1 81 9 is_stmt 0 view .LVU135
 517 0154 81E1      		ldi r24,lo8(17)
 518 0156 0E94 0000 		call bootmagic_scan_keycode
 519               	.LVL44:
  81:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_HOST_NKRO)) {
 520               		.loc 1 81 8 view .LVU136
 521 015a 8823      		tst r24
 522 015c 01F0      		breq .L32
  82:./tmk_core/common/bootmagic.c ****         keymap_config.nkro = !keymap_config.nkro;
 523               		.loc 1 82 9 is_stmt 1 view .LVU137
  82:./tmk_core/common/bootmagic.c ****         keymap_config.nkro = !keymap_config.nkro;
 524               		.loc 1 82 44 is_stmt 0 view .LVU138
 525 015e 9091 0000 		lds r25,keymap_config
  82:./tmk_core/common/bootmagic.c ****         keymap_config.nkro = !keymap_config.nkro;
 526               		.loc 1 82 28 view .LVU139
 527 0162 892F      		mov r24,r25
 528 0164 97FB      		bst r25,7
 529 0166 87F9      		bld r24,7
 530 0168 8058      		subi r24,0x80
 531 016a 8093 0000 		sts keymap_config,r24
 532               	.L32:
  84:./tmk_core/common/bootmagic.c ****     eeconfig_update_keymap(keymap_config.raw);
 533               		.loc 1 84 5 is_stmt 1 view .LVU140
 534 016e 8091 0000 		lds r24,keymap_config
 535 0172 0E94 0000 		call eeconfig_update_keymap
 536               	.LVL45:
  87:./tmk_core/common/bootmagic.c ****     uint8_t default_layer = 0;
 537               		.loc 1 87 5 view .LVU141
  88:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_0)) { default_layer |= (1<<0); }
 538               		.loc 1 88 5 view .LVU142
  88:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_0)) { default_layer |= (1<<0); }
 539               		.loc 1 88 9 is_stmt 0 view .LVU143
 540 0176 87E2      		ldi r24,lo8(39)
 541 0178 0E94 0000 		call bootmagic_scan_keycode
 542               	.LVL46:
 543 017c 8983      		std Y+1,r24
 544               	.LVL47:
  89:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_1)) { default_layer |= (1<<1); }
 545               		.loc 1 89 5 is_stmt 1 view .LVU144
  89:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_1)) { default_layer |= (1<<1); }
 546               		.loc 1 89 9 is_stmt 0 view .LVU145
 547 017e 8EE1      		ldi r24,lo8(30)
 548               	.LVL48:
  89:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_1)) { default_layer |= (1<<1); }
 549               		.loc 1 89 9 view .LVU146
 550 0180 0E94 0000 		call bootmagic_scan_keycode
 551               	.LVL49:
  89:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_1)) { default_layer |= (1<<1); }
 552               		.loc 1 89 8 view .LVU147
 553 0184 8823      		tst r24
 554 0186 01F0      		breq .L33
  89:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_1)) { default_layer |= (1<<1); }
 555               		.loc 1 89 66 is_stmt 1 discriminator 1 view .LVU148
  89:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_1)) { default_layer |= (1<<1); }
 556               		.loc 1 89 80 is_stmt 0 discriminator 1 view .LVU149
 557 0188 B981      		ldd r27,Y+1
 558 018a B260      		ori r27,lo8(2)
 559 018c B983      		std Y+1,r27
 560               	.LVL50:
 561               	.L33:
  90:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_2)) { default_layer |= (1<<2); }
 562               		.loc 1 90 5 is_stmt 1 view .LVU150
  90:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_2)) { default_layer |= (1<<2); }
 563               		.loc 1 90 9 is_stmt 0 view .LVU151
 564 018e 8FE1      		ldi r24,lo8(31)
 565 0190 0E94 0000 		call bootmagic_scan_keycode
 566               	.LVL51:
  90:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_2)) { default_layer |= (1<<2); }
 567               		.loc 1 90 8 view .LVU152
 568 0194 8823      		tst r24
 569 0196 01F0      		breq .L34
  90:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_2)) { default_layer |= (1<<2); }
 570               		.loc 1 90 66 is_stmt 1 discriminator 1 view .LVU153
  90:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_2)) { default_layer |= (1<<2); }
 571               		.loc 1 90 80 is_stmt 0 discriminator 1 view .LVU154
 572 0198 2981      		ldd r18,Y+1
 573 019a 2460      		ori r18,lo8(4)
 574 019c 2983      		std Y+1,r18
 575               	.LVL52:
 576               	.L34:
  91:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_3)) { default_layer |= (1<<3); }
 577               		.loc 1 91 5 is_stmt 1 view .LVU155
  91:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_3)) { default_layer |= (1<<3); }
 578               		.loc 1 91 9 is_stmt 0 view .LVU156
 579 019e 80E2      		ldi r24,lo8(32)
 580 01a0 0E94 0000 		call bootmagic_scan_keycode
 581               	.LVL53:
  91:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_3)) { default_layer |= (1<<3); }
 582               		.loc 1 91 8 view .LVU157
 583 01a4 8823      		tst r24
 584 01a6 01F0      		breq .L35
  91:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_3)) { default_layer |= (1<<3); }
 585               		.loc 1 91 66 is_stmt 1 discriminator 1 view .LVU158
  91:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_3)) { default_layer |= (1<<3); }
 586               		.loc 1 91 80 is_stmt 0 discriminator 1 view .LVU159
 587 01a8 3981      		ldd r19,Y+1
 588 01aa 3860      		ori r19,lo8(8)
 589 01ac 3983      		std Y+1,r19
 590               	.LVL54:
 591               	.L35:
  92:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_4)) { default_layer |= (1<<4); }
 592               		.loc 1 92 5 is_stmt 1 view .LVU160
  92:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_4)) { default_layer |= (1<<4); }
 593               		.loc 1 92 9 is_stmt 0 view .LVU161
 594 01ae 81E2      		ldi r24,lo8(33)
 595 01b0 0E94 0000 		call bootmagic_scan_keycode
 596               	.LVL55:
  92:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_4)) { default_layer |= (1<<4); }
 597               		.loc 1 92 8 view .LVU162
 598 01b4 8823      		tst r24
 599 01b6 01F0      		breq .L36
  92:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_4)) { default_layer |= (1<<4); }
 600               		.loc 1 92 66 is_stmt 1 discriminator 1 view .LVU163
  92:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_4)) { default_layer |= (1<<4); }
 601               		.loc 1 92 80 is_stmt 0 discriminator 1 view .LVU164
 602 01b8 4981      		ldd r20,Y+1
 603 01ba 4061      		ori r20,lo8(16)
 604 01bc 4983      		std Y+1,r20
 605               	.LVL56:
 606               	.L36:
  93:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_5)) { default_layer |= (1<<5); }
 607               		.loc 1 93 5 is_stmt 1 view .LVU165
  93:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_5)) { default_layer |= (1<<5); }
 608               		.loc 1 93 9 is_stmt 0 view .LVU166
 609 01be 82E2      		ldi r24,lo8(34)
 610 01c0 0E94 0000 		call bootmagic_scan_keycode
 611               	.LVL57:
  93:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_5)) { default_layer |= (1<<5); }
 612               		.loc 1 93 8 view .LVU167
 613 01c4 8823      		tst r24
 614 01c6 01F0      		breq .L37
  93:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_5)) { default_layer |= (1<<5); }
 615               		.loc 1 93 66 is_stmt 1 discriminator 1 view .LVU168
  93:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_5)) { default_layer |= (1<<5); }
 616               		.loc 1 93 80 is_stmt 0 discriminator 1 view .LVU169
 617 01c8 5981      		ldd r21,Y+1
 618 01ca 5062      		ori r21,lo8(32)
 619 01cc 5983      		std Y+1,r21
 620               	.LVL58:
 621               	.L37:
  94:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_6)) { default_layer |= (1<<6); }
 622               		.loc 1 94 5 is_stmt 1 view .LVU170
  94:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_6)) { default_layer |= (1<<6); }
 623               		.loc 1 94 9 is_stmt 0 view .LVU171
 624 01ce 83E2      		ldi r24,lo8(35)
 625 01d0 0E94 0000 		call bootmagic_scan_keycode
 626               	.LVL59:
  94:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_6)) { default_layer |= (1<<6); }
 627               		.loc 1 94 8 view .LVU172
 628 01d4 8823      		tst r24
 629 01d6 01F0      		breq .L38
  94:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_6)) { default_layer |= (1<<6); }
 630               		.loc 1 94 66 is_stmt 1 discriminator 1 view .LVU173
  94:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_6)) { default_layer |= (1<<6); }
 631               		.loc 1 94 80 is_stmt 0 discriminator 1 view .LVU174
 632 01d8 8981      		ldd r24,Y+1
 633 01da 8064      		ori r24,lo8(64)
 634 01dc 8983      		std Y+1,r24
 635               	.LVL60:
 636               	.L38:
  95:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_7)) { default_layer |= (1<<7); }
 637               		.loc 1 95 5 is_stmt 1 view .LVU175
  95:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_7)) { default_layer |= (1<<7); }
 638               		.loc 1 95 9 is_stmt 0 view .LVU176
 639 01de 84E2      		ldi r24,lo8(36)
 640 01e0 0E94 0000 		call bootmagic_scan_keycode
 641               	.LVL61:
  95:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_7)) { default_layer |= (1<<7); }
 642               		.loc 1 95 8 view .LVU177
 643 01e4 8823      		tst r24
 644 01e6 01F0      		breq .L39
  95:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_7)) { default_layer |= (1<<7); }
 645               		.loc 1 95 66 is_stmt 1 discriminator 1 view .LVU178
  95:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_7)) { default_layer |= (1<<7); }
 646               		.loc 1 95 80 is_stmt 0 discriminator 1 view .LVU179
 647 01e8 9981      		ldd r25,Y+1
 648 01ea 9068      		ori r25,lo8(-128)
 649 01ec 9983      		std Y+1,r25
 650               	.LVL62:
  96:./tmk_core/common/bootmagic.c ****     if (default_layer) {
 651               		.loc 1 96 5 is_stmt 1 discriminator 1 view .LVU180
 652               	.L40:
  97:./tmk_core/common/bootmagic.c ****         eeconfig_update_default_layer(default_layer);
 653               		.loc 1 97 9 view .LVU181
 654 01ee 8981      		ldd r24,Y+1
 655 01f0 0E94 0000 		call eeconfig_update_default_layer
 656               	.LVL63:
  98:./tmk_core/common/bootmagic.c ****         default_layer_set((uint32_t)default_layer);
 657               		.loc 1 98 9 view .LVU182
 658 01f4 3981      		ldd r19,Y+1
 659 01f6 232F      		mov r18,r19
 660               	.LVL64:
 661               	.L94:
 101:./tmk_core/common/bootmagic.c ****         default_layer_set((uint32_t)default_layer);
 662               		.loc 1 101 9 is_stmt 0 view .LVU183
 663 01f8 30E0      		ldi r19,0
 664 01fa 50E0      		ldi r21,0
 665 01fc 40E0      		ldi r20,0
 666 01fe 2983      		std Y+1,r18
 667 0200 3A83      		std Y+2,r19
 668 0202 4B83      		std Y+3,r20
 669 0204 5C83      		std Y+4,r21
 670 0206 CA01      		movw r24,r20
 671 0208 B901      		movw r22,r18
 672               	/* epilogue start */
 103:./tmk_core/common/bootmagic.c **** }
 673               		.loc 1 103 1 view .LVU184
 674 020a 0F90      		pop __tmp_reg__
 675 020c 0F90      		pop __tmp_reg__
 676 020e 0F90      		pop __tmp_reg__
 677 0210 0F90      		pop __tmp_reg__
 678 0212 DF91      		pop r29
 679 0214 CF91      		pop r28
 101:./tmk_core/common/bootmagic.c ****         default_layer_set((uint32_t)default_layer);
 680               		.loc 1 101 9 view .LVU185
 681 0216 0C94 0000 		jmp default_layer_set
 682               	.LVL65:
 683               	.L22:
  48:./tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_KEYBOARD)) {
 684               		.loc 1 48 16 is_stmt 1 view .LVU186
  48:./tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_KEYBOARD)) {
 685               		.loc 1 48 20 is_stmt 0 view .LVU187
 686 021a 8EE0      		ldi r24,lo8(14)
 687 021c 0E94 0000 		call bootmagic_scan_keycode
 688               	.LVL66:
  48:./tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_KEYBOARD)) {
 689               		.loc 1 48 19 view .LVU188
 690 0220 8823      		tst r24
 691 0222 01F0      		breq .L23
  49:./tmk_core/common/bootmagic.c ****             debug_config.keyboard = !debug_config.keyboard;
 692               		.loc 1 49 13 is_stmt 1 view .LVU189
  49:./tmk_core/common/bootmagic.c ****             debug_config.keyboard = !debug_config.keyboard;
 693               		.loc 1 49 50 is_stmt 0 view .LVU190
 694 0224 9091 0000 		lds r25,debug_config
  49:./tmk_core/common/bootmagic.c ****             debug_config.keyboard = !debug_config.keyboard;
 695               		.loc 1 49 35 view .LVU191
 696 0228 892F      		mov r24,r25
 697 022a 8B7F      		andi r24,~(1<<2)
 698 022c 92FF      		sbrs r25,2
 699 022e 8460      		ori r24,1<<2
 700 0230 00C0      		rjmp .L93
 701               	.L23:
  50:./tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_MOUSE)) {
 702               		.loc 1 50 16 is_stmt 1 view .LVU192
  50:./tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_MOUSE)) {
 703               		.loc 1 50 20 is_stmt 0 view .LVU193
 704 0232 80E1      		ldi r24,lo8(16)
 705 0234 0E94 0000 		call bootmagic_scan_keycode
 706               	.LVL67:
 707 0238 9091 0000 		lds r25,debug_config
  50:./tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_MOUSE)) {
 708               		.loc 1 50 19 view .LVU194
 709 023c 8823      		tst r24
 710 023e 01F0      		breq .L24
  51:./tmk_core/common/bootmagic.c ****             debug_config.mouse = !debug_config.mouse;
 711               		.loc 1 51 13 is_stmt 1 view .LVU195
  51:./tmk_core/common/bootmagic.c ****             debug_config.mouse = !debug_config.mouse;
 712               		.loc 1 51 32 is_stmt 0 view .LVU196
 713 0240 892F      		mov r24,r25
 714 0242 877F      		andi r24,~(1<<3)
 715 0244 93FF      		sbrs r25,3
 716 0246 8860      		ori r24,1<<3
 717 0248 00C0      		rjmp .L93
 718               	.L24:
  53:./tmk_core/common/bootmagic.c ****             debug_config.enable = !debug_config.enable;
 719               		.loc 1 53 13 is_stmt 1 view .LVU197
  53:./tmk_core/common/bootmagic.c ****             debug_config.enable = !debug_config.enable;
 720               		.loc 1 53 33 is_stmt 0 view .LVU198
 721 024a 892F      		mov r24,r25
 722 024c 8E7F      		andi r24,~(1<<0)
 723 024e 90FF      		sbrs r25,0
 724 0250 8160      		ori r24,1<<0
 725 0252 00C0      		rjmp .L93
 726               	.LVL68:
 727               	.L39:
  96:./tmk_core/common/bootmagic.c ****     if (default_layer) {
 728               		.loc 1 96 5 is_stmt 1 view .LVU199
  96:./tmk_core/common/bootmagic.c ****     if (default_layer) {
 729               		.loc 1 96 8 is_stmt 0 view .LVU200
 730 0254 A981      		ldd r26,Y+1
 731 0256 A111      		cpse r26,__zero_reg__
 732 0258 00C0      		rjmp .L40
 100:./tmk_core/common/bootmagic.c ****         default_layer = eeconfig_read_default_layer();
 733               		.loc 1 100 9 is_stmt 1 view .LVU201
 100:./tmk_core/common/bootmagic.c ****         default_layer = eeconfig_read_default_layer();
 734               		.loc 1 100 25 is_stmt 0 view .LVU202
 735 025a 0E94 0000 		call eeconfig_read_default_layer
 736               	.LVL69:
 101:./tmk_core/common/bootmagic.c ****         default_layer_set((uint32_t)default_layer);
 737               		.loc 1 101 9 is_stmt 1 view .LVU203
 738 025e 282F      		mov r18,r24
 739 0260 00C0      		rjmp .L94
 740               	.LVL70:
 741               	.L14:
 742               	/* epilogue start */
 103:./tmk_core/common/bootmagic.c **** }
 743               		.loc 1 103 1 is_stmt 0 view .LVU204
 744 0262 0F90      		pop __tmp_reg__
 745 0264 0F90      		pop __tmp_reg__
 746 0266 0F90      		pop __tmp_reg__
 747 0268 0F90      		pop __tmp_reg__
 748 026a DF91      		pop r29
 749 026c CF91      		pop r28
 750 026e 0895      		ret
 751               		.cfi_endproc
 752               	.LFE107:
 754               	.global	keymap_config
 755               		.section	.bss.keymap_config,"aw",@nobits
 758               	keymap_config:
 759 0000 0000      		.zero	2
 760               		.text
 761               	.Letext0:
 762               		.file 3 "/usr/avr/include/stdint.h"
 763               		.file 4 "./tmk_core/common/matrix.h"
 764               		.file 5 "./tmk_core/common/debug.h"
 765               		.file 6 "./tmk_core/common/keyboard.h"
 766               		.file 7 "./quantum/keycode_config.h"
 767               		.file 8 "./quantum/keymap.h"
 768               		.file 9 "./tmk_core/common/action_layer.h"
 769               		.file 10 "./tmk_core/common/eeconfig.h"
 770               		.file 11 "./tmk_core/common/bootloader.h"
 771               		.file 12 "/usr/avr/include/math.h"
 772               		.file 13 "./tmk_core/common/keycode.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 bootmagic.c
     /tmp/ccRp4ALv.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccRp4ALv.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccRp4ALv.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccRp4ALv.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/ccRp4ALv.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccRp4ALv.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccRp4ALv.s:13     .text.scan_keycode:0000000000000000 scan_keycode
     /tmp/ccRp4ALv.s:186    .text.bootmagic_scan_keycode:0000000000000000 bootmagic_scan_keycode
     /tmp/ccRp4ALv.s:235    .text.bootmagic:0000000000000000 bootmagic
     /tmp/ccRp4ALv.s:758    .bss.keymap_config:0000000000000000 keymap_config

UNDEFINED SYMBOLS
matrix_get_row
keymap_key_to_keycode
eeconfig_is_enabled
eeconfig_init
matrix_scan
bootloader_jump
eeconfig_read_debug
debug_config
eeconfig_update_debug
eeconfig_read_keymap
eeconfig_update_keymap
eeconfig_update_default_layer
default_layer_set
eeconfig_read_default_layer
__do_clear_bss
