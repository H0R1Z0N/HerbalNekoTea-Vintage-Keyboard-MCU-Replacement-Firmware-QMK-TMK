   1               		.file	"action_layer.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.text.default_layer_debug,"ax",@progbits
  12               	.global	default_layer_debug
  14               	default_layer_debug:
  15               	.LFB5:
  16               		.file 1 "./tmk_core/common/action_layer.c"
   1:./tmk_core/common/action_layer.c **** #include <stdint.h>
   2:./tmk_core/common/action_layer.c **** #include "keyboard.h"
   3:./tmk_core/common/action_layer.c **** #include "action.h"
   4:./tmk_core/common/action_layer.c **** #include "util.h"
   5:./tmk_core/common/action_layer.c **** #include "action_layer.h"
   6:./tmk_core/common/action_layer.c **** 
   7:./tmk_core/common/action_layer.c **** #ifdef DEBUG_ACTION
   8:./tmk_core/common/action_layer.c **** #include "debug.h"
   9:./tmk_core/common/action_layer.c **** #else
  10:./tmk_core/common/action_layer.c **** #include "nodebug.h"
  11:./tmk_core/common/action_layer.c **** #endif
  12:./tmk_core/common/action_layer.c **** 
  13:./tmk_core/common/action_layer.c **** 
  14:./tmk_core/common/action_layer.c **** /*
  15:./tmk_core/common/action_layer.c ****  * Default Layer State
  16:./tmk_core/common/action_layer.c ****  */
  17:./tmk_core/common/action_layer.c **** uint32_t default_layer_state = 0;
  18:./tmk_core/common/action_layer.c **** 
  19:./tmk_core/common/action_layer.c **** static void default_layer_state_set(uint32_t state)
  20:./tmk_core/common/action_layer.c **** {
  21:./tmk_core/common/action_layer.c ****     debug("default_layer_state: ");
  22:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug(" to ");
  23:./tmk_core/common/action_layer.c ****     default_layer_state = state;
  24:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug("\n");
  25:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
  26:./tmk_core/common/action_layer.c **** }
  27:./tmk_core/common/action_layer.c **** 
  28:./tmk_core/common/action_layer.c **** void default_layer_debug(void)
  29:./tmk_core/common/action_layer.c **** {
  17               		.loc 1 29 1 view -0
  18               		.cfi_startproc
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  30:./tmk_core/common/action_layer.c ****     dprintf("%08lX(%u)", default_layer_state, biton32(default_layer_state));
  23               		.loc 1 30 76 view .LVU1
  24               	/* epilogue start */
  31:./tmk_core/common/action_layer.c **** }
  25               		.loc 1 31 1 is_stmt 0 view .LVU2
  26 0000 0895      		ret
  27               		.cfi_endproc
  28               	.LFE5:
  30               		.section	.text.default_layer_set,"ax",@progbits
  31               	.global	default_layer_set
  33               	default_layer_set:
  34               	.LVL0:
  35               	.LFB6:
  32:./tmk_core/common/action_layer.c **** 
  33:./tmk_core/common/action_layer.c **** void default_layer_set(uint32_t state)
  34:./tmk_core/common/action_layer.c **** {
  36               		.loc 1 34 1 is_stmt 1 view -0
  37               		.cfi_startproc
  38               	/* prologue: function */
  39               	/* frame size = 0 */
  40               	/* stack size = 0 */
  41               	.L__stack_usage = 0
  42               		.loc 1 34 1 is_stmt 0 view .LVU4
  43 0000 6093 0000 		sts default_layer_state,r22
  44 0004 7093 0000 		sts default_layer_state+1,r23
  45 0008 8093 0000 		sts default_layer_state+2,r24
  46 000c 9093 0000 		sts default_layer_state+3,r25
  35:./tmk_core/common/action_layer.c ****     default_layer_state_set(state);
  47               		.loc 1 35 5 is_stmt 1 view .LVU5
  48               	.LVL1:
  49               	.LBB4:
  50               	.LBI4:
  19:./tmk_core/common/action_layer.c **** {
  51               		.loc 1 19 13 view .LVU6
  52               	.LBB5:
  21:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug(" to ");
  53               		.loc 1 21 35 view .LVU7
  22:./tmk_core/common/action_layer.c ****     default_layer_state = state;
  54               		.loc 1 22 5 view .LVU8
  22:./tmk_core/common/action_layer.c ****     default_layer_state = state;
  55               		.loc 1 22 41 view .LVU9
  23:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug("\n");
  56               		.loc 1 23 5 view .LVU10
  24:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
  57               		.loc 1 24 5 view .LVU11
  24:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
  58               		.loc 1 24 39 view .LVU12
  25:./tmk_core/common/action_layer.c **** }
  59               		.loc 1 25 5 view .LVU13
  60 0010 0C94 0000 		jmp clear_keyboard_but_mods
  61               	.LVL2:
  25:./tmk_core/common/action_layer.c **** }
  62               		.loc 1 25 5 is_stmt 0 view .LVU14
  63               	.LBE5:
  64               	.LBE4:
  65               		.cfi_endproc
  66               	.LFE6:
  68               		.section	.text.default_layer_or,"ax",@progbits
  69               	.global	default_layer_or
  71               	default_layer_or:
  72               	.LVL3:
  73               	.LFB7:
  36:./tmk_core/common/action_layer.c **** }
  37:./tmk_core/common/action_layer.c **** 
  38:./tmk_core/common/action_layer.c **** #ifndef NO_ACTION_LAYER
  39:./tmk_core/common/action_layer.c **** void default_layer_or(uint32_t state)
  40:./tmk_core/common/action_layer.c **** {
  74               		.loc 1 40 1 is_stmt 1 view -0
  75               		.cfi_startproc
  76               		.loc 1 40 1 is_stmt 0 view .LVU16
  77 0000 CF93      		push r28
  78               	.LCFI0:
  79               		.cfi_def_cfa_offset 3
  80               		.cfi_offset 28, -2
  81 0002 DF93      		push r29
  82               	.LCFI1:
  83               		.cfi_def_cfa_offset 4
  84               		.cfi_offset 29, -3
  85 0004 00D0      		rcall .
  86 0006 00D0      		rcall .
  87               	.LCFI2:
  88               		.cfi_def_cfa_offset 8
  89 0008 CDB7      		in r28,__SP_L__
  90 000a DEB7      		in r29,__SP_H__
  91               	.LCFI3:
  92               		.cfi_def_cfa_register 28
  93               	/* prologue: function */
  94               	/* frame size = 4 */
  95               	/* stack size = 6 */
  96               	.L__stack_usage = 6
  97 000c 6983      		std Y+1,r22
  98 000e 7A83      		std Y+2,r23
  99 0010 8B83      		std Y+3,r24
 100 0012 9C83      		std Y+4,r25
  41:./tmk_core/common/action_layer.c ****     default_layer_state_set(default_layer_state | state);
 101               		.loc 1 41 5 is_stmt 1 view .LVU17
 102               	.LVL4:
 103               	.LBB8:
 104               	.LBI8:
  19:./tmk_core/common/action_layer.c **** {
 105               		.loc 1 19 13 view .LVU18
 106               	.LBB9:
  21:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug(" to ");
 107               		.loc 1 21 35 view .LVU19
  22:./tmk_core/common/action_layer.c ****     default_layer_state = state;
 108               		.loc 1 22 5 view .LVU20
  22:./tmk_core/common/action_layer.c ****     default_layer_state = state;
 109               		.loc 1 22 41 view .LVU21
  23:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug("\n");
 110               		.loc 1 23 5 view .LVU22
 111               	.LBE9:
 112               	.LBE8:
 113               		.loc 1 41 5 is_stmt 0 view .LVU23
 114 0014 8091 0000 		lds r24,default_layer_state
 115 0018 9091 0000 		lds r25,default_layer_state+1
 116 001c A091 0000 		lds r26,default_layer_state+2
 117 0020 B091 0000 		lds r27,default_layer_state+3
 118 0024 2981      		ldd r18,Y+1
 119 0026 3A81      		ldd r19,Y+2
 120 0028 4B81      		ldd r20,Y+3
 121 002a 5C81      		ldd r21,Y+4
 122 002c 822B      		or r24,r18
 123 002e 932B      		or r25,r19
 124 0030 A42B      		or r26,r20
 125 0032 B52B      		or r27,r21
 126               	.LBB12:
 127               	.LBB10:
  23:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug("\n");
 128               		.loc 1 23 25 view .LVU24
 129 0034 8093 0000 		sts default_layer_state,r24
 130 0038 9093 0000 		sts default_layer_state+1,r25
 131 003c A093 0000 		sts default_layer_state+2,r26
 132 0040 B093 0000 		sts default_layer_state+3,r27
 133               	.LVL5:
  24:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 134               		.loc 1 24 5 is_stmt 1 view .LVU25
  24:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 135               		.loc 1 24 39 view .LVU26
  25:./tmk_core/common/action_layer.c **** }
 136               		.loc 1 25 5 view .LVU27
 137               	/* epilogue start */
 138               	.LBE10:
 139               	.LBE12:
  42:./tmk_core/common/action_layer.c **** }
 140               		.loc 1 42 1 is_stmt 0 view .LVU28
 141 0044 0F90      		pop __tmp_reg__
 142 0046 0F90      		pop __tmp_reg__
 143 0048 0F90      		pop __tmp_reg__
 144 004a 0F90      		pop __tmp_reg__
 145 004c DF91      		pop r29
 146 004e CF91      		pop r28
 147               	.LBB13:
 148               	.LBB11:
  25:./tmk_core/common/action_layer.c **** }
 149               		.loc 1 25 5 view .LVU29
 150 0050 0C94 0000 		jmp clear_keyboard_but_mods
 151               	.LVL6:
  25:./tmk_core/common/action_layer.c **** }
 152               		.loc 1 25 5 view .LVU30
 153               	.LBE11:
 154               	.LBE13:
 155               		.cfi_endproc
 156               	.LFE7:
 158               		.section	.text.default_layer_and,"ax",@progbits
 159               	.global	default_layer_and
 161               	default_layer_and:
 162               	.LVL7:
 163               	.LFB8:
  43:./tmk_core/common/action_layer.c **** void default_layer_and(uint32_t state)
  44:./tmk_core/common/action_layer.c **** {
 164               		.loc 1 44 1 is_stmt 1 view -0
 165               		.cfi_startproc
 166               		.loc 1 44 1 is_stmt 0 view .LVU32
 167 0000 CF93      		push r28
 168               	.LCFI4:
 169               		.cfi_def_cfa_offset 3
 170               		.cfi_offset 28, -2
 171 0002 DF93      		push r29
 172               	.LCFI5:
 173               		.cfi_def_cfa_offset 4
 174               		.cfi_offset 29, -3
 175 0004 00D0      		rcall .
 176 0006 00D0      		rcall .
 177               	.LCFI6:
 178               		.cfi_def_cfa_offset 8
 179 0008 CDB7      		in r28,__SP_L__
 180 000a DEB7      		in r29,__SP_H__
 181               	.LCFI7:
 182               		.cfi_def_cfa_register 28
 183               	/* prologue: function */
 184               	/* frame size = 4 */
 185               	/* stack size = 6 */
 186               	.L__stack_usage = 6
 187 000c 6983      		std Y+1,r22
 188 000e 7A83      		std Y+2,r23
 189 0010 8B83      		std Y+3,r24
 190 0012 9C83      		std Y+4,r25
  45:./tmk_core/common/action_layer.c ****     default_layer_state_set(default_layer_state & state);
 191               		.loc 1 45 5 is_stmt 1 view .LVU33
 192               	.LVL8:
 193               	.LBB16:
 194               	.LBI16:
  19:./tmk_core/common/action_layer.c **** {
 195               		.loc 1 19 13 view .LVU34
 196               	.LBB17:
  21:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug(" to ");
 197               		.loc 1 21 35 view .LVU35
  22:./tmk_core/common/action_layer.c ****     default_layer_state = state;
 198               		.loc 1 22 5 view .LVU36
  22:./tmk_core/common/action_layer.c ****     default_layer_state = state;
 199               		.loc 1 22 41 view .LVU37
  23:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug("\n");
 200               		.loc 1 23 5 view .LVU38
 201               	.LBE17:
 202               	.LBE16:
 203               		.loc 1 45 5 is_stmt 0 view .LVU39
 204 0014 8091 0000 		lds r24,default_layer_state
 205 0018 9091 0000 		lds r25,default_layer_state+1
 206 001c A091 0000 		lds r26,default_layer_state+2
 207 0020 B091 0000 		lds r27,default_layer_state+3
 208 0024 2981      		ldd r18,Y+1
 209 0026 3A81      		ldd r19,Y+2
 210 0028 4B81      		ldd r20,Y+3
 211 002a 5C81      		ldd r21,Y+4
 212 002c 8223      		and r24,r18
 213 002e 9323      		and r25,r19
 214 0030 A423      		and r26,r20
 215 0032 B523      		and r27,r21
 216               	.LBB20:
 217               	.LBB18:
  23:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug("\n");
 218               		.loc 1 23 25 view .LVU40
 219 0034 8093 0000 		sts default_layer_state,r24
 220 0038 9093 0000 		sts default_layer_state+1,r25
 221 003c A093 0000 		sts default_layer_state+2,r26
 222 0040 B093 0000 		sts default_layer_state+3,r27
 223               	.LVL9:
  24:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 224               		.loc 1 24 5 is_stmt 1 view .LVU41
  24:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 225               		.loc 1 24 39 view .LVU42
  25:./tmk_core/common/action_layer.c **** }
 226               		.loc 1 25 5 view .LVU43
 227               	/* epilogue start */
 228               	.LBE18:
 229               	.LBE20:
  46:./tmk_core/common/action_layer.c **** }
 230               		.loc 1 46 1 is_stmt 0 view .LVU44
 231 0044 0F90      		pop __tmp_reg__
 232 0046 0F90      		pop __tmp_reg__
 233 0048 0F90      		pop __tmp_reg__
 234 004a 0F90      		pop __tmp_reg__
 235 004c DF91      		pop r29
 236 004e CF91      		pop r28
 237               	.LBB21:
 238               	.LBB19:
  25:./tmk_core/common/action_layer.c **** }
 239               		.loc 1 25 5 view .LVU45
 240 0050 0C94 0000 		jmp clear_keyboard_but_mods
 241               	.LVL10:
  25:./tmk_core/common/action_layer.c **** }
 242               		.loc 1 25 5 view .LVU46
 243               	.LBE19:
 244               	.LBE21:
 245               		.cfi_endproc
 246               	.LFE8:
 248               		.section	.text.default_layer_xor,"ax",@progbits
 249               	.global	default_layer_xor
 251               	default_layer_xor:
 252               	.LVL11:
 253               	.LFB9:
  47:./tmk_core/common/action_layer.c **** void default_layer_xor(uint32_t state)
  48:./tmk_core/common/action_layer.c **** {
 254               		.loc 1 48 1 is_stmt 1 view -0
 255               		.cfi_startproc
 256               		.loc 1 48 1 is_stmt 0 view .LVU48
 257 0000 CF93      		push r28
 258               	.LCFI8:
 259               		.cfi_def_cfa_offset 3
 260               		.cfi_offset 28, -2
 261 0002 DF93      		push r29
 262               	.LCFI9:
 263               		.cfi_def_cfa_offset 4
 264               		.cfi_offset 29, -3
 265 0004 00D0      		rcall .
 266 0006 00D0      		rcall .
 267               	.LCFI10:
 268               		.cfi_def_cfa_offset 8
 269 0008 CDB7      		in r28,__SP_L__
 270 000a DEB7      		in r29,__SP_H__
 271               	.LCFI11:
 272               		.cfi_def_cfa_register 28
 273               	/* prologue: function */
 274               	/* frame size = 4 */
 275               	/* stack size = 6 */
 276               	.L__stack_usage = 6
 277 000c 6983      		std Y+1,r22
 278 000e 7A83      		std Y+2,r23
 279 0010 8B83      		std Y+3,r24
 280 0012 9C83      		std Y+4,r25
  49:./tmk_core/common/action_layer.c ****     default_layer_state_set(default_layer_state ^ state);
 281               		.loc 1 49 5 is_stmt 1 view .LVU49
 282               	.LVL12:
 283               	.LBB24:
 284               	.LBI24:
  19:./tmk_core/common/action_layer.c **** {
 285               		.loc 1 19 13 view .LVU50
 286               	.LBB25:
  21:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug(" to ");
 287               		.loc 1 21 35 view .LVU51
  22:./tmk_core/common/action_layer.c ****     default_layer_state = state;
 288               		.loc 1 22 5 view .LVU52
  22:./tmk_core/common/action_layer.c ****     default_layer_state = state;
 289               		.loc 1 22 41 view .LVU53
  23:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug("\n");
 290               		.loc 1 23 5 view .LVU54
 291               	.LBE25:
 292               	.LBE24:
 293               		.loc 1 49 5 is_stmt 0 view .LVU55
 294 0014 8091 0000 		lds r24,default_layer_state
 295 0018 9091 0000 		lds r25,default_layer_state+1
 296 001c A091 0000 		lds r26,default_layer_state+2
 297 0020 B091 0000 		lds r27,default_layer_state+3
 298 0024 2981      		ldd r18,Y+1
 299 0026 3A81      		ldd r19,Y+2
 300 0028 4B81      		ldd r20,Y+3
 301 002a 5C81      		ldd r21,Y+4
 302 002c 8227      		eor r24,r18
 303 002e 9327      		eor r25,r19
 304 0030 A427      		eor r26,r20
 305 0032 B527      		eor r27,r21
 306               	.LBB28:
 307               	.LBB26:
  23:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug("\n");
 308               		.loc 1 23 25 view .LVU56
 309 0034 8093 0000 		sts default_layer_state,r24
 310 0038 9093 0000 		sts default_layer_state+1,r25
 311 003c A093 0000 		sts default_layer_state+2,r26
 312 0040 B093 0000 		sts default_layer_state+3,r27
 313               	.LVL13:
  24:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 314               		.loc 1 24 5 is_stmt 1 view .LVU57
  24:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 315               		.loc 1 24 39 view .LVU58
  25:./tmk_core/common/action_layer.c **** }
 316               		.loc 1 25 5 view .LVU59
 317               	/* epilogue start */
 318               	.LBE26:
 319               	.LBE28:
  50:./tmk_core/common/action_layer.c **** }
 320               		.loc 1 50 1 is_stmt 0 view .LVU60
 321 0044 0F90      		pop __tmp_reg__
 322 0046 0F90      		pop __tmp_reg__
 323 0048 0F90      		pop __tmp_reg__
 324 004a 0F90      		pop __tmp_reg__
 325 004c DF91      		pop r29
 326 004e CF91      		pop r28
 327               	.LBB29:
 328               	.LBB27:
  25:./tmk_core/common/action_layer.c **** }
 329               		.loc 1 25 5 view .LVU61
 330 0050 0C94 0000 		jmp clear_keyboard_but_mods
 331               	.LVL14:
  25:./tmk_core/common/action_layer.c **** }
 332               		.loc 1 25 5 view .LVU62
 333               	.LBE27:
 334               	.LBE29:
 335               		.cfi_endproc
 336               	.LFE9:
 338               		.section	.text.layer_clear,"ax",@progbits
 339               	.global	layer_clear
 341               	layer_clear:
 342               	.LFB11:
  51:./tmk_core/common/action_layer.c **** #endif
  52:./tmk_core/common/action_layer.c **** 
  53:./tmk_core/common/action_layer.c **** 
  54:./tmk_core/common/action_layer.c **** #ifndef NO_ACTION_LAYER
  55:./tmk_core/common/action_layer.c **** /*
  56:./tmk_core/common/action_layer.c ****  * Keymap Layer State
  57:./tmk_core/common/action_layer.c ****  */
  58:./tmk_core/common/action_layer.c **** uint32_t layer_state = 0;
  59:./tmk_core/common/action_layer.c **** 
  60:./tmk_core/common/action_layer.c **** static void layer_state_set(uint32_t state)
  61:./tmk_core/common/action_layer.c **** {
  62:./tmk_core/common/action_layer.c ****     dprint("layer_state: ");
  63:./tmk_core/common/action_layer.c ****     layer_debug(); dprint(" to ");
  64:./tmk_core/common/action_layer.c ****     layer_state = state;
  65:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
  66:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
  67:./tmk_core/common/action_layer.c **** }
  68:./tmk_core/common/action_layer.c **** 
  69:./tmk_core/common/action_layer.c **** void layer_clear(void)
  70:./tmk_core/common/action_layer.c **** {
 343               		.loc 1 70 1 is_stmt 1 view -0
 344               		.cfi_startproc
 345               	/* prologue: function */
 346               	/* frame size = 0 */
 347               	/* stack size = 0 */
 348               	.L__stack_usage = 0
  71:./tmk_core/common/action_layer.c ****     layer_state_set(0);
 349               		.loc 1 71 5 view .LVU64
 350               	.LVL15:
 351               	.LBB32:
 352               	.LBI32:
  60:./tmk_core/common/action_layer.c **** {
 353               		.loc 1 60 13 view .LVU65
 354               	.LBB33:
  62:./tmk_core/common/action_layer.c ****     layer_debug(); dprint(" to ");
 355               		.loc 1 62 28 view .LVU66
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 356               		.loc 1 63 5 view .LVU67
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 357               		.loc 1 63 34 view .LVU68
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 358               		.loc 1 64 5 view .LVU69
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 359               		.loc 1 64 17 is_stmt 0 view .LVU70
 360 0000 1092 0000 		sts layer_state,__zero_reg__
 361 0004 1092 0000 		sts layer_state+1,__zero_reg__
 362 0008 1092 0000 		sts layer_state+2,__zero_reg__
 363 000c 1092 0000 		sts layer_state+3,__zero_reg__
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 364               		.loc 1 65 5 is_stmt 1 view .LVU71
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 365               		.loc 1 65 30 view .LVU72
  66:./tmk_core/common/action_layer.c **** }
 366               		.loc 1 66 5 view .LVU73
 367 0010 0C94 0000 		jmp clear_keyboard_but_mods
 368               	.LVL16:
 369               	.LBE33:
 370               	.LBE32:
 371               		.cfi_endproc
 372               	.LFE11:
 374               		.section	.text.layer_move,"ax",@progbits
 375               	.global	layer_move
 377               	layer_move:
 378               	.LVL17:
 379               	.LFB12:
  72:./tmk_core/common/action_layer.c **** }
  73:./tmk_core/common/action_layer.c **** 
  74:./tmk_core/common/action_layer.c **** void layer_move(uint8_t layer)
  75:./tmk_core/common/action_layer.c **** {
 380               		.loc 1 75 1 view -0
 381               		.cfi_startproc
 382               	/* prologue: function */
 383               	/* frame size = 0 */
 384               	/* stack size = 0 */
 385               	.L__stack_usage = 0
  76:./tmk_core/common/action_layer.c ****     layer_state_set(1UL<<layer);
 386               		.loc 1 76 5 view .LVU75
 387               	.LBB36:
 388               	.LBI36:
  60:./tmk_core/common/action_layer.c **** {
 389               		.loc 1 60 13 view .LVU76
 390               	.LBB37:
  62:./tmk_core/common/action_layer.c ****     layer_debug(); dprint(" to ");
 391               		.loc 1 62 28 view .LVU77
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 392               		.loc 1 63 5 view .LVU78
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 393               		.loc 1 63 34 view .LVU79
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 394               		.loc 1 64 5 view .LVU80
 395               	.LBE37:
 396               	.LBE36:
 397               		.loc 1 76 5 is_stmt 0 view .LVU81
 398 0000 41E0      		ldi r20,lo8(1)
 399 0002 50E0      		ldi r21,0
 400 0004 60E0      		ldi r22,0
 401 0006 70E0      		ldi r23,0
 402 0008 00C0      		rjmp 2f
 403               		1:
 404 000a 440F      		lsl r20
 405 000c 551F      		rol r21
 406 000e 661F      		rol r22
 407 0010 771F      		rol r23
 408               		2:
 409 0012 8A95      		dec r24
 410 0014 02F4      		brpl 1b
 411               	.LBB39:
 412               	.LBB38:
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 413               		.loc 1 64 17 view .LVU82
 414 0016 4093 0000 		sts layer_state,r20
 415 001a 5093 0000 		sts layer_state+1,r21
 416 001e 6093 0000 		sts layer_state+2,r22
 417 0022 7093 0000 		sts layer_state+3,r23
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 418               		.loc 1 65 5 is_stmt 1 view .LVU83
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 419               		.loc 1 65 30 view .LVU84
  66:./tmk_core/common/action_layer.c **** }
 420               		.loc 1 66 5 view .LVU85
 421 0026 0C94 0000 		jmp clear_keyboard_but_mods
 422               	.LVL18:
  66:./tmk_core/common/action_layer.c **** }
 423               		.loc 1 66 5 is_stmt 0 view .LVU86
 424               	.LBE38:
 425               	.LBE39:
 426               		.cfi_endproc
 427               	.LFE12:
 429               		.section	.text.layer_on,"ax",@progbits
 430               	.global	layer_on
 432               	layer_on:
 433               	.LVL19:
 434               	.LFB13:
  77:./tmk_core/common/action_layer.c **** }
  78:./tmk_core/common/action_layer.c **** 
  79:./tmk_core/common/action_layer.c **** void layer_on(uint8_t layer)
  80:./tmk_core/common/action_layer.c **** {
 435               		.loc 1 80 1 is_stmt 1 view -0
 436               		.cfi_startproc
 437               	/* prologue: function */
 438               	/* frame size = 0 */
 439               	/* stack size = 0 */
 440               	.L__stack_usage = 0
  81:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state | (1UL<<layer));
 441               		.loc 1 81 5 view .LVU88
 442               	.LBB42:
 443               	.LBI42:
  60:./tmk_core/common/action_layer.c **** {
 444               		.loc 1 60 13 view .LVU89
 445               	.LBB43:
  62:./tmk_core/common/action_layer.c ****     layer_debug(); dprint(" to ");
 446               		.loc 1 62 28 view .LVU90
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 447               		.loc 1 63 5 view .LVU91
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 448               		.loc 1 63 34 view .LVU92
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 449               		.loc 1 64 5 view .LVU93
 450               	.LBE43:
 451               	.LBE42:
 452               		.loc 1 81 39 is_stmt 0 view .LVU94
 453 0000 41E0      		ldi r20,lo8(1)
 454 0002 50E0      		ldi r21,0
 455 0004 60E0      		ldi r22,0
 456 0006 70E0      		ldi r23,0
 457 0008 00C0      		rjmp 2f
 458               		1:
 459 000a 440F      		lsl r20
 460 000c 551F      		rol r21
 461 000e 661F      		rol r22
 462 0010 771F      		rol r23
 463               		2:
 464 0012 8A95      		dec r24
 465 0014 02F4      		brpl 1b
 466               		.loc 1 81 5 view .LVU95
 467 0016 8091 0000 		lds r24,layer_state
 468 001a 9091 0000 		lds r25,layer_state+1
 469 001e A091 0000 		lds r26,layer_state+2
 470 0022 B091 0000 		lds r27,layer_state+3
 471               	.LVL20:
 472               		.loc 1 81 5 view .LVU96
 473 0026 842B      		or r24,r20
 474 0028 952B      		or r25,r21
 475 002a A62B      		or r26,r22
 476 002c B72B      		or r27,r23
 477               	.LBB45:
 478               	.LBB44:
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 479               		.loc 1 64 17 view .LVU97
 480 002e 8093 0000 		sts layer_state,r24
 481 0032 9093 0000 		sts layer_state+1,r25
 482 0036 A093 0000 		sts layer_state+2,r26
 483 003a B093 0000 		sts layer_state+3,r27
 484               	.LVL21:
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 485               		.loc 1 65 5 is_stmt 1 view .LVU98
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 486               		.loc 1 65 30 view .LVU99
  66:./tmk_core/common/action_layer.c **** }
 487               		.loc 1 66 5 view .LVU100
 488 003e 0C94 0000 		jmp clear_keyboard_but_mods
 489               	.LVL22:
 490               	.LBE44:
 491               	.LBE45:
 492               		.cfi_endproc
 493               	.LFE13:
 495               		.section	.text.layer_off,"ax",@progbits
 496               	.global	layer_off
 498               	layer_off:
 499               	.LVL23:
 500               	.LFB14:
  82:./tmk_core/common/action_layer.c **** }
  83:./tmk_core/common/action_layer.c **** 
  84:./tmk_core/common/action_layer.c **** void layer_off(uint8_t layer)
  85:./tmk_core/common/action_layer.c **** {
 501               		.loc 1 85 1 view -0
 502               		.cfi_startproc
 503               	/* prologue: function */
 504               	/* frame size = 0 */
 505               	/* stack size = 0 */
 506               	.L__stack_usage = 0
  86:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state & ~(1UL<<layer));
 507               		.loc 1 86 5 view .LVU102
 508               	.LBB48:
 509               	.LBI48:
  60:./tmk_core/common/action_layer.c **** {
 510               		.loc 1 60 13 view .LVU103
 511               	.LBB49:
  62:./tmk_core/common/action_layer.c ****     layer_debug(); dprint(" to ");
 512               		.loc 1 62 28 view .LVU104
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 513               		.loc 1 63 5 view .LVU105
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 514               		.loc 1 63 34 view .LVU106
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 515               		.loc 1 64 5 view .LVU107
 516               	.LBE49:
 517               	.LBE48:
 518               		.loc 1 86 40 is_stmt 0 view .LVU108
 519 0000 41E0      		ldi r20,lo8(1)
 520 0002 50E0      		ldi r21,0
 521 0004 60E0      		ldi r22,0
 522 0006 70E0      		ldi r23,0
 523 0008 00C0      		rjmp 2f
 524               		1:
 525 000a 440F      		lsl r20
 526 000c 551F      		rol r21
 527 000e 661F      		rol r22
 528 0010 771F      		rol r23
 529               		2:
 530 0012 8A95      		dec r24
 531 0014 02F4      		brpl 1b
 532               		.loc 1 86 35 view .LVU109
 533 0016 4095      		com r20
 534 0018 5095      		com r21
 535 001a 6095      		com r22
 536 001c 7095      		com r23
 537               		.loc 1 86 5 view .LVU110
 538 001e 8091 0000 		lds r24,layer_state
 539 0022 9091 0000 		lds r25,layer_state+1
 540 0026 A091 0000 		lds r26,layer_state+2
 541 002a B091 0000 		lds r27,layer_state+3
 542               	.LVL24:
 543               		.loc 1 86 5 view .LVU111
 544 002e 8423      		and r24,r20
 545 0030 9523      		and r25,r21
 546 0032 A623      		and r26,r22
 547 0034 B723      		and r27,r23
 548               	.LBB51:
 549               	.LBB50:
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 550               		.loc 1 64 17 view .LVU112
 551 0036 8093 0000 		sts layer_state,r24
 552 003a 9093 0000 		sts layer_state+1,r25
 553 003e A093 0000 		sts layer_state+2,r26
 554 0042 B093 0000 		sts layer_state+3,r27
 555               	.LVL25:
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 556               		.loc 1 65 5 is_stmt 1 view .LVU113
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 557               		.loc 1 65 30 view .LVU114
  66:./tmk_core/common/action_layer.c **** }
 558               		.loc 1 66 5 view .LVU115
 559 0046 0C94 0000 		jmp clear_keyboard_but_mods
 560               	.LVL26:
 561               	.LBE50:
 562               	.LBE51:
 563               		.cfi_endproc
 564               	.LFE14:
 566               		.section	.text.layer_invert,"ax",@progbits
 567               	.global	layer_invert
 569               	layer_invert:
 570               	.LVL27:
 571               	.LFB15:
  87:./tmk_core/common/action_layer.c **** }
  88:./tmk_core/common/action_layer.c **** 
  89:./tmk_core/common/action_layer.c **** void layer_invert(uint8_t layer)
  90:./tmk_core/common/action_layer.c **** {
 572               		.loc 1 90 1 view -0
 573               		.cfi_startproc
 574               	/* prologue: function */
 575               	/* frame size = 0 */
 576               	/* stack size = 0 */
 577               	.L__stack_usage = 0
  91:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state ^ (1UL<<layer));
 578               		.loc 1 91 5 view .LVU117
 579               	.LBB54:
 580               	.LBI54:
  60:./tmk_core/common/action_layer.c **** {
 581               		.loc 1 60 13 view .LVU118
 582               	.LBB55:
  62:./tmk_core/common/action_layer.c ****     layer_debug(); dprint(" to ");
 583               		.loc 1 62 28 view .LVU119
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 584               		.loc 1 63 5 view .LVU120
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 585               		.loc 1 63 34 view .LVU121
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 586               		.loc 1 64 5 view .LVU122
 587               	.LBE55:
 588               	.LBE54:
 589               		.loc 1 91 39 is_stmt 0 view .LVU123
 590 0000 41E0      		ldi r20,lo8(1)
 591 0002 50E0      		ldi r21,0
 592 0004 60E0      		ldi r22,0
 593 0006 70E0      		ldi r23,0
 594 0008 00C0      		rjmp 2f
 595               		1:
 596 000a 440F      		lsl r20
 597 000c 551F      		rol r21
 598 000e 661F      		rol r22
 599 0010 771F      		rol r23
 600               		2:
 601 0012 8A95      		dec r24
 602 0014 02F4      		brpl 1b
 603               		.loc 1 91 5 view .LVU124
 604 0016 8091 0000 		lds r24,layer_state
 605 001a 9091 0000 		lds r25,layer_state+1
 606 001e A091 0000 		lds r26,layer_state+2
 607 0022 B091 0000 		lds r27,layer_state+3
 608               	.LVL28:
 609               		.loc 1 91 5 view .LVU125
 610 0026 8427      		eor r24,r20
 611 0028 9527      		eor r25,r21
 612 002a A627      		eor r26,r22
 613 002c B727      		eor r27,r23
 614               	.LBB57:
 615               	.LBB56:
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 616               		.loc 1 64 17 view .LVU126
 617 002e 8093 0000 		sts layer_state,r24
 618 0032 9093 0000 		sts layer_state+1,r25
 619 0036 A093 0000 		sts layer_state+2,r26
 620 003a B093 0000 		sts layer_state+3,r27
 621               	.LVL29:
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 622               		.loc 1 65 5 is_stmt 1 view .LVU127
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 623               		.loc 1 65 30 view .LVU128
  66:./tmk_core/common/action_layer.c **** }
 624               		.loc 1 66 5 view .LVU129
 625 003e 0C94 0000 		jmp clear_keyboard_but_mods
 626               	.LVL30:
 627               	.LBE56:
 628               	.LBE57:
 629               		.cfi_endproc
 630               	.LFE15:
 632               		.section	.text.layer_or,"ax",@progbits
 633               	.global	layer_or
 635               	layer_or:
 636               	.LVL31:
 637               	.LFB16:
  92:./tmk_core/common/action_layer.c **** }
  93:./tmk_core/common/action_layer.c **** 
  94:./tmk_core/common/action_layer.c **** void layer_or(uint32_t state)
  95:./tmk_core/common/action_layer.c **** {
 638               		.loc 1 95 1 view -0
 639               		.cfi_startproc
 640               		.loc 1 95 1 is_stmt 0 view .LVU131
 641 0000 CF93      		push r28
 642               	.LCFI12:
 643               		.cfi_def_cfa_offset 3
 644               		.cfi_offset 28, -2
 645 0002 DF93      		push r29
 646               	.LCFI13:
 647               		.cfi_def_cfa_offset 4
 648               		.cfi_offset 29, -3
 649 0004 00D0      		rcall .
 650 0006 00D0      		rcall .
 651               	.LCFI14:
 652               		.cfi_def_cfa_offset 8
 653 0008 CDB7      		in r28,__SP_L__
 654 000a DEB7      		in r29,__SP_H__
 655               	.LCFI15:
 656               		.cfi_def_cfa_register 28
 657               	/* prologue: function */
 658               	/* frame size = 4 */
 659               	/* stack size = 6 */
 660               	.L__stack_usage = 6
 661 000c 6983      		std Y+1,r22
 662 000e 7A83      		std Y+2,r23
 663 0010 8B83      		std Y+3,r24
 664 0012 9C83      		std Y+4,r25
  96:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state | state);
 665               		.loc 1 96 5 is_stmt 1 view .LVU132
 666               	.LVL32:
 667               	.LBB60:
 668               	.LBI60:
  60:./tmk_core/common/action_layer.c **** {
 669               		.loc 1 60 13 view .LVU133
 670               	.LBB61:
  62:./tmk_core/common/action_layer.c ****     layer_debug(); dprint(" to ");
 671               		.loc 1 62 28 view .LVU134
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 672               		.loc 1 63 5 view .LVU135
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 673               		.loc 1 63 34 view .LVU136
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 674               		.loc 1 64 5 view .LVU137
 675               	.LBE61:
 676               	.LBE60:
 677               		.loc 1 96 5 is_stmt 0 view .LVU138
 678 0014 8091 0000 		lds r24,layer_state
 679 0018 9091 0000 		lds r25,layer_state+1
 680 001c A091 0000 		lds r26,layer_state+2
 681 0020 B091 0000 		lds r27,layer_state+3
 682 0024 2981      		ldd r18,Y+1
 683 0026 3A81      		ldd r19,Y+2
 684 0028 4B81      		ldd r20,Y+3
 685 002a 5C81      		ldd r21,Y+4
 686 002c 822B      		or r24,r18
 687 002e 932B      		or r25,r19
 688 0030 A42B      		or r26,r20
 689 0032 B52B      		or r27,r21
 690               	.LBB64:
 691               	.LBB62:
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 692               		.loc 1 64 17 view .LVU139
 693 0034 8093 0000 		sts layer_state,r24
 694 0038 9093 0000 		sts layer_state+1,r25
 695 003c A093 0000 		sts layer_state+2,r26
 696 0040 B093 0000 		sts layer_state+3,r27
 697               	.LVL33:
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 698               		.loc 1 65 5 is_stmt 1 view .LVU140
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 699               		.loc 1 65 30 view .LVU141
  66:./tmk_core/common/action_layer.c **** }
 700               		.loc 1 66 5 view .LVU142
 701               	/* epilogue start */
 702               	.LBE62:
 703               	.LBE64:
  97:./tmk_core/common/action_layer.c **** }
 704               		.loc 1 97 1 is_stmt 0 view .LVU143
 705 0044 0F90      		pop __tmp_reg__
 706 0046 0F90      		pop __tmp_reg__
 707 0048 0F90      		pop __tmp_reg__
 708 004a 0F90      		pop __tmp_reg__
 709 004c DF91      		pop r29
 710 004e CF91      		pop r28
 711               	.LBB65:
 712               	.LBB63:
  66:./tmk_core/common/action_layer.c **** }
 713               		.loc 1 66 5 view .LVU144
 714 0050 0C94 0000 		jmp clear_keyboard_but_mods
 715               	.LVL34:
  66:./tmk_core/common/action_layer.c **** }
 716               		.loc 1 66 5 view .LVU145
 717               	.LBE63:
 718               	.LBE65:
 719               		.cfi_endproc
 720               	.LFE16:
 722               		.section	.text.layer_and,"ax",@progbits
 723               	.global	layer_and
 725               	layer_and:
 726               	.LVL35:
 727               	.LFB17:
  98:./tmk_core/common/action_layer.c **** void layer_and(uint32_t state)
  99:./tmk_core/common/action_layer.c **** {
 728               		.loc 1 99 1 is_stmt 1 view -0
 729               		.cfi_startproc
 730               		.loc 1 99 1 is_stmt 0 view .LVU147
 731 0000 CF93      		push r28
 732               	.LCFI16:
 733               		.cfi_def_cfa_offset 3
 734               		.cfi_offset 28, -2
 735 0002 DF93      		push r29
 736               	.LCFI17:
 737               		.cfi_def_cfa_offset 4
 738               		.cfi_offset 29, -3
 739 0004 00D0      		rcall .
 740 0006 00D0      		rcall .
 741               	.LCFI18:
 742               		.cfi_def_cfa_offset 8
 743 0008 CDB7      		in r28,__SP_L__
 744 000a DEB7      		in r29,__SP_H__
 745               	.LCFI19:
 746               		.cfi_def_cfa_register 28
 747               	/* prologue: function */
 748               	/* frame size = 4 */
 749               	/* stack size = 6 */
 750               	.L__stack_usage = 6
 751 000c 6983      		std Y+1,r22
 752 000e 7A83      		std Y+2,r23
 753 0010 8B83      		std Y+3,r24
 754 0012 9C83      		std Y+4,r25
 100:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state & state);
 755               		.loc 1 100 5 is_stmt 1 view .LVU148
 756               	.LVL36:
 757               	.LBB68:
 758               	.LBI68:
  60:./tmk_core/common/action_layer.c **** {
 759               		.loc 1 60 13 view .LVU149
 760               	.LBB69:
  62:./tmk_core/common/action_layer.c ****     layer_debug(); dprint(" to ");
 761               		.loc 1 62 28 view .LVU150
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 762               		.loc 1 63 5 view .LVU151
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 763               		.loc 1 63 34 view .LVU152
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 764               		.loc 1 64 5 view .LVU153
 765               	.LBE69:
 766               	.LBE68:
 767               		.loc 1 100 5 is_stmt 0 view .LVU154
 768 0014 8091 0000 		lds r24,layer_state
 769 0018 9091 0000 		lds r25,layer_state+1
 770 001c A091 0000 		lds r26,layer_state+2
 771 0020 B091 0000 		lds r27,layer_state+3
 772 0024 2981      		ldd r18,Y+1
 773 0026 3A81      		ldd r19,Y+2
 774 0028 4B81      		ldd r20,Y+3
 775 002a 5C81      		ldd r21,Y+4
 776 002c 8223      		and r24,r18
 777 002e 9323      		and r25,r19
 778 0030 A423      		and r26,r20
 779 0032 B523      		and r27,r21
 780               	.LBB72:
 781               	.LBB70:
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 782               		.loc 1 64 17 view .LVU155
 783 0034 8093 0000 		sts layer_state,r24
 784 0038 9093 0000 		sts layer_state+1,r25
 785 003c A093 0000 		sts layer_state+2,r26
 786 0040 B093 0000 		sts layer_state+3,r27
 787               	.LVL37:
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 788               		.loc 1 65 5 is_stmt 1 view .LVU156
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 789               		.loc 1 65 30 view .LVU157
  66:./tmk_core/common/action_layer.c **** }
 790               		.loc 1 66 5 view .LVU158
 791               	/* epilogue start */
 792               	.LBE70:
 793               	.LBE72:
 101:./tmk_core/common/action_layer.c **** }
 794               		.loc 1 101 1 is_stmt 0 view .LVU159
 795 0044 0F90      		pop __tmp_reg__
 796 0046 0F90      		pop __tmp_reg__
 797 0048 0F90      		pop __tmp_reg__
 798 004a 0F90      		pop __tmp_reg__
 799 004c DF91      		pop r29
 800 004e CF91      		pop r28
 801               	.LBB73:
 802               	.LBB71:
  66:./tmk_core/common/action_layer.c **** }
 803               		.loc 1 66 5 view .LVU160
 804 0050 0C94 0000 		jmp clear_keyboard_but_mods
 805               	.LVL38:
  66:./tmk_core/common/action_layer.c **** }
 806               		.loc 1 66 5 view .LVU161
 807               	.LBE71:
 808               	.LBE73:
 809               		.cfi_endproc
 810               	.LFE17:
 812               		.section	.text.layer_xor,"ax",@progbits
 813               	.global	layer_xor
 815               	layer_xor:
 816               	.LVL39:
 817               	.LFB18:
 102:./tmk_core/common/action_layer.c **** void layer_xor(uint32_t state)
 103:./tmk_core/common/action_layer.c **** {
 818               		.loc 1 103 1 is_stmt 1 view -0
 819               		.cfi_startproc
 820               		.loc 1 103 1 is_stmt 0 view .LVU163
 821 0000 CF93      		push r28
 822               	.LCFI20:
 823               		.cfi_def_cfa_offset 3
 824               		.cfi_offset 28, -2
 825 0002 DF93      		push r29
 826               	.LCFI21:
 827               		.cfi_def_cfa_offset 4
 828               		.cfi_offset 29, -3
 829 0004 00D0      		rcall .
 830 0006 00D0      		rcall .
 831               	.LCFI22:
 832               		.cfi_def_cfa_offset 8
 833 0008 CDB7      		in r28,__SP_L__
 834 000a DEB7      		in r29,__SP_H__
 835               	.LCFI23:
 836               		.cfi_def_cfa_register 28
 837               	/* prologue: function */
 838               	/* frame size = 4 */
 839               	/* stack size = 6 */
 840               	.L__stack_usage = 6
 841 000c 6983      		std Y+1,r22
 842 000e 7A83      		std Y+2,r23
 843 0010 8B83      		std Y+3,r24
 844 0012 9C83      		std Y+4,r25
 104:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state ^ state);
 845               		.loc 1 104 5 is_stmt 1 view .LVU164
 846               	.LVL40:
 847               	.LBB76:
 848               	.LBI76:
  60:./tmk_core/common/action_layer.c **** {
 849               		.loc 1 60 13 view .LVU165
 850               	.LBB77:
  62:./tmk_core/common/action_layer.c ****     layer_debug(); dprint(" to ");
 851               		.loc 1 62 28 view .LVU166
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 852               		.loc 1 63 5 view .LVU167
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 853               		.loc 1 63 34 view .LVU168
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 854               		.loc 1 64 5 view .LVU169
 855               	.LBE77:
 856               	.LBE76:
 857               		.loc 1 104 5 is_stmt 0 view .LVU170
 858 0014 8091 0000 		lds r24,layer_state
 859 0018 9091 0000 		lds r25,layer_state+1
 860 001c A091 0000 		lds r26,layer_state+2
 861 0020 B091 0000 		lds r27,layer_state+3
 862 0024 2981      		ldd r18,Y+1
 863 0026 3A81      		ldd r19,Y+2
 864 0028 4B81      		ldd r20,Y+3
 865 002a 5C81      		ldd r21,Y+4
 866 002c 8227      		eor r24,r18
 867 002e 9327      		eor r25,r19
 868 0030 A427      		eor r26,r20
 869 0032 B527      		eor r27,r21
 870               	.LBB80:
 871               	.LBB78:
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 872               		.loc 1 64 17 view .LVU171
 873 0034 8093 0000 		sts layer_state,r24
 874 0038 9093 0000 		sts layer_state+1,r25
 875 003c A093 0000 		sts layer_state+2,r26
 876 0040 B093 0000 		sts layer_state+3,r27
 877               	.LVL41:
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 878               		.loc 1 65 5 is_stmt 1 view .LVU172
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 879               		.loc 1 65 30 view .LVU173
  66:./tmk_core/common/action_layer.c **** }
 880               		.loc 1 66 5 view .LVU174
 881               	/* epilogue start */
 882               	.LBE78:
 883               	.LBE80:
 105:./tmk_core/common/action_layer.c **** }
 884               		.loc 1 105 1 is_stmt 0 view .LVU175
 885 0044 0F90      		pop __tmp_reg__
 886 0046 0F90      		pop __tmp_reg__
 887 0048 0F90      		pop __tmp_reg__
 888 004a 0F90      		pop __tmp_reg__
 889 004c DF91      		pop r29
 890 004e CF91      		pop r28
 891               	.LBB81:
 892               	.LBB79:
  66:./tmk_core/common/action_layer.c **** }
 893               		.loc 1 66 5 view .LVU176
 894 0050 0C94 0000 		jmp clear_keyboard_but_mods
 895               	.LVL42:
  66:./tmk_core/common/action_layer.c **** }
 896               		.loc 1 66 5 view .LVU177
 897               	.LBE79:
 898               	.LBE81:
 899               		.cfi_endproc
 900               	.LFE18:
 902               		.section	.text.layer_debug,"ax",@progbits
 903               	.global	layer_debug
 905               	layer_debug:
 906               	.LFB26:
 907               		.cfi_startproc
 908               	/* prologue: function */
 909               	/* frame size = 0 */
 910               	/* stack size = 0 */
 911               	.L__stack_usage = 0
 912               	/* epilogue start */
 913 0000 0895      		ret
 914               		.cfi_endproc
 915               	.LFE26:
 917               		.section	.text.update_source_layers_cache,"ax",@progbits
 918               	.global	update_source_layers_cache
 920               	update_source_layers_cache:
 921               	.LVL43:
 922               	.LFB20:
 106:./tmk_core/common/action_layer.c **** 
 107:./tmk_core/common/action_layer.c **** void layer_debug(void)
 108:./tmk_core/common/action_layer.c **** {
 109:./tmk_core/common/action_layer.c ****     dprintf("%08lX(%u)", layer_state, biton32(layer_state));
 110:./tmk_core/common/action_layer.c **** }
 111:./tmk_core/common/action_layer.c **** #endif
 112:./tmk_core/common/action_layer.c **** 
 113:./tmk_core/common/action_layer.c **** #if !defined(NO_ACTION_LAYER) && defined(PREVENT_STUCK_MODIFIERS)
 114:./tmk_core/common/action_layer.c **** uint8_t source_layers_cache[(MATRIX_ROWS * MATRIX_COLS + 7) / 8][MAX_LAYER_BITS] = {{0}};
 115:./tmk_core/common/action_layer.c **** 
 116:./tmk_core/common/action_layer.c **** void update_source_layers_cache(keypos_t key, uint8_t layer)
 117:./tmk_core/common/action_layer.c **** {
 923               		.loc 1 117 1 is_stmt 1 view -0
 924               		.cfi_startproc
 925               	/* prologue: function */
 926               	/* frame size = 0 */
 927               	/* stack size = 0 */
 928               	.L__stack_usage = 0
 118:./tmk_core/common/action_layer.c ****     const uint8_t key_number = key.col + (key.row * MATRIX_COLS);
 929               		.loc 1 118 5 view .LVU179
 930               		.loc 1 118 19 is_stmt 0 view .LVU180
 931 0000 E82F      		mov r30,r24
 932 0002 29E1      		ldi r18,lo8(25)
 933 0004 929F      		mul r25,r18
 934 0006 E00D      		add r30,r0
 935 0008 1124      		clr __zero_reg__
 936               	.LVL44:
 119:./tmk_core/common/action_layer.c ****     const uint8_t storage_row = key_number / 8;
 937               		.loc 1 119 5 is_stmt 1 view .LVU181
 120:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 938               		.loc 1 120 5 view .LVU182
 121:./tmk_core/common/action_layer.c **** 
 122:./tmk_core/common/action_layer.c ****     for (uint8_t bit_number = 0; bit_number < MAX_LAYER_BITS; bit_number++) {
 939               		.loc 1 122 5 view .LVU183
 940               	.LBB82:
 941               		.loc 1 122 10 view .LVU184
 942               		.loc 1 122 45 view .LVU185
 943               	.LBE82:
 120:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 944               		.loc 1 120 19 is_stmt 0 view .LVU186
 945 000a 8E2F      		mov r24,r30
 946               	.LVL45:
 120:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 947               		.loc 1 120 19 view .LVU187
 948 000c 8770      		andi r24,lo8(7)
 949               	.LVL46:
 950               	.LBB83:
 123:./tmk_core/common/action_layer.c ****         source_layers_cache[storage_row][bit_number] ^=
 124:./tmk_core/common/action_layer.c ****             (-((layer & (1U << bit_number)) != 0)
 125:./tmk_core/common/action_layer.c ****              ^ source_layers_cache[storage_row][bit_number])
 126:./tmk_core/common/action_layer.c ****             & (1U << storage_bit);
 951               		.loc 1 126 13 view .LVU188
 952 000e 41E0      		ldi r20,lo8(1)
 953 0010 00C0      		rjmp 2f
 954               		1:
 955 0012 440F      		lsl r20
 956               		2:
 957 0014 8A95      		dec r24
 958 0016 02F4      		brpl 1b
 959               	.LBE83:
 119:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 960               		.loc 1 119 19 view .LVU189
 961 0018 E695      		lsr r30
 962 001a E695      		lsr r30
 963 001c E695      		lsr r30
 964               	.LVL47:
 119:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 965               		.loc 1 119 19 view .LVU190
 966 001e 85E0      		ldi r24,lo8(5)
 967               	.LVL48:
 119:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 968               		.loc 1 119 19 view .LVU191
 969 0020 E89F      		mul r30,r24
 970 0022 F001      		movw r30,r0
 971 0024 1124      		clr __zero_reg__
 972               	.LVL49:
 119:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 973               		.loc 1 119 19 view .LVU192
 974 0026 E050      		subi r30,lo8(-(source_layers_cache))
 975 0028 F040      		sbci r31,hi8(-(source_layers_cache))
 976               	.LBB84:
 977               		.loc 1 126 13 view .LVU193
 978 002a 30E0      		ldi r19,0
 979 002c 20E0      		ldi r18,0
 124:./tmk_core/common/action_layer.c ****              ^ source_layers_cache[storage_row][bit_number])
 980               		.loc 1 124 45 view .LVU194
 981 002e 70E0      		ldi r23,0
 982               	.LVL50:
 983               	.L16:
 123:./tmk_core/common/action_layer.c ****         source_layers_cache[storage_row][bit_number] ^=
 984               		.loc 1 123 9 is_stmt 1 discriminator 3 view .LVU195
 123:./tmk_core/common/action_layer.c ****         source_layers_cache[storage_row][bit_number] ^=
 985               		.loc 1 123 54 is_stmt 0 discriminator 3 view .LVU196
 986 0030 5191      		ld r21,Z+
 987 0032 DF01      		movw r26,r30
 988 0034 1197      		sbiw r26,1
 124:./tmk_core/common/action_layer.c ****              ^ source_layers_cache[storage_row][bit_number])
 989               		.loc 1 124 45 discriminator 3 view .LVU197
 990 0036 CB01      		movw r24,r22
 991 0038 022E      		mov r0,r18
 992 003a 00C0      		rjmp 2f
 993               		1:
 994 003c 9695      		lsr r25
 995 003e 8795      		ror r24
 996               		2:
 997 0040 0A94      		dec r0
 998 0042 02F4      		brpl 1b
 999 0044 8170      		andi r24,lo8(1)
 125:./tmk_core/common/action_layer.c ****             & (1U << storage_bit);
 1000               		.loc 1 125 14 discriminator 3 view .LVU198
 1001 0046 8195      		neg r24
 1002               		.loc 1 126 13 discriminator 3 view .LVU199
 1003 0048 8527      		eor r24,r21
 1004 004a 8423      		and r24,r20
 123:./tmk_core/common/action_layer.c ****             (-((layer & (1U << bit_number)) != 0)
 1005               		.loc 1 123 54 discriminator 3 view .LVU200
 1006 004c 8527      		eor r24,r21
 1007 004e 8C93      		st X,r24
 122:./tmk_core/common/action_layer.c ****         source_layers_cache[storage_row][bit_number] ^=
 1008               		.loc 1 122 73 is_stmt 1 discriminator 3 view .LVU201
 1009               	.LVL51:
 122:./tmk_core/common/action_layer.c ****         source_layers_cache[storage_row][bit_number] ^=
 1010               		.loc 1 122 45 discriminator 3 view .LVU202
 1011 0050 2F5F      		subi r18,-1
 1012 0052 3F4F      		sbci r19,-1
 1013               	.LVL52:
 122:./tmk_core/common/action_layer.c ****         source_layers_cache[storage_row][bit_number] ^=
 1014               		.loc 1 122 45 is_stmt 0 discriminator 3 view .LVU203
 1015 0054 2530      		cpi r18,5
 1016 0056 3105      		cpc r19,__zero_reg__
 1017 0058 01F4      		brne .L16
 1018               	/* epilogue start */
 1019               	.LBE84:
 127:./tmk_core/common/action_layer.c ****     }
 128:./tmk_core/common/action_layer.c **** }
 1020               		.loc 1 128 1 view .LVU204
 1021 005a 0895      		ret
 1022               		.cfi_endproc
 1023               	.LFE20:
 1025               		.section	.text.read_source_layers_cache,"ax",@progbits
 1026               	.global	read_source_layers_cache
 1028               	read_source_layers_cache:
 1029               	.LVL53:
 1030               	.LFB21:
 129:./tmk_core/common/action_layer.c **** 
 130:./tmk_core/common/action_layer.c **** uint8_t read_source_layers_cache(keypos_t key)
 131:./tmk_core/common/action_layer.c **** {
 1031               		.loc 1 131 1 is_stmt 1 view -0
 1032               		.cfi_startproc
 1033               	/* prologue: function */
 1034               	/* frame size = 0 */
 1035               	/* stack size = 0 */
 1036               	.L__stack_usage = 0
 132:./tmk_core/common/action_layer.c ****     const uint8_t key_number = key.col + (key.row * MATRIX_COLS);
 1037               		.loc 1 132 5 view .LVU206
 1038               		.loc 1 132 19 is_stmt 0 view .LVU207
 1039 0000 E82F      		mov r30,r24
 1040 0002 29E1      		ldi r18,lo8(25)
 1041 0004 929F      		mul r25,r18
 1042 0006 E00D      		add r30,r0
 1043 0008 1124      		clr __zero_reg__
 1044               	.LVL54:
 133:./tmk_core/common/action_layer.c ****     const uint8_t storage_row = key_number / 8;
 1045               		.loc 1 133 5 is_stmt 1 view .LVU208
 134:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 1046               		.loc 1 134 5 view .LVU209
 1047               		.loc 1 134 19 is_stmt 0 view .LVU210
 1048 000a 9E2F      		mov r25,r30
 1049 000c 9770      		andi r25,lo8(7)
 1050               	.LVL55:
 135:./tmk_core/common/action_layer.c ****     uint8_t layer = 0;
 1051               		.loc 1 135 5 is_stmt 1 view .LVU211
 136:./tmk_core/common/action_layer.c **** 
 137:./tmk_core/common/action_layer.c ****     for (uint8_t bit_number = 0; bit_number < MAX_LAYER_BITS; bit_number++) {
 1052               		.loc 1 137 5 view .LVU212
 1053               	.LBB85:
 1054               		.loc 1 137 10 view .LVU213
 1055               		.loc 1 137 45 view .LVU214
 1056               	.LBE85:
 133:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 1057               		.loc 1 133 19 is_stmt 0 view .LVU215
 1058 000e E695      		lsr r30
 1059 0010 E695      		lsr r30
 1060 0012 E695      		lsr r30
 1061               	.LVL56:
 133:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 1062               		.loc 1 133 19 view .LVU216
 1063 0014 85E0      		ldi r24,lo8(5)
 1064               	.LVL57:
 133:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 1065               		.loc 1 133 19 view .LVU217
 1066 0016 E89F      		mul r30,r24
 1067 0018 F001      		movw r30,r0
 1068 001a 1124      		clr __zero_reg__
 1069               	.LVL58:
 133:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 1070               		.loc 1 133 19 view .LVU218
 1071 001c E050      		subi r30,lo8(-(source_layers_cache))
 1072 001e F040      		sbci r31,hi8(-(source_layers_cache))
 134:./tmk_core/common/action_layer.c ****     uint8_t layer = 0;
 1073               		.loc 1 134 19 view .LVU219
 1074 0020 50E0      		ldi r21,0
 1075 0022 40E0      		ldi r20,0
 135:./tmk_core/common/action_layer.c **** 
 1076               		.loc 1 135 13 view .LVU220
 1077 0024 80E0      		ldi r24,0
 1078               	.LVL59:
 1079               	.L19:
 1080               	.LBB86:
 138:./tmk_core/common/action_layer.c ****         layer |=
 1081               		.loc 1 138 9 is_stmt 1 discriminator 3 view .LVU221
 139:./tmk_core/common/action_layer.c ****             ((source_layers_cache[storage_row][bit_number]
 1082               		.loc 1 139 47 is_stmt 0 discriminator 3 view .LVU222
 1083 0026 2191      		ld r18,Z+
 1084 0028 30E0      		ldi r19,0
 140:./tmk_core/common/action_layer.c ****               & (1U << storage_bit)) != 0)
 1085               		.loc 1 140 38 discriminator 3 view .LVU223
 1086 002a 092E      		mov r0,r25
 1087 002c 00C0      		rjmp 2f
 1088               		1:
 1089 002e 3695      		lsr r19
 1090 0030 2795      		ror r18
 1091               		2:
 1092 0032 0A94      		dec r0
 1093 0034 02F4      		brpl 1b
 1094 0036 2170      		andi r18,1
 1095 0038 3327      		clr r19
 141:./tmk_core/common/action_layer.c ****             << bit_number;
 1096               		.loc 1 141 13 discriminator 3 view .LVU224
 1097 003a 042E      		mov r0,r20
 1098 003c 00C0      		rjmp 2f
 1099               		1:
 1100 003e 220F      		lsl r18
 1101               		2:
 1102 0040 0A94      		dec r0
 1103 0042 02F4      		brpl 1b
 138:./tmk_core/common/action_layer.c ****             ((source_layers_cache[storage_row][bit_number]
 1104               		.loc 1 138 15 discriminator 3 view .LVU225
 1105 0044 822B      		or r24,r18
 1106               	.LVL60:
 137:./tmk_core/common/action_layer.c ****         layer |=
 1107               		.loc 1 137 73 is_stmt 1 discriminator 3 view .LVU226
 137:./tmk_core/common/action_layer.c ****         layer |=
 1108               		.loc 1 137 45 discriminator 3 view .LVU227
 1109 0046 4F5F      		subi r20,-1
 1110 0048 5F4F      		sbci r21,-1
 1111               	.LVL61:
 137:./tmk_core/common/action_layer.c ****         layer |=
 1112               		.loc 1 137 45 is_stmt 0 discriminator 3 view .LVU228
 1113 004a 4530      		cpi r20,5
 1114 004c 5105      		cpc r21,__zero_reg__
 1115 004e 01F4      		brne .L19
 1116               	.LBE86:
 142:./tmk_core/common/action_layer.c ****     }
 143:./tmk_core/common/action_layer.c **** 
 144:./tmk_core/common/action_layer.c ****     return layer;
 1117               		.loc 1 144 5 is_stmt 1 view .LVU229
 1118               	/* epilogue start */
 145:./tmk_core/common/action_layer.c **** }
 1119               		.loc 1 145 1 is_stmt 0 view .LVU230
 1120 0050 0895      		ret
 1121               		.cfi_endproc
 1122               	.LFE21:
 1124               		.section	.text.layer_switch_get_layer,"ax",@progbits
 1125               	.global	layer_switch_get_layer
 1127               	layer_switch_get_layer:
 1128               	.LVL62:
 1129               	.LFB23:
 146:./tmk_core/common/action_layer.c **** #endif
 147:./tmk_core/common/action_layer.c **** 
 148:./tmk_core/common/action_layer.c **** /*
 149:./tmk_core/common/action_layer.c ****  * Make sure the action triggered when the key is released is the same
 150:./tmk_core/common/action_layer.c ****  * one as the one triggered on press. It's important for the mod keys
 151:./tmk_core/common/action_layer.c ****  * when the layer is switched after the down event but before the up
 152:./tmk_core/common/action_layer.c ****  * event as they may get stuck otherwise.
 153:./tmk_core/common/action_layer.c ****  */
 154:./tmk_core/common/action_layer.c **** action_t store_or_get_action(bool pressed, keypos_t key)
 155:./tmk_core/common/action_layer.c **** {
 156:./tmk_core/common/action_layer.c **** #if !defined(NO_ACTION_LAYER) && defined(PREVENT_STUCK_MODIFIERS)
 157:./tmk_core/common/action_layer.c ****     if (disable_action_cache) {
 158:./tmk_core/common/action_layer.c ****         return layer_switch_get_action(key);
 159:./tmk_core/common/action_layer.c ****     }
 160:./tmk_core/common/action_layer.c **** 
 161:./tmk_core/common/action_layer.c ****     uint8_t layer;
 162:./tmk_core/common/action_layer.c **** 
 163:./tmk_core/common/action_layer.c ****     if (pressed) {
 164:./tmk_core/common/action_layer.c ****         layer = layer_switch_get_layer(key);
 165:./tmk_core/common/action_layer.c ****         update_source_layers_cache(key, layer);
 166:./tmk_core/common/action_layer.c ****     }
 167:./tmk_core/common/action_layer.c ****     else {
 168:./tmk_core/common/action_layer.c ****         layer = read_source_layers_cache(key);
 169:./tmk_core/common/action_layer.c ****     }
 170:./tmk_core/common/action_layer.c ****     return action_for_key(layer, key);
 171:./tmk_core/common/action_layer.c **** #else
 172:./tmk_core/common/action_layer.c ****     return layer_switch_get_action(key);
 173:./tmk_core/common/action_layer.c **** #endif
 174:./tmk_core/common/action_layer.c **** }
 175:./tmk_core/common/action_layer.c **** 
 176:./tmk_core/common/action_layer.c **** 
 177:./tmk_core/common/action_layer.c **** int8_t layer_switch_get_layer(keypos_t key)
 178:./tmk_core/common/action_layer.c **** {
 1130               		.loc 1 178 1 is_stmt 1 view -0
 1131               		.cfi_startproc
 1132               		.loc 1 178 1 is_stmt 0 view .LVU232
 1133 0000 BF92      		push r11
 1134               	.LCFI24:
 1135               		.cfi_def_cfa_offset 3
 1136               		.cfi_offset 11, -2
 1137 0002 CF92      		push r12
 1138               	.LCFI25:
 1139               		.cfi_def_cfa_offset 4
 1140               		.cfi_offset 12, -3
 1141 0004 DF92      		push r13
 1142               	.LCFI26:
 1143               		.cfi_def_cfa_offset 5
 1144               		.cfi_offset 13, -4
 1145 0006 EF92      		push r14
 1146               	.LCFI27:
 1147               		.cfi_def_cfa_offset 6
 1148               		.cfi_offset 14, -5
 1149 0008 FF92      		push r15
 1150               	.LCFI28:
 1151               		.cfi_def_cfa_offset 7
 1152               		.cfi_offset 15, -6
 1153 000a 0F93      		push r16
 1154               	.LCFI29:
 1155               		.cfi_def_cfa_offset 8
 1156               		.cfi_offset 16, -7
 1157 000c 1F93      		push r17
 1158               	.LCFI30:
 1159               		.cfi_def_cfa_offset 9
 1160               		.cfi_offset 17, -8
 1161 000e CF93      		push r28
 1162               	.LCFI31:
 1163               		.cfi_def_cfa_offset 10
 1164               		.cfi_offset 28, -9
 1165 0010 DF93      		push r29
 1166               	.LCFI32:
 1167               		.cfi_def_cfa_offset 11
 1168               		.cfi_offset 29, -10
 1169               	/* prologue: function */
 1170               	/* frame size = 0 */
 1171               	/* stack size = 9 */
 1172               	.L__stack_usage = 9
 1173 0012 8C01      		movw r16,r24
 179:./tmk_core/common/action_layer.c ****     action_t action;
 1174               		.loc 1 179 5 is_stmt 1 view .LVU233
 180:./tmk_core/common/action_layer.c ****     action.code = ACTION_TRANSPARENT;
 1175               		.loc 1 180 5 view .LVU234
 1176               	.LVL63:
 181:./tmk_core/common/action_layer.c **** 
 182:./tmk_core/common/action_layer.c **** #ifndef NO_ACTION_LAYER
 183:./tmk_core/common/action_layer.c ****     uint32_t layers = layer_state | default_layer_state;
 1177               		.loc 1 183 5 view .LVU235
 1178               		.loc 1 183 14 is_stmt 0 view .LVU236
 1179 0014 C090 0000 		lds r12,layer_state
 1180 0018 D090 0000 		lds r13,layer_state+1
 1181 001c E090 0000 		lds r14,layer_state+2
 1182 0020 F090 0000 		lds r15,layer_state+3
 1183 0024 8091 0000 		lds r24,default_layer_state
 1184 0028 9091 0000 		lds r25,default_layer_state+1
 1185 002c A091 0000 		lds r26,default_layer_state+2
 1186 0030 B091 0000 		lds r27,default_layer_state+3
 1187               	.LVL64:
 1188               		.loc 1 183 14 view .LVU237
 1189 0034 C82A      		or r12,r24
 1190 0036 D92A      		or r13,r25
 1191 0038 EA2A      		or r14,r26
 1192 003a FB2A      		or r15,r27
 1193               	.LVL65:
 184:./tmk_core/common/action_layer.c ****     /* check top layer first */
 185:./tmk_core/common/action_layer.c ****     for (int8_t i = 31; i >= 0; i--) {
 1194               		.loc 1 185 5 is_stmt 1 view .LVU238
 1195               	.LBB87:
 1196               		.loc 1 185 10 view .LVU239
 1197               		.loc 1 185 27 view .LVU240
 1198               	.LBE87:
 183:./tmk_core/common/action_layer.c ****     /* check top layer first */
 1199               		.loc 1 183 14 is_stmt 0 view .LVU241
 1200 003c CFE1      		ldi r28,lo8(31)
 1201 003e D0E0      		ldi r29,0
 1202               	.LVL66:
 1203               	.L23:
 183:./tmk_core/common/action_layer.c ****     /* check top layer first */
 1204               		.loc 1 183 14 view .LVU242
 1205 0040 BC2E      		mov r11,r28
 1206               	.LVL67:
 1207               	.LBB88:
 186:./tmk_core/common/action_layer.c ****         if (layers & (1UL<<i)) {
 1208               		.loc 1 186 9 is_stmt 1 view .LVU243
 1209               		.loc 1 186 13 is_stmt 0 view .LVU244
 1210 0042 D701      		movw r26,r14
 1211 0044 C601      		movw r24,r12
 1212 0046 0C2E      		mov r0,r28
 1213 0048 00C0      		rjmp 2f
 1214               		1:
 1215 004a B695      		lsr r27
 1216 004c A795      		ror r26
 1217 004e 9795      		ror r25
 1218 0050 8795      		ror r24
 1219               		2:
 1220 0052 0A94      		dec r0
 1221 0054 02F4      		brpl 1b
 1222               		.loc 1 186 12 view .LVU245
 1223 0056 80FD      		sbrc r24,0
 1224 0058 00C0      		rjmp .L22
 1225               	.L25:
 185:./tmk_core/common/action_layer.c ****         if (layers & (1UL<<i)) {
 1226               		.loc 1 185 34 is_stmt 1 view .LVU246
 1227               	.LVL68:
 185:./tmk_core/common/action_layer.c ****         if (layers & (1UL<<i)) {
 1228               		.loc 1 185 27 view .LVU247
 1229               	.LVL69:
 1230 005a 2197      		sbiw r28,1
 1231 005c 00F4      		brcc .L23
 185:./tmk_core/common/action_layer.c ****         if (layers & (1UL<<i)) {
 1232               		.loc 1 185 27 is_stmt 0 view .LVU248
 1233               	.LBE88:
 187:./tmk_core/common/action_layer.c ****             action = action_for_key(i, key);
 188:./tmk_core/common/action_layer.c ****             if (action.code != ACTION_TRANSPARENT) {
 189:./tmk_core/common/action_layer.c ****                 return i;
 190:./tmk_core/common/action_layer.c ****             }
 191:./tmk_core/common/action_layer.c ****         }
 192:./tmk_core/common/action_layer.c ****     }
 193:./tmk_core/common/action_layer.c ****     /* fall back to layer 0 */
 194:./tmk_core/common/action_layer.c ****     return 0;
 1234               		.loc 1 194 12 view .LVU249
 1235 005e B12C      		mov r11,__zero_reg__
 1236               	.LVL70:
 1237               	.L21:
 195:./tmk_core/common/action_layer.c **** #else
 196:./tmk_core/common/action_layer.c ****     return biton32(default_layer_state);
 197:./tmk_core/common/action_layer.c **** #endif
 198:./tmk_core/common/action_layer.c **** }
 1238               		.loc 1 198 1 view .LVU250
 1239 0060 8B2D      		mov r24,r11
 1240               	/* epilogue start */
 1241 0062 DF91      		pop r29
 1242 0064 CF91      		pop r28
 1243 0066 1F91      		pop r17
 1244 0068 0F91      		pop r16
 1245 006a FF90      		pop r15
 1246 006c EF90      		pop r14
 1247 006e DF90      		pop r13
 1248 0070 CF90      		pop r12
 1249               	.LVL71:
 1250               		.loc 1 198 1 view .LVU251
 1251 0072 BF90      		pop r11
 1252 0074 0895      		ret
 1253               	.LVL72:
 1254               	.L22:
 1255               	.LBB89:
 187:./tmk_core/common/action_layer.c ****             action = action_for_key(i, key);
 1256               		.loc 1 187 13 is_stmt 1 view .LVU252
 187:./tmk_core/common/action_layer.c ****             action = action_for_key(i, key);
 1257               		.loc 1 187 22 is_stmt 0 view .LVU253
 1258 0076 B801      		movw r22,r16
 1259 0078 8C2F      		mov r24,r28
 1260 007a 0E94 0000 		call action_for_key
 1261               	.LVL73:
 188:./tmk_core/common/action_layer.c ****                 return i;
 1262               		.loc 1 188 13 is_stmt 1 view .LVU254
 188:./tmk_core/common/action_layer.c ****                 return i;
 1263               		.loc 1 188 16 is_stmt 0 view .LVU255
 1264 007e 0197      		sbiw r24,1
 1265 0080 01F0      		breq .L25
 1266 0082 00C0      		rjmp .L21
 1267               	.LBE89:
 1268               		.cfi_endproc
 1269               	.LFE23:
 1271               		.section	.text.layer_switch_get_action,"ax",@progbits
 1272               	.global	layer_switch_get_action
 1274               	layer_switch_get_action:
 1275               	.LVL74:
 1276               	.LFB24:
 199:./tmk_core/common/action_layer.c **** 
 200:./tmk_core/common/action_layer.c **** action_t layer_switch_get_action(keypos_t key)
 201:./tmk_core/common/action_layer.c **** {
 1277               		.loc 1 201 1 is_stmt 1 view -0
 1278               		.cfi_startproc
 1279               		.loc 1 201 1 is_stmt 0 view .LVU257
 1280 0000 CF93      		push r28
 1281               	.LCFI33:
 1282               		.cfi_def_cfa_offset 3
 1283               		.cfi_offset 28, -2
 1284 0002 DF93      		push r29
 1285               	.LCFI34:
 1286               		.cfi_def_cfa_offset 4
 1287               		.cfi_offset 29, -3
 1288               	/* prologue: function */
 1289               	/* frame size = 0 */
 1290               	/* stack size = 2 */
 1291               	.L__stack_usage = 2
 1292 0004 D82F      		mov r29,r24
 1293               	.LVL75:
 1294               		.loc 1 201 1 view .LVU258
 1295 0006 C92F      		mov r28,r25
 1296               	.LVL76:
 202:./tmk_core/common/action_layer.c ****     return action_for_key(layer_switch_get_layer(key), key);
 1297               		.loc 1 202 5 is_stmt 1 view .LVU259
 1298               		.loc 1 202 27 is_stmt 0 view .LVU260
 1299 0008 0E94 0000 		call layer_switch_get_layer
 1300               	.LVL77:
 1301               		.loc 1 202 12 view .LVU261
 1302 000c 6D2F      		mov r22,r29
 1303 000e 7C2F      		mov r23,r28
 1304               	/* epilogue start */
 203:./tmk_core/common/action_layer.c **** }
 1305               		.loc 1 203 1 view .LVU262
 1306 0010 DF91      		pop r29
 1307               	.LVL78:
 1308               		.loc 1 203 1 view .LVU263
 1309 0012 CF91      		pop r28
 202:./tmk_core/common/action_layer.c ****     return action_for_key(layer_switch_get_layer(key), key);
 1310               		.loc 1 202 12 view .LVU264
 1311 0014 0C94 0000 		jmp action_for_key
 1312               	.LVL79:
 1313               		.cfi_endproc
 1314               	.LFE24:
 1316               		.section	.text.store_or_get_action,"ax",@progbits
 1317               	.global	store_or_get_action
 1319               	store_or_get_action:
 1320               	.LVL80:
 1321               	.LFB22:
 155:./tmk_core/common/action_layer.c **** #if !defined(NO_ACTION_LAYER) && defined(PREVENT_STUCK_MODIFIERS)
 1322               		.loc 1 155 1 is_stmt 1 view -0
 1323               		.cfi_startproc
 155:./tmk_core/common/action_layer.c **** #if !defined(NO_ACTION_LAYER) && defined(PREVENT_STUCK_MODIFIERS)
 1324               		.loc 1 155 1 is_stmt 0 view .LVU266
 1325 0000 1F93      		push r17
 1326               	.LCFI35:
 1327               		.cfi_def_cfa_offset 3
 1328               		.cfi_offset 17, -2
 1329 0002 CF93      		push r28
 1330               	.LCFI36:
 1331               		.cfi_def_cfa_offset 4
 1332               		.cfi_offset 28, -3
 1333 0004 DF93      		push r29
 1334               	.LCFI37:
 1335               		.cfi_def_cfa_offset 5
 1336               		.cfi_offset 29, -4
 1337               	/* prologue: function */
 1338               	/* frame size = 0 */
 1339               	/* stack size = 3 */
 1340               	.L__stack_usage = 3
 1341 0006 162F      		mov r17,r22
 1342               	.LVL81:
 155:./tmk_core/common/action_layer.c **** #if !defined(NO_ACTION_LAYER) && defined(PREVENT_STUCK_MODIFIERS)
 1343               		.loc 1 155 1 view .LVU267
 1344 0008 D72F      		mov r29,r23
 1345               	.LVL82:
 157:./tmk_core/common/action_layer.c ****         return layer_switch_get_action(key);
 1346               		.loc 1 157 5 is_stmt 1 view .LVU268
 157:./tmk_core/common/action_layer.c ****         return layer_switch_get_action(key);
 1347               		.loc 1 157 8 is_stmt 0 view .LVU269
 1348 000a 9091 0000 		lds r25,disable_action_cache
 1349 000e 9923      		tst r25
 1350 0010 01F0      		breq .L32
 158:./tmk_core/common/action_layer.c ****     }
 1351               		.loc 1 158 9 is_stmt 1 view .LVU270
 1352               	.LVL83:
 158:./tmk_core/common/action_layer.c ****     }
 1353               		.loc 1 158 16 is_stmt 0 view .LVU271
 1354 0012 862F      		mov r24,r22
 1355               	.LVL84:
 158:./tmk_core/common/action_layer.c ****     }
 1356               		.loc 1 158 16 view .LVU272
 1357 0014 972F      		mov r25,r23
 1358               	/* epilogue start */
 174:./tmk_core/common/action_layer.c **** 
 1359               		.loc 1 174 1 view .LVU273
 1360 0016 DF91      		pop r29
 1361               	.LVL85:
 174:./tmk_core/common/action_layer.c **** 
 1362               		.loc 1 174 1 view .LVU274
 1363 0018 CF91      		pop r28
 1364 001a 1F91      		pop r17
 158:./tmk_core/common/action_layer.c ****     }
 1365               		.loc 1 158 16 view .LVU275
 1366 001c 0C94 0000 		jmp layer_switch_get_action
 1367               	.LVL86:
 1368               	.L32:
 161:./tmk_core/common/action_layer.c **** 
 1369               		.loc 1 161 5 is_stmt 1 view .LVU276
 163:./tmk_core/common/action_layer.c ****         layer = layer_switch_get_layer(key);
 1370               		.loc 1 163 5 view .LVU277
 163:./tmk_core/common/action_layer.c ****         layer = layer_switch_get_layer(key);
 1371               		.loc 1 163 8 is_stmt 0 view .LVU278
 1372 0020 8823      		tst r24
 1373 0022 01F0      		breq .L33
 164:./tmk_core/common/action_layer.c ****         update_source_layers_cache(key, layer);
 1374               		.loc 1 164 9 is_stmt 1 view .LVU279
 164:./tmk_core/common/action_layer.c ****         update_source_layers_cache(key, layer);
 1375               		.loc 1 164 17 is_stmt 0 view .LVU280
 1376 0024 862F      		mov r24,r22
 1377               	.LVL87:
 164:./tmk_core/common/action_layer.c ****         update_source_layers_cache(key, layer);
 1378               		.loc 1 164 17 view .LVU281
 1379 0026 972F      		mov r25,r23
 1380 0028 0E94 0000 		call layer_switch_get_layer
 1381               	.LVL88:
 1382 002c C82F      		mov r28,r24
 1383               	.LVL89:
 165:./tmk_core/common/action_layer.c ****     }
 1384               		.loc 1 165 9 is_stmt 1 view .LVU282
 1385 002e 682F      		mov r22,r24
 1386 0030 812F      		mov r24,r17
 1387               	.LVL90:
 165:./tmk_core/common/action_layer.c ****     }
 1388               		.loc 1 165 9 is_stmt 0 view .LVU283
 1389 0032 9D2F      		mov r25,r29
 1390 0034 0E94 0000 		call update_source_layers_cache
 1391               	.LVL91:
 1392               	.L34:
 170:./tmk_core/common/action_layer.c **** #else
 1393               		.loc 1 170 5 is_stmt 1 view .LVU284
 170:./tmk_core/common/action_layer.c **** #else
 1394               		.loc 1 170 12 is_stmt 0 view .LVU285
 1395 0038 612F      		mov r22,r17
 1396 003a 7D2F      		mov r23,r29
 1397 003c 8C2F      		mov r24,r28
 1398               	/* epilogue start */
 174:./tmk_core/common/action_layer.c **** 
 1399               		.loc 1 174 1 view .LVU286
 1400 003e DF91      		pop r29
 1401               	.LVL92:
 174:./tmk_core/common/action_layer.c **** 
 1402               		.loc 1 174 1 view .LVU287
 1403 0040 CF91      		pop r28
 1404               	.LVL93:
 174:./tmk_core/common/action_layer.c **** 
 1405               		.loc 1 174 1 view .LVU288
 1406 0042 1F91      		pop r17
 170:./tmk_core/common/action_layer.c **** #else
 1407               		.loc 1 170 12 view .LVU289
 1408 0044 0C94 0000 		jmp action_for_key
 1409               	.LVL94:
 1410               	.L33:
 168:./tmk_core/common/action_layer.c ****     }
 1411               		.loc 1 168 9 is_stmt 1 view .LVU290
 168:./tmk_core/common/action_layer.c ****     }
 1412               		.loc 1 168 17 is_stmt 0 view .LVU291
 1413 0048 862F      		mov r24,r22
 1414               	.LVL95:
 168:./tmk_core/common/action_layer.c ****     }
 1415               		.loc 1 168 17 view .LVU292
 1416 004a 972F      		mov r25,r23
 1417 004c 0E94 0000 		call read_source_layers_cache
 1418               	.LVL96:
 1419 0050 C82F      		mov r28,r24
 1420               	.LVL97:
 168:./tmk_core/common/action_layer.c ****     }
 1421               		.loc 1 168 17 view .LVU293
 1422 0052 00C0      		rjmp .L34
 1423               		.cfi_endproc
 1424               	.LFE22:
 1426               	.global	source_layers_cache
 1427               		.section	.bss.source_layers_cache,"aw",@nobits
 1430               	source_layers_cache:
 1431 0000 0000 0000 		.zero	125
 1431      0000 0000 
 1431      0000 0000 
 1431      0000 0000 
 1431      0000 0000 
 1432               	.global	layer_state
 1433               		.section	.bss.layer_state,"aw",@nobits
 1436               	layer_state:
 1437 0000 0000 0000 		.zero	4
 1438               	.global	default_layer_state
 1439               		.section	.bss.default_layer_state,"aw",@nobits
 1442               	default_layer_state:
 1443 0000 0000 0000 		.zero	4
 1444               		.text
 1445               	.Letext0:
 1446               		.file 2 "/usr/avr/include/stdint.h"
 1447               		.file 3 "./tmk_core/common/keyboard.h"
 1448               		.file 4 "./tmk_core/common/action_code.h"
 1449               		.file 5 "./tmk_core/common/action.h"
 1450               		.file 6 "./tmk_core/common/action_layer.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 action_layer.c
     /tmp/ccupYzX1.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccupYzX1.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccupYzX1.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccupYzX1.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/ccupYzX1.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccupYzX1.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccupYzX1.s:14     .text.default_layer_debug:0000000000000000 default_layer_debug
     /tmp/ccupYzX1.s:33     .text.default_layer_set:0000000000000000 default_layer_set
     /tmp/ccupYzX1.s:1442   .bss.default_layer_state:0000000000000000 default_layer_state
     /tmp/ccupYzX1.s:71     .text.default_layer_or:0000000000000000 default_layer_or
     /tmp/ccupYzX1.s:161    .text.default_layer_and:0000000000000000 default_layer_and
     /tmp/ccupYzX1.s:251    .text.default_layer_xor:0000000000000000 default_layer_xor
     /tmp/ccupYzX1.s:341    .text.layer_clear:0000000000000000 layer_clear
     /tmp/ccupYzX1.s:1436   .bss.layer_state:0000000000000000 layer_state
     /tmp/ccupYzX1.s:377    .text.layer_move:0000000000000000 layer_move
     /tmp/ccupYzX1.s:432    .text.layer_on:0000000000000000 layer_on
     /tmp/ccupYzX1.s:498    .text.layer_off:0000000000000000 layer_off
     /tmp/ccupYzX1.s:569    .text.layer_invert:0000000000000000 layer_invert
     /tmp/ccupYzX1.s:635    .text.layer_or:0000000000000000 layer_or
     /tmp/ccupYzX1.s:725    .text.layer_and:0000000000000000 layer_and
     /tmp/ccupYzX1.s:815    .text.layer_xor:0000000000000000 layer_xor
     /tmp/ccupYzX1.s:905    .text.layer_debug:0000000000000000 layer_debug
     /tmp/ccupYzX1.s:920    .text.update_source_layers_cache:0000000000000000 update_source_layers_cache
     /tmp/ccupYzX1.s:1430   .bss.source_layers_cache:0000000000000000 source_layers_cache
     /tmp/ccupYzX1.s:1028   .text.read_source_layers_cache:0000000000000000 read_source_layers_cache
     /tmp/ccupYzX1.s:1127   .text.layer_switch_get_layer:0000000000000000 layer_switch_get_layer
     /tmp/ccupYzX1.s:1274   .text.layer_switch_get_action:0000000000000000 layer_switch_get_action
     /tmp/ccupYzX1.s:1319   .text.store_or_get_action:0000000000000000 store_or_get_action

UNDEFINED SYMBOLS
clear_keyboard_but_mods
action_for_key
disable_action_cache
__do_clear_bss
