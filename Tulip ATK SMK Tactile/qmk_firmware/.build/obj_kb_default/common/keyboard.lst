   1               		.file	"keyboard.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.text.matrix_setup,"ax",@progbits
  12               		.weak	matrix_setup
  14               	matrix_setup:
  15               	.LFB103:
  16               		.file 1 "./tmk_core/common/keyboard.c"
   1:./tmk_core/common/keyboard.c **** /*
   2:./tmk_core/common/keyboard.c **** Copyright 2011, 2012, 2013 Jun Wako <wakojun@gmail.com>
   3:./tmk_core/common/keyboard.c **** 
   4:./tmk_core/common/keyboard.c **** This program is free software: you can redistribute it and/or modify
   5:./tmk_core/common/keyboard.c **** it under the terms of the GNU General Public License as published by
   6:./tmk_core/common/keyboard.c **** the Free Software Foundation, either version 2 of the License, or
   7:./tmk_core/common/keyboard.c **** (at your option) any later version.
   8:./tmk_core/common/keyboard.c **** 
   9:./tmk_core/common/keyboard.c **** This program is distributed in the hope that it will be useful,
  10:./tmk_core/common/keyboard.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:./tmk_core/common/keyboard.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:./tmk_core/common/keyboard.c **** GNU General Public License for more details.
  13:./tmk_core/common/keyboard.c **** 
  14:./tmk_core/common/keyboard.c **** You should have received a copy of the GNU General Public License
  15:./tmk_core/common/keyboard.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:./tmk_core/common/keyboard.c **** */
  17:./tmk_core/common/keyboard.c **** #include <stdint.h>
  18:./tmk_core/common/keyboard.c **** #include "keyboard.h"
  19:./tmk_core/common/keyboard.c **** #include "matrix.h"
  20:./tmk_core/common/keyboard.c **** #include "keymap.h"
  21:./tmk_core/common/keyboard.c **** #include "host.h"
  22:./tmk_core/common/keyboard.c **** #include "led.h"
  23:./tmk_core/common/keyboard.c **** #include "keycode.h"
  24:./tmk_core/common/keyboard.c **** #include "timer.h"
  25:./tmk_core/common/keyboard.c **** #include "print.h"
  26:./tmk_core/common/keyboard.c **** #include "debug.h"
  27:./tmk_core/common/keyboard.c **** #include "command.h"
  28:./tmk_core/common/keyboard.c **** #include "util.h"
  29:./tmk_core/common/keyboard.c **** #include "sendchar.h"
  30:./tmk_core/common/keyboard.c **** #include "eeconfig.h"
  31:./tmk_core/common/keyboard.c **** #include "backlight.h"
  32:./tmk_core/common/keyboard.c **** #include "action_layer.h"
  33:./tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
  34:./tmk_core/common/keyboard.c **** #   include "bootmagic.h"
  35:./tmk_core/common/keyboard.c **** #else
  36:./tmk_core/common/keyboard.c **** #   include "magic.h"
  37:./tmk_core/common/keyboard.c **** #endif
  38:./tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
  39:./tmk_core/common/keyboard.c **** #   include "mousekey.h"
  40:./tmk_core/common/keyboard.c **** #endif
  41:./tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  42:./tmk_core/common/keyboard.c **** #   include "ps2_mouse.h"
  43:./tmk_core/common/keyboard.c **** #endif
  44:./tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  45:./tmk_core/common/keyboard.c **** #   include "serial_mouse.h"
  46:./tmk_core/common/keyboard.c **** #endif
  47:./tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  48:./tmk_core/common/keyboard.c **** #   include "adb.h"
  49:./tmk_core/common/keyboard.c **** #endif
  50:./tmk_core/common/keyboard.c **** #ifdef RGBLIGHT_ENABLE
  51:./tmk_core/common/keyboard.c **** #   include "rgblight.h"
  52:./tmk_core/common/keyboard.c **** #endif
  53:./tmk_core/common/keyboard.c **** #ifdef SERIAL_LINK_ENABLE
  54:./tmk_core/common/keyboard.c **** #   include "serial_link/system/serial_link.h"
  55:./tmk_core/common/keyboard.c **** #endif
  56:./tmk_core/common/keyboard.c **** #ifdef VISUALIZER_ENABLE
  57:./tmk_core/common/keyboard.c **** #   include "visualizer/visualizer.h"
  58:./tmk_core/common/keyboard.c **** #endif
  59:./tmk_core/common/keyboard.c **** 
  60:./tmk_core/common/keyboard.c **** 
  61:./tmk_core/common/keyboard.c **** 
  62:./tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
  63:./tmk_core/common/keyboard.c **** static bool has_ghost_in_row(uint8_t row)
  64:./tmk_core/common/keyboard.c **** {
  65:./tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = matrix_get_row(row);
  66:./tmk_core/common/keyboard.c ****     // No ghost exists when less than 2 keys are down on the row
  67:./tmk_core/common/keyboard.c ****     if (((matrix_row - 1) & matrix_row) == 0)
  68:./tmk_core/common/keyboard.c ****         return false;
  69:./tmk_core/common/keyboard.c **** 
  70:./tmk_core/common/keyboard.c ****     // Ghost occurs when the row shares column line with other row
  71:./tmk_core/common/keyboard.c ****     for (uint8_t i=0; i < MATRIX_ROWS; i++) {
  72:./tmk_core/common/keyboard.c ****         if (i != row && (matrix_get_row(i) & matrix_row))
  73:./tmk_core/common/keyboard.c ****             return true;
  74:./tmk_core/common/keyboard.c ****     }
  75:./tmk_core/common/keyboard.c ****     return false;
  76:./tmk_core/common/keyboard.c **** }
  77:./tmk_core/common/keyboard.c **** #endif
  78:./tmk_core/common/keyboard.c **** 
  79:./tmk_core/common/keyboard.c **** __attribute__ ((weak))
  80:./tmk_core/common/keyboard.c **** void matrix_setup(void) {
  17               		.loc 1 80 25 view -0
  18               		.cfi_startproc
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  81:./tmk_core/common/keyboard.c **** }
  23               		.loc 1 81 1 view .LVU1
  24               	/* epilogue start */
  25 0000 0895      		ret
  26               		.cfi_endproc
  27               	.LFE103:
  29               		.section	.text.keyboard_setup,"ax",@progbits
  30               	.global	keyboard_setup
  32               	keyboard_setup:
  33               	.LFB104:
  82:./tmk_core/common/keyboard.c **** 
  83:./tmk_core/common/keyboard.c **** void keyboard_setup(void) {
  34               		.loc 1 83 27 view -0
  35               		.cfi_startproc
  36               	/* prologue: function */
  37               	/* frame size = 0 */
  38               	/* stack size = 0 */
  39               	.L__stack_usage = 0
  84:./tmk_core/common/keyboard.c ****     matrix_setup();
  40               		.loc 1 84 5 view .LVU3
  41 0000 0C94 0000 		jmp matrix_setup
  42               	.LVL0:
  43               		.cfi_endproc
  44               	.LFE104:
  46               		.section	.text.keyboard_init,"ax",@progbits
  47               	.global	keyboard_init
  49               	keyboard_init:
  50               	.LFB105:
  85:./tmk_core/common/keyboard.c **** }
  86:./tmk_core/common/keyboard.c **** 
  87:./tmk_core/common/keyboard.c **** void keyboard_init(void) {
  51               		.loc 1 87 26 view -0
  52               		.cfi_startproc
  53               	/* prologue: function */
  54               	/* frame size = 0 */
  55               	/* stack size = 0 */
  56               	.L__stack_usage = 0
  88:./tmk_core/common/keyboard.c ****     timer_init();
  57               		.loc 1 88 5 view .LVU5
  58 0000 0E94 0000 		call timer_init
  59               	.LVL1:
  89:./tmk_core/common/keyboard.c ****     matrix_init();
  60               		.loc 1 89 5 view .LVU6
  61 0004 0E94 0000 		call matrix_init
  62               	.LVL2:
  90:./tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  91:./tmk_core/common/keyboard.c ****     ps2_mouse_init();
  92:./tmk_core/common/keyboard.c **** #endif
  93:./tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  94:./tmk_core/common/keyboard.c ****     serial_mouse_init();
  95:./tmk_core/common/keyboard.c **** #endif
  96:./tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  97:./tmk_core/common/keyboard.c ****     adb_mouse_init();
  98:./tmk_core/common/keyboard.c **** #endif
  99:./tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
 100:./tmk_core/common/keyboard.c ****     bootmagic();
  63               		.loc 1 100 5 view .LVU7
  64 0008 0C94 0000 		jmp bootmagic
  65               	.LVL3:
  66               		.cfi_endproc
  67               	.LFE105:
  69               		.section	.text.keyboard_task,"ax",@progbits
  70               	.global	keyboard_task
  72               	keyboard_task:
  73               	.LFB106:
 101:./tmk_core/common/keyboard.c **** #else
 102:./tmk_core/common/keyboard.c ****     magic();
 103:./tmk_core/common/keyboard.c **** #endif
 104:./tmk_core/common/keyboard.c **** #ifdef BACKLIGHT_ENABLE
 105:./tmk_core/common/keyboard.c ****     backlight_init();
 106:./tmk_core/common/keyboard.c **** #endif
 107:./tmk_core/common/keyboard.c **** #ifdef RGBLIGHT_ENABLE
 108:./tmk_core/common/keyboard.c ****     rgblight_init();
 109:./tmk_core/common/keyboard.c **** #endif
 110:./tmk_core/common/keyboard.c **** #if defined(NKRO_ENABLE) && defined(FORCE_NKRO)
 111:./tmk_core/common/keyboard.c ****     keymap_config.nkro = 1;
 112:./tmk_core/common/keyboard.c **** #endif
 113:./tmk_core/common/keyboard.c **** }
 114:./tmk_core/common/keyboard.c **** 
 115:./tmk_core/common/keyboard.c **** /*
 116:./tmk_core/common/keyboard.c ****  * Do keyboard routine jobs: scan mantrix, light LEDs, ...
 117:./tmk_core/common/keyboard.c ****  * This is repeatedly called as fast as possible.
 118:./tmk_core/common/keyboard.c ****  */
 119:./tmk_core/common/keyboard.c **** void keyboard_task(void)
 120:./tmk_core/common/keyboard.c **** {
  74               		.loc 1 120 1 view -0
  75               		.cfi_startproc
  76 0000 7F92      		push r7
  77               	.LCFI0:
  78               		.cfi_def_cfa_offset 3
  79               		.cfi_offset 7, -2
  80 0002 8F92      		push r8
  81               	.LCFI1:
  82               		.cfi_def_cfa_offset 4
  83               		.cfi_offset 8, -3
  84 0004 9F92      		push r9
  85               	.LCFI2:
  86               		.cfi_def_cfa_offset 5
  87               		.cfi_offset 9, -4
  88 0006 AF92      		push r10
  89               	.LCFI3:
  90               		.cfi_def_cfa_offset 6
  91               		.cfi_offset 10, -5
  92 0008 BF92      		push r11
  93               	.LCFI4:
  94               		.cfi_def_cfa_offset 7
  95               		.cfi_offset 11, -6
  96 000a CF92      		push r12
  97               	.LCFI5:
  98               		.cfi_def_cfa_offset 8
  99               		.cfi_offset 12, -7
 100 000c DF92      		push r13
 101               	.LCFI6:
 102               		.cfi_def_cfa_offset 9
 103               		.cfi_offset 13, -8
 104 000e EF92      		push r14
 105               	.LCFI7:
 106               		.cfi_def_cfa_offset 10
 107               		.cfi_offset 14, -9
 108 0010 FF92      		push r15
 109               	.LCFI8:
 110               		.cfi_def_cfa_offset 11
 111               		.cfi_offset 15, -10
 112 0012 0F93      		push r16
 113               	.LCFI9:
 114               		.cfi_def_cfa_offset 12
 115               		.cfi_offset 16, -11
 116 0014 1F93      		push r17
 117               	.LCFI10:
 118               		.cfi_def_cfa_offset 13
 119               		.cfi_offset 17, -12
 120 0016 CF93      		push r28
 121               	.LCFI11:
 122               		.cfi_def_cfa_offset 14
 123               		.cfi_offset 28, -13
 124 0018 DF93      		push r29
 125               	.LCFI12:
 126               		.cfi_def_cfa_offset 15
 127               		.cfi_offset 29, -14
 128 001a 00D0      		rcall .
 129 001c 00D0      		rcall .
 130 001e 0F92      		push __tmp_reg__
 131               	.LCFI13:
 132               		.cfi_def_cfa_offset 20
 133 0020 CDB7      		in r28,__SP_L__
 134 0022 DEB7      		in r29,__SP_H__
 135               	.LCFI14:
 136               		.cfi_def_cfa_register 28
 137               	/* prologue: function */
 138               	/* frame size = 5 */
 139               	/* stack size = 18 */
 140               	.L__stack_usage = 18
 121:./tmk_core/common/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 141               		.loc 1 121 5 view .LVU9
 122:./tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 123:./tmk_core/common/keyboard.c ****     static matrix_row_t matrix_ghost[MATRIX_ROWS];
 124:./tmk_core/common/keyboard.c **** #endif
 125:./tmk_core/common/keyboard.c ****     static uint8_t led_status = 0;
 142               		.loc 1 125 5 view .LVU10
 126:./tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = 0;
 143               		.loc 1 126 5 view .LVU11
 144               	.LVL4:
 127:./tmk_core/common/keyboard.c ****     matrix_row_t matrix_change = 0;
 145               		.loc 1 127 5 view .LVU12
 128:./tmk_core/common/keyboard.c **** 
 129:./tmk_core/common/keyboard.c ****     matrix_scan();
 146               		.loc 1 129 5 view .LVU13
 147 0024 0E94 0000 		call matrix_scan
 148               	.LVL5:
 130:./tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 149               		.loc 1 130 5 view .LVU14
 150               	.LBB7:
 151               		.loc 1 130 10 view .LVU15
 152               		.loc 1 130 27 view .LVU16
 153 0028 90E0      		ldi r25,lo8(matrix_prev.1)
 154 002a A92E      		mov r10,r25
 155 002c 90E0      		ldi r25,hi8(matrix_prev.1)
 156 002e B92E      		mov r11,r25
 157               	.LBE7:
 129:./tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 158               		.loc 1 129 5 is_stmt 0 view .LVU17
 159 0030 10E0      		ldi r17,0
 160 0032 00E0      		ldi r16,0
 161               	.LBB13:
 162               	.LBB8:
 131:./tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 132:./tmk_core/common/keyboard.c ****         matrix_change = matrix_row ^ matrix_prev[r];
 133:./tmk_core/common/keyboard.c ****         if (matrix_change) {
 134:./tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 135:./tmk_core/common/keyboard.c ****             if (has_ghost_in_row(r)) {
 136:./tmk_core/common/keyboard.c ****                 /* Keep track of whether ghosted status has changed for
 137:./tmk_core/common/keyboard.c ****                  * debugging. But don't update matrix_prev until un-ghosted, or
 138:./tmk_core/common/keyboard.c ****                  * the last key would be lost.
 139:./tmk_core/common/keyboard.c ****                  */
 140:./tmk_core/common/keyboard.c ****                 if (debug_matrix && matrix_ghost[r] != matrix_row) {
 141:./tmk_core/common/keyboard.c ****                     matrix_print();
 142:./tmk_core/common/keyboard.c ****                 }
 143:./tmk_core/common/keyboard.c ****                 matrix_ghost[r] = matrix_row;
 144:./tmk_core/common/keyboard.c ****                 continue;
 145:./tmk_core/common/keyboard.c ****             }
 146:./tmk_core/common/keyboard.c ****             matrix_ghost[r] = matrix_row;
 147:./tmk_core/common/keyboard.c **** #endif
 148:./tmk_core/common/keyboard.c ****             if (debug_matrix) matrix_print();
 149:./tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 150:./tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 163               		.loc 1 150 53 view .LVU18
 164 0034 8824      		clr r8
 165 0036 8394      		inc r8
 166 0038 912C      		mov r9,__zero_reg__
 167               	.LVL6:
 168               	.L11:
 169               		.loc 1 150 53 view .LVU19
 170 003a 702E      		mov r7,r16
 171               	.LVL7:
 172               		.loc 1 150 53 view .LVU20
 173               	.LBE8:
 131:./tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 174               		.loc 1 131 9 is_stmt 1 view .LVU21
 131:./tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 175               		.loc 1 131 22 is_stmt 0 view .LVU22
 176 003c 802F      		mov r24,r16
 177 003e 0E94 0000 		call matrix_get_row
 178               	.LVL8:
 179 0042 7C01      		movw r14,r24
 180               	.LVL9:
 132:./tmk_core/common/keyboard.c ****         if (matrix_change) {
 181               		.loc 1 132 9 is_stmt 1 view .LVU23
 132:./tmk_core/common/keyboard.c ****         if (matrix_change) {
 182               		.loc 1 132 49 is_stmt 0 view .LVU24
 183 0044 F501      		movw r30,r10
 184 0046 C190      		ld r12,Z+
 185 0048 D190      		ld r13,Z+
 186 004a 5F01      		movw r10,r30
 187               	.LVL10:
 133:./tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 188               		.loc 1 133 9 is_stmt 1 view .LVU25
 133:./tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 189               		.loc 1 133 12 is_stmt 0 view .LVU26
 190 004c C816      		cp r12,r24
 191 004e D906      		cpc r13,r25
 192 0050 01F4      		brne .+2
 193 0052 00C0      		rjmp .L5
 148:./tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 194               		.loc 1 148 13 is_stmt 1 view .LVU27
 148:./tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 195               		.loc 1 148 17 is_stmt 0 view .LVU28
 196 0054 8091 0000 		lds r24,debug_config
 148:./tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 197               		.loc 1 148 16 view .LVU29
 198 0058 81FD      		sbrc r24,1
 148:./tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 199               		.loc 1 148 31 is_stmt 1 discriminator 1 view .LVU30
 200 005a 0E94 0000 		call matrix_print
 201               	.LVL11:
 202               	.L6:
 132:./tmk_core/common/keyboard.c ****         if (matrix_change) {
 203               		.loc 1 132 23 is_stmt 0 view .LVU31
 204 005e 9601      		movw r18,r12
 205 0060 2E25      		eor r18,r14
 206 0062 3F25      		eor r19,r15
 149:./tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 207               		.loc 1 149 13 is_stmt 1 view .LVU32
 208               	.LBB10:
 149:./tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 209               		.loc 1 149 18 view .LVU33
 210               	.LVL12:
 149:./tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 211               		.loc 1 149 35 view .LVU34
 212               	.LBE10:
 132:./tmk_core/common/keyboard.c ****         if (matrix_change) {
 213               		.loc 1 132 23 is_stmt 0 view .LVU35
 214 0064 90E0      		ldi r25,0
 215 0066 80E0      		ldi r24,0
 216               	.LVL13:
 217               	.L10:
 218               	.LBB11:
 219               		.loc 1 150 17 is_stmt 1 view .LVU36
 220               		.loc 1 150 53 is_stmt 0 view .LVU37
 221 0068 6401      		movw r12,r8
 222 006a 082E      		mov r0,r24
 223 006c 00C0      		rjmp 2f
 224               		1:
 225 006e CC0C      		lsl r12
 226 0070 DD1C      		rol r13
 227               		2:
 228 0072 0A94      		dec r0
 229 0074 02F4      		brpl 1b
 230               		.loc 1 150 35 view .LVU38
 231 0076 A601      		movw r20,r12
 232 0078 4223      		and r20,r18
 233 007a 5323      		and r21,r19
 234               		.loc 1 150 20 view .LVU39
 235 007c 452B      		or r20,r21
 236 007e 01F4      		brne .+2
 237 0080 00C0      		rjmp .L7
 238               	.LBB9:
 151:./tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 239               		.loc 1 151 21 is_stmt 1 view .LVU40
 240               		.loc 1 151 45 is_stmt 0 view .LVU41
 241 0082 8983      		std Y+1,r24
 242 0084 7A82      		std Y+2,r7
 152:./tmk_core/common/keyboard.c ****                         .key = (keypos_t){ .row = r, .col = c },
 153:./tmk_core/common/keyboard.c ****                         .pressed = (matrix_row & ((matrix_row_t)1<<c)),
 243               		.loc 1 153 48 view .LVU42
 244 0086 EC20      		and r14,r12
 245               	.LVL14:
 246               		.loc 1 153 48 view .LVU43
 247 0088 FD20      		and r15,r13
 248 008a 81E0      		ldi r24,lo8(1)
 249               	.LVL15:
 250               		.loc 1 153 48 view .LVU44
 251 008c EF28      		or r14,r15
 252 008e 01F4      		brne .L8
 253 0090 80E0      		ldi r24,0
 254               	.L8:
 151:./tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 255               		.loc 1 151 45 view .LVU45
 256 0092 8B83      		std Y+3,r24
 154:./tmk_core/common/keyboard.c ****                         .time = (timer_read() | 1) /* time should not be 0 */
 257               		.loc 1 154 34 view .LVU46
 258 0094 0E94 0000 		call timer_read
 259               	.LVL16:
 260               		.loc 1 154 47 view .LVU47
 261 0098 8160      		ori r24,1
 151:./tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 262               		.loc 1 151 45 view .LVU48
 263 009a 782F      		mov r23,r24
 264 009c 9D83      		std Y+5,r25
 265 009e 8C83      		std Y+4,r24
 151:./tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 266               		.loc 1 151 21 view .LVU49
 267 00a0 4981      		ldd r20,Y+1
 268 00a2 5A81      		ldd r21,Y+2
 269 00a4 6B81      		ldd r22,Y+3
 270 00a6 892F      		mov r24,r25
 271 00a8 0E94 0000 		call action_exec
 272               	.LVL17:
 155:./tmk_core/common/keyboard.c ****                     });
 156:./tmk_core/common/keyboard.c ****                     // record a processed key
 157:./tmk_core/common/keyboard.c ****                     matrix_prev[r] ^= ((matrix_row_t)1<<c);
 273               		.loc 1 157 21 is_stmt 1 view .LVU50
 274               		.loc 1 157 36 is_stmt 0 view .LVU51
 275 00ac 000F      		lsl r16
 276 00ae 111F      		rol r17
 277               	.LVL18:
 278               		.loc 1 157 36 view .LVU52
 279 00b0 F801      		movw r30,r16
 280 00b2 E050      		subi r30,lo8(-(matrix_prev.1))
 281 00b4 F040      		sbci r31,hi8(-(matrix_prev.1))
 282 00b6 8081      		ld r24,Z
 283 00b8 9181      		ldd r25,Z+1
 284 00ba 8C25      		eor r24,r12
 285 00bc 9D25      		eor r25,r13
 286 00be 9183      		std Z+1,r25
 287 00c0 8083      		st Z,r24
 158:./tmk_core/common/keyboard.c ****                     // process a key per task call
 159:./tmk_core/common/keyboard.c ****                     goto MATRIX_LOOP_END;
 288               		.loc 1 159 21 is_stmt 1 view .LVU53
 289               	.L9:
 290               		.loc 1 159 21 is_stmt 0 view .LVU54
 291               	.LBE9:
 292               	.LBE11:
 293               	.LBE13:
 160:./tmk_core/common/keyboard.c ****                 }
 161:./tmk_core/common/keyboard.c ****             }
 162:./tmk_core/common/keyboard.c ****         }
 163:./tmk_core/common/keyboard.c ****     }
 164:./tmk_core/common/keyboard.c ****     // call with pseudo tick event when no real key event.
 165:./tmk_core/common/keyboard.c ****     action_exec(TICK);
 166:./tmk_core/common/keyboard.c **** 
 167:./tmk_core/common/keyboard.c **** MATRIX_LOOP_END:
 168:./tmk_core/common/keyboard.c **** 
 169:./tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
 170:./tmk_core/common/keyboard.c ****     // mousekey repeat & acceleration
 171:./tmk_core/common/keyboard.c ****     mousekey_task();
 294               		.loc 1 171 5 is_stmt 1 view .LVU55
 295 00c2 0E94 0000 		call mousekey_task
 296               	.LVL19:
 172:./tmk_core/common/keyboard.c **** #endif
 173:./tmk_core/common/keyboard.c **** 
 174:./tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
 175:./tmk_core/common/keyboard.c ****     ps2_mouse_task();
 176:./tmk_core/common/keyboard.c **** #endif
 177:./tmk_core/common/keyboard.c **** 
 178:./tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
 179:./tmk_core/common/keyboard.c ****     serial_mouse_task();
 180:./tmk_core/common/keyboard.c **** #endif
 181:./tmk_core/common/keyboard.c **** 
 182:./tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
 183:./tmk_core/common/keyboard.c ****     adb_mouse_task();
 184:./tmk_core/common/keyboard.c **** #endif
 185:./tmk_core/common/keyboard.c **** 
 186:./tmk_core/common/keyboard.c **** #ifdef SERIAL_LINK_ENABLE
 187:./tmk_core/common/keyboard.c **** 	serial_link_update();
 188:./tmk_core/common/keyboard.c **** #endif
 189:./tmk_core/common/keyboard.c **** 
 190:./tmk_core/common/keyboard.c **** #ifdef VISUALIZER_ENABLE
 191:./tmk_core/common/keyboard.c ****     visualizer_update(default_layer_state, layer_state, host_keyboard_leds());
 192:./tmk_core/common/keyboard.c **** #endif
 193:./tmk_core/common/keyboard.c **** 
 194:./tmk_core/common/keyboard.c ****     // update LED
 195:./tmk_core/common/keyboard.c ****     if (led_status != host_keyboard_leds()) {
 297               		.loc 1 195 5 view .LVU56
 298               		.loc 1 195 23 is_stmt 0 view .LVU57
 299 00c6 0E94 0000 		call host_keyboard_leds
 300               	.LVL20:
 301               		.loc 1 195 8 view .LVU58
 302 00ca 9091 0000 		lds r25,led_status.0
 303 00ce 8917      		cp r24,r25
 304 00d0 01F0      		breq .L4
 196:./tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 305               		.loc 1 196 9 is_stmt 1 view .LVU59
 306               		.loc 1 196 22 is_stmt 0 view .LVU60
 307 00d2 0E94 0000 		call host_keyboard_leds
 308               	.LVL21:
 309               		.loc 1 196 20 view .LVU61
 310 00d6 8093 0000 		sts led_status.0,r24
 197:./tmk_core/common/keyboard.c ****         keyboard_set_leds(led_status);
 311               		.loc 1 197 9 is_stmt 1 view .LVU62
 312               	.LVL22:
 313               	.LBB14:
 314               	.LBI14:
 198:./tmk_core/common/keyboard.c ****     }
 199:./tmk_core/common/keyboard.c **** }
 200:./tmk_core/common/keyboard.c **** 
 201:./tmk_core/common/keyboard.c **** void keyboard_set_leds(uint8_t leds)
 315               		.loc 1 201 6 view .LVU63
 316               	.LBB15:
 202:./tmk_core/common/keyboard.c **** {
 203:./tmk_core/common/keyboard.c ****     if (debug_keyboard) { debug("keyboard_set_led: "); debug_hex8(leds); debug("\n"); }
 317               		.loc 1 203 5 view .LVU64
 318               		.loc 1 203 54 view .LVU65
 319               		.loc 1 203 72 view .LVU66
 320               		.loc 1 203 85 view .LVU67
 204:./tmk_core/common/keyboard.c ****     led_set(leds);
 321               		.loc 1 204 5 view .LVU68
 322               	/* epilogue start */
 323               	.LBE15:
 324               	.LBE14:
 199:./tmk_core/common/keyboard.c **** 
 325               		.loc 1 199 1 is_stmt 0 view .LVU69
 326 00da 0F90      		pop __tmp_reg__
 327 00dc 0F90      		pop __tmp_reg__
 328 00de 0F90      		pop __tmp_reg__
 329 00e0 0F90      		pop __tmp_reg__
 330 00e2 0F90      		pop __tmp_reg__
 331 00e4 DF91      		pop r29
 332 00e6 CF91      		pop r28
 333 00e8 1F91      		pop r17
 334 00ea 0F91      		pop r16
 335 00ec FF90      		pop r15
 336 00ee EF90      		pop r14
 337 00f0 DF90      		pop r13
 338 00f2 CF90      		pop r12
 339 00f4 BF90      		pop r11
 340 00f6 AF90      		pop r10
 341 00f8 9F90      		pop r9
 342 00fa 8F90      		pop r8
 343 00fc 7F90      		pop r7
 344               	.LBB17:
 345               	.LBB16:
 346               		.loc 1 204 5 view .LVU70
 347 00fe 0C94 0000 		jmp led_set
 348               	.LVL23:
 349               	.L7:
 350               		.loc 1 204 5 view .LVU71
 351               	.LBE16:
 352               	.LBE17:
 353               	.LBB18:
 354               	.LBB12:
 149:./tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 355               		.loc 1 149 51 is_stmt 1 discriminator 2 view .LVU72
 149:./tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 356               		.loc 1 149 35 discriminator 2 view .LVU73
 357 0102 0196      		adiw r24,1
 358               	.LVL24:
 149:./tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 359               		.loc 1 149 35 is_stmt 0 discriminator 2 view .LVU74
 360 0104 8031      		cpi r24,16
 361 0106 9105      		cpc r25,__zero_reg__
 362 0108 01F0      		breq .+2
 363 010a 00C0      		rjmp .L10
 364               	.LVL25:
 365               	.L5:
 149:./tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 366               		.loc 1 149 35 discriminator 2 view .LVU75
 367               	.LBE12:
 130:./tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 368               		.loc 1 130 43 is_stmt 1 view .LVU76
 130:./tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 369               		.loc 1 130 27 view .LVU77
 370 010c 0F5F      		subi r16,-1
 371 010e 1F4F      		sbci r17,-1
 372               	.LVL26:
 130:./tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 373               		.loc 1 130 27 is_stmt 0 view .LVU78
 374 0110 0830      		cpi r16,8
 375 0112 1105      		cpc r17,__zero_reg__
 376 0114 01F0      		breq .+2
 377 0116 00C0      		rjmp .L11
 378               	.LBE18:
 165:./tmk_core/common/keyboard.c **** 
 379               		.loc 1 165 5 is_stmt 1 view .LVU79
 165:./tmk_core/common/keyboard.c **** 
 380               		.loc 1 165 17 is_stmt 0 view .LVU80
 381 0118 8FEF      		ldi r24,lo8(-1)
 382 011a 8983      		std Y+1,r24
 383 011c 8A83      		std Y+2,r24
 384 011e 1B82      		std Y+3,__zero_reg__
 385 0120 0E94 0000 		call timer_read
 386               	.LVL27:
 387 0124 8160      		ori r24,1
 388 0126 782F      		mov r23,r24
 389 0128 9D83      		std Y+5,r25
 390 012a 8C83      		std Y+4,r24
 165:./tmk_core/common/keyboard.c **** 
 391               		.loc 1 165 5 view .LVU81
 392 012c 4981      		ldd r20,Y+1
 393 012e 5A81      		ldd r21,Y+2
 394 0130 6B81      		ldd r22,Y+3
 395 0132 892F      		mov r24,r25
 396 0134 0E94 0000 		call action_exec
 397               	.LVL28:
 398 0138 00C0      		rjmp .L9
 399               	.LVL29:
 400               	.L4:
 401               	/* epilogue start */
 199:./tmk_core/common/keyboard.c **** 
 402               		.loc 1 199 1 view .LVU82
 403 013a 0F90      		pop __tmp_reg__
 404 013c 0F90      		pop __tmp_reg__
 405 013e 0F90      		pop __tmp_reg__
 406 0140 0F90      		pop __tmp_reg__
 407 0142 0F90      		pop __tmp_reg__
 408 0144 DF91      		pop r29
 409 0146 CF91      		pop r28
 410 0148 1F91      		pop r17
 411 014a 0F91      		pop r16
 412 014c FF90      		pop r15
 413 014e EF90      		pop r14
 414 0150 DF90      		pop r13
 415 0152 CF90      		pop r12
 416 0154 BF90      		pop r11
 417 0156 AF90      		pop r10
 418 0158 9F90      		pop r9
 419 015a 8F90      		pop r8
 420 015c 7F90      		pop r7
 421 015e 0895      		ret
 422               		.cfi_endproc
 423               	.LFE106:
 425               		.section	.text.keyboard_set_leds,"ax",@progbits
 426               	.global	keyboard_set_leds
 428               	keyboard_set_leds:
 429               	.LVL30:
 430               	.LFB107:
 202:./tmk_core/common/keyboard.c ****     if (debug_keyboard) { debug("keyboard_set_led: "); debug_hex8(leds); debug("\n"); }
 431               		.loc 1 202 1 is_stmt 1 view -0
 432               		.cfi_startproc
 433               	/* prologue: function */
 434               	/* frame size = 0 */
 435               	/* stack size = 0 */
 436               	.L__stack_usage = 0
 203:./tmk_core/common/keyboard.c ****     led_set(leds);
 437               		.loc 1 203 5 view .LVU84
 203:./tmk_core/common/keyboard.c ****     led_set(leds);
 438               		.loc 1 203 54 view .LVU85
 203:./tmk_core/common/keyboard.c ****     led_set(leds);
 439               		.loc 1 203 72 view .LVU86
 203:./tmk_core/common/keyboard.c ****     led_set(leds);
 440               		.loc 1 203 85 view .LVU87
 441               		.loc 1 204 5 view .LVU88
 442 0000 0C94 0000 		jmp led_set
 443               	.LVL31:
 444               		.loc 1 204 5 is_stmt 0 view .LVU89
 445               		.cfi_endproc
 446               	.LFE107:
 448               		.section	.bss.led_status.0,"aw",@nobits
 451               	led_status.0:
 452 0000 00        		.zero	1
 453               		.section	.bss.matrix_prev.1,"aw",@nobits
 456               	matrix_prev.1:
 457 0000 0000 0000 		.zero	16
 457      0000 0000 
 457      0000 0000 
 457      0000 0000 
 458               		.text
 459               	.Letext0:
 460               		.file 2 "/usr/avr/include/stdint.h"
 461               		.file 3 "./tmk_core/common/keyboard.h"
 462               		.file 4 "./tmk_core/common/matrix.h"
 463               		.file 5 "./tmk_core/common/debug.h"
 464               		.file 6 "./tmk_core/common/led.h"
 465               		.file 7 "./tmk_core/common/action.h"
 466               		.file 8 "./tmk_core/common/host.h"
 467               		.file 9 "./tmk_core/common/timer.h"
 468               		.file 10 "./tmk_core/common/mousekey.h"
 469               		.file 11 "./tmk_core/common/bootmagic.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keyboard.c
     /tmp/ccBEYB4q.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccBEYB4q.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccBEYB4q.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccBEYB4q.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/ccBEYB4q.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccBEYB4q.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccBEYB4q.s:14     .text.matrix_setup:0000000000000000 matrix_setup
     /tmp/ccBEYB4q.s:32     .text.keyboard_setup:0000000000000000 keyboard_setup
     /tmp/ccBEYB4q.s:49     .text.keyboard_init:0000000000000000 keyboard_init
     /tmp/ccBEYB4q.s:72     .text.keyboard_task:0000000000000000 keyboard_task
     /tmp/ccBEYB4q.s:456    .bss.matrix_prev.1:0000000000000000 matrix_prev.1
     /tmp/ccBEYB4q.s:451    .bss.led_status.0:0000000000000000 led_status.0
     /tmp/ccBEYB4q.s:428    .text.keyboard_set_leds:0000000000000000 keyboard_set_leds

UNDEFINED SYMBOLS
timer_init
matrix_init
bootmagic
matrix_scan
matrix_get_row
debug_config
matrix_print
timer_read
action_exec
mousekey_task
host_keyboard_leds
led_set
__do_clear_bss
