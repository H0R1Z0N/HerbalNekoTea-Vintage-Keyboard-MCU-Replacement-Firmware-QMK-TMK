   1               		.file	"keymap_common.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.action_get_macro,"ax",@progbits
  11               		.weak	action_get_macro
  13               	action_get_macro:
  14               	.LVL0:
  15               	.LFB26:
  16               		.file 1 "quantum/keymap_common.c"
   1:quantum/keymap_common.c **** /*
   2:quantum/keymap_common.c **** Copyright 2012-2017 Jun Wako <wakojun@gmail.com>
   3:quantum/keymap_common.c **** 
   4:quantum/keymap_common.c **** This program is free software: you can redistribute it and/or modify
   5:quantum/keymap_common.c **** it under the terms of the GNU General Public License as published by
   6:quantum/keymap_common.c **** the Free Software Foundation, either version 2 of the License, or
   7:quantum/keymap_common.c **** (at your option) any later version.
   8:quantum/keymap_common.c **** 
   9:quantum/keymap_common.c **** This program is distributed in the hope that it will be useful,
  10:quantum/keymap_common.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:quantum/keymap_common.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:quantum/keymap_common.c **** GNU General Public License for more details.
  13:quantum/keymap_common.c **** 
  14:quantum/keymap_common.c **** You should have received a copy of the GNU General Public License
  15:quantum/keymap_common.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:quantum/keymap_common.c **** */
  17:quantum/keymap_common.c **** 
  18:quantum/keymap_common.c **** #include "keymap.h"
  19:quantum/keymap_common.c **** #include "report.h"
  20:quantum/keymap_common.c **** #include "keycode.h"
  21:quantum/keymap_common.c **** #include "action_layer.h"
  22:quantum/keymap_common.c **** #if defined(__AVR__)
  23:quantum/keymap_common.c **** #    include <util/delay.h>
  24:quantum/keymap_common.c **** #    include <stdio.h>
  25:quantum/keymap_common.c **** #endif
  26:quantum/keymap_common.c **** #include "action.h"
  27:quantum/keymap_common.c **** #include "action_macro.h"
  28:quantum/keymap_common.c **** #include "debug.h"
  29:quantum/keymap_common.c **** #include "quantum.h"
  30:quantum/keymap_common.c **** 
  31:quantum/keymap_common.c **** #ifdef BACKLIGHT_ENABLE
  32:quantum/keymap_common.c **** #    include "backlight.h"
  33:quantum/keymap_common.c **** #endif
  34:quantum/keymap_common.c **** 
  35:quantum/keymap_common.c **** #ifdef MIDI_ENABLE
  36:quantum/keymap_common.c **** #    include "process_midi.h"
  37:quantum/keymap_common.c **** #endif
  38:quantum/keymap_common.c **** 
  39:quantum/keymap_common.c **** extern keymap_config_t keymap_config;
  40:quantum/keymap_common.c **** 
  41:quantum/keymap_common.c **** #include <inttypes.h>
  42:quantum/keymap_common.c **** 
  43:quantum/keymap_common.c **** /* converts key to action */
  44:quantum/keymap_common.c **** action_t action_for_key(uint8_t layer, keypos_t key) {
  45:quantum/keymap_common.c ****     // 16bit keycodes - important
  46:quantum/keymap_common.c ****     uint16_t keycode = keymap_key_to_keycode(layer, key);
  47:quantum/keymap_common.c **** 
  48:quantum/keymap_common.c ****     // keycode remapping
  49:quantum/keymap_common.c ****     keycode = keycode_config(keycode);
  50:quantum/keymap_common.c **** 
  51:quantum/keymap_common.c ****     action_t action = {};
  52:quantum/keymap_common.c ****     uint8_t  action_layer, when, mod;
  53:quantum/keymap_common.c **** 
  54:quantum/keymap_common.c ****     (void)action_layer;
  55:quantum/keymap_common.c ****     (void)when;
  56:quantum/keymap_common.c ****     (void)mod;
  57:quantum/keymap_common.c **** 
  58:quantum/keymap_common.c ****     switch (keycode) {
  59:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
  60:quantum/keymap_common.c ****         case KC_LCTRL ... KC_RGUI:
  61:quantum/keymap_common.c ****             action.code = ACTION_KEY(keycode);
  62:quantum/keymap_common.c ****             break;
  63:quantum/keymap_common.c **** #ifdef EXTRAKEY_ENABLE
  64:quantum/keymap_common.c ****         case KC_SYSTEM_POWER ... KC_SYSTEM_WAKE:
  65:quantum/keymap_common.c ****             action.code = ACTION_USAGE_SYSTEM(KEYCODE2SYSTEM(keycode));
  66:quantum/keymap_common.c ****             break;
  67:quantum/keymap_common.c ****         case KC_AUDIO_MUTE ... KC_BRIGHTNESS_DOWN:
  68:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
  69:quantum/keymap_common.c ****             break;
  70:quantum/keymap_common.c **** #endif
  71:quantum/keymap_common.c **** #ifdef MOUSEKEY_ENABLE
  72:quantum/keymap_common.c ****         case KC_MS_UP ... KC_MS_ACCEL2:
  73:quantum/keymap_common.c ****             action.code = ACTION_MOUSEKEY(keycode);
  74:quantum/keymap_common.c ****             break;
  75:quantum/keymap_common.c **** #endif
  76:quantum/keymap_common.c ****         case KC_TRNS:
  77:quantum/keymap_common.c ****             action.code = ACTION_TRANSPARENT;
  78:quantum/keymap_common.c ****             break;
  79:quantum/keymap_common.c ****         case QK_MODS ... QK_MODS_MAX:;
  80:quantum/keymap_common.c ****             // Has a modifier
  81:quantum/keymap_common.c ****             // Split it up
  82:quantum/keymap_common.c ****             action.code = ACTION_MODS_KEY(keycode >> 8, keycode & 0xFF);  // adds modifier to key
  83:quantum/keymap_common.c ****             break;
  84:quantum/keymap_common.c **** #ifndef NO_ACTION_FUNCTION
  85:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
  86:quantum/keymap_common.c ****             action.code = keymap_function_id_to_action(FN_INDEX(keycode));
  87:quantum/keymap_common.c ****             break;
  88:quantum/keymap_common.c ****         case QK_FUNCTION ... QK_FUNCTION_MAX:;
  89:quantum/keymap_common.c ****             // Is a shortcut for function action_layer, pull last 12bits
  90:quantum/keymap_common.c ****             // This means we have 4,096 FN macros at our disposal
  91:quantum/keymap_common.c ****             action.code = keymap_function_id_to_action((int)keycode & 0xFFF);
  92:quantum/keymap_common.c ****             break;
  93:quantum/keymap_common.c **** #endif
  94:quantum/keymap_common.c **** #ifndef NO_ACTION_MACRO
  95:quantum/keymap_common.c ****         case QK_MACRO ... QK_MACRO_MAX:
  96:quantum/keymap_common.c ****             if (keycode & 0x800)  // tap macros have upper bit set
  97:quantum/keymap_common.c ****                 action.code = ACTION_MACRO_TAP(keycode & 0xFF);
  98:quantum/keymap_common.c ****             else
  99:quantum/keymap_common.c ****                 action.code = ACTION_MACRO(keycode & 0xFF);
 100:quantum/keymap_common.c ****             break;
 101:quantum/keymap_common.c **** #endif
 102:quantum/keymap_common.c **** #ifndef NO_ACTION_LAYER
 103:quantum/keymap_common.c ****         case QK_LAYER_TAP ... QK_LAYER_TAP_MAX:
 104:quantum/keymap_common.c ****             action.code = ACTION_LAYER_TAP_KEY((keycode >> 0x8) & 0xF, keycode & 0xFF);
 105:quantum/keymap_common.c ****             break;
 106:quantum/keymap_common.c ****         case QK_TO ... QK_TO_MAX:;
 107:quantum/keymap_common.c ****             // Layer set "GOTO"
 108:quantum/keymap_common.c ****             when         = (keycode >> 0x4) & 0x3;
 109:quantum/keymap_common.c ****             action_layer = keycode & 0xF;
 110:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_SET(action_layer, when);
 111:quantum/keymap_common.c ****             break;
 112:quantum/keymap_common.c ****         case QK_MOMENTARY ... QK_MOMENTARY_MAX:;
 113:quantum/keymap_common.c ****             // Momentary action_layer
 114:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 115:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_MOMENTARY(action_layer);
 116:quantum/keymap_common.c ****             break;
 117:quantum/keymap_common.c ****         case QK_DEF_LAYER ... QK_DEF_LAYER_MAX:;
 118:quantum/keymap_common.c ****             // Set default action_layer
 119:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 120:quantum/keymap_common.c ****             action.code  = ACTION_DEFAULT_LAYER_SET(action_layer);
 121:quantum/keymap_common.c ****             break;
 122:quantum/keymap_common.c ****         case QK_TOGGLE_LAYER ... QK_TOGGLE_LAYER_MAX:;
 123:quantum/keymap_common.c ****             // Set toggle
 124:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 125:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_TOGGLE(action_layer);
 126:quantum/keymap_common.c ****             break;
 127:quantum/keymap_common.c **** #endif
 128:quantum/keymap_common.c **** #ifndef NO_ACTION_ONESHOT
 129:quantum/keymap_common.c ****         case QK_ONE_SHOT_LAYER ... QK_ONE_SHOT_LAYER_MAX:;
 130:quantum/keymap_common.c ****             // OSL(action_layer) - One-shot action_layer
 131:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 132:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_ONESHOT(action_layer);
 133:quantum/keymap_common.c ****             break;
 134:quantum/keymap_common.c ****         case QK_ONE_SHOT_MOD ... QK_ONE_SHOT_MOD_MAX:;
 135:quantum/keymap_common.c ****             // OSM(mod) - One-shot mod
 136:quantum/keymap_common.c ****             mod         = mod_config(keycode & 0xFF);
 137:quantum/keymap_common.c ****             action.code = ACTION_MODS_ONESHOT(mod);
 138:quantum/keymap_common.c ****             break;
 139:quantum/keymap_common.c **** #endif
 140:quantum/keymap_common.c **** #ifndef NO_ACTION_LAYER
 141:quantum/keymap_common.c ****         case QK_LAYER_TAP_TOGGLE ... QK_LAYER_TAP_TOGGLE_MAX:
 142:quantum/keymap_common.c ****             action.code = ACTION_LAYER_TAP_TOGGLE(keycode & 0xFF);
 143:quantum/keymap_common.c ****             break;
 144:quantum/keymap_common.c ****         case QK_LAYER_MOD ... QK_LAYER_MOD_MAX:
 145:quantum/keymap_common.c ****             mod          = mod_config(keycode & 0xF);
 146:quantum/keymap_common.c ****             action_layer = (keycode >> 4) & 0xF;
 147:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_MODS(action_layer, mod);
 148:quantum/keymap_common.c ****             break;
 149:quantum/keymap_common.c **** #endif
 150:quantum/keymap_common.c **** #ifndef NO_ACTION_TAPPING
 151:quantum/keymap_common.c ****         case QK_MOD_TAP ... QK_MOD_TAP_MAX:
 152:quantum/keymap_common.c ****             mod         = mod_config((keycode >> 0x8) & 0x1F);
 153:quantum/keymap_common.c ****             action.code = ACTION_MODS_TAP_KEY(mod, keycode & 0xFF);
 154:quantum/keymap_common.c ****             break;
 155:quantum/keymap_common.c **** #endif
 156:quantum/keymap_common.c **** #ifdef SWAP_HANDS_ENABLE
 157:quantum/keymap_common.c ****         case QK_SWAP_HANDS ... QK_SWAP_HANDS_MAX:
 158:quantum/keymap_common.c ****             action.code = ACTION(ACT_SWAP_HANDS, keycode & 0xff);
 159:quantum/keymap_common.c ****             break;
 160:quantum/keymap_common.c **** #endif
 161:quantum/keymap_common.c **** 
 162:quantum/keymap_common.c ****         default:
 163:quantum/keymap_common.c ****             action.code = ACTION_NO;
 164:quantum/keymap_common.c ****             break;
 165:quantum/keymap_common.c ****     }
 166:quantum/keymap_common.c ****     return action;
 167:quantum/keymap_common.c **** }
 168:quantum/keymap_common.c **** 
 169:quantum/keymap_common.c **** __attribute__((weak)) const uint16_t PROGMEM fn_actions[] = {
 170:quantum/keymap_common.c **** 
 171:quantum/keymap_common.c **** };
 172:quantum/keymap_common.c **** 
 173:quantum/keymap_common.c **** /* Macro */
 174:quantum/keymap_common.c **** __attribute__((weak)) const macro_t *action_get_macro(keyrecord_t *record, uint8_t id, uint8_t opt)
  17               		.loc 1 174 101 view -0
  18               		.cfi_startproc
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  23               		.loc 1 174 103 view .LVU1
  24               		.loc 1 174 1 is_stmt 0 view .LVU2
  25 0000 90E0      		ldi r25,0
  26 0002 80E0      		ldi r24,0
  27               	.LVL1:
  28               	/* epilogue start */
  29               		.loc 1 174 1 view .LVU3
  30 0004 0895      		ret
  31               		.cfi_endproc
  32               	.LFE26:
  34               		.section	.text.action_function,"ax",@progbits
  35               		.weak	action_function
  37               	action_function:
  38               	.LVL2:
  39               	.LFB27:
 175:quantum/keymap_common.c **** 
 176:quantum/keymap_common.c **** /* Function */
 177:quantum/keymap_common.c **** __attribute__((weak)) void action_function(keyrecord_t *record, uint8_t id, uint8_t opt) {}
  40               		.loc 1 177 90 is_stmt 1 view -0
  41               		.cfi_startproc
  42               	/* prologue: function */
  43               	/* frame size = 0 */
  44               	/* stack size = 0 */
  45               	.L__stack_usage = 0
  46               		.loc 1 177 91 view .LVU5
  47               	/* epilogue start */
  48               		.loc 1 177 1 is_stmt 0 view .LVU6
  49 0000 0895      		ret
  50               		.cfi_endproc
  51               	.LFE27:
  53               		.section	.text.keymap_key_to_keycode,"ax",@progbits
  54               		.weak	keymap_key_to_keycode
  56               	keymap_key_to_keycode:
  57               	.LVL3:
  58               	.LFB28:
 178:quantum/keymap_common.c **** 
 179:quantum/keymap_common.c **** // translates key to keycode
 180:quantum/keymap_common.c **** __attribute__((weak)) uint16_t keymap_key_to_keycode(uint8_t layer, keypos_t key) {
  59               		.loc 1 180 83 is_stmt 1 view -0
  60               		.cfi_startproc
  61               	/* prologue: function */
  62               	/* frame size = 0 */
  63               	/* stack size = 0 */
  64               	.L__stack_usage = 0
 181:quantum/keymap_common.c ****     // Read entire word (16bits)
 182:quantum/keymap_common.c ****     return pgm_read_word(&keymaps[(layer)][(key.row)][(key.col)]);
  65               		.loc 1 182 5 view .LVU8
  66               	.LBB2:
  67               		.loc 1 182 12 view .LVU9
  68 0000 20E1      		ldi r18,lo8(16)
  69 0002 829F      		mul r24,r18
  70 0004 C001      		movw r24,r0
  71 0006 1124      		clr __zero_reg__
  72               	.LVL4:
  73               		.loc 1 182 12 is_stmt 0 view .LVU10
  74 0008 FC01      		movw r30,r24
  75               		.loc 1 182 12 view .LVU11
  76 000a E70F      		add r30,r23
  77 000c F11D      		adc r31,__zero_reg__
  78 000e 83E0      		ldi r24,3
  79               		1:
  80 0010 EE0F      		lsl r30
  81 0012 FF1F      		rol r31
  82 0014 8A95      		dec r24
  83 0016 01F4      		brne 1b
  84 0018 E60F      		add r30,r22
  85 001a F11D      		adc r31,__zero_reg__
  86 001c EE0F      		lsl r30
  87 001e FF1F      		rol r31
  88 0020 E050      		subi r30,lo8(-(keymaps))
  89 0022 F040      		sbci r31,hi8(-(keymaps))
  90               	.LVL5:
  91               		.loc 1 182 12 is_stmt 1 view .LVU12
  92               		.loc 1 182 12 view .LVU13
  93               	/* #APP */
  94               	 ;  182 "quantum/keymap_common.c" 1
  95 0024 8591      		lpm r24, Z+
  96 0026 9491      		lpm r25, Z
  97               		
  98               	 ;  0 "" 2
  99               	.LVL6:
 100               		.loc 1 182 12 view .LVU14
 101               	/* #NOAPP */
 102               	/* epilogue start */
 103               	.LBE2:
 183:quantum/keymap_common.c **** }
 104               		.loc 1 183 1 is_stmt 0 view .LVU15
 105 0028 0895      		ret
 106               		.cfi_endproc
 107               	.LFE28:
 109               		.section	.text.keymap_function_id_to_action,"ax",@progbits
 110               		.weak	keymap_function_id_to_action
 112               	keymap_function_id_to_action:
 113               	.LVL7:
 114               	.LFB29:
 184:quantum/keymap_common.c **** 
 185:quantum/keymap_common.c **** // translates function id to action
 186:quantum/keymap_common.c **** __attribute__((weak)) uint16_t keymap_function_id_to_action(uint16_t function_id) {
 115               		.loc 1 186 83 is_stmt 1 view -0
 116               		.cfi_startproc
 117               	/* prologue: function */
 118               	/* frame size = 0 */
 119               	/* stack size = 0 */
 120               	.L__stack_usage = 0
 187:quantum/keymap_common.c **** // The compiler sees the empty (weak) fn_actions and generates a warning
 188:quantum/keymap_common.c **** // This function should not be called in that case, so the warning is too strict
 189:quantum/keymap_common.c **** // If this function is called however, the keymap should have overridden fn_actions, and then the c
 190:quantum/keymap_common.c **** // is comparing against the wrong array
 191:quantum/keymap_common.c **** #pragma GCC diagnostic push
 192:quantum/keymap_common.c **** #pragma GCC diagnostic ignored "-Warray-bounds"
 193:quantum/keymap_common.c ****     return pgm_read_word(&fn_actions[function_id]);
 121               		.loc 1 193 5 view .LVU17
 122               	.LBB3:
 123               		.loc 1 193 12 view .LVU18
 124 0000 FC01      		movw r30,r24
 125 0002 EE0F      		lsl r30
 126 0004 FF1F      		rol r31
 127               	.LVL8:
 128               		.loc 1 193 12 is_stmt 0 view .LVU19
 129 0006 E050      		subi r30,lo8(-(fn_actions))
 130 0008 F040      		sbci r31,hi8(-(fn_actions))
 131               	.LVL9:
 132               		.loc 1 193 12 is_stmt 1 view .LVU20
 133               		.loc 1 193 12 view .LVU21
 134               	/* #APP */
 135               	 ;  193 "quantum/keymap_common.c" 1
 136 000a 8591      		lpm r24, Z+
 137 000c 9491      		lpm r25, Z
 138               		
 139               	 ;  0 "" 2
 140               	.LVL10:
 141               		.loc 1 193 12 view .LVU22
 142               	/* #NOAPP */
 143               	/* epilogue start */
 144               	.LBE3:
 194:quantum/keymap_common.c **** #pragma GCC diagnostic pop
 195:quantum/keymap_common.c **** }
 145               		.loc 1 195 1 is_stmt 0 view .LVU23
 146 000e 0895      		ret
 147               		.cfi_endproc
 148               	.LFE29:
 150               		.section	.text.action_for_key,"ax",@progbits
 151               	.global	action_for_key
 153               	action_for_key:
 154               	.LVL11:
 155               	.LFB25:
  44:quantum/keymap_common.c ****     // 16bit keycodes - important
 156               		.loc 1 44 54 is_stmt 1 view -0
 157               		.cfi_startproc
  44:quantum/keymap_common.c ****     // 16bit keycodes - important
 158               		.loc 1 44 54 is_stmt 0 view .LVU25
 159 0000 CF93      		push r28
 160               	.LCFI0:
 161               		.cfi_def_cfa_offset 3
 162               		.cfi_offset 28, -2
 163 0002 DF93      		push r29
 164               	.LCFI1:
 165               		.cfi_def_cfa_offset 4
 166               		.cfi_offset 29, -3
 167               	/* prologue: function */
 168               	/* frame size = 0 */
 169               	/* stack size = 2 */
 170               	.L__stack_usage = 2
  46:quantum/keymap_common.c **** 
 171               		.loc 1 46 5 is_stmt 1 view .LVU26
  46:quantum/keymap_common.c **** 
 172               		.loc 1 46 24 is_stmt 0 view .LVU27
 173 0004 0E94 0000 		call keymap_key_to_keycode
 174               	.LVL12:
  49:quantum/keymap_common.c **** 
 175               		.loc 1 49 5 is_stmt 1 view .LVU28
  49:quantum/keymap_common.c **** 
 176               		.loc 1 49 15 is_stmt 0 view .LVU29
 177 0008 0E94 0000 		call keycode_config
 178               	.LVL13:
  49:quantum/keymap_common.c **** 
 179               		.loc 1 49 15 view .LVU30
 180 000c EC01      		movw r28,r24
 181               	.LVL14:
  51:quantum/keymap_common.c ****     uint8_t  action_layer, when, mod;
 182               		.loc 1 51 5 is_stmt 1 view .LVU31
  52:quantum/keymap_common.c **** 
 183               		.loc 1 52 5 view .LVU32
  54:quantum/keymap_common.c ****     (void)when;
 184               		.loc 1 54 5 view .LVU33
  55:quantum/keymap_common.c ****     (void)mod;
 185               		.loc 1 55 5 view .LVU34
  56:quantum/keymap_common.c **** 
 186               		.loc 1 56 5 view .LVU35
  58:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 187               		.loc 1 58 5 view .LVU36
 188 000e 8115      		cp r24,__zero_reg__
 189 0010 20E5      		ldi r18,80
 190 0012 9207      		cpc r25,r18
 191 0014 00F0      		brlo .+2
 192 0016 00C0      		rjmp .L6
 193 0018 8115      		cp r24,__zero_reg__
 194 001a 30E4      		ldi r19,64
 195 001c 9307      		cpc r25,r19
 196 001e 00F0      		brlo .+2
 197 0020 00C0      		rjmp .L7
 198 0022 883E      		cpi r24,-24
 199 0024 9105      		cpc r25,__zero_reg__
 200 0026 00F4      		brsh .L8
 201 0028 803E      		cpi r24,-32
 202 002a 9105      		cpc r25,__zero_reg__
 203 002c 00F0      		brlo .+2
 204 002e 00C0      		rjmp .L9
 205 0030 883A      		cpi r24,-88
 206 0032 9105      		cpc r25,__zero_reg__
 207 0034 00F4      		brsh .L10
 208 0036 853A      		cpi r24,-91
 209 0038 9105      		cpc r25,__zero_reg__
 210 003a 00F0      		brlo .+2
 211 003c 00C0      		rjmp .L11
 212 003e 8130      		cpi r24,1
 213 0040 9105      		cpc r25,__zero_reg__
 214 0042 01F4      		brne .+2
 215 0044 00C0      		rjmp .L9
 216 0046 0097      		sbiw r24,0
 217 0048 01F4      		brne .+2
 218 004a 00C0      		rjmp .L9
 219 004c 0497      		sbiw r24,4
 220 004e 00F0      		brlo .+2
 221 0050 00C0      		rjmp .L9
 222               	.LVL15:
 223               	.L36:
 163:quantum/keymap_common.c ****             break;
 224               		.loc 1 163 25 is_stmt 0 view .LVU37
 225 0052 D0E0      		ldi r29,0
 226 0054 C0E0      		ldi r28,0
 227 0056 00C0      		rjmp .L9
 228               	.LVL16:
 229               	.L10:
  58:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 230               		.loc 1 58 5 view .LVU38
 231 0058 8F3B      		cpi r24,-65
 232 005a 9105      		cpc r25,__zero_reg__
 233 005c 00F4      		brsh .+2
 234 005e 00C0      		rjmp .L12
  86:quantum/keymap_common.c ****             break;
 235               		.loc 1 86 27 view .LVU39
 236 0060 805C      		subi r24,-64
 237 0062 9109      		sbc r25,__zero_reg__
 238               	.LVL17:
  58:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 239               		.loc 1 58 5 view .LVU40
 240 0064 C03C      		cpi r28,-64
 241 0066 D105      		cpc r29,__zero_reg__
 242 0068 00F0      		brlo .L36
 243               	.L49:
  91:quantum/keymap_common.c ****             break;
 244               		.loc 1 91 27 view .LVU41
 245 006a 0E94 0000 		call keymap_function_id_to_action
 246               	.LVL18:
  91:quantum/keymap_common.c ****             break;
 247               		.loc 1 91 27 view .LVU42
 248 006e EC01      		movw r28,r24
 249               	.LVL19:
  92:quantum/keymap_common.c **** #endif
 250               		.loc 1 92 13 is_stmt 1 view .LVU43
 251 0070 00C0      		rjmp .L9
 252               	.LVL20:
 253               	.L8:
  58:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 254               		.loc 1 58 5 is_stmt 0 view .LVU44
 255 0072 8115      		cp r24,__zero_reg__
 256 0074 9042      		sbci r25,32
 257 0076 00F4      		brsh .L14
 258 0078 C115      		cp r28,__zero_reg__
 259 007a 81E0      		ldi r24,1
 260 007c D807      		cpc r29,r24
 261               	.LVL21:
  58:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 262               		.loc 1 58 5 view .LVU45
 263 007e 00F0      		brlo .+2
 264 0080 00C0      		rjmp .L9
 265 0082 C03F      		cpi r28,-16
 266 0084 D105      		cpc r29,__zero_reg__
 267 0086 00F0      		brlo .L36
  73:quantum/keymap_common.c ****             break;
 268               		.loc 1 73 13 is_stmt 1 view .LVU46
 269               	.LVL22:
  73:quantum/keymap_common.c ****             break;
 270               		.loc 1 73 27 is_stmt 0 view .LVU47
 271 0088 D065      		ori r29,80
 272               	.LVL23:
  74:quantum/keymap_common.c **** #endif
 273               		.loc 1 74 13 is_stmt 1 view .LVU48
 274 008a 00C0      		rjmp .L9
 275               	.LVL24:
 276               	.L14:
  58:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 277               		.loc 1 58 5 is_stmt 0 view .LVU49
 278 008c C115      		cp r28,__zero_reg__
 279 008e 90E3      		ldi r25,48
 280 0090 D907      		cpc r29,r25
 281 0092 00F0      		brlo .+2
 282 0094 00C0      		rjmp .L44
  88:quantum/keymap_common.c ****             // Is a shortcut for function action_layer, pull last 12bits
 283               		.loc 1 88 46 is_stmt 1 view .LVU50
  91:quantum/keymap_common.c ****             break;
 284               		.loc 1 91 13 view .LVU51
  91:quantum/keymap_common.c ****             break;
 285               		.loc 1 91 27 is_stmt 0 view .LVU52
 286 0096 CE01      		movw r24,r28
 287               	.LVL25:
  91:quantum/keymap_common.c ****             break;
 288               		.loc 1 91 27 view .LVU53
 289 0098 9F70      		andi r25,15
 290 009a 00C0      		rjmp .L49
 291               	.LVL26:
 292               	.L6:
  58:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 293               		.loc 1 58 5 view .LVU54
 294 009c 8115      		cp r24,__zero_reg__
 295 009e 25E5      		ldi r18,85
 296 00a0 9207      		cpc r25,r18
 297 00a2 00F4      		brsh .L18
 298 00a4 8115      		cp r24,__zero_reg__
 299 00a6 34E5      		ldi r19,84
 300 00a8 9307      		cpc r25,r19
 301 00aa 00F0      		brlo .+2
 302 00ac 00C0      		rjmp .L19
 303 00ae 8115      		cp r24,__zero_reg__
 304 00b0 42E5      		ldi r20,82
 305 00b2 9407      		cpc r25,r20
 306 00b4 00F4      		brsh .L20
 307 00b6 C115      		cp r28,__zero_reg__
 308 00b8 81E5      		ldi r24,81
 309 00ba D807      		cpc r29,r24
 310               	.LVL27:
  58:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 311               		.loc 1 58 5 view .LVU55
 312 00bc 00F4      		brsh .+2
 313 00be 00C0      		rjmp .L45
 112:quantum/keymap_common.c ****             // Momentary action_layer
 314               		.loc 1 112 48 is_stmt 1 view .LVU56
 114:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_MOMENTARY(action_layer);
 315               		.loc 1 114 13 view .LVU57
 316               	.LVL28:
 115:quantum/keymap_common.c ****             break;
 317               		.loc 1 115 13 view .LVU58
 115:quantum/keymap_common.c ****             break;
 318               		.loc 1 115 28 is_stmt 0 view .LVU59
 319 00c0 DC2F      		mov r29,r28
 320 00c2 CC27      		clr r28
 321               	.LVL29:
 115:quantum/keymap_common.c ****             break;
 322               		.loc 1 115 28 view .LVU60
 323 00c4 C16F      		ori r28,241
 324 00c6 D06A      		ori r29,160
 325               	.LVL30:
 116:quantum/keymap_common.c ****         case QK_DEF_LAYER ... QK_DEF_LAYER_MAX:;
 326               		.loc 1 116 13 is_stmt 1 view .LVU61
 327 00c8 00C0      		rjmp .L9
 328               	.LVL31:
 329               	.L20:
 116:quantum/keymap_common.c ****         case QK_DEF_LAYER ... QK_DEF_LAYER_MAX:;
 330               		.loc 1 116 13 is_stmt 0 view .LVU62
 331 00ca 982F      		mov r25,r24
 332 00cc 9695      		lsr r25
 333 00ce 9695      		lsr r25
 334 00d0 9E01      		movw r18,r28
 335 00d2 2370      		andi r18,3
 336 00d4 3327      		clr r19
  58:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 337               		.loc 1 58 5 view .LVU63
 338 00d6 C115      		cp r28,__zero_reg__
 339 00d8 D345      		sbci r29,83
 340 00da 00F0      		brlo .+2
 341 00dc 00C0      		rjmp .L46
 117:quantum/keymap_common.c ****             // Set default action_layer
 342               		.loc 1 117 48 is_stmt 1 view .LVU64
 119:quantum/keymap_common.c ****             action.code  = ACTION_DEFAULT_LAYER_SET(action_layer);
 343               		.loc 1 119 13 view .LVU65
 344               	.LVL32:
 120:quantum/keymap_common.c ****             break;
 345               		.loc 1 120 13 view .LVU66
 120:quantum/keymap_common.c ****             break;
 346               		.loc 1 120 28 is_stmt 0 view .LVU67
 347 00de C1E0      		ldi r28,lo8(1)
 348 00e0 D0E0      		ldi r29,0
 349 00e2 00C0      		rjmp 2f
 350               		1:
 351 00e4 CC0F      		lsl r28
 352 00e6 DD1F      		rol r29
 353               		2:
 354 00e8 2A95      		dec r18
 355 00ea 02F4      		brpl 1b
 356 00ec 20E2      		ldi r18,lo8(32)
 357 00ee 929F      		mul r25,r18
 358 00f0 C001      		movw r24,r0
 359 00f2 1124      		clr __zero_reg__
 360               	.LVL33:
 120:quantum/keymap_common.c ****             break;
 361               		.loc 1 120 28 view .LVU68
 362 00f4 C82B      		or r28,r24
 363 00f6 D92B      		or r29,r25
 364 00f8 00C0      		rjmp .L50
 365               	.LVL34:
 366               	.L18:
  58:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 367               		.loc 1 58 5 view .LVU69
 368 00fa C115      		cp r28,__zero_reg__
 369 00fc 89E5      		ldi r24,89
 370 00fe D807      		cpc r29,r24
 371               	.LVL35:
  58:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 372               		.loc 1 58 5 view .LVU70
 373 0100 00F4      		brsh .L25
 374 0102 C115      		cp r28,__zero_reg__
 375 0104 98E5      		ldi r25,88
 376 0106 D907      		cpc r29,r25
 377 0108 00F0      		brlo .+2
 378 010a 00C0      		rjmp .L26
 379 010c C115      		cp r28,__zero_reg__
 380 010e 26E5      		ldi r18,86
 381 0110 D207      		cpc r29,r18
 382 0112 00F0      		brlo .+2
 383 0114 00C0      		rjmp .L36
 134:quantum/keymap_common.c ****             // OSM(mod) - One-shot mod
 384               		.loc 1 134 54 is_stmt 1 view .LVU71
 136:quantum/keymap_common.c ****             action.code = ACTION_MODS_ONESHOT(mod);
 385               		.loc 1 136 13 view .LVU72
 136:quantum/keymap_common.c ****             action.code = ACTION_MODS_ONESHOT(mod);
 386               		.loc 1 136 27 is_stmt 0 view .LVU73
 387 0116 8C2F      		mov r24,r28
 388 0118 0E94 0000 		call mod_config
 389               	.LVL36:
 137:quantum/keymap_common.c ****             break;
 390               		.loc 1 137 13 is_stmt 1 view .LVU74
 137:quantum/keymap_common.c ****             break;
 391               		.loc 1 137 27 is_stmt 0 view .LVU75
 392 011c C82F      		mov r28,r24
 393               	.LVL37:
 137:quantum/keymap_common.c ****             break;
 394               		.loc 1 137 27 view .LVU76
 395 011e D0E0      		ldi r29,0
 396 0120 DC2F      		mov r29,r28
 397 0122 CC27      		clr r28
 398 0124 CC27      		clr r28
 399 0126 DF71      		andi r29,31
 400               	.LVL38:
 401               	.L51:
 153:quantum/keymap_common.c ****             break;
 402               		.loc 1 153 27 view .LVU77
 403 0128 D062      		ori r29,32
 404               	.LVL39:
 154:quantum/keymap_common.c **** #endif
 405               		.loc 1 154 13 is_stmt 1 view .LVU78
 406 012a 00C0      		rjmp .L9
 407               	.LVL40:
 408               	.L25:
  58:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 409               		.loc 1 58 5 is_stmt 0 view .LVU79
 410 012c C115      		cp r28,__zero_reg__
 411 012e 3AE5      		ldi r19,90
 412 0130 D307      		cpc r29,r19
 413 0132 00F4      		brsh .+2
 414 0134 00C0      		rjmp .L28
 415 0136 CE01      		movw r24,r28
 416 0138 9056      		subi r25,96
 417 013a 8115      		cp r24,__zero_reg__
 418 013c 9042      		sbci r25,32
 419 013e 00F0      		brlo .+2
 420 0140 00C0      		rjmp .L36
 152:quantum/keymap_common.c ****             action.code = ACTION_MODS_TAP_KEY(mod, keycode & 0xFF);
 421               		.loc 1 152 13 is_stmt 1 view .LVU80
 152:quantum/keymap_common.c ****             action.code = ACTION_MODS_TAP_KEY(mod, keycode & 0xFF);
 422               		.loc 1 152 27 is_stmt 0 view .LVU81
 423 0142 8D2F      		mov r24,r29
 424 0144 8F71      		andi r24,lo8(31)
 425 0146 0E94 0000 		call mod_config
 426               	.LVL41:
 153:quantum/keymap_common.c ****             break;
 427               		.loc 1 153 13 is_stmt 1 view .LVU82
 153:quantum/keymap_common.c ****             break;
 428               		.loc 1 153 27 is_stmt 0 view .LVU83
 429 014a 90E0      		ldi r25,0
 430 014c 982F      		mov r25,r24
 431 014e 8827      		clr r24
 432               	.LVL42:
 153:quantum/keymap_common.c ****             break;
 433               		.loc 1 153 27 view .LVU84
 434 0150 8827      		clr r24
 435 0152 9F71      		andi r25,31
 436 0154 9C01      		movw r18,r24
 437 0156 2C2B      		or r18,r28
 438 0158 E901      		movw r28,r18
 439               	.LVL43:
 153:quantum/keymap_common.c ****             break;
 440               		.loc 1 153 27 view .LVU85
 441 015a 00C0      		rjmp .L51
 442               	.LVL44:
 443               	.L11:
  65:quantum/keymap_common.c ****             break;
 444               		.loc 1 65 13 is_stmt 1 view .LVU86
 445               	.LBB8:
 446               	.LBI8:
 447               		.file 2 "tmk_core/common/report.h"
   1:tmk_core/common/report.h **** /*
   2:tmk_core/common/report.h **** Copyright 2011,2012 Jun Wako <wakojun@gmail.com>
   3:tmk_core/common/report.h **** 
   4:tmk_core/common/report.h **** This program is free software: you can redistribute it and/or modify
   5:tmk_core/common/report.h **** it under the terms of the GNU General Public License as published by
   6:tmk_core/common/report.h **** the Free Software Foundation, either version 2 of the License, or
   7:tmk_core/common/report.h **** (at your option) any later version.
   8:tmk_core/common/report.h **** 
   9:tmk_core/common/report.h **** This program is distributed in the hope that it will be useful,
  10:tmk_core/common/report.h **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:tmk_core/common/report.h **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:tmk_core/common/report.h **** GNU General Public License for more details.
  13:tmk_core/common/report.h **** 
  14:tmk_core/common/report.h **** You should have received a copy of the GNU General Public License
  15:tmk_core/common/report.h **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:tmk_core/common/report.h **** */
  17:tmk_core/common/report.h **** 
  18:tmk_core/common/report.h **** #pragma once
  19:tmk_core/common/report.h **** 
  20:tmk_core/common/report.h **** #include <stdint.h>
  21:tmk_core/common/report.h **** #include <stdbool.h>
  22:tmk_core/common/report.h **** #include "keycode.h"
  23:tmk_core/common/report.h **** 
  24:tmk_core/common/report.h **** // clang-format off
  25:tmk_core/common/report.h **** 
  26:tmk_core/common/report.h **** /* HID report IDs */
  27:tmk_core/common/report.h **** enum hid_report_ids {
  28:tmk_core/common/report.h ****     REPORT_ID_KEYBOARD = 1,
  29:tmk_core/common/report.h ****     REPORT_ID_MOUSE,
  30:tmk_core/common/report.h ****     REPORT_ID_SYSTEM,
  31:tmk_core/common/report.h ****     REPORT_ID_CONSUMER,
  32:tmk_core/common/report.h ****     REPORT_ID_NKRO,
  33:tmk_core/common/report.h ****     REPORT_ID_JOYSTICK
  34:tmk_core/common/report.h **** };
  35:tmk_core/common/report.h **** 
  36:tmk_core/common/report.h **** /* Mouse buttons */
  37:tmk_core/common/report.h **** enum mouse_buttons {
  38:tmk_core/common/report.h ****     MOUSE_BTN1 = (1 << 0),
  39:tmk_core/common/report.h ****     MOUSE_BTN2 = (1 << 1),
  40:tmk_core/common/report.h ****     MOUSE_BTN3 = (1 << 2),
  41:tmk_core/common/report.h ****     MOUSE_BTN4 = (1 << 3),
  42:tmk_core/common/report.h ****     MOUSE_BTN5 = (1 << 4)
  43:tmk_core/common/report.h **** };
  44:tmk_core/common/report.h **** 
  45:tmk_core/common/report.h **** /* Consumer Page (0x0C)
  46:tmk_core/common/report.h ****  *
  47:tmk_core/common/report.h ****  * See https://www.usb.org/sites/default/files/documents/hut1_12v2.pdf#page=75
  48:tmk_core/common/report.h ****  */
  49:tmk_core/common/report.h **** enum consumer_usages {
  50:tmk_core/common/report.h ****     // 15.5 Display Controls
  51:tmk_core/common/report.h ****     SNAPSHOT               = 0x065,
  52:tmk_core/common/report.h ****     BRIGHTNESS_UP          = 0x06F, // https://www.usb.org/sites/default/files/hutrr41_0.pdf
  53:tmk_core/common/report.h ****     BRIGHTNESS_DOWN        = 0x070,
  54:tmk_core/common/report.h ****     // 15.7 Transport Controls
  55:tmk_core/common/report.h ****     TRANSPORT_RECORD       = 0x0B2,
  56:tmk_core/common/report.h ****     TRANSPORT_FAST_FORWARD = 0x0B3,
  57:tmk_core/common/report.h ****     TRANSPORT_REWIND       = 0x0B4,
  58:tmk_core/common/report.h ****     TRANSPORT_NEXT_TRACK   = 0x0B5,
  59:tmk_core/common/report.h ****     TRANSPORT_PREV_TRACK   = 0x0B6,
  60:tmk_core/common/report.h ****     TRANSPORT_STOP         = 0x0B7,
  61:tmk_core/common/report.h ****     TRANSPORT_EJECT        = 0x0B8,
  62:tmk_core/common/report.h ****     TRANSPORT_RANDOM_PLAY  = 0x0B9,
  63:tmk_core/common/report.h ****     TRANSPORT_STOP_EJECT   = 0x0CC,
  64:tmk_core/common/report.h ****     TRANSPORT_PLAY_PAUSE   = 0x0CD,
  65:tmk_core/common/report.h ****     // 15.9.1 Audio Controls - Volume
  66:tmk_core/common/report.h ****     AUDIO_MUTE             = 0x0E2,
  67:tmk_core/common/report.h ****     AUDIO_VOL_UP           = 0x0E9,
  68:tmk_core/common/report.h ****     AUDIO_VOL_DOWN         = 0x0EA,
  69:tmk_core/common/report.h ****     // 15.15 Application Launch Buttons
  70:tmk_core/common/report.h ****     AL_CC_CONFIG           = 0x183,
  71:tmk_core/common/report.h ****     AL_EMAIL               = 0x18A,
  72:tmk_core/common/report.h ****     AL_CALCULATOR          = 0x192,
  73:tmk_core/common/report.h ****     AL_LOCAL_BROWSER       = 0x194,
  74:tmk_core/common/report.h ****     AL_LOCK                = 0x19E,
  75:tmk_core/common/report.h ****     AL_CONTROL_PANEL       = 0x19F,
  76:tmk_core/common/report.h ****     AL_ASSISTANT           = 0x1CB,
  77:tmk_core/common/report.h ****     AL_KEYBOARD_LAYOUT     = 0x1AE,
  78:tmk_core/common/report.h ****     // 15.16 Generic GUI Application Controls
  79:tmk_core/common/report.h ****     AC_MINIMIZE            = 0x206,
  80:tmk_core/common/report.h ****     AC_SEARCH              = 0x221,
  81:tmk_core/common/report.h ****     AC_HOME                = 0x223,
  82:tmk_core/common/report.h ****     AC_BACK                = 0x224,
  83:tmk_core/common/report.h ****     AC_FORWARD             = 0x225,
  84:tmk_core/common/report.h ****     AC_STOP                = 0x226,
  85:tmk_core/common/report.h ****     AC_REFRESH             = 0x227,
  86:tmk_core/common/report.h ****     AC_BOOKMARKS           = 0x22A
  87:tmk_core/common/report.h **** };
  88:tmk_core/common/report.h **** 
  89:tmk_core/common/report.h **** /* Generic Desktop Page (0x01)
  90:tmk_core/common/report.h ****  *
  91:tmk_core/common/report.h ****  * See https://www.usb.org/sites/default/files/documents/hut1_12v2.pdf#page=26
  92:tmk_core/common/report.h ****  */
  93:tmk_core/common/report.h **** enum desktop_usages {
  94:tmk_core/common/report.h ****     // 4.5.1 System Controls - Power Controls
  95:tmk_core/common/report.h ****     SYSTEM_POWER_DOWN = 0x81,
  96:tmk_core/common/report.h ****     SYSTEM_SLEEP      = 0x82,
  97:tmk_core/common/report.h ****     SYSTEM_WAKE_UP    = 0x83
  98:tmk_core/common/report.h **** };
  99:tmk_core/common/report.h **** 
 100:tmk_core/common/report.h **** // clang-format on
 101:tmk_core/common/report.h **** 
 102:tmk_core/common/report.h **** #define NKRO_SHARED_EP
 103:tmk_core/common/report.h **** /* key report size(NKRO or boot mode) */
 104:tmk_core/common/report.h **** #if defined(NKRO_ENABLE)
 105:tmk_core/common/report.h **** #    if defined(PROTOCOL_LUFA) || defined(PROTOCOL_CHIBIOS)
 106:tmk_core/common/report.h **** #        include "protocol/usb_descriptor.h"
 107:tmk_core/common/report.h **** #        define KEYBOARD_REPORT_BITS (SHARED_EPSIZE - 2)
 108:tmk_core/common/report.h **** #    elif defined(PROTOCOL_ARM_ATSAM)
 109:tmk_core/common/report.h **** #        include "protocol/arm_atsam/usb/udi_device_epsize.h"
 110:tmk_core/common/report.h **** #        define KEYBOARD_REPORT_BITS (NKRO_EPSIZE - 1)
 111:tmk_core/common/report.h **** #        undef NKRO_SHARED_EP
 112:tmk_core/common/report.h **** #        undef MOUSE_SHARED_EP
 113:tmk_core/common/report.h **** #    else
 114:tmk_core/common/report.h **** #        error "NKRO not supported with this protocol"
 115:tmk_core/common/report.h **** #    endif
 116:tmk_core/common/report.h **** #endif
 117:tmk_core/common/report.h **** 
 118:tmk_core/common/report.h **** #ifdef KEYBOARD_SHARED_EP
 119:tmk_core/common/report.h **** #    define KEYBOARD_REPORT_SIZE 9
 120:tmk_core/common/report.h **** #else
 121:tmk_core/common/report.h **** #    define KEYBOARD_REPORT_SIZE 8
 122:tmk_core/common/report.h **** #endif
 123:tmk_core/common/report.h **** 
 124:tmk_core/common/report.h **** #define KEYBOARD_REPORT_KEYS 6
 125:tmk_core/common/report.h **** 
 126:tmk_core/common/report.h **** /* VUSB hardcodes keyboard and mouse+extrakey only */
 127:tmk_core/common/report.h **** #if defined(PROTOCOL_VUSB)
 128:tmk_core/common/report.h **** #    undef KEYBOARD_SHARED_EP
 129:tmk_core/common/report.h **** #    undef MOUSE_SHARED_EP
 130:tmk_core/common/report.h **** #endif
 131:tmk_core/common/report.h **** 
 132:tmk_core/common/report.h **** #ifdef __cplusplus
 133:tmk_core/common/report.h **** extern "C" {
 134:tmk_core/common/report.h **** #endif
 135:tmk_core/common/report.h **** 
 136:tmk_core/common/report.h **** /*
 137:tmk_core/common/report.h ****  * keyboard report is 8-byte array retains state of 8 modifiers and 6 keys.
 138:tmk_core/common/report.h ****  *
 139:tmk_core/common/report.h ****  * byte |0       |1       |2       |3       |4       |5       |6       |7
 140:tmk_core/common/report.h ****  * -----+--------+--------+--------+--------+--------+--------+--------+--------
 141:tmk_core/common/report.h ****  * desc |mods    |reserved|keys[0] |keys[1] |keys[2] |keys[3] |keys[4] |keys[5]
 142:tmk_core/common/report.h ****  *
 143:tmk_core/common/report.h ****  * It is exended to 16 bytes to retain 120keys+8mods when NKRO mode.
 144:tmk_core/common/report.h ****  *
 145:tmk_core/common/report.h ****  * byte |0       |1       |2       |3       |4       |5       |6       |7        ... |15
 146:tmk_core/common/report.h ****  * -----+--------+--------+--------+--------+--------+--------+--------+--------     +--------
 147:tmk_core/common/report.h ****  * desc |mods    |bits[0] |bits[1] |bits[2] |bits[3] |bits[4] |bits[5] |bits[6]  ... |bit[14]
 148:tmk_core/common/report.h ****  *
 149:tmk_core/common/report.h ****  * mods retains state of 8 modifiers.
 150:tmk_core/common/report.h ****  *
 151:tmk_core/common/report.h ****  *  bit |0       |1       |2       |3       |4       |5       |6       |7
 152:tmk_core/common/report.h ****  * -----+--------+--------+--------+--------+--------+--------+--------+--------
 153:tmk_core/common/report.h ****  * desc |Lcontrol|Lshift  |Lalt    |Lgui    |Rcontrol|Rshift  |Ralt    |Rgui
 154:tmk_core/common/report.h ****  *
 155:tmk_core/common/report.h ****  */
 156:tmk_core/common/report.h **** typedef union {
 157:tmk_core/common/report.h ****     uint8_t raw[KEYBOARD_REPORT_SIZE];
 158:tmk_core/common/report.h ****     struct {
 159:tmk_core/common/report.h **** #ifdef KEYBOARD_SHARED_EP
 160:tmk_core/common/report.h ****         uint8_t report_id;
 161:tmk_core/common/report.h **** #endif
 162:tmk_core/common/report.h ****         uint8_t mods;
 163:tmk_core/common/report.h ****         uint8_t reserved;
 164:tmk_core/common/report.h ****         uint8_t keys[KEYBOARD_REPORT_KEYS];
 165:tmk_core/common/report.h ****     };
 166:tmk_core/common/report.h **** #ifdef NKRO_ENABLE
 167:tmk_core/common/report.h ****     struct nkro_report {
 168:tmk_core/common/report.h **** #    ifdef NKRO_SHARED_EP
 169:tmk_core/common/report.h ****         uint8_t report_id;
 170:tmk_core/common/report.h **** #    endif
 171:tmk_core/common/report.h ****         uint8_t mods;
 172:tmk_core/common/report.h ****         uint8_t bits[KEYBOARD_REPORT_BITS];
 173:tmk_core/common/report.h ****     } nkro;
 174:tmk_core/common/report.h **** #endif
 175:tmk_core/common/report.h **** } __attribute__((packed)) report_keyboard_t;
 176:tmk_core/common/report.h **** 
 177:tmk_core/common/report.h **** typedef struct {
 178:tmk_core/common/report.h ****     uint8_t  report_id;
 179:tmk_core/common/report.h ****     uint16_t usage;
 180:tmk_core/common/report.h **** } __attribute__((packed)) report_extra_t;
 181:tmk_core/common/report.h **** 
 182:tmk_core/common/report.h **** typedef struct {
 183:tmk_core/common/report.h **** #ifdef MOUSE_SHARED_EP
 184:tmk_core/common/report.h ****     uint8_t report_id;
 185:tmk_core/common/report.h **** #endif
 186:tmk_core/common/report.h ****     uint8_t buttons;
 187:tmk_core/common/report.h ****     int8_t  x;
 188:tmk_core/common/report.h ****     int8_t  y;
 189:tmk_core/common/report.h ****     int8_t  v;
 190:tmk_core/common/report.h ****     int8_t  h;
 191:tmk_core/common/report.h **** } __attribute__((packed)) report_mouse_t;
 192:tmk_core/common/report.h **** 
 193:tmk_core/common/report.h **** typedef struct {
 194:tmk_core/common/report.h **** #if JOYSTICK_AXES_COUNT > 0
 195:tmk_core/common/report.h **** #    if JOYSTICK_AXES_RESOLUTION > 8
 196:tmk_core/common/report.h ****     int16_t axes[JOYSTICK_AXES_COUNT];
 197:tmk_core/common/report.h **** #    else
 198:tmk_core/common/report.h ****     int8_t axes[JOYSTICK_AXES_COUNT];
 199:tmk_core/common/report.h **** #    endif
 200:tmk_core/common/report.h **** #endif
 201:tmk_core/common/report.h **** 
 202:tmk_core/common/report.h **** #if JOYSTICK_BUTTON_COUNT > 0
 203:tmk_core/common/report.h ****     uint8_t buttons[(JOYSTICK_BUTTON_COUNT - 1) / 8 + 1];
 204:tmk_core/common/report.h **** #endif
 205:tmk_core/common/report.h **** } __attribute__((packed)) joystick_report_t;
 206:tmk_core/common/report.h **** 
 207:tmk_core/common/report.h **** /* keycode to system usage */
 208:tmk_core/common/report.h **** static inline uint16_t KEYCODE2SYSTEM(uint8_t key) {
 448               		.loc 2 208 24 view .LVU87
 449               	.LBE8:
 209:tmk_core/common/report.h ****     switch (key) {
 450               		.loc 2 209 5 view .LVU88
  65:quantum/keymap_common.c ****             break;
 451               		.loc 1 65 27 is_stmt 0 view .LVU89
 452 015c C55A      		subi r28,lo8(-(91))
 453 015e D0E0      		ldi r29,0
 454 0160 C050      		subi r28,lo8(-(CSWTCH.0))
 455 0162 D040      		sbci r29,hi8(-(CSWTCH.0))
 456 0164 C881      		ld r28,Y
 457 0166 D0E0      		ldi r29,0
 458               	.LVL45:
  65:quantum/keymap_common.c ****             break;
 459               		.loc 1 65 27 view .LVU90
 460 0168 D064      		ori r29,64
 461               	.LVL46:
  66:quantum/keymap_common.c ****         case KC_AUDIO_MUTE ... KC_BRIGHTNESS_DOWN:
 462               		.loc 1 66 13 is_stmt 1 view .LVU91
 463               	.L9:
 166:quantum/keymap_common.c **** }
 464               		.loc 1 166 5 view .LVU92
 167:quantum/keymap_common.c **** 
 465               		.loc 1 167 1 is_stmt 0 view .LVU93
 466 016a CE01      		movw r24,r28
 467               	/* epilogue start */
 468 016c DF91      		pop r29
 469 016e CF91      		pop r28
 470 0170 0895      		ret
 471               	.LVL47:
 472               	.L12:
  68:quantum/keymap_common.c ****             break;
 473               		.loc 1 68 13 is_stmt 1 view .LVU94
 474               	.LBB9:
 475               	.LBI9:
 210:tmk_core/common/report.h ****         case KC_SYSTEM_POWER:
 211:tmk_core/common/report.h ****             return SYSTEM_POWER_DOWN;
 212:tmk_core/common/report.h ****         case KC_SYSTEM_SLEEP:
 213:tmk_core/common/report.h ****             return SYSTEM_SLEEP;
 214:tmk_core/common/report.h ****         case KC_SYSTEM_WAKE:
 215:tmk_core/common/report.h ****             return SYSTEM_WAKE_UP;
 216:tmk_core/common/report.h ****         default:
 217:tmk_core/common/report.h ****             return 0;
 218:tmk_core/common/report.h ****     }
 219:tmk_core/common/report.h **** }
 220:tmk_core/common/report.h **** 
 221:tmk_core/common/report.h **** /* keycode to consumer usage */
 222:tmk_core/common/report.h **** static inline uint16_t KEYCODE2CONSUMER(uint8_t key) {
 476               		.loc 2 222 24 view .LVU95
 477               	.LBE9:
 223:tmk_core/common/report.h ****     switch (key) {
 478               		.loc 2 223 5 view .LVU96
  68:quantum/keymap_common.c ****             break;
 479               		.loc 1 68 27 is_stmt 0 view .LVU97
 480 0172 C85A      		subi r28,lo8(-(88))
 481 0174 D0E0      		ldi r29,0
 482 0176 CC0F      		lsl r28
 483 0178 DD1F      		rol r29
 484 017a C050      		subi r28,lo8(-(CSWTCH.1))
 485 017c D040      		sbci r29,hi8(-(CSWTCH.1))
 486 017e 0990      		ld __tmp_reg__,Y+
 487 0180 D881      		ld r29,Y
 488 0182 C02D      		mov r28,__tmp_reg__
 489               	.LVL48:
  68:quantum/keymap_common.c ****             break;
 490               		.loc 1 68 27 view .LVU98
 491 0184 D464      		ori r29,68
 492               	.LVL49:
  69:quantum/keymap_common.c **** #endif
 493               		.loc 1 69 13 is_stmt 1 view .LVU99
 494 0186 00C0      		rjmp .L9
 495               	.LVL50:
 496               	.L44:
  96:quantum/keymap_common.c ****                 action.code = ACTION_MACRO_TAP(keycode & 0xFF);
 497               		.loc 1 96 13 view .LVU100
 498 0188 CE01      		movw r24,r28
 499               	.LVL51:
  96:quantum/keymap_common.c ****                 action.code = ACTION_MACRO_TAP(keycode & 0xFF);
 500               		.loc 1 96 13 is_stmt 0 view .LVU101
 501 018a 9927      		clr r25
  96:quantum/keymap_common.c ****                 action.code = ACTION_MACRO_TAP(keycode & 0xFF);
 502               		.loc 1 96 16 view .LVU102
 503 018c D3FF      		sbrs r29,3
 504 018e 00C0      		rjmp .L30
  97:quantum/keymap_common.c ****             else
 505               		.loc 1 97 17 is_stmt 1 view .LVU103
 506               	.LVL52:
  97:quantum/keymap_common.c ****             else
 507               		.loc 1 97 31 is_stmt 0 view .LVU104
 508 0190 EC01      		movw r28,r24
 509 0192 D86C      		ori r29,200
 510               	.LVL53:
  97:quantum/keymap_common.c ****             else
 511               		.loc 1 97 31 view .LVU105
 512 0194 00C0      		rjmp .L9
 513               	.LVL54:
 514               	.L30:
  99:quantum/keymap_common.c ****             break;
 515               		.loc 1 99 17 is_stmt 1 view .LVU106
  99:quantum/keymap_common.c ****             break;
 516               		.loc 1 99 31 is_stmt 0 view .LVU107
 517 0196 EC01      		movw r28,r24
 518 0198 D06C      		ori r29,192
 519               	.LVL55:
  99:quantum/keymap_common.c ****             break;
 520               		.loc 1 99 31 view .LVU108
 521 019a 00C0      		rjmp .L9
 522               	.LVL56:
 523               	.L7:
 104:quantum/keymap_common.c ****             break;
 524               		.loc 1 104 13 is_stmt 1 view .LVU109
 104:quantum/keymap_common.c ****             break;
 525               		.loc 1 104 27 is_stmt 0 view .LVU110
 526 019c DF70      		andi r29,15
 527               	.LVL57:
 104:quantum/keymap_common.c ****             break;
 528               		.loc 1 104 27 view .LVU111
 529 019e D06A      		ori r29,160
 530               	.LVL58:
 105:quantum/keymap_common.c ****         case QK_TO ... QK_TO_MAX:;
 531               		.loc 1 105 13 is_stmt 1 view .LVU112
 532 01a0 00C0      		rjmp .L9
 533               	.LVL59:
 534               	.L45:
 106:quantum/keymap_common.c ****             // Layer set "GOTO"
 535               		.loc 1 106 34 view .LVU113
 108:quantum/keymap_common.c ****             action_layer = keycode & 0xF;
 536               		.loc 1 108 13 view .LVU114
 109:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_SET(action_layer, when);
 537               		.loc 1 109 13 view .LVU115
 110:quantum/keymap_common.c ****             break;
 538               		.loc 1 110 13 view .LVU116
 108:quantum/keymap_common.c ****             action_layer = keycode & 0xF;
 539               		.loc 1 108 37 is_stmt 0 view .LVU117
 540 01a2 CE01      		movw r24,r28
 541 01a4 E4E0      		ldi r30,4
 542               		1:
 543 01a6 9695      		lsr r25
 544 01a8 8795      		ror r24
 545 01aa EA95      		dec r30
 546 01ac 01F4      		brne 1b
 108:quantum/keymap_common.c ****             action_layer = keycode & 0xF;
 547               		.loc 1 108 26 view .LVU118
 548 01ae 8370      		andi r24,lo8(3)
 110:quantum/keymap_common.c ****             break;
 549               		.loc 1 110 28 view .LVU119
 550 01b0 2C2F      		mov r18,r28
 551 01b2 2695      		lsr r18
 552 01b4 2695      		lsr r18
 553 01b6 2370      		andi r18,lo8(3)
 554 01b8 90E2      		ldi r25,lo8(32)
 555 01ba 299F      		mul r18,r25
 556 01bc 9001      		movw r18,r0
 557 01be 1124      		clr __zero_reg__
 558 01c0 382B      		or r19,r24
 559 01c2 8C2F      		mov r24,r28
 560 01c4 8370      		andi r24,lo8(3)
 561 01c6 C1E0      		ldi r28,lo8(1)
 562 01c8 D0E0      		ldi r29,0
 563               	.LVL60:
 110:quantum/keymap_common.c ****             break;
 564               		.loc 1 110 28 view .LVU120
 565 01ca 00C0      		rjmp 2f
 566               		1:
 567 01cc CC0F      		lsl r28
 568 01ce DD1F      		rol r29
 569               		2:
 570 01d0 8A95      		dec r24
 571 01d2 02F4      		brpl 1b
 572 01d4 C22B      		or r28,r18
 573 01d6 D32B      		or r29,r19
 574               	.LVL61:
 575               	.L50:
 120:quantum/keymap_common.c ****             break;
 576               		.loc 1 120 28 view .LVU121
 577 01d8 DC68      		ori r29,140
 578               	.LVL62:
 121:quantum/keymap_common.c ****         case QK_TOGGLE_LAYER ... QK_TOGGLE_LAYER_MAX:;
 579               		.loc 1 121 13 is_stmt 1 view .LVU122
 580 01da 00C0      		rjmp .L9
 581               	.LVL63:
 582               	.L46:
 122:quantum/keymap_common.c ****             // Set toggle
 583               		.loc 1 122 54 view .LVU123
 124:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_TOGGLE(action_layer);
 584               		.loc 1 124 13 view .LVU124
 125:quantum/keymap_common.c ****             break;
 585               		.loc 1 125 13 view .LVU125
 125:quantum/keymap_common.c ****             break;
 586               		.loc 1 125 28 is_stmt 0 view .LVU126
 587 01dc C1E0      		ldi r28,lo8(1)
 588 01de D0E0      		ldi r29,0
 589 01e0 00C0      		rjmp 2f
 590               		1:
 591 01e2 CC0F      		lsl r28
 592 01e4 DD1F      		rol r29
 593               		2:
 594 01e6 2A95      		dec r18
 595 01e8 02F4      		brpl 1b
 596 01ea 30E2      		ldi r19,lo8(32)
 597 01ec 939F      		mul r25,r19
 598 01ee C001      		movw r24,r0
 599 01f0 1124      		clr __zero_reg__
 600               	.LVL64:
 125:quantum/keymap_common.c ****             break;
 601               		.loc 1 125 28 view .LVU127
 602 01f2 C82B      		or r28,r24
 603 01f4 D92B      		or r29,r25
 604               	.LVL65:
 125:quantum/keymap_common.c ****             break;
 605               		.loc 1 125 28 view .LVU128
 606 01f6 DA68      		ori r29,138
 607               	.LVL66:
 126:quantum/keymap_common.c **** #endif
 608               		.loc 1 126 13 is_stmt 1 view .LVU129
 609 01f8 00C0      		rjmp .L9
 610               	.LVL67:
 611               	.L19:
 129:quantum/keymap_common.c ****             // OSL(action_layer) - One-shot action_layer
 612               		.loc 1 129 58 view .LVU130
 131:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_ONESHOT(action_layer);
 613               		.loc 1 131 13 view .LVU131
 132:quantum/keymap_common.c ****             break;
 614               		.loc 1 132 13 view .LVU132
 132:quantum/keymap_common.c ****             break;
 615               		.loc 1 132 28 is_stmt 0 view .LVU133
 616 01fa D82F      		mov r29,r24
 617 01fc CC27      		clr r28
 618               	.LVL68:
 132:quantum/keymap_common.c ****             break;
 619               		.loc 1 132 28 view .LVU134
 620 01fe C46F      		ori r28,244
 621 0200 D06A      		ori r29,160
 622               	.LVL69:
 133:quantum/keymap_common.c ****         case QK_ONE_SHOT_MOD ... QK_ONE_SHOT_MOD_MAX:;
 623               		.loc 1 133 13 is_stmt 1 view .LVU135
 624 0202 00C0      		rjmp .L9
 625               	.LVL70:
 626               	.L26:
 142:quantum/keymap_common.c ****             break;
 627               		.loc 1 142 13 view .LVU136
 142:quantum/keymap_common.c ****             break;
 628               		.loc 1 142 27 is_stmt 0 view .LVU137
 629 0204 DC2F      		mov r29,r28
 630 0206 CC27      		clr r28
 631               	.LVL71:
 142:quantum/keymap_common.c ****             break;
 632               		.loc 1 142 27 view .LVU138
 633 0208 C06F      		ori r28,240
 634 020a D06A      		ori r29,160
 635               	.LVL72:
 143:quantum/keymap_common.c ****         case QK_LAYER_MOD ... QK_LAYER_MOD_MAX:
 636               		.loc 1 143 13 is_stmt 1 view .LVU139
 637 020c 00C0      		rjmp .L9
 638               	.LVL73:
 639               	.L28:
 145:quantum/keymap_common.c ****             action_layer = (keycode >> 4) & 0xF;
 640               		.loc 1 145 13 view .LVU140
 145:quantum/keymap_common.c ****             action_layer = (keycode >> 4) & 0xF;
 641               		.loc 1 145 28 is_stmt 0 view .LVU141
 642 020e 8C2F      		mov r24,r28
 643 0210 8F70      		andi r24,lo8(15)
 644 0212 0E94 0000 		call mod_config
 645               	.LVL74:
 146:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_MODS(action_layer, mod);
 646               		.loc 1 146 13 is_stmt 1 view .LVU142
 147:quantum/keymap_common.c ****             break;
 647               		.loc 1 147 13 view .LVU143
 146:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_MODS(action_layer, mod);
 648               		.loc 1 146 37 is_stmt 0 view .LVU144
 649 0216 34E0      		ldi r19,4
 650               		1:
 651 0218 D695      		lsr r29
 652 021a C795      		ror r28
 653 021c 3A95      		dec r19
 654 021e 01F4      		brne 1b
 655               	.LVL75:
 146:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_MODS(action_layer, mod);
 656               		.loc 1 146 26 view .LVU145
 657 0220 CF70      		andi r28,lo8(15)
 147:quantum/keymap_common.c ****             break;
 658               		.loc 1 147 28 view .LVU146
 659 0222 9C2F      		mov r25,r28
 660               	.LVL76:
 147:quantum/keymap_common.c ****             break;
 661               		.loc 1 147 28 view .LVU147
 662 0224 EC01      		movw r28,r24
 663 0226 D069      		ori r29,144
 664               	.LVL77:
 148:quantum/keymap_common.c **** #endif
 665               		.loc 1 148 13 is_stmt 1 view .LVU148
 666 0228 00C0      		rjmp .L9
 667               		.cfi_endproc
 668               	.LFE25:
 670               		.section	.rodata.CSWTCH.1,"a"
 673               	CSWTCH.1:
 674 0000 E200      		.word	226
 675 0002 E900      		.word	233
 676 0004 EA00      		.word	234
 677 0006 B500      		.word	181
 678 0008 B600      		.word	182
 679 000a B700      		.word	183
 680 000c CD00      		.word	205
 681 000e 8301      		.word	387
 682 0010 CC00      		.word	204
 683 0012 8A01      		.word	394
 684 0014 9201      		.word	402
 685 0016 9401      		.word	404
 686 0018 2102      		.word	545
 687 001a 2302      		.word	547
 688 001c 2402      		.word	548
 689 001e 2502      		.word	549
 690 0020 2602      		.word	550
 691 0022 2702      		.word	551
 692 0024 2A02      		.word	554
 693 0026 B300      		.word	179
 694 0028 B400      		.word	180
 695 002a 6F00      		.word	111
 696 002c 7000      		.word	112
 697               		.section	.rodata.CSWTCH.0,"a"
 700               	CSWTCH.0:
 701 0000 81        		.byte	-127
 702 0001 82        		.byte	-126
 703 0002 83        		.byte	-125
 704               		.weak	fn_actions
 705               		.section	.progmem.data.fn_actions,"a"
 708               	fn_actions:
 709               		.text
 710               	.Letext0:
 711               		.file 3 "/usr/avr/include/stdint.h"
 712               		.file 4 "tmk_core/common/keyboard.h"
 713               		.file 5 "tmk_core/common/keycode.h"
 714               		.file 6 "tmk_core/common/action_code.h"
 715               		.file 7 "/usr/lib/gcc/avr/8.3.0/include/stddef.h"
 716               		.file 8 "tmk_core/common/action_macro.h"
 717               		.file 9 "tmk_core/common/action.h"
 718               		.file 10 "tmk_core/common/host.h"
 719               		.file 11 "tmk_core/common/avr/xprintf.h"
 720               		.file 12 "tmk_core/common/debug.h"
 721               		.file 13 "quantum/keycode_config.h"
 722               		.file 14 "quantum/quantum_keycodes.h"
 723               		.file 15 "quantum/keymap.h"
 724               		.file 16 "tmk_core/common/action_layer.h"
 725               		.file 17 "/usr/avr/include/stdio.h"
 726               		.file 18 "tmk_core/common/timer.h"
 727               		.file 19 "tmk_core/common/action_util.h"
 728               		.file 20 "/usr/avr/include/stdlib.h"
 729               		.file 21 "quantum/quantum.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keymap_common.c
     /tmp/ccRs3wYY.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccRs3wYY.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccRs3wYY.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccRs3wYY.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccRs3wYY.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccRs3wYY.s:13     .text.action_get_macro:0000000000000000 action_get_macro
     /tmp/ccRs3wYY.s:37     .text.action_function:0000000000000000 action_function
     /tmp/ccRs3wYY.s:56     .text.keymap_key_to_keycode:0000000000000000 keymap_key_to_keycode
     /tmp/ccRs3wYY.s:112    .text.keymap_function_id_to_action:0000000000000000 keymap_function_id_to_action
     /tmp/ccRs3wYY.s:708    .progmem.data.fn_actions:0000000000000000 fn_actions
     /tmp/ccRs3wYY.s:153    .text.action_for_key:0000000000000000 action_for_key
     /tmp/ccRs3wYY.s:700    .rodata.CSWTCH.0:0000000000000000 CSWTCH.0
     /tmp/ccRs3wYY.s:673    .rodata.CSWTCH.1:0000000000000000 CSWTCH.1

UNDEFINED SYMBOLS
keymaps
keycode_config
mod_config
__do_copy_data
