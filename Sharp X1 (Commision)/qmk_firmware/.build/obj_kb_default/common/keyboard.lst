   1               		.file	"keyboard.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.text.matrix_setup,"ax",@progbits
  12               		.weak	matrix_setup
  14               	matrix_setup:
  15               	.LFB107:
  16               		.file 1 "./tmk_core/common/keyboard.c"
   1:./tmk_core/common/keyboard.c **** /*
   2:./tmk_core/common/keyboard.c **** Copyright 2011, 2012, 2013 Jun Wako <wakojun@gmail.com>
   3:./tmk_core/common/keyboard.c **** 
   4:./tmk_core/common/keyboard.c **** This program is free software: you can redistribute it and/or modify
   5:./tmk_core/common/keyboard.c **** it under the terms of the GNU General Public License as published by
   6:./tmk_core/common/keyboard.c **** the Free Software Foundation, either version 2 of the License, or
   7:./tmk_core/common/keyboard.c **** (at your option) any later version.
   8:./tmk_core/common/keyboard.c **** 
   9:./tmk_core/common/keyboard.c **** This program is distributed in the hope that it will be useful,
  10:./tmk_core/common/keyboard.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:./tmk_core/common/keyboard.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:./tmk_core/common/keyboard.c **** GNU General Public License for more details.
  13:./tmk_core/common/keyboard.c **** 
  14:./tmk_core/common/keyboard.c **** You should have received a copy of the GNU General Public License
  15:./tmk_core/common/keyboard.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:./tmk_core/common/keyboard.c **** */
  17:./tmk_core/common/keyboard.c **** #include <stdint.h>
  18:./tmk_core/common/keyboard.c **** #include "keyboard.h"
  19:./tmk_core/common/keyboard.c **** #include "matrix.h"
  20:./tmk_core/common/keyboard.c **** #include "keymap.h"
  21:./tmk_core/common/keyboard.c **** #include "host.h"
  22:./tmk_core/common/keyboard.c **** #include "led.h"
  23:./tmk_core/common/keyboard.c **** #include "keycode.h"
  24:./tmk_core/common/keyboard.c **** #include "timer.h"
  25:./tmk_core/common/keyboard.c **** #include "print.h"
  26:./tmk_core/common/keyboard.c **** #include "debug.h"
  27:./tmk_core/common/keyboard.c **** #include "command.h"
  28:./tmk_core/common/keyboard.c **** #include "util.h"
  29:./tmk_core/common/keyboard.c **** #include "sendchar.h"
  30:./tmk_core/common/keyboard.c **** #include "eeconfig.h"
  31:./tmk_core/common/keyboard.c **** #include "backlight.h"
  32:./tmk_core/common/keyboard.c **** #include "action_layer.h"
  33:./tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
  34:./tmk_core/common/keyboard.c **** #   include "bootmagic.h"
  35:./tmk_core/common/keyboard.c **** #else
  36:./tmk_core/common/keyboard.c **** #   include "magic.h"
  37:./tmk_core/common/keyboard.c **** #endif
  38:./tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
  39:./tmk_core/common/keyboard.c **** #   include "mousekey.h"
  40:./tmk_core/common/keyboard.c **** #endif
  41:./tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  42:./tmk_core/common/keyboard.c **** #   include "ps2_mouse.h"
  43:./tmk_core/common/keyboard.c **** #endif
  44:./tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  45:./tmk_core/common/keyboard.c **** #   include "serial_mouse.h"
  46:./tmk_core/common/keyboard.c **** #endif
  47:./tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  48:./tmk_core/common/keyboard.c **** #   include "adb.h"
  49:./tmk_core/common/keyboard.c **** #endif
  50:./tmk_core/common/keyboard.c **** #ifdef RGBLIGHT_ENABLE
  51:./tmk_core/common/keyboard.c **** #   include "rgblight.h"
  52:./tmk_core/common/keyboard.c **** #endif
  53:./tmk_core/common/keyboard.c **** #ifdef SERIAL_LINK_ENABLE
  54:./tmk_core/common/keyboard.c **** #   include "serial_link/system/serial_link.h"
  55:./tmk_core/common/keyboard.c **** #endif
  56:./tmk_core/common/keyboard.c **** #ifdef VISUALIZER_ENABLE
  57:./tmk_core/common/keyboard.c **** #   include "visualizer/visualizer.h"
  58:./tmk_core/common/keyboard.c **** #endif
  59:./tmk_core/common/keyboard.c **** 
  60:./tmk_core/common/keyboard.c **** 
  61:./tmk_core/common/keyboard.c **** 
  62:./tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
  63:./tmk_core/common/keyboard.c **** static bool has_ghost_in_row(uint8_t row)
  64:./tmk_core/common/keyboard.c **** {
  65:./tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = matrix_get_row(row);
  66:./tmk_core/common/keyboard.c ****     // No ghost exists when less than 2 keys are down on the row
  67:./tmk_core/common/keyboard.c ****     if (((matrix_row - 1) & matrix_row) == 0)
  68:./tmk_core/common/keyboard.c ****         return false;
  69:./tmk_core/common/keyboard.c **** 
  70:./tmk_core/common/keyboard.c ****     // Ghost occurs when the row shares column line with other row
  71:./tmk_core/common/keyboard.c ****     for (uint8_t i=0; i < MATRIX_ROWS; i++) {
  72:./tmk_core/common/keyboard.c ****         if (i != row && (matrix_get_row(i) & matrix_row))
  73:./tmk_core/common/keyboard.c ****             return true;
  74:./tmk_core/common/keyboard.c ****     }
  75:./tmk_core/common/keyboard.c ****     return false;
  76:./tmk_core/common/keyboard.c **** }
  77:./tmk_core/common/keyboard.c **** #endif
  78:./tmk_core/common/keyboard.c **** 
  79:./tmk_core/common/keyboard.c **** __attribute__ ((weak))
  80:./tmk_core/common/keyboard.c **** void matrix_setup(void) {
  17               		.loc 1 80 25 view -0
  18               		.cfi_startproc
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  81:./tmk_core/common/keyboard.c **** }
  23               		.loc 1 81 1 view .LVU1
  24               	/* epilogue start */
  25 0000 0895      		ret
  26               		.cfi_endproc
  27               	.LFE107:
  29               		.section	.text.keyboard_setup,"ax",@progbits
  30               	.global	keyboard_setup
  32               	keyboard_setup:
  33               	.LFB108:
  82:./tmk_core/common/keyboard.c **** 
  83:./tmk_core/common/keyboard.c **** void keyboard_setup(void) {
  34               		.loc 1 83 27 view -0
  35               		.cfi_startproc
  36               	/* prologue: function */
  37               	/* frame size = 0 */
  38               	/* stack size = 0 */
  39               	.L__stack_usage = 0
  84:./tmk_core/common/keyboard.c ****     matrix_setup();
  40               		.loc 1 84 5 view .LVU3
  41 0000 0C94 0000 		jmp matrix_setup
  42               	.LVL0:
  43               		.cfi_endproc
  44               	.LFE108:
  46               		.section	.text.keyboard_init,"ax",@progbits
  47               	.global	keyboard_init
  49               	keyboard_init:
  50               	.LFB109:
  85:./tmk_core/common/keyboard.c **** }
  86:./tmk_core/common/keyboard.c **** 
  87:./tmk_core/common/keyboard.c **** void keyboard_init(void) {
  51               		.loc 1 87 26 view -0
  52               		.cfi_startproc
  53               	/* prologue: function */
  54               	/* frame size = 0 */
  55               	/* stack size = 0 */
  56               	.L__stack_usage = 0
  88:./tmk_core/common/keyboard.c ****     timer_init();
  57               		.loc 1 88 5 view .LVU5
  58 0000 0E94 0000 		call timer_init
  59               	.LVL1:
  89:./tmk_core/common/keyboard.c ****     matrix_init();
  60               		.loc 1 89 5 view .LVU6
  61 0004 0E94 0000 		call matrix_init
  62               	.LVL2:
  90:./tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  91:./tmk_core/common/keyboard.c ****     ps2_mouse_init();
  92:./tmk_core/common/keyboard.c **** #endif
  93:./tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  94:./tmk_core/common/keyboard.c ****     serial_mouse_init();
  95:./tmk_core/common/keyboard.c **** #endif
  96:./tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  97:./tmk_core/common/keyboard.c ****     adb_mouse_init();
  98:./tmk_core/common/keyboard.c **** #endif
  99:./tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
 100:./tmk_core/common/keyboard.c ****     bootmagic();
  63               		.loc 1 100 5 view .LVU7
  64 0008 0C94 0000 		jmp bootmagic
  65               	.LVL3:
  66               		.cfi_endproc
  67               	.LFE109:
  69               		.section	.text.keyboard_task,"ax",@progbits
  70               	.global	keyboard_task
  72               	keyboard_task:
  73               	.LFB110:
 101:./tmk_core/common/keyboard.c **** #else
 102:./tmk_core/common/keyboard.c ****     magic();
 103:./tmk_core/common/keyboard.c **** #endif
 104:./tmk_core/common/keyboard.c **** #ifdef BACKLIGHT_ENABLE
 105:./tmk_core/common/keyboard.c ****     backlight_init();
 106:./tmk_core/common/keyboard.c **** #endif
 107:./tmk_core/common/keyboard.c **** #ifdef RGBLIGHT_ENABLE
 108:./tmk_core/common/keyboard.c ****     rgblight_init();
 109:./tmk_core/common/keyboard.c **** #endif
 110:./tmk_core/common/keyboard.c **** #if defined(NKRO_ENABLE) && defined(FORCE_NKRO)
 111:./tmk_core/common/keyboard.c ****     keymap_config.nkro = 1;
 112:./tmk_core/common/keyboard.c **** #endif
 113:./tmk_core/common/keyboard.c **** }
 114:./tmk_core/common/keyboard.c **** 
 115:./tmk_core/common/keyboard.c **** /*
 116:./tmk_core/common/keyboard.c ****  * Do keyboard routine jobs: scan mantrix, light LEDs, ...
 117:./tmk_core/common/keyboard.c ****  * This is repeatedly called as fast as possible.
 118:./tmk_core/common/keyboard.c ****  */
 119:./tmk_core/common/keyboard.c **** void keyboard_task(void)
 120:./tmk_core/common/keyboard.c **** {
  74               		.loc 1 120 1 view -0
  75               		.cfi_startproc
  76 0000 BF92      		push r11
  77               	.LCFI0:
  78               		.cfi_def_cfa_offset 3
  79               		.cfi_offset 11, -2
  80 0002 CF92      		push r12
  81               	.LCFI1:
  82               		.cfi_def_cfa_offset 4
  83               		.cfi_offset 12, -3
  84 0004 DF92      		push r13
  85               	.LCFI2:
  86               		.cfi_def_cfa_offset 5
  87               		.cfi_offset 13, -4
  88 0006 EF92      		push r14
  89               	.LCFI3:
  90               		.cfi_def_cfa_offset 6
  91               		.cfi_offset 14, -5
  92 0008 FF92      		push r15
  93               	.LCFI4:
  94               		.cfi_def_cfa_offset 7
  95               		.cfi_offset 15, -6
  96 000a 0F93      		push r16
  97               	.LCFI5:
  98               		.cfi_def_cfa_offset 8
  99               		.cfi_offset 16, -7
 100 000c 1F93      		push r17
 101               	.LCFI6:
 102               		.cfi_def_cfa_offset 9
 103               		.cfi_offset 17, -8
 104 000e CF93      		push r28
 105               	.LCFI7:
 106               		.cfi_def_cfa_offset 10
 107               		.cfi_offset 28, -9
 108 0010 DF93      		push r29
 109               	.LCFI8:
 110               		.cfi_def_cfa_offset 11
 111               		.cfi_offset 29, -10
 112 0012 00D0      		rcall .
 113 0014 00D0      		rcall .
 114 0016 0F92      		push __tmp_reg__
 115               	.LCFI9:
 116               		.cfi_def_cfa_offset 16
 117 0018 CDB7      		in r28,__SP_L__
 118 001a DEB7      		in r29,__SP_H__
 119               	.LCFI10:
 120               		.cfi_def_cfa_register 28
 121               	/* prologue: function */
 122               	/* frame size = 5 */
 123               	/* stack size = 14 */
 124               	.L__stack_usage = 14
 121:./tmk_core/common/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 125               		.loc 1 121 5 view .LVU9
 122:./tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 123:./tmk_core/common/keyboard.c ****     static matrix_row_t matrix_ghost[MATRIX_ROWS];
 124:./tmk_core/common/keyboard.c **** #endif
 125:./tmk_core/common/keyboard.c ****     static uint8_t led_status = 0;
 126               		.loc 1 125 5 view .LVU10
 126:./tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = 0;
 127               		.loc 1 126 5 view .LVU11
 128               	.LVL4:
 127:./tmk_core/common/keyboard.c ****     matrix_row_t matrix_change = 0;
 129               		.loc 1 127 5 view .LVU12
 128:./tmk_core/common/keyboard.c **** 
 129:./tmk_core/common/keyboard.c ****     matrix_scan();
 130               		.loc 1 129 5 view .LVU13
 131 001c 0E94 0000 		call matrix_scan
 132               	.LVL5:
 130:./tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 133               		.loc 1 130 5 view .LVU14
 134               	.LBB7:
 135               		.loc 1 130 10 view .LVU15
 136               		.loc 1 130 27 view .LVU16
 137 0020 80E0      		ldi r24,lo8(matrix_prev.1)
 138 0022 C82E      		mov r12,r24
 139 0024 80E0      		ldi r24,hi8(matrix_prev.1)
 140 0026 D82E      		mov r13,r24
 141               	.LBE7:
 129:./tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 142               		.loc 1 129 5 is_stmt 0 view .LVU17
 143 0028 10E0      		ldi r17,0
 144 002a 00E0      		ldi r16,0
 145               	.LVL6:
 146               	.L11:
 129:./tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 147               		.loc 1 129 5 view .LVU18
 148 002c E02E      		mov r14,r16
 149               	.LVL7:
 150               	.LBB12:
 131:./tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 151               		.loc 1 131 9 is_stmt 1 view .LVU19
 152               		.loc 1 131 22 is_stmt 0 view .LVU20
 153 002e 802F      		mov r24,r16
 154 0030 0E94 0000 		call matrix_get_row
 155               	.LVL8:
 156 0034 B82E      		mov r11,r24
 157               	.LVL9:
 132:./tmk_core/common/keyboard.c ****         matrix_change = matrix_row ^ matrix_prev[r];
 158               		.loc 1 132 9 is_stmt 1 view .LVU21
 159               		.loc 1 132 49 is_stmt 0 view .LVU22
 160 0036 F601      		movw r30,r12
 161 0038 F190      		ld r15,Z+
 162 003a 6F01      		movw r12,r30
 163               	.LVL10:
 133:./tmk_core/common/keyboard.c ****         if (matrix_change) {
 164               		.loc 1 133 9 is_stmt 1 view .LVU23
 165               		.loc 1 133 12 is_stmt 0 view .LVU24
 166 003c F816      		cp r15,r24
 167 003e 01F4      		brne .+2
 168 0040 00C0      		rjmp .L5
 134:./tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 135:./tmk_core/common/keyboard.c ****             if (has_ghost_in_row(r)) {
 136:./tmk_core/common/keyboard.c ****                 /* Keep track of whether ghosted status has changed for
 137:./tmk_core/common/keyboard.c ****                  * debugging. But don't update matrix_prev until un-ghosted, or
 138:./tmk_core/common/keyboard.c ****                  * the last key would be lost.
 139:./tmk_core/common/keyboard.c ****                  */
 140:./tmk_core/common/keyboard.c ****                 if (debug_matrix && matrix_ghost[r] != matrix_row) {
 141:./tmk_core/common/keyboard.c ****                     matrix_print();
 142:./tmk_core/common/keyboard.c ****                 }
 143:./tmk_core/common/keyboard.c ****                 matrix_ghost[r] = matrix_row;
 144:./tmk_core/common/keyboard.c ****                 continue;
 145:./tmk_core/common/keyboard.c ****             }
 146:./tmk_core/common/keyboard.c ****             matrix_ghost[r] = matrix_row;
 147:./tmk_core/common/keyboard.c **** #endif
 148:./tmk_core/common/keyboard.c ****             if (debug_matrix) matrix_print();
 169               		.loc 1 148 13 is_stmt 1 view .LVU25
 170               		.loc 1 148 17 is_stmt 0 view .LVU26
 171 0042 8091 0000 		lds r24,debug_config
 172               		.loc 1 148 16 view .LVU27
 173 0046 81FD      		sbrc r24,1
 174               		.loc 1 148 31 is_stmt 1 discriminator 1 view .LVU28
 175 0048 0E94 0000 		call matrix_print
 176               	.LVL11:
 177               	.L6:
 132:./tmk_core/common/keyboard.c ****         if (matrix_change) {
 178               		.loc 1 132 23 is_stmt 0 view .LVU29
 179 004c FB24      		eor r15,r11
 180               	.LVL12:
 149:./tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 181               		.loc 1 149 13 is_stmt 1 view .LVU30
 182               	.LBB8:
 183               		.loc 1 149 18 view .LVU31
 184               		.loc 1 149 35 view .LVU32
 185               	.LBE8:
 132:./tmk_core/common/keyboard.c ****         if (matrix_change) {
 186               		.loc 1 132 23 is_stmt 0 view .LVU33
 187 004e 30E0      		ldi r19,0
 188 0050 20E0      		ldi r18,0
 189               	.LBB10:
 150:./tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 190               		.loc 1 150 21 view .LVU34
 191 0052 4F2D      		mov r20,r15
 192 0054 50E0      		ldi r21,0
 193               	.LVL13:
 194               	.L10:
 195               		.loc 1 150 21 view .LVU35
 196 0056 822F      		mov r24,r18
 197               	.LVL14:
 198               		.loc 1 150 17 is_stmt 1 view .LVU36
 199               		.loc 1 150 21 is_stmt 0 view .LVU37
 200 0058 BA01      		movw r22,r20
 201 005a 022E      		mov r0,r18
 202 005c 00C0      		rjmp 2f
 203               		1:
 204 005e 7595      		asr r23
 205 0060 6795      		ror r22
 206               		2:
 207 0062 0A94      		dec r0
 208 0064 02F4      		brpl 1b
 209               		.loc 1 150 20 view .LVU38
 210 0066 60FF      		sbrs r22,0
 211 0068 00C0      		rjmp .L7
 212               	.LBB9:
 151:./tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 213               		.loc 1 151 21 is_stmt 1 view .LVU39
 214               		.loc 1 151 45 is_stmt 0 view .LVU40
 215 006a 2983      		std Y+1,r18
 216 006c EA82      		std Y+2,r14
 152:./tmk_core/common/keyboard.c ****                         .key = (keypos_t){ .row = r, .col = c },
 153:./tmk_core/common/keyboard.c ****                         .pressed = (matrix_row & ((matrix_row_t)1<<c)),
 217               		.loc 1 153 66 view .LVU41
 218 006e 21E0      		ldi r18,lo8(1)
 219 0070 30E0      		ldi r19,0
 220               	.LVL15:
 221               		.loc 1 153 66 view .LVU42
 222 0072 7901      		movw r14,r18
 223 0074 00C0      		rjmp 2f
 224               		1:
 225 0076 EE0C      		lsl r14
 226 0078 FF1C      		rol r15
 227               		2:
 228 007a 8A95      		dec r24
 229 007c 02F4      		brpl 1b
 230               		.loc 1 153 48 view .LVU43
 231 007e 8B2D      		mov r24,r11
 232 0080 90E0      		ldi r25,0
 233 0082 8E21      		and r24,r14
 234 0084 9F21      		and r25,r15
 235 0086 892B      		or r24,r25
 236 0088 01F4      		brne .L8
 237 008a 20E0      		ldi r18,0
 238               	.L8:
 151:./tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 239               		.loc 1 151 45 view .LVU44
 240 008c 2B83      		std Y+3,r18
 154:./tmk_core/common/keyboard.c ****                         .time = (timer_read() | 1) /* time should not be 0 */
 241               		.loc 1 154 34 view .LVU45
 242 008e 0E94 0000 		call timer_read
 243               	.LVL16:
 244               		.loc 1 154 47 view .LVU46
 245 0092 8160      		ori r24,1
 151:./tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 246               		.loc 1 151 45 view .LVU47
 247 0094 782F      		mov r23,r24
 248 0096 9D83      		std Y+5,r25
 249 0098 8C83      		std Y+4,r24
 151:./tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 250               		.loc 1 151 21 view .LVU48
 251 009a 4981      		ldd r20,Y+1
 252 009c 5A81      		ldd r21,Y+2
 253 009e 6B81      		ldd r22,Y+3
 254 00a0 892F      		mov r24,r25
 255 00a2 0E94 0000 		call action_exec
 256               	.LVL17:
 155:./tmk_core/common/keyboard.c ****                     });
 156:./tmk_core/common/keyboard.c ****                     // record a processed key
 157:./tmk_core/common/keyboard.c ****                     matrix_prev[r] ^= ((matrix_row_t)1<<c);
 257               		.loc 1 157 21 is_stmt 1 view .LVU49
 258               		.loc 1 157 36 is_stmt 0 view .LVU50
 259 00a6 F801      		movw r30,r16
 260 00a8 E050      		subi r30,lo8(-(matrix_prev.1))
 261 00aa F040      		sbci r31,hi8(-(matrix_prev.1))
 262 00ac 8081      		ld r24,Z
 263 00ae 8E25      		eor r24,r14
 264 00b0 8083      		st Z,r24
 158:./tmk_core/common/keyboard.c ****                     // process a key per task call
 159:./tmk_core/common/keyboard.c ****                     goto MATRIX_LOOP_END;
 265               		.loc 1 159 21 is_stmt 1 view .LVU51
 266               	.LVL18:
 267               	.L9:
 268               		.loc 1 159 21 is_stmt 0 view .LVU52
 269               	.LBE9:
 270               	.LBE10:
 271               	.LBE12:
 160:./tmk_core/common/keyboard.c ****                 }
 161:./tmk_core/common/keyboard.c ****             }
 162:./tmk_core/common/keyboard.c ****         }
 163:./tmk_core/common/keyboard.c ****     }
 164:./tmk_core/common/keyboard.c ****     // call with pseudo tick event when no real key event.
 165:./tmk_core/common/keyboard.c ****     action_exec(TICK);
 166:./tmk_core/common/keyboard.c **** 
 167:./tmk_core/common/keyboard.c **** MATRIX_LOOP_END:
 168:./tmk_core/common/keyboard.c **** 
 169:./tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
 170:./tmk_core/common/keyboard.c ****     // mousekey repeat & acceleration
 171:./tmk_core/common/keyboard.c ****     mousekey_task();
 272               		.loc 1 171 5 is_stmt 1 view .LVU53
 273 00b2 0E94 0000 		call mousekey_task
 274               	.LVL19:
 172:./tmk_core/common/keyboard.c **** #endif
 173:./tmk_core/common/keyboard.c **** 
 174:./tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
 175:./tmk_core/common/keyboard.c ****     ps2_mouse_task();
 176:./tmk_core/common/keyboard.c **** #endif
 177:./tmk_core/common/keyboard.c **** 
 178:./tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
 179:./tmk_core/common/keyboard.c ****     serial_mouse_task();
 180:./tmk_core/common/keyboard.c **** #endif
 181:./tmk_core/common/keyboard.c **** 
 182:./tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
 183:./tmk_core/common/keyboard.c ****     adb_mouse_task();
 184:./tmk_core/common/keyboard.c **** #endif
 185:./tmk_core/common/keyboard.c **** 
 186:./tmk_core/common/keyboard.c **** #ifdef SERIAL_LINK_ENABLE
 187:./tmk_core/common/keyboard.c **** 	serial_link_update();
 188:./tmk_core/common/keyboard.c **** #endif
 189:./tmk_core/common/keyboard.c **** 
 190:./tmk_core/common/keyboard.c **** #ifdef VISUALIZER_ENABLE
 191:./tmk_core/common/keyboard.c ****     visualizer_update(default_layer_state, layer_state, host_keyboard_leds());
 192:./tmk_core/common/keyboard.c **** #endif
 193:./tmk_core/common/keyboard.c **** 
 194:./tmk_core/common/keyboard.c ****     // update LED
 195:./tmk_core/common/keyboard.c ****     if (led_status != host_keyboard_leds()) {
 275               		.loc 1 195 5 view .LVU54
 276               		.loc 1 195 23 is_stmt 0 view .LVU55
 277 00b6 0E94 0000 		call host_keyboard_leds
 278               	.LVL20:
 279               		.loc 1 195 8 view .LVU56
 280 00ba 9091 0000 		lds r25,led_status.0
 281 00be 8917      		cp r24,r25
 282 00c0 01F0      		breq .L4
 196:./tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 283               		.loc 1 196 9 is_stmt 1 view .LVU57
 284               		.loc 1 196 22 is_stmt 0 view .LVU58
 285 00c2 0E94 0000 		call host_keyboard_leds
 286               	.LVL21:
 287               		.loc 1 196 20 view .LVU59
 288 00c6 8093 0000 		sts led_status.0,r24
 197:./tmk_core/common/keyboard.c ****         keyboard_set_leds(led_status);
 289               		.loc 1 197 9 is_stmt 1 view .LVU60
 290               	.LVL22:
 291               	.LBB13:
 292               	.LBI13:
 198:./tmk_core/common/keyboard.c ****     }
 199:./tmk_core/common/keyboard.c **** }
 200:./tmk_core/common/keyboard.c **** 
 201:./tmk_core/common/keyboard.c **** void keyboard_set_leds(uint8_t leds)
 293               		.loc 1 201 6 view .LVU61
 294               	.LBB14:
 202:./tmk_core/common/keyboard.c **** {
 203:./tmk_core/common/keyboard.c ****     if (debug_keyboard) { debug("keyboard_set_led: "); debug_hex8(leds); debug("\n"); }
 295               		.loc 1 203 5 view .LVU62
 296               		.loc 1 203 54 view .LVU63
 297               		.loc 1 203 72 view .LVU64
 298               		.loc 1 203 85 view .LVU65
 204:./tmk_core/common/keyboard.c ****     led_set(leds);
 299               		.loc 1 204 5 view .LVU66
 300               	/* epilogue start */
 301               	.LBE14:
 302               	.LBE13:
 199:./tmk_core/common/keyboard.c **** 
 303               		.loc 1 199 1 is_stmt 0 view .LVU67
 304 00ca 0F90      		pop __tmp_reg__
 305 00cc 0F90      		pop __tmp_reg__
 306 00ce 0F90      		pop __tmp_reg__
 307 00d0 0F90      		pop __tmp_reg__
 308 00d2 0F90      		pop __tmp_reg__
 309 00d4 DF91      		pop r29
 310 00d6 CF91      		pop r28
 311 00d8 1F91      		pop r17
 312 00da 0F91      		pop r16
 313 00dc FF90      		pop r15
 314 00de EF90      		pop r14
 315 00e0 DF90      		pop r13
 316 00e2 CF90      		pop r12
 317 00e4 BF90      		pop r11
 318               	.LVL23:
 319               	.LBB16:
 320               	.LBB15:
 321               		.loc 1 204 5 view .LVU68
 322 00e6 0C94 0000 		jmp led_set
 323               	.LVL24:
 324               	.L7:
 325               		.loc 1 204 5 view .LVU69
 326               	.LBE15:
 327               	.LBE16:
 328               	.LBB17:
 329               	.LBB11:
 149:./tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 330               		.loc 1 149 51 is_stmt 1 discriminator 2 view .LVU70
 149:./tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 331               		.loc 1 149 35 discriminator 2 view .LVU71
 332 00ea 2F5F      		subi r18,-1
 333 00ec 3F4F      		sbci r19,-1
 334               	.LVL25:
 149:./tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 335               		.loc 1 149 35 is_stmt 0 discriminator 2 view .LVU72
 336 00ee 2830      		cpi r18,8
 337 00f0 3105      		cpc r19,__zero_reg__
 338 00f2 01F0      		breq .+2
 339 00f4 00C0      		rjmp .L10
 340               	.LVL26:
 341               	.L5:
 149:./tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 342               		.loc 1 149 35 discriminator 2 view .LVU73
 343               	.LBE11:
 130:./tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 344               		.loc 1 130 43 is_stmt 1 view .LVU74
 130:./tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 345               		.loc 1 130 27 view .LVU75
 346 00f6 0F5F      		subi r16,-1
 347 00f8 1F4F      		sbci r17,-1
 348               	.LVL27:
 130:./tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 349               		.loc 1 130 27 is_stmt 0 view .LVU76
 350 00fa 0F30      		cpi r16,15
 351 00fc 1105      		cpc r17,__zero_reg__
 352 00fe 01F0      		breq .+2
 353 0100 00C0      		rjmp .L11
 354               	.LBE17:
 165:./tmk_core/common/keyboard.c **** 
 355               		.loc 1 165 5 is_stmt 1 view .LVU77
 165:./tmk_core/common/keyboard.c **** 
 356               		.loc 1 165 17 is_stmt 0 view .LVU78
 357 0102 8FEF      		ldi r24,lo8(-1)
 358 0104 8983      		std Y+1,r24
 359 0106 8A83      		std Y+2,r24
 360 0108 1B82      		std Y+3,__zero_reg__
 361 010a 0E94 0000 		call timer_read
 362               	.LVL28:
 363 010e 8160      		ori r24,1
 364 0110 782F      		mov r23,r24
 365 0112 9D83      		std Y+5,r25
 366 0114 8C83      		std Y+4,r24
 165:./tmk_core/common/keyboard.c **** 
 367               		.loc 1 165 5 view .LVU79
 368 0116 4981      		ldd r20,Y+1
 369 0118 5A81      		ldd r21,Y+2
 370 011a 6B81      		ldd r22,Y+3
 371 011c 892F      		mov r24,r25
 372 011e 0E94 0000 		call action_exec
 373               	.LVL29:
 374 0122 00C0      		rjmp .L9
 375               	.LVL30:
 376               	.L4:
 377               	/* epilogue start */
 199:./tmk_core/common/keyboard.c **** 
 378               		.loc 1 199 1 view .LVU80
 379 0124 0F90      		pop __tmp_reg__
 380 0126 0F90      		pop __tmp_reg__
 381 0128 0F90      		pop __tmp_reg__
 382 012a 0F90      		pop __tmp_reg__
 383 012c 0F90      		pop __tmp_reg__
 384 012e DF91      		pop r29
 385 0130 CF91      		pop r28
 386 0132 1F91      		pop r17
 387 0134 0F91      		pop r16
 388 0136 FF90      		pop r15
 389 0138 EF90      		pop r14
 390 013a DF90      		pop r13
 391 013c CF90      		pop r12
 392 013e BF90      		pop r11
 393               	.LVL31:
 199:./tmk_core/common/keyboard.c **** 
 394               		.loc 1 199 1 view .LVU81
 395 0140 0895      		ret
 396               		.cfi_endproc
 397               	.LFE110:
 399               		.section	.text.keyboard_set_leds,"ax",@progbits
 400               	.global	keyboard_set_leds
 402               	keyboard_set_leds:
 403               	.LVL32:
 404               	.LFB111:
 202:./tmk_core/common/keyboard.c ****     if (debug_keyboard) { debug("keyboard_set_led: "); debug_hex8(leds); debug("\n"); }
 405               		.loc 1 202 1 is_stmt 1 view -0
 406               		.cfi_startproc
 407               	/* prologue: function */
 408               	/* frame size = 0 */
 409               	/* stack size = 0 */
 410               	.L__stack_usage = 0
 203:./tmk_core/common/keyboard.c ****     led_set(leds);
 411               		.loc 1 203 5 view .LVU83
 203:./tmk_core/common/keyboard.c ****     led_set(leds);
 412               		.loc 1 203 54 view .LVU84
 203:./tmk_core/common/keyboard.c ****     led_set(leds);
 413               		.loc 1 203 72 view .LVU85
 203:./tmk_core/common/keyboard.c ****     led_set(leds);
 414               		.loc 1 203 85 view .LVU86
 415               		.loc 1 204 5 view .LVU87
 416 0000 0C94 0000 		jmp led_set
 417               	.LVL33:
 418               		.loc 1 204 5 is_stmt 0 view .LVU88
 419               		.cfi_endproc
 420               	.LFE111:
 422               		.section	.bss.led_status.0,"aw",@nobits
 425               	led_status.0:
 426 0000 00        		.zero	1
 427               		.section	.bss.matrix_prev.1,"aw",@nobits
 430               	matrix_prev.1:
 431 0000 0000 0000 		.zero	15
 431      0000 0000 
 431      0000 0000 
 431      0000 00
 432               		.text
 433               	.Letext0:
 434               		.file 2 "/usr/avr/include/stdint.h"
 435               		.file 3 "./tmk_core/common/keyboard.h"
 436               		.file 4 "./tmk_core/common/matrix.h"
 437               		.file 5 "./tmk_core/common/debug.h"
 438               		.file 6 "./tmk_core/common/led.h"
 439               		.file 7 "./tmk_core/common/action.h"
 440               		.file 8 "./tmk_core/common/host.h"
 441               		.file 9 "./tmk_core/common/timer.h"
 442               		.file 10 "./tmk_core/common/mousekey.h"
 443               		.file 11 "./tmk_core/common/bootmagic.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keyboard.c
     /tmp/ccueduC1.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccueduC1.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccueduC1.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccueduC1.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/ccueduC1.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccueduC1.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccueduC1.s:14     .text.matrix_setup:0000000000000000 matrix_setup
     /tmp/ccueduC1.s:32     .text.keyboard_setup:0000000000000000 keyboard_setup
     /tmp/ccueduC1.s:49     .text.keyboard_init:0000000000000000 keyboard_init
     /tmp/ccueduC1.s:72     .text.keyboard_task:0000000000000000 keyboard_task
     /tmp/ccueduC1.s:430    .bss.matrix_prev.1:0000000000000000 matrix_prev.1
     /tmp/ccueduC1.s:425    .bss.led_status.0:0000000000000000 led_status.0
     /tmp/ccueduC1.s:402    .text.keyboard_set_leds:0000000000000000 keyboard_set_leds

UNDEFINED SYMBOLS
timer_init
matrix_init
bootmagic
matrix_scan
matrix_get_row
debug_config
matrix_print
timer_read
action_exec
mousekey_task
host_keyboard_leds
led_set
__do_clear_bss
