   1               		.file	"action_layer.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.text.default_layer_debug,"ax",@progbits
  12               	.global	default_layer_debug
  14               	default_layer_debug:
  15               	.LFB5:
  16               		.file 1 "./tmk_core/common/action_layer.c"
   1:./tmk_core/common/action_layer.c **** #include <stdint.h>
   2:./tmk_core/common/action_layer.c **** #include "keyboard.h"
   3:./tmk_core/common/action_layer.c **** #include "action.h"
   4:./tmk_core/common/action_layer.c **** #include "util.h"
   5:./tmk_core/common/action_layer.c **** #include "action_layer.h"
   6:./tmk_core/common/action_layer.c **** 
   7:./tmk_core/common/action_layer.c **** #ifdef DEBUG_ACTION
   8:./tmk_core/common/action_layer.c **** #include "debug.h"
   9:./tmk_core/common/action_layer.c **** #else
  10:./tmk_core/common/action_layer.c **** #include "nodebug.h"
  11:./tmk_core/common/action_layer.c **** #endif
  12:./tmk_core/common/action_layer.c **** 
  13:./tmk_core/common/action_layer.c **** 
  14:./tmk_core/common/action_layer.c **** /*
  15:./tmk_core/common/action_layer.c ****  * Default Layer State
  16:./tmk_core/common/action_layer.c ****  */
  17:./tmk_core/common/action_layer.c **** uint32_t default_layer_state = 0;
  18:./tmk_core/common/action_layer.c **** 
  19:./tmk_core/common/action_layer.c **** static void default_layer_state_set(uint32_t state)
  20:./tmk_core/common/action_layer.c **** {
  21:./tmk_core/common/action_layer.c ****     debug("default_layer_state: ");
  22:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug(" to ");
  23:./tmk_core/common/action_layer.c ****     default_layer_state = state;
  24:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug("\n");
  25:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
  26:./tmk_core/common/action_layer.c **** }
  27:./tmk_core/common/action_layer.c **** 
  28:./tmk_core/common/action_layer.c **** void default_layer_debug(void)
  29:./tmk_core/common/action_layer.c **** {
  17               		.loc 1 29 1 view -0
  18               		.cfi_startproc
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  30:./tmk_core/common/action_layer.c ****     dprintf("%08lX(%u)", default_layer_state, biton32(default_layer_state));
  23               		.loc 1 30 76 view .LVU1
  24               	/* epilogue start */
  31:./tmk_core/common/action_layer.c **** }
  25               		.loc 1 31 1 is_stmt 0 view .LVU2
  26 0000 0895      		ret
  27               		.cfi_endproc
  28               	.LFE5:
  30               		.section	.text.default_layer_set,"ax",@progbits
  31               	.global	default_layer_set
  33               	default_layer_set:
  34               	.LVL0:
  35               	.LFB6:
  32:./tmk_core/common/action_layer.c **** 
  33:./tmk_core/common/action_layer.c **** void default_layer_set(uint32_t state)
  34:./tmk_core/common/action_layer.c **** {
  36               		.loc 1 34 1 is_stmt 1 view -0
  37               		.cfi_startproc
  38               	/* prologue: function */
  39               	/* frame size = 0 */
  40               	/* stack size = 0 */
  41               	.L__stack_usage = 0
  42               		.loc 1 34 1 is_stmt 0 view .LVU4
  43 0000 6093 0000 		sts default_layer_state,r22
  44 0004 7093 0000 		sts default_layer_state+1,r23
  45 0008 8093 0000 		sts default_layer_state+2,r24
  46 000c 9093 0000 		sts default_layer_state+3,r25
  35:./tmk_core/common/action_layer.c ****     default_layer_state_set(state);
  47               		.loc 1 35 5 is_stmt 1 view .LVU5
  48               	.LVL1:
  49               	.LBB4:
  50               	.LBI4:
  19:./tmk_core/common/action_layer.c **** {
  51               		.loc 1 19 13 view .LVU6
  52               	.LBB5:
  21:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug(" to ");
  53               		.loc 1 21 35 view .LVU7
  22:./tmk_core/common/action_layer.c ****     default_layer_state = state;
  54               		.loc 1 22 5 view .LVU8
  22:./tmk_core/common/action_layer.c ****     default_layer_state = state;
  55               		.loc 1 22 41 view .LVU9
  23:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug("\n");
  56               		.loc 1 23 5 view .LVU10
  24:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
  57               		.loc 1 24 5 view .LVU11
  24:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
  58               		.loc 1 24 39 view .LVU12
  25:./tmk_core/common/action_layer.c **** }
  59               		.loc 1 25 5 view .LVU13
  60 0010 0C94 0000 		jmp clear_keyboard_but_mods
  61               	.LVL2:
  25:./tmk_core/common/action_layer.c **** }
  62               		.loc 1 25 5 is_stmt 0 view .LVU14
  63               	.LBE5:
  64               	.LBE4:
  65               		.cfi_endproc
  66               	.LFE6:
  68               		.section	.text.default_layer_or,"ax",@progbits
  69               	.global	default_layer_or
  71               	default_layer_or:
  72               	.LVL3:
  73               	.LFB7:
  36:./tmk_core/common/action_layer.c **** }
  37:./tmk_core/common/action_layer.c **** 
  38:./tmk_core/common/action_layer.c **** #ifndef NO_ACTION_LAYER
  39:./tmk_core/common/action_layer.c **** void default_layer_or(uint32_t state)
  40:./tmk_core/common/action_layer.c **** {
  74               		.loc 1 40 1 is_stmt 1 view -0
  75               		.cfi_startproc
  76               		.loc 1 40 1 is_stmt 0 view .LVU16
  77 0000 CF93      		push r28
  78               	.LCFI0:
  79               		.cfi_def_cfa_offset 3
  80               		.cfi_offset 28, -2
  81 0002 DF93      		push r29
  82               	.LCFI1:
  83               		.cfi_def_cfa_offset 4
  84               		.cfi_offset 29, -3
  85 0004 00D0      		rcall .
  86 0006 00D0      		rcall .
  87               	.LCFI2:
  88               		.cfi_def_cfa_offset 8
  89 0008 CDB7      		in r28,__SP_L__
  90 000a DEB7      		in r29,__SP_H__
  91               	.LCFI3:
  92               		.cfi_def_cfa_register 28
  93               	/* prologue: function */
  94               	/* frame size = 4 */
  95               	/* stack size = 6 */
  96               	.L__stack_usage = 6
  97 000c 6983      		std Y+1,r22
  98 000e 7A83      		std Y+2,r23
  99 0010 8B83      		std Y+3,r24
 100 0012 9C83      		std Y+4,r25
  41:./tmk_core/common/action_layer.c ****     default_layer_state_set(default_layer_state | state);
 101               		.loc 1 41 5 is_stmt 1 view .LVU17
 102               	.LVL4:
 103               	.LBB8:
 104               	.LBI8:
  19:./tmk_core/common/action_layer.c **** {
 105               		.loc 1 19 13 view .LVU18
 106               	.LBB9:
  21:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug(" to ");
 107               		.loc 1 21 35 view .LVU19
  22:./tmk_core/common/action_layer.c ****     default_layer_state = state;
 108               		.loc 1 22 5 view .LVU20
  22:./tmk_core/common/action_layer.c ****     default_layer_state = state;
 109               		.loc 1 22 41 view .LVU21
  23:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug("\n");
 110               		.loc 1 23 5 view .LVU22
 111               	.LBE9:
 112               	.LBE8:
 113               		.loc 1 41 5 is_stmt 0 view .LVU23
 114 0014 8091 0000 		lds r24,default_layer_state
 115 0018 9091 0000 		lds r25,default_layer_state+1
 116 001c A091 0000 		lds r26,default_layer_state+2
 117 0020 B091 0000 		lds r27,default_layer_state+3
 118 0024 2981      		ldd r18,Y+1
 119 0026 3A81      		ldd r19,Y+2
 120 0028 4B81      		ldd r20,Y+3
 121 002a 5C81      		ldd r21,Y+4
 122 002c 822B      		or r24,r18
 123 002e 932B      		or r25,r19
 124 0030 A42B      		or r26,r20
 125 0032 B52B      		or r27,r21
 126               	.LBB12:
 127               	.LBB10:
  23:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug("\n");
 128               		.loc 1 23 25 view .LVU24
 129 0034 8093 0000 		sts default_layer_state,r24
 130 0038 9093 0000 		sts default_layer_state+1,r25
 131 003c A093 0000 		sts default_layer_state+2,r26
 132 0040 B093 0000 		sts default_layer_state+3,r27
 133               	.LVL5:
  24:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 134               		.loc 1 24 5 is_stmt 1 view .LVU25
  24:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 135               		.loc 1 24 39 view .LVU26
  25:./tmk_core/common/action_layer.c **** }
 136               		.loc 1 25 5 view .LVU27
 137               	/* epilogue start */
 138               	.LBE10:
 139               	.LBE12:
  42:./tmk_core/common/action_layer.c **** }
 140               		.loc 1 42 1 is_stmt 0 view .LVU28
 141 0044 0F90      		pop __tmp_reg__
 142 0046 0F90      		pop __tmp_reg__
 143 0048 0F90      		pop __tmp_reg__
 144 004a 0F90      		pop __tmp_reg__
 145 004c DF91      		pop r29
 146 004e CF91      		pop r28
 147               	.LBB13:
 148               	.LBB11:
  25:./tmk_core/common/action_layer.c **** }
 149               		.loc 1 25 5 view .LVU29
 150 0050 0C94 0000 		jmp clear_keyboard_but_mods
 151               	.LVL6:
  25:./tmk_core/common/action_layer.c **** }
 152               		.loc 1 25 5 view .LVU30
 153               	.LBE11:
 154               	.LBE13:
 155               		.cfi_endproc
 156               	.LFE7:
 158               		.section	.text.default_layer_and,"ax",@progbits
 159               	.global	default_layer_and
 161               	default_layer_and:
 162               	.LVL7:
 163               	.LFB8:
  43:./tmk_core/common/action_layer.c **** void default_layer_and(uint32_t state)
  44:./tmk_core/common/action_layer.c **** {
 164               		.loc 1 44 1 is_stmt 1 view -0
 165               		.cfi_startproc
 166               		.loc 1 44 1 is_stmt 0 view .LVU32
 167 0000 CF93      		push r28
 168               	.LCFI4:
 169               		.cfi_def_cfa_offset 3
 170               		.cfi_offset 28, -2
 171 0002 DF93      		push r29
 172               	.LCFI5:
 173               		.cfi_def_cfa_offset 4
 174               		.cfi_offset 29, -3
 175 0004 00D0      		rcall .
 176 0006 00D0      		rcall .
 177               	.LCFI6:
 178               		.cfi_def_cfa_offset 8
 179 0008 CDB7      		in r28,__SP_L__
 180 000a DEB7      		in r29,__SP_H__
 181               	.LCFI7:
 182               		.cfi_def_cfa_register 28
 183               	/* prologue: function */
 184               	/* frame size = 4 */
 185               	/* stack size = 6 */
 186               	.L__stack_usage = 6
 187 000c 6983      		std Y+1,r22
 188 000e 7A83      		std Y+2,r23
 189 0010 8B83      		std Y+3,r24
 190 0012 9C83      		std Y+4,r25
  45:./tmk_core/common/action_layer.c ****     default_layer_state_set(default_layer_state & state);
 191               		.loc 1 45 5 is_stmt 1 view .LVU33
 192               	.LVL8:
 193               	.LBB16:
 194               	.LBI16:
  19:./tmk_core/common/action_layer.c **** {
 195               		.loc 1 19 13 view .LVU34
 196               	.LBB17:
  21:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug(" to ");
 197               		.loc 1 21 35 view .LVU35
  22:./tmk_core/common/action_layer.c ****     default_layer_state = state;
 198               		.loc 1 22 5 view .LVU36
  22:./tmk_core/common/action_layer.c ****     default_layer_state = state;
 199               		.loc 1 22 41 view .LVU37
  23:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug("\n");
 200               		.loc 1 23 5 view .LVU38
 201               	.LBE17:
 202               	.LBE16:
 203               		.loc 1 45 5 is_stmt 0 view .LVU39
 204 0014 8091 0000 		lds r24,default_layer_state
 205 0018 9091 0000 		lds r25,default_layer_state+1
 206 001c A091 0000 		lds r26,default_layer_state+2
 207 0020 B091 0000 		lds r27,default_layer_state+3
 208 0024 2981      		ldd r18,Y+1
 209 0026 3A81      		ldd r19,Y+2
 210 0028 4B81      		ldd r20,Y+3
 211 002a 5C81      		ldd r21,Y+4
 212 002c 8223      		and r24,r18
 213 002e 9323      		and r25,r19
 214 0030 A423      		and r26,r20
 215 0032 B523      		and r27,r21
 216               	.LBB20:
 217               	.LBB18:
  23:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug("\n");
 218               		.loc 1 23 25 view .LVU40
 219 0034 8093 0000 		sts default_layer_state,r24
 220 0038 9093 0000 		sts default_layer_state+1,r25
 221 003c A093 0000 		sts default_layer_state+2,r26
 222 0040 B093 0000 		sts default_layer_state+3,r27
 223               	.LVL9:
  24:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 224               		.loc 1 24 5 is_stmt 1 view .LVU41
  24:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 225               		.loc 1 24 39 view .LVU42
  25:./tmk_core/common/action_layer.c **** }
 226               		.loc 1 25 5 view .LVU43
 227               	/* epilogue start */
 228               	.LBE18:
 229               	.LBE20:
  46:./tmk_core/common/action_layer.c **** }
 230               		.loc 1 46 1 is_stmt 0 view .LVU44
 231 0044 0F90      		pop __tmp_reg__
 232 0046 0F90      		pop __tmp_reg__
 233 0048 0F90      		pop __tmp_reg__
 234 004a 0F90      		pop __tmp_reg__
 235 004c DF91      		pop r29
 236 004e CF91      		pop r28
 237               	.LBB21:
 238               	.LBB19:
  25:./tmk_core/common/action_layer.c **** }
 239               		.loc 1 25 5 view .LVU45
 240 0050 0C94 0000 		jmp clear_keyboard_but_mods
 241               	.LVL10:
  25:./tmk_core/common/action_layer.c **** }
 242               		.loc 1 25 5 view .LVU46
 243               	.LBE19:
 244               	.LBE21:
 245               		.cfi_endproc
 246               	.LFE8:
 248               		.section	.text.default_layer_xor,"ax",@progbits
 249               	.global	default_layer_xor
 251               	default_layer_xor:
 252               	.LVL11:
 253               	.LFB9:
  47:./tmk_core/common/action_layer.c **** void default_layer_xor(uint32_t state)
  48:./tmk_core/common/action_layer.c **** {
 254               		.loc 1 48 1 is_stmt 1 view -0
 255               		.cfi_startproc
 256               		.loc 1 48 1 is_stmt 0 view .LVU48
 257 0000 CF93      		push r28
 258               	.LCFI8:
 259               		.cfi_def_cfa_offset 3
 260               		.cfi_offset 28, -2
 261 0002 DF93      		push r29
 262               	.LCFI9:
 263               		.cfi_def_cfa_offset 4
 264               		.cfi_offset 29, -3
 265 0004 00D0      		rcall .
 266 0006 00D0      		rcall .
 267               	.LCFI10:
 268               		.cfi_def_cfa_offset 8
 269 0008 CDB7      		in r28,__SP_L__
 270 000a DEB7      		in r29,__SP_H__
 271               	.LCFI11:
 272               		.cfi_def_cfa_register 28
 273               	/* prologue: function */
 274               	/* frame size = 4 */
 275               	/* stack size = 6 */
 276               	.L__stack_usage = 6
 277 000c 6983      		std Y+1,r22
 278 000e 7A83      		std Y+2,r23
 279 0010 8B83      		std Y+3,r24
 280 0012 9C83      		std Y+4,r25
  49:./tmk_core/common/action_layer.c ****     default_layer_state_set(default_layer_state ^ state);
 281               		.loc 1 49 5 is_stmt 1 view .LVU49
 282               	.LVL12:
 283               	.LBB24:
 284               	.LBI24:
  19:./tmk_core/common/action_layer.c **** {
 285               		.loc 1 19 13 view .LVU50
 286               	.LBB25:
  21:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug(" to ");
 287               		.loc 1 21 35 view .LVU51
  22:./tmk_core/common/action_layer.c ****     default_layer_state = state;
 288               		.loc 1 22 5 view .LVU52
  22:./tmk_core/common/action_layer.c ****     default_layer_state = state;
 289               		.loc 1 22 41 view .LVU53
  23:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug("\n");
 290               		.loc 1 23 5 view .LVU54
 291               	.LBE25:
 292               	.LBE24:
 293               		.loc 1 49 5 is_stmt 0 view .LVU55
 294 0014 8091 0000 		lds r24,default_layer_state
 295 0018 9091 0000 		lds r25,default_layer_state+1
 296 001c A091 0000 		lds r26,default_layer_state+2
 297 0020 B091 0000 		lds r27,default_layer_state+3
 298 0024 2981      		ldd r18,Y+1
 299 0026 3A81      		ldd r19,Y+2
 300 0028 4B81      		ldd r20,Y+3
 301 002a 5C81      		ldd r21,Y+4
 302 002c 8227      		eor r24,r18
 303 002e 9327      		eor r25,r19
 304 0030 A427      		eor r26,r20
 305 0032 B527      		eor r27,r21
 306               	.LBB28:
 307               	.LBB26:
  23:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug("\n");
 308               		.loc 1 23 25 view .LVU56
 309 0034 8093 0000 		sts default_layer_state,r24
 310 0038 9093 0000 		sts default_layer_state+1,r25
 311 003c A093 0000 		sts default_layer_state+2,r26
 312 0040 B093 0000 		sts default_layer_state+3,r27
 313               	.LVL13:
  24:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 314               		.loc 1 24 5 is_stmt 1 view .LVU57
  24:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 315               		.loc 1 24 39 view .LVU58
  25:./tmk_core/common/action_layer.c **** }
 316               		.loc 1 25 5 view .LVU59
 317               	/* epilogue start */
 318               	.LBE26:
 319               	.LBE28:
  50:./tmk_core/common/action_layer.c **** }
 320               		.loc 1 50 1 is_stmt 0 view .LVU60
 321 0044 0F90      		pop __tmp_reg__
 322 0046 0F90      		pop __tmp_reg__
 323 0048 0F90      		pop __tmp_reg__
 324 004a 0F90      		pop __tmp_reg__
 325 004c DF91      		pop r29
 326 004e CF91      		pop r28
 327               	.LBB29:
 328               	.LBB27:
  25:./tmk_core/common/action_layer.c **** }
 329               		.loc 1 25 5 view .LVU61
 330 0050 0C94 0000 		jmp clear_keyboard_but_mods
 331               	.LVL14:
  25:./tmk_core/common/action_layer.c **** }
 332               		.loc 1 25 5 view .LVU62
 333               	.LBE27:
 334               	.LBE29:
 335               		.cfi_endproc
 336               	.LFE9:
 338               		.section	.text.layer_clear,"ax",@progbits
 339               	.global	layer_clear
 341               	layer_clear:
 342               	.LFB11:
  51:./tmk_core/common/action_layer.c **** #endif
  52:./tmk_core/common/action_layer.c **** 
  53:./tmk_core/common/action_layer.c **** 
  54:./tmk_core/common/action_layer.c **** #ifndef NO_ACTION_LAYER
  55:./tmk_core/common/action_layer.c **** /*
  56:./tmk_core/common/action_layer.c ****  * Keymap Layer State
  57:./tmk_core/common/action_layer.c ****  */
  58:./tmk_core/common/action_layer.c **** uint32_t layer_state = 0;
  59:./tmk_core/common/action_layer.c **** 
  60:./tmk_core/common/action_layer.c **** static void layer_state_set(uint32_t state)
  61:./tmk_core/common/action_layer.c **** {
  62:./tmk_core/common/action_layer.c ****     dprint("layer_state: ");
  63:./tmk_core/common/action_layer.c ****     layer_debug(); dprint(" to ");
  64:./tmk_core/common/action_layer.c ****     layer_state = state;
  65:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
  66:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
  67:./tmk_core/common/action_layer.c **** }
  68:./tmk_core/common/action_layer.c **** 
  69:./tmk_core/common/action_layer.c **** void layer_clear(void)
  70:./tmk_core/common/action_layer.c **** {
 343               		.loc 1 70 1 is_stmt 1 view -0
 344               		.cfi_startproc
 345               	/* prologue: function */
 346               	/* frame size = 0 */
 347               	/* stack size = 0 */
 348               	.L__stack_usage = 0
  71:./tmk_core/common/action_layer.c ****     layer_state_set(0);
 349               		.loc 1 71 5 view .LVU64
 350               	.LVL15:
 351               	.LBB32:
 352               	.LBI32:
  60:./tmk_core/common/action_layer.c **** {
 353               		.loc 1 60 13 view .LVU65
 354               	.LBB33:
  62:./tmk_core/common/action_layer.c ****     layer_debug(); dprint(" to ");
 355               		.loc 1 62 28 view .LVU66
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 356               		.loc 1 63 5 view .LVU67
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 357               		.loc 1 63 34 view .LVU68
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 358               		.loc 1 64 5 view .LVU69
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 359               		.loc 1 64 17 is_stmt 0 view .LVU70
 360 0000 1092 0000 		sts layer_state,__zero_reg__
 361 0004 1092 0000 		sts layer_state+1,__zero_reg__
 362 0008 1092 0000 		sts layer_state+2,__zero_reg__
 363 000c 1092 0000 		sts layer_state+3,__zero_reg__
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 364               		.loc 1 65 5 is_stmt 1 view .LVU71
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 365               		.loc 1 65 30 view .LVU72
  66:./tmk_core/common/action_layer.c **** }
 366               		.loc 1 66 5 view .LVU73
 367 0010 0C94 0000 		jmp clear_keyboard_but_mods
 368               	.LVL16:
 369               	.LBE33:
 370               	.LBE32:
 371               		.cfi_endproc
 372               	.LFE11:
 374               		.section	.text.layer_move,"ax",@progbits
 375               	.global	layer_move
 377               	layer_move:
 378               	.LVL17:
 379               	.LFB12:
  72:./tmk_core/common/action_layer.c **** }
  73:./tmk_core/common/action_layer.c **** 
  74:./tmk_core/common/action_layer.c **** void layer_move(uint8_t layer)
  75:./tmk_core/common/action_layer.c **** {
 380               		.loc 1 75 1 view -0
 381               		.cfi_startproc
 382               	/* prologue: function */
 383               	/* frame size = 0 */
 384               	/* stack size = 0 */
 385               	.L__stack_usage = 0
  76:./tmk_core/common/action_layer.c ****     layer_state_set(1UL<<layer);
 386               		.loc 1 76 5 view .LVU75
 387               	.LBB36:
 388               	.LBI36:
  60:./tmk_core/common/action_layer.c **** {
 389               		.loc 1 60 13 view .LVU76
 390               	.LBB37:
  62:./tmk_core/common/action_layer.c ****     layer_debug(); dprint(" to ");
 391               		.loc 1 62 28 view .LVU77
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 392               		.loc 1 63 5 view .LVU78
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 393               		.loc 1 63 34 view .LVU79
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 394               		.loc 1 64 5 view .LVU80
 395               	.LBE37:
 396               	.LBE36:
 397               		.loc 1 76 5 is_stmt 0 view .LVU81
 398 0000 41E0      		ldi r20,lo8(1)
 399 0002 50E0      		ldi r21,0
 400 0004 60E0      		ldi r22,0
 401 0006 70E0      		ldi r23,0
 402 0008 00C0      		rjmp 2f
 403               		1:
 404 000a 440F      		lsl r20
 405 000c 551F      		rol r21
 406 000e 661F      		rol r22
 407 0010 771F      		rol r23
 408               		2:
 409 0012 8A95      		dec r24
 410 0014 02F4      		brpl 1b
 411               	.LBB39:
 412               	.LBB38:
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 413               		.loc 1 64 17 view .LVU82
 414 0016 4093 0000 		sts layer_state,r20
 415 001a 5093 0000 		sts layer_state+1,r21
 416 001e 6093 0000 		sts layer_state+2,r22
 417 0022 7093 0000 		sts layer_state+3,r23
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 418               		.loc 1 65 5 is_stmt 1 view .LVU83
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 419               		.loc 1 65 30 view .LVU84
  66:./tmk_core/common/action_layer.c **** }
 420               		.loc 1 66 5 view .LVU85
 421 0026 0C94 0000 		jmp clear_keyboard_but_mods
 422               	.LVL18:
  66:./tmk_core/common/action_layer.c **** }
 423               		.loc 1 66 5 is_stmt 0 view .LVU86
 424               	.LBE38:
 425               	.LBE39:
 426               		.cfi_endproc
 427               	.LFE12:
 429               		.section	.text.layer_on,"ax",@progbits
 430               	.global	layer_on
 432               	layer_on:
 433               	.LVL19:
 434               	.LFB13:
  77:./tmk_core/common/action_layer.c **** }
  78:./tmk_core/common/action_layer.c **** 
  79:./tmk_core/common/action_layer.c **** void layer_on(uint8_t layer)
  80:./tmk_core/common/action_layer.c **** {
 435               		.loc 1 80 1 is_stmt 1 view -0
 436               		.cfi_startproc
 437               	/* prologue: function */
 438               	/* frame size = 0 */
 439               	/* stack size = 0 */
 440               	.L__stack_usage = 0
  81:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state | (1UL<<layer));
 441               		.loc 1 81 5 view .LVU88
 442               	.LBB42:
 443               	.LBI42:
  60:./tmk_core/common/action_layer.c **** {
 444               		.loc 1 60 13 view .LVU89
 445               	.LBB43:
  62:./tmk_core/common/action_layer.c ****     layer_debug(); dprint(" to ");
 446               		.loc 1 62 28 view .LVU90
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 447               		.loc 1 63 5 view .LVU91
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 448               		.loc 1 63 34 view .LVU92
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 449               		.loc 1 64 5 view .LVU93
 450               	.LBE43:
 451               	.LBE42:
 452               		.loc 1 81 39 is_stmt 0 view .LVU94
 453 0000 41E0      		ldi r20,lo8(1)
 454 0002 50E0      		ldi r21,0
 455 0004 60E0      		ldi r22,0
 456 0006 70E0      		ldi r23,0
 457 0008 00C0      		rjmp 2f
 458               		1:
 459 000a 440F      		lsl r20
 460 000c 551F      		rol r21
 461 000e 661F      		rol r22
 462 0010 771F      		rol r23
 463               		2:
 464 0012 8A95      		dec r24
 465 0014 02F4      		brpl 1b
 466               		.loc 1 81 5 view .LVU95
 467 0016 8091 0000 		lds r24,layer_state
 468 001a 9091 0000 		lds r25,layer_state+1
 469 001e A091 0000 		lds r26,layer_state+2
 470 0022 B091 0000 		lds r27,layer_state+3
 471               	.LVL20:
 472               		.loc 1 81 5 view .LVU96
 473 0026 842B      		or r24,r20
 474 0028 952B      		or r25,r21
 475 002a A62B      		or r26,r22
 476 002c B72B      		or r27,r23
 477               	.LBB45:
 478               	.LBB44:
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 479               		.loc 1 64 17 view .LVU97
 480 002e 8093 0000 		sts layer_state,r24
 481 0032 9093 0000 		sts layer_state+1,r25
 482 0036 A093 0000 		sts layer_state+2,r26
 483 003a B093 0000 		sts layer_state+3,r27
 484               	.LVL21:
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 485               		.loc 1 65 5 is_stmt 1 view .LVU98
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 486               		.loc 1 65 30 view .LVU99
  66:./tmk_core/common/action_layer.c **** }
 487               		.loc 1 66 5 view .LVU100
 488 003e 0C94 0000 		jmp clear_keyboard_but_mods
 489               	.LVL22:
 490               	.LBE44:
 491               	.LBE45:
 492               		.cfi_endproc
 493               	.LFE13:
 495               		.section	.text.layer_off,"ax",@progbits
 496               	.global	layer_off
 498               	layer_off:
 499               	.LVL23:
 500               	.LFB14:
  82:./tmk_core/common/action_layer.c **** }
  83:./tmk_core/common/action_layer.c **** 
  84:./tmk_core/common/action_layer.c **** void layer_off(uint8_t layer)
  85:./tmk_core/common/action_layer.c **** {
 501               		.loc 1 85 1 view -0
 502               		.cfi_startproc
 503               	/* prologue: function */
 504               	/* frame size = 0 */
 505               	/* stack size = 0 */
 506               	.L__stack_usage = 0
  86:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state & ~(1UL<<layer));
 507               		.loc 1 86 5 view .LVU102
 508               	.LBB48:
 509               	.LBI48:
  60:./tmk_core/common/action_layer.c **** {
 510               		.loc 1 60 13 view .LVU103
 511               	.LBB49:
  62:./tmk_core/common/action_layer.c ****     layer_debug(); dprint(" to ");
 512               		.loc 1 62 28 view .LVU104
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 513               		.loc 1 63 5 view .LVU105
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 514               		.loc 1 63 34 view .LVU106
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 515               		.loc 1 64 5 view .LVU107
 516               	.LBE49:
 517               	.LBE48:
 518               		.loc 1 86 40 is_stmt 0 view .LVU108
 519 0000 41E0      		ldi r20,lo8(1)
 520 0002 50E0      		ldi r21,0
 521 0004 60E0      		ldi r22,0
 522 0006 70E0      		ldi r23,0
 523 0008 00C0      		rjmp 2f
 524               		1:
 525 000a 440F      		lsl r20
 526 000c 551F      		rol r21
 527 000e 661F      		rol r22
 528 0010 771F      		rol r23
 529               		2:
 530 0012 8A95      		dec r24
 531 0014 02F4      		brpl 1b
 532               		.loc 1 86 35 view .LVU109
 533 0016 4095      		com r20
 534 0018 5095      		com r21
 535 001a 6095      		com r22
 536 001c 7095      		com r23
 537               		.loc 1 86 5 view .LVU110
 538 001e 8091 0000 		lds r24,layer_state
 539 0022 9091 0000 		lds r25,layer_state+1
 540 0026 A091 0000 		lds r26,layer_state+2
 541 002a B091 0000 		lds r27,layer_state+3
 542               	.LVL24:
 543               		.loc 1 86 5 view .LVU111
 544 002e 8423      		and r24,r20
 545 0030 9523      		and r25,r21
 546 0032 A623      		and r26,r22
 547 0034 B723      		and r27,r23
 548               	.LBB51:
 549               	.LBB50:
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 550               		.loc 1 64 17 view .LVU112
 551 0036 8093 0000 		sts layer_state,r24
 552 003a 9093 0000 		sts layer_state+1,r25
 553 003e A093 0000 		sts layer_state+2,r26
 554 0042 B093 0000 		sts layer_state+3,r27
 555               	.LVL25:
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 556               		.loc 1 65 5 is_stmt 1 view .LVU113
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 557               		.loc 1 65 30 view .LVU114
  66:./tmk_core/common/action_layer.c **** }
 558               		.loc 1 66 5 view .LVU115
 559 0046 0C94 0000 		jmp clear_keyboard_but_mods
 560               	.LVL26:
 561               	.LBE50:
 562               	.LBE51:
 563               		.cfi_endproc
 564               	.LFE14:
 566               		.section	.text.layer_invert,"ax",@progbits
 567               	.global	layer_invert
 569               	layer_invert:
 570               	.LVL27:
 571               	.LFB15:
  87:./tmk_core/common/action_layer.c **** }
  88:./tmk_core/common/action_layer.c **** 
  89:./tmk_core/common/action_layer.c **** void layer_invert(uint8_t layer)
  90:./tmk_core/common/action_layer.c **** {
 572               		.loc 1 90 1 view -0
 573               		.cfi_startproc
 574               	/* prologue: function */
 575               	/* frame size = 0 */
 576               	/* stack size = 0 */
 577               	.L__stack_usage = 0
  91:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state ^ (1UL<<layer));
 578               		.loc 1 91 5 view .LVU117
 579               	.LBB54:
 580               	.LBI54:
  60:./tmk_core/common/action_layer.c **** {
 581               		.loc 1 60 13 view .LVU118
 582               	.LBB55:
  62:./tmk_core/common/action_layer.c ****     layer_debug(); dprint(" to ");
 583               		.loc 1 62 28 view .LVU119
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 584               		.loc 1 63 5 view .LVU120
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 585               		.loc 1 63 34 view .LVU121
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 586               		.loc 1 64 5 view .LVU122
 587               	.LBE55:
 588               	.LBE54:
 589               		.loc 1 91 39 is_stmt 0 view .LVU123
 590 0000 41E0      		ldi r20,lo8(1)
 591 0002 50E0      		ldi r21,0
 592 0004 60E0      		ldi r22,0
 593 0006 70E0      		ldi r23,0
 594 0008 00C0      		rjmp 2f
 595               		1:
 596 000a 440F      		lsl r20
 597 000c 551F      		rol r21
 598 000e 661F      		rol r22
 599 0010 771F      		rol r23
 600               		2:
 601 0012 8A95      		dec r24
 602 0014 02F4      		brpl 1b
 603               		.loc 1 91 5 view .LVU124
 604 0016 8091 0000 		lds r24,layer_state
 605 001a 9091 0000 		lds r25,layer_state+1
 606 001e A091 0000 		lds r26,layer_state+2
 607 0022 B091 0000 		lds r27,layer_state+3
 608               	.LVL28:
 609               		.loc 1 91 5 view .LVU125
 610 0026 8427      		eor r24,r20
 611 0028 9527      		eor r25,r21
 612 002a A627      		eor r26,r22
 613 002c B727      		eor r27,r23
 614               	.LBB57:
 615               	.LBB56:
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 616               		.loc 1 64 17 view .LVU126
 617 002e 8093 0000 		sts layer_state,r24
 618 0032 9093 0000 		sts layer_state+1,r25
 619 0036 A093 0000 		sts layer_state+2,r26
 620 003a B093 0000 		sts layer_state+3,r27
 621               	.LVL29:
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 622               		.loc 1 65 5 is_stmt 1 view .LVU127
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 623               		.loc 1 65 30 view .LVU128
  66:./tmk_core/common/action_layer.c **** }
 624               		.loc 1 66 5 view .LVU129
 625 003e 0C94 0000 		jmp clear_keyboard_but_mods
 626               	.LVL30:
 627               	.LBE56:
 628               	.LBE57:
 629               		.cfi_endproc
 630               	.LFE15:
 632               		.section	.text.layer_or,"ax",@progbits
 633               	.global	layer_or
 635               	layer_or:
 636               	.LVL31:
 637               	.LFB16:
  92:./tmk_core/common/action_layer.c **** }
  93:./tmk_core/common/action_layer.c **** 
  94:./tmk_core/common/action_layer.c **** void layer_or(uint32_t state)
  95:./tmk_core/common/action_layer.c **** {
 638               		.loc 1 95 1 view -0
 639               		.cfi_startproc
 640               		.loc 1 95 1 is_stmt 0 view .LVU131
 641 0000 CF93      		push r28
 642               	.LCFI12:
 643               		.cfi_def_cfa_offset 3
 644               		.cfi_offset 28, -2
 645 0002 DF93      		push r29
 646               	.LCFI13:
 647               		.cfi_def_cfa_offset 4
 648               		.cfi_offset 29, -3
 649 0004 00D0      		rcall .
 650 0006 00D0      		rcall .
 651               	.LCFI14:
 652               		.cfi_def_cfa_offset 8
 653 0008 CDB7      		in r28,__SP_L__
 654 000a DEB7      		in r29,__SP_H__
 655               	.LCFI15:
 656               		.cfi_def_cfa_register 28
 657               	/* prologue: function */
 658               	/* frame size = 4 */
 659               	/* stack size = 6 */
 660               	.L__stack_usage = 6
 661 000c 6983      		std Y+1,r22
 662 000e 7A83      		std Y+2,r23
 663 0010 8B83      		std Y+3,r24
 664 0012 9C83      		std Y+4,r25
  96:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state | state);
 665               		.loc 1 96 5 is_stmt 1 view .LVU132
 666               	.LVL32:
 667               	.LBB60:
 668               	.LBI60:
  60:./tmk_core/common/action_layer.c **** {
 669               		.loc 1 60 13 view .LVU133
 670               	.LBB61:
  62:./tmk_core/common/action_layer.c ****     layer_debug(); dprint(" to ");
 671               		.loc 1 62 28 view .LVU134
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 672               		.loc 1 63 5 view .LVU135
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 673               		.loc 1 63 34 view .LVU136
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 674               		.loc 1 64 5 view .LVU137
 675               	.LBE61:
 676               	.LBE60:
 677               		.loc 1 96 5 is_stmt 0 view .LVU138
 678 0014 8091 0000 		lds r24,layer_state
 679 0018 9091 0000 		lds r25,layer_state+1
 680 001c A091 0000 		lds r26,layer_state+2
 681 0020 B091 0000 		lds r27,layer_state+3
 682 0024 2981      		ldd r18,Y+1
 683 0026 3A81      		ldd r19,Y+2
 684 0028 4B81      		ldd r20,Y+3
 685 002a 5C81      		ldd r21,Y+4
 686 002c 822B      		or r24,r18
 687 002e 932B      		or r25,r19
 688 0030 A42B      		or r26,r20
 689 0032 B52B      		or r27,r21
 690               	.LBB64:
 691               	.LBB62:
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 692               		.loc 1 64 17 view .LVU139
 693 0034 8093 0000 		sts layer_state,r24
 694 0038 9093 0000 		sts layer_state+1,r25
 695 003c A093 0000 		sts layer_state+2,r26
 696 0040 B093 0000 		sts layer_state+3,r27
 697               	.LVL33:
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 698               		.loc 1 65 5 is_stmt 1 view .LVU140
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 699               		.loc 1 65 30 view .LVU141
  66:./tmk_core/common/action_layer.c **** }
 700               		.loc 1 66 5 view .LVU142
 701               	/* epilogue start */
 702               	.LBE62:
 703               	.LBE64:
  97:./tmk_core/common/action_layer.c **** }
 704               		.loc 1 97 1 is_stmt 0 view .LVU143
 705 0044 0F90      		pop __tmp_reg__
 706 0046 0F90      		pop __tmp_reg__
 707 0048 0F90      		pop __tmp_reg__
 708 004a 0F90      		pop __tmp_reg__
 709 004c DF91      		pop r29
 710 004e CF91      		pop r28
 711               	.LBB65:
 712               	.LBB63:
  66:./tmk_core/common/action_layer.c **** }
 713               		.loc 1 66 5 view .LVU144
 714 0050 0C94 0000 		jmp clear_keyboard_but_mods
 715               	.LVL34:
  66:./tmk_core/common/action_layer.c **** }
 716               		.loc 1 66 5 view .LVU145
 717               	.LBE63:
 718               	.LBE65:
 719               		.cfi_endproc
 720               	.LFE16:
 722               		.section	.text.layer_and,"ax",@progbits
 723               	.global	layer_and
 725               	layer_and:
 726               	.LVL35:
 727               	.LFB17:
  98:./tmk_core/common/action_layer.c **** void layer_and(uint32_t state)
  99:./tmk_core/common/action_layer.c **** {
 728               		.loc 1 99 1 is_stmt 1 view -0
 729               		.cfi_startproc
 730               		.loc 1 99 1 is_stmt 0 view .LVU147
 731 0000 CF93      		push r28
 732               	.LCFI16:
 733               		.cfi_def_cfa_offset 3
 734               		.cfi_offset 28, -2
 735 0002 DF93      		push r29
 736               	.LCFI17:
 737               		.cfi_def_cfa_offset 4
 738               		.cfi_offset 29, -3
 739 0004 00D0      		rcall .
 740 0006 00D0      		rcall .
 741               	.LCFI18:
 742               		.cfi_def_cfa_offset 8
 743 0008 CDB7      		in r28,__SP_L__
 744 000a DEB7      		in r29,__SP_H__
 745               	.LCFI19:
 746               		.cfi_def_cfa_register 28
 747               	/* prologue: function */
 748               	/* frame size = 4 */
 749               	/* stack size = 6 */
 750               	.L__stack_usage = 6
 751 000c 6983      		std Y+1,r22
 752 000e 7A83      		std Y+2,r23
 753 0010 8B83      		std Y+3,r24
 754 0012 9C83      		std Y+4,r25
 100:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state & state);
 755               		.loc 1 100 5 is_stmt 1 view .LVU148
 756               	.LVL36:
 757               	.LBB68:
 758               	.LBI68:
  60:./tmk_core/common/action_layer.c **** {
 759               		.loc 1 60 13 view .LVU149
 760               	.LBB69:
  62:./tmk_core/common/action_layer.c ****     layer_debug(); dprint(" to ");
 761               		.loc 1 62 28 view .LVU150
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 762               		.loc 1 63 5 view .LVU151
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 763               		.loc 1 63 34 view .LVU152
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 764               		.loc 1 64 5 view .LVU153
 765               	.LBE69:
 766               	.LBE68:
 767               		.loc 1 100 5 is_stmt 0 view .LVU154
 768 0014 8091 0000 		lds r24,layer_state
 769 0018 9091 0000 		lds r25,layer_state+1
 770 001c A091 0000 		lds r26,layer_state+2
 771 0020 B091 0000 		lds r27,layer_state+3
 772 0024 2981      		ldd r18,Y+1
 773 0026 3A81      		ldd r19,Y+2
 774 0028 4B81      		ldd r20,Y+3
 775 002a 5C81      		ldd r21,Y+4
 776 002c 8223      		and r24,r18
 777 002e 9323      		and r25,r19
 778 0030 A423      		and r26,r20
 779 0032 B523      		and r27,r21
 780               	.LBB72:
 781               	.LBB70:
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 782               		.loc 1 64 17 view .LVU155
 783 0034 8093 0000 		sts layer_state,r24
 784 0038 9093 0000 		sts layer_state+1,r25
 785 003c A093 0000 		sts layer_state+2,r26
 786 0040 B093 0000 		sts layer_state+3,r27
 787               	.LVL37:
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 788               		.loc 1 65 5 is_stmt 1 view .LVU156
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 789               		.loc 1 65 30 view .LVU157
  66:./tmk_core/common/action_layer.c **** }
 790               		.loc 1 66 5 view .LVU158
 791               	/* epilogue start */
 792               	.LBE70:
 793               	.LBE72:
 101:./tmk_core/common/action_layer.c **** }
 794               		.loc 1 101 1 is_stmt 0 view .LVU159
 795 0044 0F90      		pop __tmp_reg__
 796 0046 0F90      		pop __tmp_reg__
 797 0048 0F90      		pop __tmp_reg__
 798 004a 0F90      		pop __tmp_reg__
 799 004c DF91      		pop r29
 800 004e CF91      		pop r28
 801               	.LBB73:
 802               	.LBB71:
  66:./tmk_core/common/action_layer.c **** }
 803               		.loc 1 66 5 view .LVU160
 804 0050 0C94 0000 		jmp clear_keyboard_but_mods
 805               	.LVL38:
  66:./tmk_core/common/action_layer.c **** }
 806               		.loc 1 66 5 view .LVU161
 807               	.LBE71:
 808               	.LBE73:
 809               		.cfi_endproc
 810               	.LFE17:
 812               		.section	.text.layer_xor,"ax",@progbits
 813               	.global	layer_xor
 815               	layer_xor:
 816               	.LVL39:
 817               	.LFB18:
 102:./tmk_core/common/action_layer.c **** void layer_xor(uint32_t state)
 103:./tmk_core/common/action_layer.c **** {
 818               		.loc 1 103 1 is_stmt 1 view -0
 819               		.cfi_startproc
 820               		.loc 1 103 1 is_stmt 0 view .LVU163
 821 0000 CF93      		push r28
 822               	.LCFI20:
 823               		.cfi_def_cfa_offset 3
 824               		.cfi_offset 28, -2
 825 0002 DF93      		push r29
 826               	.LCFI21:
 827               		.cfi_def_cfa_offset 4
 828               		.cfi_offset 29, -3
 829 0004 00D0      		rcall .
 830 0006 00D0      		rcall .
 831               	.LCFI22:
 832               		.cfi_def_cfa_offset 8
 833 0008 CDB7      		in r28,__SP_L__
 834 000a DEB7      		in r29,__SP_H__
 835               	.LCFI23:
 836               		.cfi_def_cfa_register 28
 837               	/* prologue: function */
 838               	/* frame size = 4 */
 839               	/* stack size = 6 */
 840               	.L__stack_usage = 6
 841 000c 6983      		std Y+1,r22
 842 000e 7A83      		std Y+2,r23
 843 0010 8B83      		std Y+3,r24
 844 0012 9C83      		std Y+4,r25
 104:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state ^ state);
 845               		.loc 1 104 5 is_stmt 1 view .LVU164
 846               	.LVL40:
 847               	.LBB76:
 848               	.LBI76:
  60:./tmk_core/common/action_layer.c **** {
 849               		.loc 1 60 13 view .LVU165
 850               	.LBB77:
  62:./tmk_core/common/action_layer.c ****     layer_debug(); dprint(" to ");
 851               		.loc 1 62 28 view .LVU166
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 852               		.loc 1 63 5 view .LVU167
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 853               		.loc 1 63 34 view .LVU168
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 854               		.loc 1 64 5 view .LVU169
 855               	.LBE77:
 856               	.LBE76:
 857               		.loc 1 104 5 is_stmt 0 view .LVU170
 858 0014 8091 0000 		lds r24,layer_state
 859 0018 9091 0000 		lds r25,layer_state+1
 860 001c A091 0000 		lds r26,layer_state+2
 861 0020 B091 0000 		lds r27,layer_state+3
 862 0024 2981      		ldd r18,Y+1
 863 0026 3A81      		ldd r19,Y+2
 864 0028 4B81      		ldd r20,Y+3
 865 002a 5C81      		ldd r21,Y+4
 866 002c 8227      		eor r24,r18
 867 002e 9327      		eor r25,r19
 868 0030 A427      		eor r26,r20
 869 0032 B527      		eor r27,r21
 870               	.LBB80:
 871               	.LBB78:
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 872               		.loc 1 64 17 view .LVU171
 873 0034 8093 0000 		sts layer_state,r24
 874 0038 9093 0000 		sts layer_state+1,r25
 875 003c A093 0000 		sts layer_state+2,r26
 876 0040 B093 0000 		sts layer_state+3,r27
 877               	.LVL41:
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 878               		.loc 1 65 5 is_stmt 1 view .LVU172
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 879               		.loc 1 65 30 view .LVU173
  66:./tmk_core/common/action_layer.c **** }
 880               		.loc 1 66 5 view .LVU174
 881               	/* epilogue start */
 882               	.LBE78:
 883               	.LBE80:
 105:./tmk_core/common/action_layer.c **** }
 884               		.loc 1 105 1 is_stmt 0 view .LVU175
 885 0044 0F90      		pop __tmp_reg__
 886 0046 0F90      		pop __tmp_reg__
 887 0048 0F90      		pop __tmp_reg__
 888 004a 0F90      		pop __tmp_reg__
 889 004c DF91      		pop r29
 890 004e CF91      		pop r28
 891               	.LBB81:
 892               	.LBB79:
  66:./tmk_core/common/action_layer.c **** }
 893               		.loc 1 66 5 view .LVU176
 894 0050 0C94 0000 		jmp clear_keyboard_but_mods
 895               	.LVL42:
  66:./tmk_core/common/action_layer.c **** }
 896               		.loc 1 66 5 view .LVU177
 897               	.LBE79:
 898               	.LBE81:
 899               		.cfi_endproc
 900               	.LFE18:
 902               		.section	.text.layer_debug,"ax",@progbits
 903               	.global	layer_debug
 905               	layer_debug:
 906               	.LFB26:
 907               		.cfi_startproc
 908               	/* prologue: function */
 909               	/* frame size = 0 */
 910               	/* stack size = 0 */
 911               	.L__stack_usage = 0
 912               	/* epilogue start */
 913 0000 0895      		ret
 914               		.cfi_endproc
 915               	.LFE26:
 917               		.section	.text.update_source_layers_cache,"ax",@progbits
 918               	.global	update_source_layers_cache
 920               	update_source_layers_cache:
 921               	.LVL43:
 922               	.LFB20:
 106:./tmk_core/common/action_layer.c **** 
 107:./tmk_core/common/action_layer.c **** void layer_debug(void)
 108:./tmk_core/common/action_layer.c **** {
 109:./tmk_core/common/action_layer.c ****     dprintf("%08lX(%u)", layer_state, biton32(layer_state));
 110:./tmk_core/common/action_layer.c **** }
 111:./tmk_core/common/action_layer.c **** #endif
 112:./tmk_core/common/action_layer.c **** 
 113:./tmk_core/common/action_layer.c **** #if !defined(NO_ACTION_LAYER) && defined(PREVENT_STUCK_MODIFIERS)
 114:./tmk_core/common/action_layer.c **** uint8_t source_layers_cache[(MATRIX_ROWS * MATRIX_COLS + 7) / 8][MAX_LAYER_BITS] = {{0}};
 115:./tmk_core/common/action_layer.c **** 
 116:./tmk_core/common/action_layer.c **** void update_source_layers_cache(keypos_t key, uint8_t layer)
 117:./tmk_core/common/action_layer.c **** {
 923               		.loc 1 117 1 is_stmt 1 view -0
 924               		.cfi_startproc
 925               	/* prologue: function */
 926               	/* frame size = 0 */
 927               	/* stack size = 0 */
 928               	.L__stack_usage = 0
 118:./tmk_core/common/action_layer.c ****     const uint8_t key_number = key.col + (key.row * MATRIX_COLS);
 929               		.loc 1 118 5 view .LVU179
 930               		.loc 1 118 40 is_stmt 0 view .LVU180
 931 0000 9295      		swap r25
 932 0002 907F      		andi r25,lo8(-16)
 933               		.loc 1 118 19 view .LVU181
 934 0004 E92F      		mov r30,r25
 935 0006 E80F      		add r30,r24
 936               	.LVL44:
 119:./tmk_core/common/action_layer.c ****     const uint8_t storage_row = key_number / 8;
 937               		.loc 1 119 5 is_stmt 1 view .LVU182
 120:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 938               		.loc 1 120 5 view .LVU183
 121:./tmk_core/common/action_layer.c **** 
 122:./tmk_core/common/action_layer.c ****     for (uint8_t bit_number = 0; bit_number < MAX_LAYER_BITS; bit_number++) {
 939               		.loc 1 122 5 view .LVU184
 940               	.LBB82:
 941               		.loc 1 122 10 view .LVU185
 942               		.loc 1 122 45 view .LVU186
 943               	.LBE82:
 120:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 944               		.loc 1 120 19 is_stmt 0 view .LVU187
 945 0008 8770      		andi r24,lo8(7)
 946               	.LVL45:
 947               	.LBB83:
 123:./tmk_core/common/action_layer.c ****         source_layers_cache[storage_row][bit_number] ^=
 124:./tmk_core/common/action_layer.c ****             (-((layer & (1U << bit_number)) != 0)
 125:./tmk_core/common/action_layer.c ****              ^ source_layers_cache[storage_row][bit_number])
 126:./tmk_core/common/action_layer.c ****             & (1U << storage_bit);
 948               		.loc 1 126 13 view .LVU188
 949 000a 41E0      		ldi r20,lo8(1)
 950 000c 00C0      		rjmp 2f
 951               		1:
 952 000e 440F      		lsl r20
 953               		2:
 954 0010 8A95      		dec r24
 955 0012 02F4      		brpl 1b
 956               	.LBE83:
 119:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 957               		.loc 1 119 19 view .LVU189
 958 0014 E695      		lsr r30
 959 0016 E695      		lsr r30
 960 0018 E695      		lsr r30
 961               	.LVL46:
 119:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 962               		.loc 1 119 19 view .LVU190
 963 001a 85E0      		ldi r24,lo8(5)
 964 001c E89F      		mul r30,r24
 965 001e F001      		movw r30,r0
 966 0020 1124      		clr __zero_reg__
 967               	.LVL47:
 119:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 968               		.loc 1 119 19 view .LVU191
 969 0022 E050      		subi r30,lo8(-(source_layers_cache))
 970 0024 F040      		sbci r31,hi8(-(source_layers_cache))
 971               	.LBB84:
 972               		.loc 1 126 13 view .LVU192
 973 0026 30E0      		ldi r19,0
 974 0028 20E0      		ldi r18,0
 124:./tmk_core/common/action_layer.c ****              ^ source_layers_cache[storage_row][bit_number])
 975               		.loc 1 124 45 view .LVU193
 976 002a 70E0      		ldi r23,0
 977               	.LVL48:
 978               	.L16:
 123:./tmk_core/common/action_layer.c ****         source_layers_cache[storage_row][bit_number] ^=
 979               		.loc 1 123 9 is_stmt 1 discriminator 3 view .LVU194
 123:./tmk_core/common/action_layer.c ****         source_layers_cache[storage_row][bit_number] ^=
 980               		.loc 1 123 54 is_stmt 0 discriminator 3 view .LVU195
 981 002c 5191      		ld r21,Z+
 982 002e DF01      		movw r26,r30
 983 0030 1197      		sbiw r26,1
 124:./tmk_core/common/action_layer.c ****              ^ source_layers_cache[storage_row][bit_number])
 984               		.loc 1 124 45 discriminator 3 view .LVU196
 985 0032 CB01      		movw r24,r22
 986 0034 022E      		mov r0,r18
 987 0036 00C0      		rjmp 2f
 988               		1:
 989 0038 9695      		lsr r25
 990 003a 8795      		ror r24
 991               		2:
 992 003c 0A94      		dec r0
 993 003e 02F4      		brpl 1b
 994 0040 8170      		andi r24,lo8(1)
 125:./tmk_core/common/action_layer.c ****             & (1U << storage_bit);
 995               		.loc 1 125 14 discriminator 3 view .LVU197
 996 0042 8195      		neg r24
 997               		.loc 1 126 13 discriminator 3 view .LVU198
 998 0044 8527      		eor r24,r21
 999 0046 8423      		and r24,r20
 123:./tmk_core/common/action_layer.c ****             (-((layer & (1U << bit_number)) != 0)
 1000               		.loc 1 123 54 discriminator 3 view .LVU199
 1001 0048 8527      		eor r24,r21
 1002 004a 8C93      		st X,r24
 122:./tmk_core/common/action_layer.c ****         source_layers_cache[storage_row][bit_number] ^=
 1003               		.loc 1 122 73 is_stmt 1 discriminator 3 view .LVU200
 1004               	.LVL49:
 122:./tmk_core/common/action_layer.c ****         source_layers_cache[storage_row][bit_number] ^=
 1005               		.loc 1 122 45 discriminator 3 view .LVU201
 1006 004c 2F5F      		subi r18,-1
 1007 004e 3F4F      		sbci r19,-1
 1008               	.LVL50:
 122:./tmk_core/common/action_layer.c ****         source_layers_cache[storage_row][bit_number] ^=
 1009               		.loc 1 122 45 is_stmt 0 discriminator 3 view .LVU202
 1010 0050 2530      		cpi r18,5
 1011 0052 3105      		cpc r19,__zero_reg__
 1012 0054 01F4      		brne .L16
 1013               	/* epilogue start */
 1014               	.LBE84:
 127:./tmk_core/common/action_layer.c ****     }
 128:./tmk_core/common/action_layer.c **** }
 1015               		.loc 1 128 1 view .LVU203
 1016 0056 0895      		ret
 1017               		.cfi_endproc
 1018               	.LFE20:
 1020               		.section	.text.read_source_layers_cache,"ax",@progbits
 1021               	.global	read_source_layers_cache
 1023               	read_source_layers_cache:
 1024               	.LVL51:
 1025               	.LFB21:
 129:./tmk_core/common/action_layer.c **** 
 130:./tmk_core/common/action_layer.c **** uint8_t read_source_layers_cache(keypos_t key)
 131:./tmk_core/common/action_layer.c **** {
 1026               		.loc 1 131 1 is_stmt 1 view -0
 1027               		.cfi_startproc
 1028               	/* prologue: function */
 1029               	/* frame size = 0 */
 1030               	/* stack size = 0 */
 1031               	.L__stack_usage = 0
 132:./tmk_core/common/action_layer.c ****     const uint8_t key_number = key.col + (key.row * MATRIX_COLS);
 1032               		.loc 1 132 5 view .LVU205
 1033               		.loc 1 132 40 is_stmt 0 view .LVU206
 1034 0000 E92F      		mov r30,r25
 1035 0002 E295      		swap r30
 1036 0004 E07F      		andi r30,lo8(-16)
 1037               		.loc 1 132 19 view .LVU207
 1038 0006 E80F      		add r30,r24
 1039               	.LVL52:
 133:./tmk_core/common/action_layer.c ****     const uint8_t storage_row = key_number / 8;
 1040               		.loc 1 133 5 is_stmt 1 view .LVU208
 134:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 1041               		.loc 1 134 5 view .LVU209
 1042               		.loc 1 134 19 is_stmt 0 view .LVU210
 1043 0008 982F      		mov r25,r24
 1044               	.LVL53:
 1045               		.loc 1 134 19 view .LVU211
 1046 000a 9770      		andi r25,lo8(7)
 1047               	.LVL54:
 135:./tmk_core/common/action_layer.c ****     uint8_t layer = 0;
 1048               		.loc 1 135 5 is_stmt 1 view .LVU212
 136:./tmk_core/common/action_layer.c **** 
 137:./tmk_core/common/action_layer.c ****     for (uint8_t bit_number = 0; bit_number < MAX_LAYER_BITS; bit_number++) {
 1049               		.loc 1 137 5 view .LVU213
 1050               	.LBB85:
 1051               		.loc 1 137 10 view .LVU214
 1052               		.loc 1 137 45 view .LVU215
 1053               	.LBE85:
 133:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 1054               		.loc 1 133 19 is_stmt 0 view .LVU216
 1055 000c E695      		lsr r30
 1056 000e E695      		lsr r30
 1057 0010 E695      		lsr r30
 1058               	.LVL55:
 133:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 1059               		.loc 1 133 19 view .LVU217
 1060 0012 85E0      		ldi r24,lo8(5)
 1061 0014 E89F      		mul r30,r24
 1062 0016 F001      		movw r30,r0
 1063 0018 1124      		clr __zero_reg__
 1064               	.LVL56:
 133:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 1065               		.loc 1 133 19 view .LVU218
 1066 001a E050      		subi r30,lo8(-(source_layers_cache))
 1067 001c F040      		sbci r31,hi8(-(source_layers_cache))
 134:./tmk_core/common/action_layer.c ****     uint8_t layer = 0;
 1068               		.loc 1 134 19 view .LVU219
 1069 001e 50E0      		ldi r21,0
 1070 0020 40E0      		ldi r20,0
 135:./tmk_core/common/action_layer.c **** 
 1071               		.loc 1 135 13 view .LVU220
 1072 0022 80E0      		ldi r24,0
 1073               	.LVL57:
 1074               	.L19:
 1075               	.LBB86:
 138:./tmk_core/common/action_layer.c ****         layer |=
 1076               		.loc 1 138 9 is_stmt 1 discriminator 3 view .LVU221
 139:./tmk_core/common/action_layer.c ****             ((source_layers_cache[storage_row][bit_number]
 1077               		.loc 1 139 47 is_stmt 0 discriminator 3 view .LVU222
 1078 0024 2191      		ld r18,Z+
 1079 0026 30E0      		ldi r19,0
 140:./tmk_core/common/action_layer.c ****               & (1U << storage_bit)) != 0)
 1080               		.loc 1 140 38 discriminator 3 view .LVU223
 1081 0028 092E      		mov r0,r25
 1082 002a 00C0      		rjmp 2f
 1083               		1:
 1084 002c 3695      		lsr r19
 1085 002e 2795      		ror r18
 1086               		2:
 1087 0030 0A94      		dec r0
 1088 0032 02F4      		brpl 1b
 1089 0034 2170      		andi r18,1
 1090 0036 3327      		clr r19
 141:./tmk_core/common/action_layer.c ****             << bit_number;
 1091               		.loc 1 141 13 discriminator 3 view .LVU224
 1092 0038 042E      		mov r0,r20
 1093 003a 00C0      		rjmp 2f
 1094               		1:
 1095 003c 220F      		lsl r18
 1096               		2:
 1097 003e 0A94      		dec r0
 1098 0040 02F4      		brpl 1b
 138:./tmk_core/common/action_layer.c ****             ((source_layers_cache[storage_row][bit_number]
 1099               		.loc 1 138 15 discriminator 3 view .LVU225
 1100 0042 822B      		or r24,r18
 1101               	.LVL58:
 137:./tmk_core/common/action_layer.c ****         layer |=
 1102               		.loc 1 137 73 is_stmt 1 discriminator 3 view .LVU226
 137:./tmk_core/common/action_layer.c ****         layer |=
 1103               		.loc 1 137 45 discriminator 3 view .LVU227
 1104 0044 4F5F      		subi r20,-1
 1105 0046 5F4F      		sbci r21,-1
 1106               	.LVL59:
 137:./tmk_core/common/action_layer.c ****         layer |=
 1107               		.loc 1 137 45 is_stmt 0 discriminator 3 view .LVU228
 1108 0048 4530      		cpi r20,5
 1109 004a 5105      		cpc r21,__zero_reg__
 1110 004c 01F4      		brne .L19
 1111               	.LBE86:
 142:./tmk_core/common/action_layer.c ****     }
 143:./tmk_core/common/action_layer.c **** 
 144:./tmk_core/common/action_layer.c ****     return layer;
 1112               		.loc 1 144 5 is_stmt 1 view .LVU229
 1113               	/* epilogue start */
 145:./tmk_core/common/action_layer.c **** }
 1114               		.loc 1 145 1 is_stmt 0 view .LVU230
 1115 004e 0895      		ret
 1116               		.cfi_endproc
 1117               	.LFE21:
 1119               		.section	.text.layer_switch_get_layer,"ax",@progbits
 1120               	.global	layer_switch_get_layer
 1122               	layer_switch_get_layer:
 1123               	.LVL60:
 1124               	.LFB23:
 146:./tmk_core/common/action_layer.c **** #endif
 147:./tmk_core/common/action_layer.c **** 
 148:./tmk_core/common/action_layer.c **** /*
 149:./tmk_core/common/action_layer.c ****  * Make sure the action triggered when the key is released is the same
 150:./tmk_core/common/action_layer.c ****  * one as the one triggered on press. It's important for the mod keys
 151:./tmk_core/common/action_layer.c ****  * when the layer is switched after the down event but before the up
 152:./tmk_core/common/action_layer.c ****  * event as they may get stuck otherwise.
 153:./tmk_core/common/action_layer.c ****  */
 154:./tmk_core/common/action_layer.c **** action_t store_or_get_action(bool pressed, keypos_t key)
 155:./tmk_core/common/action_layer.c **** {
 156:./tmk_core/common/action_layer.c **** #if !defined(NO_ACTION_LAYER) && defined(PREVENT_STUCK_MODIFIERS)
 157:./tmk_core/common/action_layer.c ****     if (disable_action_cache) {
 158:./tmk_core/common/action_layer.c ****         return layer_switch_get_action(key);
 159:./tmk_core/common/action_layer.c ****     }
 160:./tmk_core/common/action_layer.c **** 
 161:./tmk_core/common/action_layer.c ****     uint8_t layer;
 162:./tmk_core/common/action_layer.c **** 
 163:./tmk_core/common/action_layer.c ****     if (pressed) {
 164:./tmk_core/common/action_layer.c ****         layer = layer_switch_get_layer(key);
 165:./tmk_core/common/action_layer.c ****         update_source_layers_cache(key, layer);
 166:./tmk_core/common/action_layer.c ****     }
 167:./tmk_core/common/action_layer.c ****     else {
 168:./tmk_core/common/action_layer.c ****         layer = read_source_layers_cache(key);
 169:./tmk_core/common/action_layer.c ****     }
 170:./tmk_core/common/action_layer.c ****     return action_for_key(layer, key);
 171:./tmk_core/common/action_layer.c **** #else
 172:./tmk_core/common/action_layer.c ****     return layer_switch_get_action(key);
 173:./tmk_core/common/action_layer.c **** #endif
 174:./tmk_core/common/action_layer.c **** }
 175:./tmk_core/common/action_layer.c **** 
 176:./tmk_core/common/action_layer.c **** 
 177:./tmk_core/common/action_layer.c **** int8_t layer_switch_get_layer(keypos_t key)
 178:./tmk_core/common/action_layer.c **** {
 1125               		.loc 1 178 1 is_stmt 1 view -0
 1126               		.cfi_startproc
 1127               		.loc 1 178 1 is_stmt 0 view .LVU232
 1128 0000 BF92      		push r11
 1129               	.LCFI24:
 1130               		.cfi_def_cfa_offset 3
 1131               		.cfi_offset 11, -2
 1132 0002 CF92      		push r12
 1133               	.LCFI25:
 1134               		.cfi_def_cfa_offset 4
 1135               		.cfi_offset 12, -3
 1136 0004 DF92      		push r13
 1137               	.LCFI26:
 1138               		.cfi_def_cfa_offset 5
 1139               		.cfi_offset 13, -4
 1140 0006 EF92      		push r14
 1141               	.LCFI27:
 1142               		.cfi_def_cfa_offset 6
 1143               		.cfi_offset 14, -5
 1144 0008 FF92      		push r15
 1145               	.LCFI28:
 1146               		.cfi_def_cfa_offset 7
 1147               		.cfi_offset 15, -6
 1148 000a 0F93      		push r16
 1149               	.LCFI29:
 1150               		.cfi_def_cfa_offset 8
 1151               		.cfi_offset 16, -7
 1152 000c 1F93      		push r17
 1153               	.LCFI30:
 1154               		.cfi_def_cfa_offset 9
 1155               		.cfi_offset 17, -8
 1156 000e CF93      		push r28
 1157               	.LCFI31:
 1158               		.cfi_def_cfa_offset 10
 1159               		.cfi_offset 28, -9
 1160 0010 DF93      		push r29
 1161               	.LCFI32:
 1162               		.cfi_def_cfa_offset 11
 1163               		.cfi_offset 29, -10
 1164               	/* prologue: function */
 1165               	/* frame size = 0 */
 1166               	/* stack size = 9 */
 1167               	.L__stack_usage = 9
 1168 0012 8C01      		movw r16,r24
 179:./tmk_core/common/action_layer.c ****     action_t action;
 1169               		.loc 1 179 5 is_stmt 1 view .LVU233
 180:./tmk_core/common/action_layer.c ****     action.code = ACTION_TRANSPARENT;
 1170               		.loc 1 180 5 view .LVU234
 1171               	.LVL61:
 181:./tmk_core/common/action_layer.c **** 
 182:./tmk_core/common/action_layer.c **** #ifndef NO_ACTION_LAYER
 183:./tmk_core/common/action_layer.c ****     uint32_t layers = layer_state | default_layer_state;
 1172               		.loc 1 183 5 view .LVU235
 1173               		.loc 1 183 14 is_stmt 0 view .LVU236
 1174 0014 C090 0000 		lds r12,layer_state
 1175 0018 D090 0000 		lds r13,layer_state+1
 1176 001c E090 0000 		lds r14,layer_state+2
 1177 0020 F090 0000 		lds r15,layer_state+3
 1178 0024 8091 0000 		lds r24,default_layer_state
 1179 0028 9091 0000 		lds r25,default_layer_state+1
 1180 002c A091 0000 		lds r26,default_layer_state+2
 1181 0030 B091 0000 		lds r27,default_layer_state+3
 1182               	.LVL62:
 1183               		.loc 1 183 14 view .LVU237
 1184 0034 C82A      		or r12,r24
 1185 0036 D92A      		or r13,r25
 1186 0038 EA2A      		or r14,r26
 1187 003a FB2A      		or r15,r27
 1188               	.LVL63:
 184:./tmk_core/common/action_layer.c ****     /* check top layer first */
 185:./tmk_core/common/action_layer.c ****     for (int8_t i = 31; i >= 0; i--) {
 1189               		.loc 1 185 5 is_stmt 1 view .LVU238
 1190               	.LBB87:
 1191               		.loc 1 185 10 view .LVU239
 1192               		.loc 1 185 27 view .LVU240
 1193               	.LBE87:
 183:./tmk_core/common/action_layer.c ****     /* check top layer first */
 1194               		.loc 1 183 14 is_stmt 0 view .LVU241
 1195 003c CFE1      		ldi r28,lo8(31)
 1196 003e D0E0      		ldi r29,0
 1197               	.LVL64:
 1198               	.L23:
 183:./tmk_core/common/action_layer.c ****     /* check top layer first */
 1199               		.loc 1 183 14 view .LVU242
 1200 0040 BC2E      		mov r11,r28
 1201               	.LVL65:
 1202               	.LBB88:
 186:./tmk_core/common/action_layer.c ****         if (layers & (1UL<<i)) {
 1203               		.loc 1 186 9 is_stmt 1 view .LVU243
 1204               		.loc 1 186 13 is_stmt 0 view .LVU244
 1205 0042 D701      		movw r26,r14
 1206 0044 C601      		movw r24,r12
 1207 0046 0C2E      		mov r0,r28
 1208 0048 00C0      		rjmp 2f
 1209               		1:
 1210 004a B695      		lsr r27
 1211 004c A795      		ror r26
 1212 004e 9795      		ror r25
 1213 0050 8795      		ror r24
 1214               		2:
 1215 0052 0A94      		dec r0
 1216 0054 02F4      		brpl 1b
 1217               		.loc 1 186 12 view .LVU245
 1218 0056 80FD      		sbrc r24,0
 1219 0058 00C0      		rjmp .L22
 1220               	.L25:
 185:./tmk_core/common/action_layer.c ****         if (layers & (1UL<<i)) {
 1221               		.loc 1 185 34 is_stmt 1 view .LVU246
 1222               	.LVL66:
 185:./tmk_core/common/action_layer.c ****         if (layers & (1UL<<i)) {
 1223               		.loc 1 185 27 view .LVU247
 1224               	.LVL67:
 1225 005a 2197      		sbiw r28,1
 1226 005c 00F4      		brcc .L23
 185:./tmk_core/common/action_layer.c ****         if (layers & (1UL<<i)) {
 1227               		.loc 1 185 27 is_stmt 0 view .LVU248
 1228               	.LBE88:
 187:./tmk_core/common/action_layer.c ****             action = action_for_key(i, key);
 188:./tmk_core/common/action_layer.c ****             if (action.code != ACTION_TRANSPARENT) {
 189:./tmk_core/common/action_layer.c ****                 return i;
 190:./tmk_core/common/action_layer.c ****             }
 191:./tmk_core/common/action_layer.c ****         }
 192:./tmk_core/common/action_layer.c ****     }
 193:./tmk_core/common/action_layer.c ****     /* fall back to layer 0 */
 194:./tmk_core/common/action_layer.c ****     return 0;
 1229               		.loc 1 194 12 view .LVU249
 1230 005e B12C      		mov r11,__zero_reg__
 1231               	.LVL68:
 1232               	.L21:
 195:./tmk_core/common/action_layer.c **** #else
 196:./tmk_core/common/action_layer.c ****     return biton32(default_layer_state);
 197:./tmk_core/common/action_layer.c **** #endif
 198:./tmk_core/common/action_layer.c **** }
 1233               		.loc 1 198 1 view .LVU250
 1234 0060 8B2D      		mov r24,r11
 1235               	/* epilogue start */
 1236 0062 DF91      		pop r29
 1237 0064 CF91      		pop r28
 1238 0066 1F91      		pop r17
 1239 0068 0F91      		pop r16
 1240 006a FF90      		pop r15
 1241 006c EF90      		pop r14
 1242 006e DF90      		pop r13
 1243 0070 CF90      		pop r12
 1244               	.LVL69:
 1245               		.loc 1 198 1 view .LVU251
 1246 0072 BF90      		pop r11
 1247 0074 0895      		ret
 1248               	.LVL70:
 1249               	.L22:
 1250               	.LBB89:
 187:./tmk_core/common/action_layer.c ****             action = action_for_key(i, key);
 1251               		.loc 1 187 13 is_stmt 1 view .LVU252
 187:./tmk_core/common/action_layer.c ****             action = action_for_key(i, key);
 1252               		.loc 1 187 22 is_stmt 0 view .LVU253
 1253 0076 B801      		movw r22,r16
 1254 0078 8C2F      		mov r24,r28
 1255 007a 0E94 0000 		call action_for_key
 1256               	.LVL71:
 188:./tmk_core/common/action_layer.c ****                 return i;
 1257               		.loc 1 188 13 is_stmt 1 view .LVU254
 188:./tmk_core/common/action_layer.c ****                 return i;
 1258               		.loc 1 188 16 is_stmt 0 view .LVU255
 1259 007e 0197      		sbiw r24,1
 1260 0080 01F0      		breq .L25
 1261 0082 00C0      		rjmp .L21
 1262               	.LBE89:
 1263               		.cfi_endproc
 1264               	.LFE23:
 1266               		.section	.text.layer_switch_get_action,"ax",@progbits
 1267               	.global	layer_switch_get_action
 1269               	layer_switch_get_action:
 1270               	.LVL72:
 1271               	.LFB24:
 199:./tmk_core/common/action_layer.c **** 
 200:./tmk_core/common/action_layer.c **** action_t layer_switch_get_action(keypos_t key)
 201:./tmk_core/common/action_layer.c **** {
 1272               		.loc 1 201 1 is_stmt 1 view -0
 1273               		.cfi_startproc
 1274               		.loc 1 201 1 is_stmt 0 view .LVU257
 1275 0000 CF93      		push r28
 1276               	.LCFI33:
 1277               		.cfi_def_cfa_offset 3
 1278               		.cfi_offset 28, -2
 1279 0002 DF93      		push r29
 1280               	.LCFI34:
 1281               		.cfi_def_cfa_offset 4
 1282               		.cfi_offset 29, -3
 1283               	/* prologue: function */
 1284               	/* frame size = 0 */
 1285               	/* stack size = 2 */
 1286               	.L__stack_usage = 2
 1287 0004 D82F      		mov r29,r24
 1288               	.LVL73:
 1289               		.loc 1 201 1 view .LVU258
 1290 0006 C92F      		mov r28,r25
 1291               	.LVL74:
 202:./tmk_core/common/action_layer.c ****     return action_for_key(layer_switch_get_layer(key), key);
 1292               		.loc 1 202 5 is_stmt 1 view .LVU259
 1293               		.loc 1 202 27 is_stmt 0 view .LVU260
 1294 0008 0E94 0000 		call layer_switch_get_layer
 1295               	.LVL75:
 1296               		.loc 1 202 12 view .LVU261
 1297 000c 6D2F      		mov r22,r29
 1298 000e 7C2F      		mov r23,r28
 1299               	/* epilogue start */
 203:./tmk_core/common/action_layer.c **** }
 1300               		.loc 1 203 1 view .LVU262
 1301 0010 DF91      		pop r29
 1302               	.LVL76:
 1303               		.loc 1 203 1 view .LVU263
 1304 0012 CF91      		pop r28
 202:./tmk_core/common/action_layer.c ****     return action_for_key(layer_switch_get_layer(key), key);
 1305               		.loc 1 202 12 view .LVU264
 1306 0014 0C94 0000 		jmp action_for_key
 1307               	.LVL77:
 1308               		.cfi_endproc
 1309               	.LFE24:
 1311               		.section	.text.store_or_get_action,"ax",@progbits
 1312               	.global	store_or_get_action
 1314               	store_or_get_action:
 1315               	.LVL78:
 1316               	.LFB22:
 155:./tmk_core/common/action_layer.c **** #if !defined(NO_ACTION_LAYER) && defined(PREVENT_STUCK_MODIFIERS)
 1317               		.loc 1 155 1 is_stmt 1 view -0
 1318               		.cfi_startproc
 155:./tmk_core/common/action_layer.c **** #if !defined(NO_ACTION_LAYER) && defined(PREVENT_STUCK_MODIFIERS)
 1319               		.loc 1 155 1 is_stmt 0 view .LVU266
 1320 0000 1F93      		push r17
 1321               	.LCFI35:
 1322               		.cfi_def_cfa_offset 3
 1323               		.cfi_offset 17, -2
 1324 0002 CF93      		push r28
 1325               	.LCFI36:
 1326               		.cfi_def_cfa_offset 4
 1327               		.cfi_offset 28, -3
 1328 0004 DF93      		push r29
 1329               	.LCFI37:
 1330               		.cfi_def_cfa_offset 5
 1331               		.cfi_offset 29, -4
 1332               	/* prologue: function */
 1333               	/* frame size = 0 */
 1334               	/* stack size = 3 */
 1335               	.L__stack_usage = 3
 1336 0006 162F      		mov r17,r22
 1337               	.LVL79:
 155:./tmk_core/common/action_layer.c **** #if !defined(NO_ACTION_LAYER) && defined(PREVENT_STUCK_MODIFIERS)
 1338               		.loc 1 155 1 view .LVU267
 1339 0008 D72F      		mov r29,r23
 1340               	.LVL80:
 157:./tmk_core/common/action_layer.c ****         return layer_switch_get_action(key);
 1341               		.loc 1 157 5 is_stmt 1 view .LVU268
 157:./tmk_core/common/action_layer.c ****         return layer_switch_get_action(key);
 1342               		.loc 1 157 8 is_stmt 0 view .LVU269
 1343 000a 9091 0000 		lds r25,disable_action_cache
 1344 000e 9923      		tst r25
 1345 0010 01F0      		breq .L32
 158:./tmk_core/common/action_layer.c ****     }
 1346               		.loc 1 158 9 is_stmt 1 view .LVU270
 1347               	.LVL81:
 158:./tmk_core/common/action_layer.c ****     }
 1348               		.loc 1 158 16 is_stmt 0 view .LVU271
 1349 0012 862F      		mov r24,r22
 1350               	.LVL82:
 158:./tmk_core/common/action_layer.c ****     }
 1351               		.loc 1 158 16 view .LVU272
 1352 0014 972F      		mov r25,r23
 1353               	/* epilogue start */
 174:./tmk_core/common/action_layer.c **** 
 1354               		.loc 1 174 1 view .LVU273
 1355 0016 DF91      		pop r29
 1356               	.LVL83:
 174:./tmk_core/common/action_layer.c **** 
 1357               		.loc 1 174 1 view .LVU274
 1358 0018 CF91      		pop r28
 1359 001a 1F91      		pop r17
 158:./tmk_core/common/action_layer.c ****     }
 1360               		.loc 1 158 16 view .LVU275
 1361 001c 0C94 0000 		jmp layer_switch_get_action
 1362               	.LVL84:
 1363               	.L32:
 161:./tmk_core/common/action_layer.c **** 
 1364               		.loc 1 161 5 is_stmt 1 view .LVU276
 163:./tmk_core/common/action_layer.c ****         layer = layer_switch_get_layer(key);
 1365               		.loc 1 163 5 view .LVU277
 163:./tmk_core/common/action_layer.c ****         layer = layer_switch_get_layer(key);
 1366               		.loc 1 163 8 is_stmt 0 view .LVU278
 1367 0020 8823      		tst r24
 1368 0022 01F0      		breq .L33
 164:./tmk_core/common/action_layer.c ****         update_source_layers_cache(key, layer);
 1369               		.loc 1 164 9 is_stmt 1 view .LVU279
 164:./tmk_core/common/action_layer.c ****         update_source_layers_cache(key, layer);
 1370               		.loc 1 164 17 is_stmt 0 view .LVU280
 1371 0024 862F      		mov r24,r22
 1372               	.LVL85:
 164:./tmk_core/common/action_layer.c ****         update_source_layers_cache(key, layer);
 1373               		.loc 1 164 17 view .LVU281
 1374 0026 972F      		mov r25,r23
 1375 0028 0E94 0000 		call layer_switch_get_layer
 1376               	.LVL86:
 1377 002c C82F      		mov r28,r24
 1378               	.LVL87:
 165:./tmk_core/common/action_layer.c ****     }
 1379               		.loc 1 165 9 is_stmt 1 view .LVU282
 1380 002e 682F      		mov r22,r24
 1381 0030 812F      		mov r24,r17
 1382               	.LVL88:
 165:./tmk_core/common/action_layer.c ****     }
 1383               		.loc 1 165 9 is_stmt 0 view .LVU283
 1384 0032 9D2F      		mov r25,r29
 1385 0034 0E94 0000 		call update_source_layers_cache
 1386               	.LVL89:
 1387               	.L34:
 170:./tmk_core/common/action_layer.c **** #else
 1388               		.loc 1 170 5 is_stmt 1 view .LVU284
 170:./tmk_core/common/action_layer.c **** #else
 1389               		.loc 1 170 12 is_stmt 0 view .LVU285
 1390 0038 612F      		mov r22,r17
 1391 003a 7D2F      		mov r23,r29
 1392 003c 8C2F      		mov r24,r28
 1393               	/* epilogue start */
 174:./tmk_core/common/action_layer.c **** 
 1394               		.loc 1 174 1 view .LVU286
 1395 003e DF91      		pop r29
 1396               	.LVL90:
 174:./tmk_core/common/action_layer.c **** 
 1397               		.loc 1 174 1 view .LVU287
 1398 0040 CF91      		pop r28
 1399               	.LVL91:
 174:./tmk_core/common/action_layer.c **** 
 1400               		.loc 1 174 1 view .LVU288
 1401 0042 1F91      		pop r17
 170:./tmk_core/common/action_layer.c **** #else
 1402               		.loc 1 170 12 view .LVU289
 1403 0044 0C94 0000 		jmp action_for_key
 1404               	.LVL92:
 1405               	.L33:
 168:./tmk_core/common/action_layer.c ****     }
 1406               		.loc 1 168 9 is_stmt 1 view .LVU290
 168:./tmk_core/common/action_layer.c ****     }
 1407               		.loc 1 168 17 is_stmt 0 view .LVU291
 1408 0048 862F      		mov r24,r22
 1409               	.LVL93:
 168:./tmk_core/common/action_layer.c ****     }
 1410               		.loc 1 168 17 view .LVU292
 1411 004a 972F      		mov r25,r23
 1412 004c 0E94 0000 		call read_source_layers_cache
 1413               	.LVL94:
 1414 0050 C82F      		mov r28,r24
 1415               	.LVL95:
 168:./tmk_core/common/action_layer.c ****     }
 1416               		.loc 1 168 17 view .LVU293
 1417 0052 00C0      		rjmp .L34
 1418               		.cfi_endproc
 1419               	.LFE22:
 1421               	.global	source_layers_cache
 1422               		.section	.bss.source_layers_cache,"aw",@nobits
 1425               	source_layers_cache:
 1426 0000 0000 0000 		.zero	80
 1426      0000 0000 
 1426      0000 0000 
 1426      0000 0000 
 1426      0000 0000 
 1427               	.global	layer_state
 1428               		.section	.bss.layer_state,"aw",@nobits
 1431               	layer_state:
 1432 0000 0000 0000 		.zero	4
 1433               	.global	default_layer_state
 1434               		.section	.bss.default_layer_state,"aw",@nobits
 1437               	default_layer_state:
 1438 0000 0000 0000 		.zero	4
 1439               		.text
 1440               	.Letext0:
 1441               		.file 2 "/usr/avr/include/stdint.h"
 1442               		.file 3 "./tmk_core/common/keyboard.h"
 1443               		.file 4 "./tmk_core/common/action_code.h"
 1444               		.file 5 "./tmk_core/common/action.h"
 1445               		.file 6 "./tmk_core/common/action_layer.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 action_layer.c
     /tmp/ccvwhUb1.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccvwhUb1.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccvwhUb1.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccvwhUb1.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/ccvwhUb1.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccvwhUb1.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccvwhUb1.s:14     .text.default_layer_debug:0000000000000000 default_layer_debug
     /tmp/ccvwhUb1.s:33     .text.default_layer_set:0000000000000000 default_layer_set
     /tmp/ccvwhUb1.s:1437   .bss.default_layer_state:0000000000000000 default_layer_state
     /tmp/ccvwhUb1.s:71     .text.default_layer_or:0000000000000000 default_layer_or
     /tmp/ccvwhUb1.s:161    .text.default_layer_and:0000000000000000 default_layer_and
     /tmp/ccvwhUb1.s:251    .text.default_layer_xor:0000000000000000 default_layer_xor
     /tmp/ccvwhUb1.s:341    .text.layer_clear:0000000000000000 layer_clear
     /tmp/ccvwhUb1.s:1431   .bss.layer_state:0000000000000000 layer_state
     /tmp/ccvwhUb1.s:377    .text.layer_move:0000000000000000 layer_move
     /tmp/ccvwhUb1.s:432    .text.layer_on:0000000000000000 layer_on
     /tmp/ccvwhUb1.s:498    .text.layer_off:0000000000000000 layer_off
     /tmp/ccvwhUb1.s:569    .text.layer_invert:0000000000000000 layer_invert
     /tmp/ccvwhUb1.s:635    .text.layer_or:0000000000000000 layer_or
     /tmp/ccvwhUb1.s:725    .text.layer_and:0000000000000000 layer_and
     /tmp/ccvwhUb1.s:815    .text.layer_xor:0000000000000000 layer_xor
     /tmp/ccvwhUb1.s:905    .text.layer_debug:0000000000000000 layer_debug
     /tmp/ccvwhUb1.s:920    .text.update_source_layers_cache:0000000000000000 update_source_layers_cache
     /tmp/ccvwhUb1.s:1425   .bss.source_layers_cache:0000000000000000 source_layers_cache
     /tmp/ccvwhUb1.s:1023   .text.read_source_layers_cache:0000000000000000 read_source_layers_cache
     /tmp/ccvwhUb1.s:1122   .text.layer_switch_get_layer:0000000000000000 layer_switch_get_layer
     /tmp/ccvwhUb1.s:1269   .text.layer_switch_get_action:0000000000000000 layer_switch_get_action
     /tmp/ccvwhUb1.s:1314   .text.store_or_get_action:0000000000000000 store_or_get_action

UNDEFINED SYMBOLS
clear_keyboard_but_mods
action_for_key
disable_action_cache
__do_clear_bss
