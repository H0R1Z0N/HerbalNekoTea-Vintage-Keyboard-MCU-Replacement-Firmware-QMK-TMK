   1               		.file	"bootmagic.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.text.scan_keycode,"ax",@progbits
  13               	scan_keycode:
  14               	.LVL0:
  15               	.LFB108:
  16               		.file 1 "./tmk_core/common/bootmagic.c"
   1:./tmk_core/common/bootmagic.c **** #include <stdint.h>
   2:./tmk_core/common/bootmagic.c **** #include <stdbool.h>
   3:./tmk_core/common/bootmagic.c **** #include "wait.h"
   4:./tmk_core/common/bootmagic.c **** #include "matrix.h"
   5:./tmk_core/common/bootmagic.c **** #include "bootloader.h"
   6:./tmk_core/common/bootmagic.c **** #include "debug.h"
   7:./tmk_core/common/bootmagic.c **** #include "keymap.h"
   8:./tmk_core/common/bootmagic.c **** #include "host.h"
   9:./tmk_core/common/bootmagic.c **** #include "action_layer.h"
  10:./tmk_core/common/bootmagic.c **** #include "eeconfig.h"
  11:./tmk_core/common/bootmagic.c **** #include "bootmagic.h"
  12:./tmk_core/common/bootmagic.c **** 
  13:./tmk_core/common/bootmagic.c **** keymap_config_t keymap_config;
  14:./tmk_core/common/bootmagic.c **** 
  15:./tmk_core/common/bootmagic.c **** void bootmagic(void)
  16:./tmk_core/common/bootmagic.c **** {
  17:./tmk_core/common/bootmagic.c ****     /* check signature */
  18:./tmk_core/common/bootmagic.c ****     if (!eeconfig_is_enabled()) {
  19:./tmk_core/common/bootmagic.c ****         eeconfig_init();
  20:./tmk_core/common/bootmagic.c ****     }
  21:./tmk_core/common/bootmagic.c **** 
  22:./tmk_core/common/bootmagic.c ****     /* do scans in case of bounce */
  23:./tmk_core/common/bootmagic.c ****     print("bootmagic scan: ... ");
  24:./tmk_core/common/bootmagic.c ****     uint8_t scan = 100;
  25:./tmk_core/common/bootmagic.c ****     while (scan--) { matrix_scan(); wait_ms(10); }
  26:./tmk_core/common/bootmagic.c ****     print("done.\n");
  27:./tmk_core/common/bootmagic.c **** 
  28:./tmk_core/common/bootmagic.c ****     /* bootmagic skip */
  29:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SKIP)) {
  30:./tmk_core/common/bootmagic.c ****         return;
  31:./tmk_core/common/bootmagic.c ****     }
  32:./tmk_core/common/bootmagic.c **** 
  33:./tmk_core/common/bootmagic.c ****     /* eeconfig clear */
  34:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_EEPROM_CLEAR)) {
  35:./tmk_core/common/bootmagic.c ****         eeconfig_init();
  36:./tmk_core/common/bootmagic.c ****     }
  37:./tmk_core/common/bootmagic.c **** 
  38:./tmk_core/common/bootmagic.c ****     /* bootloader */
  39:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_BOOTLOADER)) {
  40:./tmk_core/common/bootmagic.c ****         bootloader_jump();
  41:./tmk_core/common/bootmagic.c ****     }
  42:./tmk_core/common/bootmagic.c **** 
  43:./tmk_core/common/bootmagic.c ****     /* debug enable */
  44:./tmk_core/common/bootmagic.c ****     debug_config.raw = eeconfig_read_debug();
  45:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_ENABLE)) {
  46:./tmk_core/common/bootmagic.c ****         if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_MATRIX)) {
  47:./tmk_core/common/bootmagic.c ****             debug_config.matrix = !debug_config.matrix;
  48:./tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_KEYBOARD)) {
  49:./tmk_core/common/bootmagic.c ****             debug_config.keyboard = !debug_config.keyboard;
  50:./tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_MOUSE)) {
  51:./tmk_core/common/bootmagic.c ****             debug_config.mouse = !debug_config.mouse;
  52:./tmk_core/common/bootmagic.c ****         } else {
  53:./tmk_core/common/bootmagic.c ****             debug_config.enable = !debug_config.enable;
  54:./tmk_core/common/bootmagic.c ****         }
  55:./tmk_core/common/bootmagic.c ****     }
  56:./tmk_core/common/bootmagic.c ****     eeconfig_update_debug(debug_config.raw);
  57:./tmk_core/common/bootmagic.c **** 
  58:./tmk_core/common/bootmagic.c ****     /* keymap config */
  59:./tmk_core/common/bootmagic.c ****     keymap_config.raw = eeconfig_read_keymap();
  60:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_CONTROL_CAPSLOCK)) {
  61:./tmk_core/common/bootmagic.c ****         keymap_config.swap_control_capslock = !keymap_config.swap_control_capslock;
  62:./tmk_core/common/bootmagic.c ****     }
  63:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_CAPSLOCK_TO_CONTROL)) {
  64:./tmk_core/common/bootmagic.c ****         keymap_config.capslock_to_control = !keymap_config.capslock_to_control;
  65:./tmk_core/common/bootmagic.c ****     }
  66:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_LALT_LGUI)) {
  67:./tmk_core/common/bootmagic.c ****         keymap_config.swap_lalt_lgui = !keymap_config.swap_lalt_lgui;
  68:./tmk_core/common/bootmagic.c ****     }
  69:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_RALT_RGUI)) {
  70:./tmk_core/common/bootmagic.c ****         keymap_config.swap_ralt_rgui = !keymap_config.swap_ralt_rgui;
  71:./tmk_core/common/bootmagic.c ****     }
  72:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_NO_GUI)) {
  73:./tmk_core/common/bootmagic.c ****         keymap_config.no_gui = !keymap_config.no_gui;
  74:./tmk_core/common/bootmagic.c ****     }
  75:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_GRAVE_ESC)) {
  76:./tmk_core/common/bootmagic.c ****         keymap_config.swap_grave_esc = !keymap_config.swap_grave_esc;
  77:./tmk_core/common/bootmagic.c ****     }
  78:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_BACKSLASH_BACKSPACE)) {
  79:./tmk_core/common/bootmagic.c ****         keymap_config.swap_backslash_backspace = !keymap_config.swap_backslash_backspace;
  80:./tmk_core/common/bootmagic.c ****     }
  81:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_HOST_NKRO)) {
  82:./tmk_core/common/bootmagic.c ****         keymap_config.nkro = !keymap_config.nkro;
  83:./tmk_core/common/bootmagic.c ****     }
  84:./tmk_core/common/bootmagic.c ****     eeconfig_update_keymap(keymap_config.raw);
  85:./tmk_core/common/bootmagic.c **** 
  86:./tmk_core/common/bootmagic.c ****     /* default layer */
  87:./tmk_core/common/bootmagic.c ****     uint8_t default_layer = 0;
  88:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_0)) { default_layer |= (1<<0); }
  89:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_1)) { default_layer |= (1<<1); }
  90:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_2)) { default_layer |= (1<<2); }
  91:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_3)) { default_layer |= (1<<3); }
  92:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_4)) { default_layer |= (1<<4); }
  93:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_5)) { default_layer |= (1<<5); }
  94:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_6)) { default_layer |= (1<<6); }
  95:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_7)) { default_layer |= (1<<7); }
  96:./tmk_core/common/bootmagic.c ****     if (default_layer) {
  97:./tmk_core/common/bootmagic.c ****         eeconfig_update_default_layer(default_layer);
  98:./tmk_core/common/bootmagic.c ****         default_layer_set((uint32_t)default_layer);
  99:./tmk_core/common/bootmagic.c ****     } else {
 100:./tmk_core/common/bootmagic.c ****         default_layer = eeconfig_read_default_layer();
 101:./tmk_core/common/bootmagic.c ****         default_layer_set((uint32_t)default_layer);
 102:./tmk_core/common/bootmagic.c ****     }
 103:./tmk_core/common/bootmagic.c **** }
 104:./tmk_core/common/bootmagic.c **** 
 105:./tmk_core/common/bootmagic.c **** static bool scan_keycode(uint8_t keycode)
 106:./tmk_core/common/bootmagic.c **** {
  17               		.loc 1 106 1 view -0
  18               		.cfi_startproc
  19               		.loc 1 106 1 is_stmt 0 view .LVU1
  20 0000 AF92      		push r10
  21               	.LCFI0:
  22               		.cfi_def_cfa_offset 3
  23               		.cfi_offset 10, -2
  24 0002 BF92      		push r11
  25               	.LCFI1:
  26               		.cfi_def_cfa_offset 4
  27               		.cfi_offset 11, -3
  28 0004 CF92      		push r12
  29               	.LCFI2:
  30               		.cfi_def_cfa_offset 5
  31               		.cfi_offset 12, -4
  32 0006 DF92      		push r13
  33               	.LCFI3:
  34               		.cfi_def_cfa_offset 6
  35               		.cfi_offset 13, -5
  36 0008 EF92      		push r14
  37               	.LCFI4:
  38               		.cfi_def_cfa_offset 7
  39               		.cfi_offset 14, -6
  40 000a FF92      		push r15
  41               	.LCFI5:
  42               		.cfi_def_cfa_offset 8
  43               		.cfi_offset 15, -7
  44 000c 0F93      		push r16
  45               	.LCFI6:
  46               		.cfi_def_cfa_offset 9
  47               		.cfi_offset 16, -8
  48 000e 1F93      		push r17
  49               	.LCFI7:
  50               		.cfi_def_cfa_offset 10
  51               		.cfi_offset 17, -9
  52 0010 CF93      		push r28
  53               	.LCFI8:
  54               		.cfi_def_cfa_offset 11
  55               		.cfi_offset 28, -10
  56               	/* prologue: function */
  57               	/* frame size = 0 */
  58               	/* stack size = 9 */
  59               	.L__stack_usage = 9
 107:./tmk_core/common/bootmagic.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
  60               		.loc 1 107 5 is_stmt 1 view .LVU2
  61               	.LBB8:
  62               		.loc 1 107 10 view .LVU3
  63               	.LVL1:
  64               		.loc 1 107 27 view .LVU4
  65               		.loc 1 107 18 is_stmt 0 view .LVU5
  66 0012 C0E0      		ldi r28,0
  67               	.LBB9:
  68               	.LBB10:
 108:./tmk_core/common/bootmagic.c ****         matrix_row_t matrix_row = matrix_get_row(r);
 109:./tmk_core/common/bootmagic.c ****         for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 110:./tmk_core/common/bootmagic.c ****             if (matrix_row & ((matrix_row_t)1<<c)) {
  69               		.loc 1 110 46 view .LVU6
  70 0014 AA24      		clr r10
  71 0016 A394      		inc r10
  72 0018 B12C      		mov r11,__zero_reg__
  73               	.LBB11:
 111:./tmk_core/common/bootmagic.c ****                 if (keycode == keymap_key_to_keycode(0, (keypos_t){ .row = r, .col = c })) {
  74               		.loc 1 111 29 view .LVU7
  75 001a E82E      		mov r14,r24
  76 001c F12C      		mov r15,__zero_reg__
  77               	.LVL2:
  78               	.L6:
  79               		.loc 1 111 29 view .LVU8
  80               	.LBE11:
  81               	.LBE10:
 108:./tmk_core/common/bootmagic.c ****         matrix_row_t matrix_row = matrix_get_row(r);
  82               		.loc 1 108 9 is_stmt 1 view .LVU9
 108:./tmk_core/common/bootmagic.c ****         matrix_row_t matrix_row = matrix_get_row(r);
  83               		.loc 1 108 35 is_stmt 0 view .LVU10
  84 001e 8C2F      		mov r24,r28
  85 0020 0E94 0000 		call matrix_get_row
  86               	.LVL3:
  87 0024 6C01      		movw r12,r24
  88               	.LVL4:
 109:./tmk_core/common/bootmagic.c ****             if (matrix_row & ((matrix_row_t)1<<c)) {
  89               		.loc 1 109 9 is_stmt 1 view .LVU11
  90               	.LBB13:
 109:./tmk_core/common/bootmagic.c ****             if (matrix_row & ((matrix_row_t)1<<c)) {
  91               		.loc 1 109 14 view .LVU12
 109:./tmk_core/common/bootmagic.c ****             if (matrix_row & ((matrix_row_t)1<<c)) {
  92               		.loc 1 109 31 view .LVU13
  93               	.LBE13:
 108:./tmk_core/common/bootmagic.c ****         matrix_row_t matrix_row = matrix_get_row(r);
  94               		.loc 1 108 35 is_stmt 0 view .LVU14
  95 0026 10E0      		ldi r17,0
  96 0028 00E0      		ldi r16,0
  97               	.LVL5:
  98               	.L5:
  99               	.LBB14:
 110:./tmk_core/common/bootmagic.c ****                 if (keycode == keymap_key_to_keycode(0, (keypos_t){ .row = r, .col = c })) {
 100               		.loc 1 110 13 is_stmt 1 view .LVU15
 110:./tmk_core/common/bootmagic.c ****                 if (keycode == keymap_key_to_keycode(0, (keypos_t){ .row = r, .col = c })) {
 101               		.loc 1 110 46 is_stmt 0 view .LVU16
 102 002a C501      		movw r24,r10
 103 002c 002E      		mov r0,r16
 104 002e 00C0      		rjmp 2f
 105               		1:
 106 0030 880F      		lsl r24
 107 0032 991F      		rol r25
 108               		2:
 109 0034 0A94      		dec r0
 110 0036 02F4      		brpl 1b
 110:./tmk_core/common/bootmagic.c ****                 if (keycode == keymap_key_to_keycode(0, (keypos_t){ .row = r, .col = c })) {
 111               		.loc 1 110 28 view .LVU17
 112 0038 8C21      		and r24,r12
 113 003a 9D21      		and r25,r13
 110:./tmk_core/common/bootmagic.c ****                 if (keycode == keymap_key_to_keycode(0, (keypos_t){ .row = r, .col = c })) {
 114               		.loc 1 110 16 view .LVU18
 115 003c 892B      		or r24,r25
 116 003e 01F0      		breq .L2
 117               		.loc 1 111 17 is_stmt 1 view .LVU19
 118               	.LBB12:
 119               		.loc 1 111 32 is_stmt 0 view .LVU20
 120 0040 602F      		mov r22,r16
 121 0042 7C2F      		mov r23,r28
 122 0044 80E0      		ldi r24,0
 123 0046 0E94 0000 		call keymap_key_to_keycode
 124               	.LVL6:
 125               		.loc 1 111 20 view .LVU21
 126 004a E816      		cp r14,r24
 127 004c F906      		cpc r15,r25
 128 004e 01F4      		brne .L2
 112:./tmk_core/common/bootmagic.c ****                     return true;
 129               		.loc 1 112 21 is_stmt 1 view .LVU22
 130               		.loc 1 112 28 is_stmt 0 view .LVU23
 131 0050 81E0      		ldi r24,lo8(1)
 132               	.LVL7:
 133               	.L1:
 134               	/* epilogue start */
 135               		.loc 1 112 28 view .LVU24
 136               	.LBE12:
 137               	.LBE14:
 138               	.LBE9:
 139               	.LBE8:
 113:./tmk_core/common/bootmagic.c ****                 }
 114:./tmk_core/common/bootmagic.c ****             }
 115:./tmk_core/common/bootmagic.c ****         }
 116:./tmk_core/common/bootmagic.c ****     }
 117:./tmk_core/common/bootmagic.c ****     return false;
 118:./tmk_core/common/bootmagic.c **** }
 140               		.loc 1 118 1 view .LVU25
 141 0052 CF91      		pop r28
 142               	.LVL8:
 143               		.loc 1 118 1 view .LVU26
 144 0054 1F91      		pop r17
 145 0056 0F91      		pop r16
 146 0058 FF90      		pop r15
 147 005a EF90      		pop r14
 148               	.LVL9:
 149               		.loc 1 118 1 view .LVU27
 150 005c DF90      		pop r13
 151 005e CF90      		pop r12
 152               	.LVL10:
 153               		.loc 1 118 1 view .LVU28
 154 0060 BF90      		pop r11
 155 0062 AF90      		pop r10
 156 0064 0895      		ret
 157               	.LVL11:
 158               	.L2:
 159               	.LBB17:
 160               	.LBB16:
 161               	.LBB15:
 109:./tmk_core/common/bootmagic.c ****             if (matrix_row & ((matrix_row_t)1<<c)) {
 162               		.loc 1 109 47 is_stmt 1 discriminator 2 view .LVU29
 109:./tmk_core/common/bootmagic.c ****             if (matrix_row & ((matrix_row_t)1<<c)) {
 163               		.loc 1 109 31 discriminator 2 view .LVU30
 164 0066 0F5F      		subi r16,-1
 165 0068 1F4F      		sbci r17,-1
 166               	.LVL12:
 109:./tmk_core/common/bootmagic.c ****             if (matrix_row & ((matrix_row_t)1<<c)) {
 167               		.loc 1 109 31 is_stmt 0 discriminator 2 view .LVU31
 168 006a 0031      		cpi r16,16
 169 006c 1105      		cpc r17,__zero_reg__
 170 006e 01F4      		brne .L5
 171               	.LBE15:
 172               	.LBE16:
 107:./tmk_core/common/bootmagic.c ****         matrix_row_t matrix_row = matrix_get_row(r);
 173               		.loc 1 107 43 is_stmt 1 discriminator 2 view .LVU32
 174 0070 CF5F      		subi r28,lo8(-(1))
 175               	.LVL13:
 107:./tmk_core/common/bootmagic.c ****         matrix_row_t matrix_row = matrix_get_row(r);
 176               		.loc 1 107 27 discriminator 2 view .LVU33
 177 0072 C830      		cpi r28,lo8(8)
 178 0074 01F4      		brne .L6
 179               	.LBE17:
 117:./tmk_core/common/bootmagic.c **** }
 180               		.loc 1 117 12 is_stmt 0 view .LVU34
 181 0076 80E0      		ldi r24,0
 182 0078 00C0      		rjmp .L1
 183               		.cfi_endproc
 184               	.LFE108:
 186               		.section	.text.bootmagic_scan_keycode,"ax",@progbits
 187               	.global	bootmagic_scan_keycode
 189               	bootmagic_scan_keycode:
 190               	.LVL14:
 191               	.LFB109:
 119:./tmk_core/common/bootmagic.c **** 
 120:./tmk_core/common/bootmagic.c **** bool bootmagic_scan_keycode(uint8_t keycode)
 121:./tmk_core/common/bootmagic.c **** {
 192               		.loc 1 121 1 is_stmt 1 view -0
 193               		.cfi_startproc
 194               		.loc 1 121 1 is_stmt 0 view .LVU36
 195 0000 CF93      		push r28
 196               	.LCFI9:
 197               		.cfi_def_cfa_offset 3
 198               		.cfi_offset 28, -2
 199               	/* prologue: function */
 200               	/* frame size = 0 */
 201               	/* stack size = 1 */
 202               	.L__stack_usage = 1
 203 0002 C82F      		mov r28,r24
 122:./tmk_core/common/bootmagic.c ****     if (!scan_keycode(BOOTMAGIC_KEY_SALT)) return false;
 204               		.loc 1 122 5 is_stmt 1 view .LVU37
 205               		.loc 1 122 10 is_stmt 0 view .LVU38
 206 0004 8CE2      		ldi r24,lo8(44)
 207               	.LVL15:
 208               		.loc 1 122 10 view .LVU39
 209 0006 0E94 0000 		call scan_keycode
 210               	.LVL16:
 211               		.loc 1 122 8 view .LVU40
 212 000a 8823      		tst r24
 213 000c 01F0      		breq .L12
 123:./tmk_core/common/bootmagic.c **** 
 124:./tmk_core/common/bootmagic.c ****     return scan_keycode(keycode);
 214               		.loc 1 124 5 is_stmt 1 view .LVU41
 215               		.loc 1 124 12 is_stmt 0 view .LVU42
 216 000e 8C2F      		mov r24,r28
 217               	/* epilogue start */
 125:./tmk_core/common/bootmagic.c **** }...
 218               		.loc 1 125 1 view .LVU43
 219 0010 CF91      		pop r28
 220               	.LVL17:
 124:./tmk_core/common/bootmagic.c ****     return scan_keycode(keycode);
 221               		.loc 1 124 12 view .LVU44
 222 0012 0C94 0000 		jmp scan_keycode
 223               	.LVL18:
 224               	.L12:
 225               		.loc 1 125 1 view .LVU45
 226 0016 80E0      		ldi r24,0
 227               	/* epilogue start */
 228 0018 CF91      		pop r28
 229               	.LVL19:
 230               		.loc 1 125 1 view .LVU46
 231 001a 0895      		ret
 232               		.cfi_endproc
 233               	.LFE109:
 235               		.section	.text.bootmagic,"ax",@progbits
 236               	.global	bootmagic
 238               	bootmagic:
 239               	.LFB107:
  16:./tmk_core/common/bootmagic.c **** {
 240               		.loc 1 16 1 is_stmt 1 view -0
 241               		.cfi_startproc
 242 0000 CF93      		push r28
 243               	.LCFI10:
 244               		.cfi_def_cfa_offset 3
 245               		.cfi_offset 28, -2
 246 0002 DF93      		push r29
 247               	.LCFI11:
 248               		.cfi_def_cfa_offset 4
 249               		.cfi_offset 29, -3
 250 0004 00D0      		rcall .
 251 0006 00D0      		rcall .
 252               	.LCFI12:
 253               		.cfi_def_cfa_offset 8
 254 0008 CDB7      		in r28,__SP_L__
 255 000a DEB7      		in r29,__SP_H__
 256               	.LCFI13:
 257               		.cfi_def_cfa_register 28
 258               	/* prologue: function */
 259               	/* frame size = 4 */
 260               	/* stack size = 6 */
 261               	.L__stack_usage = 6
  18:./tmk_core/common/bootmagic.c ****     if (!eeconfig_is_enabled()) {
 262               		.loc 1 18 5 view .LVU48
  18:./tmk_core/common/bootmagic.c ****     if (!eeconfig_is_enabled()) {
 263               		.loc 1 18 10 is_stmt 0 view .LVU49
 264 000c 0E94 0000 		call eeconfig_is_enabled
 265               	.LVL20:
  18:./tmk_core/common/bootmagic.c ****     if (!eeconfig_is_enabled()) {
 266               		.loc 1 18 8 view .LVU50
 267 0010 8111      		cpse r24,__zero_reg__
 268 0012 00C0      		rjmp .L15
  19:./tmk_core/common/bootmagic.c ****         eeconfig_init();
 269               		.loc 1 19 9 is_stmt 1 view .LVU51
 270 0014 0E94 0000 		call eeconfig_init
 271               	.LVL21:
 272               	.L15:
  16:./tmk_core/common/bootmagic.c **** {
 273               		.loc 1 16 1 is_stmt 0 discriminator 1 view .LVU52
 274 0018 95E6      		ldi r25,lo8(101)
 275 001a 9983      		std Y+1,r25
 276 001c 00C0      		rjmp .L16
 277               	.LVL22:
 278               	.L17:
  25:./tmk_core/common/bootmagic.c ****     while (scan--) { matrix_scan(); wait_ms(10); }
 279               		.loc 1 25 22 is_stmt 1 discriminator 2 view .LVU53
 280 001e 0E94 0000 		call matrix_scan
 281               	.LVL23:
  25:./tmk_core/common/bootmagic.c ****     while (scan--) { matrix_scan(); wait_ms(10); }
 282               		.loc 1 25 37 discriminator 2 view .LVU54
 283               	.LBB18:
 284               	.LBI18:
 285               		.file 2 "/usr/avr/include/util/delay.h"
   1:/usr/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/avr/include/util/delay.h **** 
   6:/usr/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/avr/include/util/delay.h **** 
   9:/usr/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/avr/include/util/delay.h **** 
  12:/usr/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/avr/include/util/delay.h ****      distribution.
  16:/usr/avr/include/util/delay.h **** 
  17:/usr/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/avr/include/util/delay.h **** 
  21:/usr/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/avr/include/util/delay.h **** 
  33:/usr/avr/include/util/delay.h **** /* $Id: delay.h.in 2551 2020-10-10 20:33:35Z joerg_wunsch $ */
  34:/usr/avr/include/util/delay.h **** 
  35:/usr/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/avr/include/util/delay.h **** 
  38:/usr/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/usr/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/usr/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/usr/avr/include/util/delay.h **** #  endif
  42:/usr/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/usr/avr/include/util/delay.h **** 
  44:/usr/avr/include/util/delay.h **** #include <inttypes.h>
  45:/usr/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/usr/avr/include/util/delay.h **** #include <math.h>
  47:/usr/avr/include/util/delay.h **** 
  48:/usr/avr/include/util/delay.h **** /** \file */
  49:/usr/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/usr/avr/include/util/delay.h ****     \code
  51:/usr/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/usr/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/usr/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/usr/avr/include/util/delay.h ****     \endcode
  55:/usr/avr/include/util/delay.h **** 
  56:/usr/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/usr/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/usr/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/usr/avr/include/util/delay.h ****     used.
  60:/usr/avr/include/util/delay.h **** 
  61:/usr/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/usr/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/usr/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/usr/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/usr/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/usr/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/usr/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/usr/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/usr/avr/include/util/delay.h **** 
  70:/usr/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/usr/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/usr/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/usr/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/usr/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/usr/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/usr/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/usr/avr/include/util/delay.h ****     routines linked into the application.
  78:/usr/avr/include/util/delay.h **** 
  79:/usr/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/usr/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/usr/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/usr/avr/include/util/delay.h **** 
  83:/usr/avr/include/util/delay.h **** */
  84:/usr/avr/include/util/delay.h **** 
  85:/usr/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/usr/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/usr/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/usr/avr/include/util/delay.h **** #endif
  89:/usr/avr/include/util/delay.h **** 
  90:/usr/avr/include/util/delay.h **** #ifndef F_CPU
  91:/usr/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/usr/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/usr/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/usr/avr/include/util/delay.h ****     \def F_CPU
  95:/usr/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/usr/avr/include/util/delay.h **** 
  97:/usr/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/usr/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/usr/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/usr/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/usr/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/usr/avr/include/util/delay.h **** 
 103:/usr/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/usr/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/usr/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/usr/avr/include/util/delay.h ****     integer value.
 107:/usr/avr/include/util/delay.h ****  */
 108:/usr/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/usr/avr/include/util/delay.h **** #endif
 110:/usr/avr/include/util/delay.h **** 
 111:/usr/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/usr/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/usr/avr/include/util/delay.h **** #endif
 114:/usr/avr/include/util/delay.h **** 
 115:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/usr/avr/include/util/delay.h **** #  include <math.h>
 119:/usr/avr/include/util/delay.h **** #endif
 120:/usr/avr/include/util/delay.h **** 
 121:/usr/avr/include/util/delay.h **** /**
 122:/usr/avr/include/util/delay.h ****    \ingroup util_delay
 123:/usr/avr/include/util/delay.h **** 
 124:/usr/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/usr/avr/include/util/delay.h **** 
 126:/usr/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/usr/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/usr/avr/include/util/delay.h **** 
 129:/usr/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/usr/avr/include/util/delay.h **** 
 131:/usr/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/usr/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/usr/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/usr/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/usr/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/usr/avr/include/util/delay.h **** 
 137:/usr/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/usr/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/usr/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/usr/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/usr/avr/include/util/delay.h **** 
 142:/usr/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/usr/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/usr/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/usr/avr/include/util/delay.h ****    microseconds of delay.
 146:/usr/avr/include/util/delay.h **** 
 147:/usr/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/usr/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/usr/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/usr/avr/include/util/delay.h ****    respectively.
 151:/usr/avr/include/util/delay.h **** 
 152:/usr/avr/include/util/delay.h ****    \note
 153:/usr/avr/include/util/delay.h **** 
 154:/usr/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/usr/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/usr/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/usr/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/usr/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/usr/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/usr/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/usr/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/usr/avr/include/util/delay.h ****    not available to the compiler then.
 163:/usr/avr/include/util/delay.h **** 
 164:/usr/avr/include/util/delay.h ****  */
 165:/usr/avr/include/util/delay.h **** void
 166:/usr/avr/include/util/delay.h **** _delay_ms(double __ms)
 286               		.loc 2 166 1 discriminator 2 view .LVU55
 287               	.LBB19:
 167:/usr/avr/include/util/delay.h **** {
 168:/usr/avr/include/util/delay.h **** 	double __tmp ;
 288               		.loc 2 168 2 discriminator 2 view .LVU56
 169:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/usr/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 289               		.loc 2 172 2 discriminator 2 view .LVU57
 173:/usr/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 290               		.loc 2 173 2 discriminator 2 view .LVU58
 174:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 291               		.loc 2 174 2 discriminator 2 view .LVU59
 175:/usr/avr/include/util/delay.h **** 
 176:/usr/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/usr/avr/include/util/delay.h **** 
 179:/usr/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/usr/avr/include/util/delay.h **** 
 182:/usr/avr/include/util/delay.h **** 	#else
 183:/usr/avr/include/util/delay.h **** 		//round up by default
 184:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 292               		.loc 2 184 3 discriminator 2 view .LVU60
 185:/usr/avr/include/util/delay.h **** 	#endif
 186:/usr/avr/include/util/delay.h **** 
 187:/usr/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 293               		.loc 2 187 2 discriminator 2 view .LVU61
 294 0022 8FE3      		ldi r24,lo8(-25537)
 295 0024 9CE9      		ldi r25,hi8(-25537)
 296 0026 0197      	1:	sbiw r24,1
 297 0028 01F4      		brne 1b
 298 002a 00C0      		rjmp .
 299 002c 0000      		nop
 300               	.LVL24:
 301               	.L16:
 302               		.loc 2 187 2 is_stmt 0 discriminator 2 view .LVU62
 303               	.LBE19:
 304               	.LBE18:
  25:./tmk_core/common/bootmagic.c ****     while (scan--) { matrix_scan(); wait_ms(10); }
 305               		.loc 1 25 12 is_stmt 1 discriminator 1 view .LVU63
  25:./tmk_core/common/bootmagic.c ****     while (scan--) { matrix_scan(); wait_ms(10); }
 306               		.loc 1 25 12 is_stmt 0 discriminator 1 view .LVU64
 307 002e A981      		ldd r26,Y+1
 308 0030 A150      		subi r26,lo8(-(-1))
 309 0032 A983      		std Y+1,r26
 310               	.LVL25:
  25:./tmk_core/common/bootmagic.c ****     while (scan--) { matrix_scan(); wait_ms(10); }
 311               		.loc 1 25 12 discriminator 1 view .LVU65
 312 0034 A111      		cpse r26,__zero_reg__
 313 0036 00C0      		rjmp .L17
  26:./tmk_core/common/bootmagic.c ****     print("done.\n");
 314               		.loc 1 26 21 is_stmt 1 view .LVU66
  29:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SKIP)) {
 315               		.loc 1 29 5 view .LVU67
  29:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SKIP)) {
 316               		.loc 1 29 9 is_stmt 0 view .LVU68
 317 0038 89E2      		ldi r24,lo8(41)
 318 003a 0E94 0000 		call bootmagic_scan_keycode
 319               	.LVL26:
  29:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SKIP)) {
 320               		.loc 1 29 8 view .LVU69
 321 003e 8111      		cpse r24,__zero_reg__
 322 0040 00C0      		rjmp .L14
  34:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_EEPROM_CLEAR)) {
 323               		.loc 1 34 5 is_stmt 1 view .LVU70
  34:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_EEPROM_CLEAR)) {
 324               		.loc 1 34 9 is_stmt 0 view .LVU71
 325 0042 8AE2      		ldi r24,lo8(42)
 326 0044 0E94 0000 		call bootmagic_scan_keycode
 327               	.LVL27:
  34:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_EEPROM_CLEAR)) {
 328               		.loc 1 34 8 view .LVU72
 329 0048 8111      		cpse r24,__zero_reg__
  35:./tmk_core/common/bootmagic.c ****         eeconfig_init();
 330               		.loc 1 35 9 is_stmt 1 view .LVU73
 331 004a 0E94 0000 		call eeconfig_init
 332               	.LVL28:
 333               	.L19:
  39:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_BOOTLOADER)) {
 334               		.loc 1 39 5 view .LVU74
  39:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_BOOTLOADER)) {
 335               		.loc 1 39 9 is_stmt 0 view .LVU75
 336 004e 85E0      		ldi r24,lo8(5)
 337 0050 0E94 0000 		call bootmagic_scan_keycode
 338               	.LVL29:
  39:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_BOOTLOADER)) {
 339               		.loc 1 39 8 view .LVU76
 340 0054 8111      		cpse r24,__zero_reg__
  40:./tmk_core/common/bootmagic.c ****         bootloader_jump();
 341               		.loc 1 40 9 is_stmt 1 view .LVU77
 342 0056 0E94 0000 		call bootloader_jump
 343               	.LVL30:
 344               	.L20:
  44:./tmk_core/common/bootmagic.c ****     debug_config.raw = eeconfig_read_debug();
 345               		.loc 1 44 5 view .LVU78
  44:./tmk_core/common/bootmagic.c ****     debug_config.raw = eeconfig_read_debug();
 346               		.loc 1 44 24 is_stmt 0 view .LVU79
 347 005a 0E94 0000 		call eeconfig_read_debug
 348               	.LVL31:
  44:./tmk_core/common/bootmagic.c ****     debug_config.raw = eeconfig_read_debug();
 349               		.loc 1 44 22 view .LVU80
 350 005e 8093 0000 		sts debug_config,r24
  45:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_ENABLE)) {
 351               		.loc 1 45 5 is_stmt 1 view .LVU81
  45:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_ENABLE)) {
 352               		.loc 1 45 9 is_stmt 0 view .LVU82
 353 0062 87E0      		ldi r24,lo8(7)
 354 0064 0E94 0000 		call bootmagic_scan_keycode
 355               	.LVL32:
  45:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_ENABLE)) {
 356               		.loc 1 45 8 view .LVU83
 357 0068 8823      		tst r24
 358 006a 01F0      		breq .L21
  46:./tmk_core/common/bootmagic.c ****         if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_MATRIX)) {
 359               		.loc 1 46 9 is_stmt 1 view .LVU84
  46:./tmk_core/common/bootmagic.c ****         if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_MATRIX)) {
 360               		.loc 1 46 13 is_stmt 0 view .LVU85
 361 006c 8BE1      		ldi r24,lo8(27)
 362 006e 0E94 0000 		call bootmagic_scan_keycode
 363               	.LVL33:
  46:./tmk_core/common/bootmagic.c ****         if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_MATRIX)) {
 364               		.loc 1 46 12 view .LVU86
 365 0072 8823      		tst r24
 366 0074 01F4      		brne .+2
 367 0076 00C0      		rjmp .L22
  47:./tmk_core/common/bootmagic.c ****             debug_config.matrix = !debug_config.matrix;
 368               		.loc 1 47 13 is_stmt 1 view .LVU87
  47:./tmk_core/common/bootmagic.c ****             debug_config.matrix = !debug_config.matrix;
 369               		.loc 1 47 48 is_stmt 0 view .LVU88
 370 0078 9091 0000 		lds r25,debug_config
  47:./tmk_core/common/bootmagic.c ****             debug_config.matrix = !debug_config.matrix;
 371               		.loc 1 47 33 view .LVU89
 372 007c 892F      		mov r24,r25
 373 007e 8D7F      		andi r24,~(1<<1)
 374 0080 91FF      		sbrs r25,1
 375 0082 8260      		ori r24,1<<1
 376               	.L93:
  53:./tmk_core/common/bootmagic.c ****             debug_config.enable = !debug_config.enable;
 377               		.loc 1 53 33 view .LVU90
 378 0084 8093 0000 		sts debug_config,r24
 379               	.LVL34:
 380               	.L21:
  56:./tmk_core/common/bootmagic.c ****     eeconfig_update_debug(debug_config.raw);
 381               		.loc 1 56 5 is_stmt 1 view .LVU91
 382 0088 8091 0000 		lds r24,debug_config
 383 008c 0E94 0000 		call eeconfig_update_debug
 384               	.LVL35:
  59:./tmk_core/common/bootmagic.c ****     keymap_config.raw = eeconfig_read_keymap();
 385               		.loc 1 59 5 view .LVU92
  59:./tmk_core/common/bootmagic.c ****     keymap_config.raw = eeconfig_read_keymap();
 386               		.loc 1 59 25 is_stmt 0 view .LVU93
 387 0090 0E94 0000 		call eeconfig_read_keymap
 388               	.LVL36:
 389 0094 90E0      		ldi r25,0
 390 0096 9093 0000 		sts keymap_config+1,r25
 391 009a 8093 0000 		sts keymap_config,r24
  60:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_CONTROL_CAPSLOCK)) {
 392               		.loc 1 60 5 is_stmt 1 view .LVU94
  60:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_CONTROL_CAPSLOCK)) {
 393               		.loc 1 60 9 is_stmt 0 view .LVU95
 394 009e 80EE      		ldi r24,lo8(-32)
 395 00a0 0E94 0000 		call bootmagic_scan_keycode
 396               	.LVL37:
  60:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_CONTROL_CAPSLOCK)) {
 397               		.loc 1 60 8 view .LVU96
 398 00a4 8823      		tst r24
 399 00a6 01F0      		breq .L25
  61:./tmk_core/common/bootmagic.c ****         keymap_config.swap_control_capslock = !keymap_config.swap_control_capslock;
 400               		.loc 1 61 9 is_stmt 1 view .LVU97
  61:./tmk_core/common/bootmagic.c ****         keymap_config.swap_control_capslock = !keymap_config.swap_control_capslock;
 401               		.loc 1 61 61 is_stmt 0 view .LVU98
 402 00a8 9091 0000 		lds r25,keymap_config
  61:./tmk_core/common/bootmagic.c ****         keymap_config.swap_control_capslock = !keymap_config.swap_control_capslock;
 403               		.loc 1 61 45 view .LVU99
 404 00ac 892F      		mov r24,r25
 405 00ae 8E7F      		andi r24,~(1<<0)
 406 00b0 90FF      		sbrs r25,0
 407 00b2 8160      		ori r24,1<<0
 408 00b4 8093 0000 		sts keymap_config,r24
 409               	.L25:
  63:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_CAPSLOCK_TO_CONTROL)) {
 410               		.loc 1 63 5 is_stmt 1 view .LVU100
  63:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_CAPSLOCK_TO_CONTROL)) {
 411               		.loc 1 63 9 is_stmt 0 view .LVU101
 412 00b8 89E3      		ldi r24,lo8(57)
 413 00ba 0E94 0000 		call bootmagic_scan_keycode
 414               	.LVL38:
  63:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_CAPSLOCK_TO_CONTROL)) {
 415               		.loc 1 63 8 view .LVU102
 416 00be 8823      		tst r24
 417 00c0 01F0      		breq .L26
  64:./tmk_core/common/bootmagic.c ****         keymap_config.capslock_to_control = !keymap_config.capslock_to_control;
 418               		.loc 1 64 9 is_stmt 1 view .LVU103
  64:./tmk_core/common/bootmagic.c ****         keymap_config.capslock_to_control = !keymap_config.capslock_to_control;
 419               		.loc 1 64 59 is_stmt 0 view .LVU104
 420 00c2 9091 0000 		lds r25,keymap_config
  64:./tmk_core/common/bootmagic.c ****         keymap_config.capslock_to_control = !keymap_config.capslock_to_control;
 421               		.loc 1 64 43 view .LVU105
 422 00c6 892F      		mov r24,r25
 423 00c8 8D7F      		andi r24,~(1<<1)
 424 00ca 91FF      		sbrs r25,1
 425 00cc 8260      		ori r24,1<<1
 426 00ce 8093 0000 		sts keymap_config,r24
 427               	.L26:
  66:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_LALT_LGUI)) {
 428               		.loc 1 66 5 is_stmt 1 view .LVU106
  66:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_LALT_LGUI)) {
 429               		.loc 1 66 9 is_stmt 0 view .LVU107
 430 00d2 82EE      		ldi r24,lo8(-30)
 431 00d4 0E94 0000 		call bootmagic_scan_keycode
 432               	.LVL39:
  66:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_LALT_LGUI)) {
 433               		.loc 1 66 8 view .LVU108
 434 00d8 8823      		tst r24
 435 00da 01F0      		breq .L27
  67:./tmk_core/common/bootmagic.c ****         keymap_config.swap_lalt_lgui = !keymap_config.swap_lalt_lgui;
 436               		.loc 1 67 9 is_stmt 1 view .LVU109
  67:./tmk_core/common/bootmagic.c ****         keymap_config.swap_lalt_lgui = !keymap_config.swap_lalt_lgui;
 437               		.loc 1 67 54 is_stmt 0 view .LVU110
 438 00dc 9091 0000 		lds r25,keymap_config
  67:./tmk_core/common/bootmagic.c ****         keymap_config.swap_lalt_lgui = !keymap_config.swap_lalt_lgui;
 439               		.loc 1 67 38 view .LVU111
 440 00e0 892F      		mov r24,r25
 441 00e2 8B7F      		andi r24,~(1<<2)
 442 00e4 92FF      		sbrs r25,2
 443 00e6 8460      		ori r24,1<<2
 444 00e8 8093 0000 		sts keymap_config,r24
 445               	.L27:
  69:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_RALT_RGUI)) {
 446               		.loc 1 69 5 is_stmt 1 view .LVU112
  69:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_RALT_RGUI)) {
 447               		.loc 1 69 9 is_stmt 0 view .LVU113
 448 00ec 86EE      		ldi r24,lo8(-26)
 449 00ee 0E94 0000 		call bootmagic_scan_keycode
 450               	.LVL40:
  69:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_RALT_RGUI)) {
 451               		.loc 1 69 8 view .LVU114
 452 00f2 8823      		tst r24
 453 00f4 01F0      		breq .L28
  70:./tmk_core/common/bootmagic.c ****         keymap_config.swap_ralt_rgui = !keymap_config.swap_ralt_rgui;
 454               		.loc 1 70 9 is_stmt 1 view .LVU115
  70:./tmk_core/common/bootmagic.c ****         keymap_config.swap_ralt_rgui = !keymap_config.swap_ralt_rgui;
 455               		.loc 1 70 54 is_stmt 0 view .LVU116
 456 00f6 9091 0000 		lds r25,keymap_config
  70:./tmk_core/common/bootmagic.c ****         keymap_config.swap_ralt_rgui = !keymap_config.swap_ralt_rgui;
 457               		.loc 1 70 38 view .LVU117
 458 00fa 892F      		mov r24,r25
 459 00fc 877F      		andi r24,~(1<<3)
 460 00fe 93FF      		sbrs r25,3
 461 0100 8860      		ori r24,1<<3
 462 0102 8093 0000 		sts keymap_config,r24
 463               	.L28:
  72:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_NO_GUI)) {
 464               		.loc 1 72 5 is_stmt 1 view .LVU118
  72:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_NO_GUI)) {
 465               		.loc 1 72 9 is_stmt 0 view .LVU119
 466 0106 83EE      		ldi r24,lo8(-29)
 467 0108 0E94 0000 		call bootmagic_scan_keycode
 468               	.LVL41:
  72:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_NO_GUI)) {
 469               		.loc 1 72 8 view .LVU120
 470 010c 8823      		tst r24
 471 010e 01F0      		breq .L29
  73:./tmk_core/common/bootmagic.c ****         keymap_config.no_gui = !keymap_config.no_gui;
 472               		.loc 1 73 9 is_stmt 1 view .LVU121
  73:./tmk_core/common/bootmagic.c ****         keymap_config.no_gui = !keymap_config.no_gui;
 473               		.loc 1 73 46 is_stmt 0 view .LVU122
 474 0110 9091 0000 		lds r25,keymap_config
  73:./tmk_core/common/bootmagic.c ****         keymap_config.no_gui = !keymap_config.no_gui;
 475               		.loc 1 73 30 view .LVU123
 476 0114 892F      		mov r24,r25
 477 0116 8F7E      		andi r24,~(1<<4)
 478 0118 94FF      		sbrs r25,4
 479 011a 8061      		ori r24,1<<4
 480 011c 8093 0000 		sts keymap_config,r24
 481               	.L29:
  75:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_GRAVE_ESC)) {
 482               		.loc 1 75 5 is_stmt 1 view .LVU124
  75:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_GRAVE_ESC)) {
 483               		.loc 1 75 9 is_stmt 0 view .LVU125
 484 0120 85E3      		ldi r24,lo8(53)
 485 0122 0E94 0000 		call bootmagic_scan_keycode
 486               	.LVL42:
  75:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_GRAVE_ESC)) {
 487               		.loc 1 75 8 view .LVU126
 488 0126 8823      		tst r24
 489 0128 01F0      		breq .L30
  76:./tmk_core/common/bootmagic.c ****         keymap_config.swap_grave_esc = !keymap_config.swap_grave_esc;
 490               		.loc 1 76 9 is_stmt 1 view .LVU127
  76:./tmk_core/common/bootmagic.c ****         keymap_config.swap_grave_esc = !keymap_config.swap_grave_esc;
 491               		.loc 1 76 54 is_stmt 0 view .LVU128
 492 012a 9091 0000 		lds r25,keymap_config
  76:./tmk_core/common/bootmagic.c ****         keymap_config.swap_grave_esc = !keymap_config.swap_grave_esc;
 493               		.loc 1 76 38 view .LVU129
 494 012e 892F      		mov r24,r25
 495 0130 8F7D      		andi r24,~(1<<5)
 496 0132 95FF      		sbrs r25,5
 497 0134 8062      		ori r24,1<<5
 498 0136 8093 0000 		sts keymap_config,r24
 499               	.L30:
  78:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_BACKSLASH_BACKSPACE)) {
 500               		.loc 1 78 5 is_stmt 1 view .LVU130
  78:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_BACKSLASH_BACKSPACE)) {
 501               		.loc 1 78 9 is_stmt 0 view .LVU131
 502 013a 81E3      		ldi r24,lo8(49)
 503 013c 0E94 0000 		call bootmagic_scan_keycode
 504               	.LVL43:
  78:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_BACKSLASH_BACKSPACE)) {
 505               		.loc 1 78 8 view .LVU132
 506 0140 8823      		tst r24
 507 0142 01F0      		breq .L31
  79:./tmk_core/common/bootmagic.c ****         keymap_config.swap_backslash_backspace = !keymap_config.swap_backslash_backspace;
 508               		.loc 1 79 9 is_stmt 1 view .LVU133
  79:./tmk_core/common/bootmagic.c ****         keymap_config.swap_backslash_backspace = !keymap_config.swap_backslash_backspace;
 509               		.loc 1 79 64 is_stmt 0 view .LVU134
 510 0144 9091 0000 		lds r25,keymap_config
  79:./tmk_core/common/bootmagic.c ****         keymap_config.swap_backslash_backspace = !keymap_config.swap_backslash_backspace;
 511               		.loc 1 79 48 view .LVU135
 512 0148 892F      		mov r24,r25
 513 014a 8F7B      		andi r24,~(1<<6)
 514 014c 96FF      		sbrs r25,6
 515 014e 8064      		ori r24,1<<6
 516 0150 8093 0000 		sts keymap_config,r24
 517               	.L31:
  81:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_HOST_NKRO)) {
 518               		.loc 1 81 5 is_stmt 1 view .LVU136
  81:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_HOST_NKRO)) {
 519               		.loc 1 81 9 is_stmt 0 view .LVU137
 520 0154 81E1      		ldi r24,lo8(17)
 521 0156 0E94 0000 		call bootmagic_scan_keycode
 522               	.LVL44:
  81:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_HOST_NKRO)) {
 523               		.loc 1 81 8 view .LVU138
 524 015a 8823      		tst r24
 525 015c 01F0      		breq .L32
  82:./tmk_core/common/bootmagic.c ****         keymap_config.nkro = !keymap_config.nkro;
 526               		.loc 1 82 9 is_stmt 1 view .LVU139
  82:./tmk_core/common/bootmagic.c ****         keymap_config.nkro = !keymap_config.nkro;
 527               		.loc 1 82 44 is_stmt 0 view .LVU140
 528 015e 9091 0000 		lds r25,keymap_config
  82:./tmk_core/common/bootmagic.c ****         keymap_config.nkro = !keymap_config.nkro;
 529               		.loc 1 82 28 view .LVU141
 530 0162 892F      		mov r24,r25
 531 0164 97FB      		bst r25,7
 532 0166 87F9      		bld r24,7
 533 0168 8058      		subi r24,0x80
 534 016a 8093 0000 		sts keymap_config,r24
 535               	.L32:
  84:./tmk_core/common/bootmagic.c ****     eeconfig_update_keymap(keymap_config.raw);
 536               		.loc 1 84 5 is_stmt 1 view .LVU142
 537 016e 8091 0000 		lds r24,keymap_config
 538 0172 0E94 0000 		call eeconfig_update_keymap
 539               	.LVL45:
  87:./tmk_core/common/bootmagic.c ****     uint8_t default_layer = 0;
 540               		.loc 1 87 5 view .LVU143
  88:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_0)) { default_layer |= (1<<0); }
 541               		.loc 1 88 5 view .LVU144
  88:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_0)) { default_layer |= (1<<0); }
 542               		.loc 1 88 9 is_stmt 0 view .LVU145
 543 0176 87E2      		ldi r24,lo8(39)
 544 0178 0E94 0000 		call bootmagic_scan_keycode
 545               	.LVL46:
 546 017c 8983      		std Y+1,r24
 547               	.LVL47:
  89:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_1)) { default_layer |= (1<<1); }
 548               		.loc 1 89 5 is_stmt 1 view .LVU146
  89:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_1)) { default_layer |= (1<<1); }
 549               		.loc 1 89 9 is_stmt 0 view .LVU147
 550 017e 8EE1      		ldi r24,lo8(30)
 551               	.LVL48:
  89:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_1)) { default_layer |= (1<<1); }
 552               		.loc 1 89 9 view .LVU148
 553 0180 0E94 0000 		call bootmagic_scan_keycode
 554               	.LVL49:
  89:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_1)) { default_layer |= (1<<1); }
 555               		.loc 1 89 8 view .LVU149
 556 0184 8823      		tst r24
 557 0186 01F0      		breq .L33
  89:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_1)) { default_layer |= (1<<1); }
 558               		.loc 1 89 66 is_stmt 1 discriminator 1 view .LVU150
  89:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_1)) { default_layer |= (1<<1); }
 559               		.loc 1 89 80 is_stmt 0 discriminator 1 view .LVU151
 560 0188 B981      		ldd r27,Y+1
 561 018a B260      		ori r27,lo8(2)
 562 018c B983      		std Y+1,r27
 563               	.LVL50:
 564               	.L33:
  90:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_2)) { default_layer |= (1<<2); }
 565               		.loc 1 90 5 is_stmt 1 view .LVU152
  90:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_2)) { default_layer |= (1<<2); }
 566               		.loc 1 90 9 is_stmt 0 view .LVU153
 567 018e 8FE1      		ldi r24,lo8(31)
 568 0190 0E94 0000 		call bootmagic_scan_keycode
 569               	.LVL51:
  90:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_2)) { default_layer |= (1<<2); }
 570               		.loc 1 90 8 view .LVU154
 571 0194 8823      		tst r24
 572 0196 01F0      		breq .L34
  90:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_2)) { default_layer |= (1<<2); }
 573               		.loc 1 90 66 is_stmt 1 discriminator 1 view .LVU155
  90:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_2)) { default_layer |= (1<<2); }
 574               		.loc 1 90 80 is_stmt 0 discriminator 1 view .LVU156
 575 0198 2981      		ldd r18,Y+1
 576 019a 2460      		ori r18,lo8(4)
 577 019c 2983      		std Y+1,r18
 578               	.LVL52:
 579               	.L34:
  91:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_3)) { default_layer |= (1<<3); }
 580               		.loc 1 91 5 is_stmt 1 view .LVU157
  91:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_3)) { default_layer |= (1<<3); }
 581               		.loc 1 91 9 is_stmt 0 view .LVU158
 582 019e 80E2      		ldi r24,lo8(32)
 583 01a0 0E94 0000 		call bootmagic_scan_keycode
 584               	.LVL53:
  91:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_3)) { default_layer |= (1<<3); }
 585               		.loc 1 91 8 view .LVU159
 586 01a4 8823      		tst r24
 587 01a6 01F0      		breq .L35
  91:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_3)) { default_layer |= (1<<3); }
 588               		.loc 1 91 66 is_stmt 1 discriminator 1 view .LVU160
  91:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_3)) { default_layer |= (1<<3); }
 589               		.loc 1 91 80 is_stmt 0 discriminator 1 view .LVU161
 590 01a8 3981      		ldd r19,Y+1
 591 01aa 3860      		ori r19,lo8(8)
 592 01ac 3983      		std Y+1,r19
 593               	.LVL54:
 594               	.L35:
  92:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_4)) { default_layer |= (1<<4); }
 595               		.loc 1 92 5 is_stmt 1 view .LVU162
  92:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_4)) { default_layer |= (1<<4); }
 596               		.loc 1 92 9 is_stmt 0 view .LVU163
 597 01ae 81E2      		ldi r24,lo8(33)
 598 01b0 0E94 0000 		call bootmagic_scan_keycode
 599               	.LVL55:
  92:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_4)) { default_layer |= (1<<4); }
 600               		.loc 1 92 8 view .LVU164
 601 01b4 8823      		tst r24
 602 01b6 01F0      		breq .L36
  92:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_4)) { default_layer |= (1<<4); }
 603               		.loc 1 92 66 is_stmt 1 discriminator 1 view .LVU165
  92:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_4)) { default_layer |= (1<<4); }
 604               		.loc 1 92 80 is_stmt 0 discriminator 1 view .LVU166
 605 01b8 4981      		ldd r20,Y+1
 606 01ba 4061      		ori r20,lo8(16)
 607 01bc 4983      		std Y+1,r20
 608               	.LVL56:
 609               	.L36:
  93:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_5)) { default_layer |= (1<<5); }
 610               		.loc 1 93 5 is_stmt 1 view .LVU167
  93:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_5)) { default_layer |= (1<<5); }
 611               		.loc 1 93 9 is_stmt 0 view .LVU168
 612 01be 82E2      		ldi r24,lo8(34)
 613 01c0 0E94 0000 		call bootmagic_scan_keycode
 614               	.LVL57:
  93:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_5)) { default_layer |= (1<<5); }
 615               		.loc 1 93 8 view .LVU169
 616 01c4 8823      		tst r24
 617 01c6 01F0      		breq .L37
  93:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_5)) { default_layer |= (1<<5); }
 618               		.loc 1 93 66 is_stmt 1 discriminator 1 view .LVU170
  93:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_5)) { default_layer |= (1<<5); }
 619               		.loc 1 93 80 is_stmt 0 discriminator 1 view .LVU171
 620 01c8 5981      		ldd r21,Y+1
 621 01ca 5062      		ori r21,lo8(32)
 622 01cc 5983      		std Y+1,r21
 623               	.LVL58:
 624               	.L37:
  94:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_6)) { default_layer |= (1<<6); }
 625               		.loc 1 94 5 is_stmt 1 view .LVU172
  94:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_6)) { default_layer |= (1<<6); }
 626               		.loc 1 94 9 is_stmt 0 view .LVU173
 627 01ce 83E2      		ldi r24,lo8(35)
 628 01d0 0E94 0000 		call bootmagic_scan_keycode
 629               	.LVL59:
  94:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_6)) { default_layer |= (1<<6); }
 630               		.loc 1 94 8 view .LVU174
 631 01d4 8823      		tst r24
 632 01d6 01F0      		breq .L38
  94:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_6)) { default_layer |= (1<<6); }
 633               		.loc 1 94 66 is_stmt 1 discriminator 1 view .LVU175
  94:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_6)) { default_layer |= (1<<6); }
 634               		.loc 1 94 80 is_stmt 0 discriminator 1 view .LVU176
 635 01d8 8981      		ldd r24,Y+1
 636 01da 8064      		ori r24,lo8(64)
 637 01dc 8983      		std Y+1,r24
 638               	.LVL60:
 639               	.L38:
  95:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_7)) { default_layer |= (1<<7); }
 640               		.loc 1 95 5 is_stmt 1 view .LVU177
  95:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_7)) { default_layer |= (1<<7); }
 641               		.loc 1 95 9 is_stmt 0 view .LVU178
 642 01de 84E2      		ldi r24,lo8(36)
 643 01e0 0E94 0000 		call bootmagic_scan_keycode
 644               	.LVL61:
  95:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_7)) { default_layer |= (1<<7); }
 645               		.loc 1 95 8 view .LVU179
 646 01e4 8823      		tst r24
 647 01e6 01F0      		breq .L39
  95:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_7)) { default_layer |= (1<<7); }
 648               		.loc 1 95 66 is_stmt 1 discriminator 1 view .LVU180
  95:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_7)) { default_layer |= (1<<7); }
 649               		.loc 1 95 80 is_stmt 0 discriminator 1 view .LVU181
 650 01e8 9981      		ldd r25,Y+1
 651 01ea 9068      		ori r25,lo8(-128)
 652 01ec 9983      		std Y+1,r25
 653               	.LVL62:
  96:./tmk_core/common/bootmagic.c ****     if (default_layer) {
 654               		.loc 1 96 5 is_stmt 1 discriminator 1 view .LVU182
 655               	.L40:
  97:./tmk_core/common/bootmagic.c ****         eeconfig_update_default_layer(default_layer);
 656               		.loc 1 97 9 view .LVU183
 657 01ee 8981      		ldd r24,Y+1
 658 01f0 0E94 0000 		call eeconfig_update_default_layer
 659               	.LVL63:
  98:./tmk_core/common/bootmagic.c ****         default_layer_set((uint32_t)default_layer);
 660               		.loc 1 98 9 view .LVU184
 661 01f4 3981      		ldd r19,Y+1
 662 01f6 232F      		mov r18,r19
 663               	.LVL64:
 664               	.L94:
 101:./tmk_core/common/bootmagic.c ****         default_layer_set((uint32_t)default_layer);
 665               		.loc 1 101 9 is_stmt 0 view .LVU185
 666 01f8 30E0      		ldi r19,0
 667 01fa 50E0      		ldi r21,0
 668 01fc 40E0      		ldi r20,0
 669 01fe 2983      		std Y+1,r18
 670 0200 3A83      		std Y+2,r19
 671 0202 4B83      		std Y+3,r20
 672 0204 5C83      		std Y+4,r21
 673 0206 CA01      		movw r24,r20
 674 0208 B901      		movw r22,r18
 675               	/* epilogue start */
 103:./tmk_core/common/bootmagic.c **** }
 676               		.loc 1 103 1 view .LVU186
 677 020a 0F90      		pop __tmp_reg__
 678 020c 0F90      		pop __tmp_reg__
 679 020e 0F90      		pop __tmp_reg__
 680 0210 0F90      		pop __tmp_reg__
 681 0212 DF91      		pop r29
 682 0214 CF91      		pop r28
 101:./tmk_core/common/bootmagic.c ****         default_layer_set((uint32_t)default_layer);
 683               		.loc 1 101 9 view .LVU187
 684 0216 0C94 0000 		jmp default_layer_set
 685               	.LVL65:
 686               	.L22:
  48:./tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_KEYBOARD)) {
 687               		.loc 1 48 16 is_stmt 1 view .LVU188
  48:./tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_KEYBOARD)) {
 688               		.loc 1 48 20 is_stmt 0 view .LVU189
 689 021a 8EE0      		ldi r24,lo8(14)
 690 021c 0E94 0000 		call bootmagic_scan_keycode
 691               	.LVL66:
  48:./tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_KEYBOARD)) {
 692               		.loc 1 48 19 view .LVU190
 693 0220 8823      		tst r24
 694 0222 01F0      		breq .L23
  49:./tmk_core/common/bootmagic.c ****             debug_config.keyboard = !debug_config.keyboard;
 695               		.loc 1 49 13 is_stmt 1 view .LVU191
  49:./tmk_core/common/bootmagic.c ****             debug_config.keyboard = !debug_config.keyboard;
 696               		.loc 1 49 50 is_stmt 0 view .LVU192
 697 0224 9091 0000 		lds r25,debug_config
  49:./tmk_core/common/bootmagic.c ****             debug_config.keyboard = !debug_config.keyboard;
 698               		.loc 1 49 35 view .LVU193
 699 0228 892F      		mov r24,r25
 700 022a 8B7F      		andi r24,~(1<<2)
 701 022c 92FF      		sbrs r25,2
 702 022e 8460      		ori r24,1<<2
 703 0230 00C0      		rjmp .L93
 704               	.L23:
  50:./tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_MOUSE)) {
 705               		.loc 1 50 16 is_stmt 1 view .LVU194
  50:./tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_MOUSE)) {
 706               		.loc 1 50 20 is_stmt 0 view .LVU195
 707 0232 80E1      		ldi r24,lo8(16)
 708 0234 0E94 0000 		call bootmagic_scan_keycode
 709               	.LVL67:
 710 0238 9091 0000 		lds r25,debug_config
  50:./tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_MOUSE)) {
 711               		.loc 1 50 19 view .LVU196
 712 023c 8823      		tst r24
 713 023e 01F0      		breq .L24
  51:./tmk_core/common/bootmagic.c ****             debug_config.mouse = !debug_config.mouse;
 714               		.loc 1 51 13 is_stmt 1 view .LVU197
  51:./tmk_core/common/bootmagic.c ****             debug_config.mouse = !debug_config.mouse;
 715               		.loc 1 51 32 is_stmt 0 view .LVU198
 716 0240 892F      		mov r24,r25
 717 0242 877F      		andi r24,~(1<<3)
 718 0244 93FF      		sbrs r25,3
 719 0246 8860      		ori r24,1<<3
 720 0248 00C0      		rjmp .L93
 721               	.L24:
  53:./tmk_core/common/bootmagic.c ****             debug_config.enable = !debug_config.enable;
 722               		.loc 1 53 13 is_stmt 1 view .LVU199
  53:./tmk_core/common/bootmagic.c ****             debug_config.enable = !debug_config.enable;
 723               		.loc 1 53 33 is_stmt 0 view .LVU200
 724 024a 892F      		mov r24,r25
 725 024c 8E7F      		andi r24,~(1<<0)
 726 024e 90FF      		sbrs r25,0
 727 0250 8160      		ori r24,1<<0
 728 0252 00C0      		rjmp .L93
 729               	.LVL68:
 730               	.L39:
  96:./tmk_core/common/bootmagic.c ****     if (default_layer) {
 731               		.loc 1 96 5 is_stmt 1 view .LVU201
  96:./tmk_core/common/bootmagic.c ****     if (default_layer) {
 732               		.loc 1 96 8 is_stmt 0 view .LVU202
 733 0254 A981      		ldd r26,Y+1
 734 0256 A111      		cpse r26,__zero_reg__
 735 0258 00C0      		rjmp .L40
 100:./tmk_core/common/bootmagic.c ****         default_layer = eeconfig_read_default_layer();
 736               		.loc 1 100 9 is_stmt 1 view .LVU203
 100:./tmk_core/common/bootmagic.c ****         default_layer = eeconfig_read_default_layer();
 737               		.loc 1 100 25 is_stmt 0 view .LVU204
 738 025a 0E94 0000 		call eeconfig_read_default_layer
 739               	.LVL69:
 101:./tmk_core/common/bootmagic.c ****         default_layer_set((uint32_t)default_layer);
 740               		.loc 1 101 9 is_stmt 1 view .LVU205
 741 025e 282F      		mov r18,r24
 742 0260 00C0      		rjmp .L94
 743               	.LVL70:
 744               	.L14:
 745               	/* epilogue start */
 103:./tmk_core/common/bootmagic.c **** }
 746               		.loc 1 103 1 is_stmt 0 view .LVU206
 747 0262 0F90      		pop __tmp_reg__
 748 0264 0F90      		pop __tmp_reg__
 749 0266 0F90      		pop __tmp_reg__
 750 0268 0F90      		pop __tmp_reg__
 751 026a DF91      		pop r29
 752 026c CF91      		pop r28
 753 026e 0895      		ret
 754               		.cfi_endproc
 755               	.LFE107:
 757               	.global	keymap_config
 758               		.section	.bss.keymap_config,"aw",@nobits
 761               	keymap_config:
 762 0000 0000      		.zero	2
 763               		.text
 764               	.Letext0:
 765               		.file 3 "/usr/avr/include/stdint.h"
 766               		.file 4 "./tmk_core/common/matrix.h"
 767               		.file 5 "./tmk_core/common/debug.h"
 768               		.file 6 "./tmk_core/common/keyboard.h"
 769               		.file 7 "./quantum/keycode_config.h"
 770               		.file 8 "./quantum/keymap.h"
 771               		.file 9 "./tmk_core/common/action_layer.h"
 772               		.file 10 "./tmk_core/common/eeconfig.h"
 773               		.file 11 "./tmk_core/common/bootloader.h"
 774               		.file 12 "/usr/avr/include/math.h"
 775               		.file 13 "./tmk_core/common/keycode.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 bootmagic.c
     /tmp/ccohl562.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccohl562.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccohl562.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccohl562.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/ccohl562.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccohl562.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccohl562.s:13     .text.scan_keycode:0000000000000000 scan_keycode
     /tmp/ccohl562.s:189    .text.bootmagic_scan_keycode:0000000000000000 bootmagic_scan_keycode
     /tmp/ccohl562.s:238    .text.bootmagic:0000000000000000 bootmagic
     /tmp/ccohl562.s:761    .bss.keymap_config:0000000000000000 keymap_config

UNDEFINED SYMBOLS
matrix_get_row
keymap_key_to_keycode
eeconfig_is_enabled
eeconfig_init
matrix_scan
bootloader_jump
eeconfig_read_debug
debug_config
eeconfig_update_debug
eeconfig_read_keymap
eeconfig_update_keymap
eeconfig_update_default_layer
default_layer_set
eeconfig_read_default_layer
__do_clear_bss
