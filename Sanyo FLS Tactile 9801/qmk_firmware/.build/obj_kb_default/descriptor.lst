   1               		.file	"descriptor.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.text.CALLBACK_USB_GetDescriptor,"ax",@progbits
  12               	.global	CALLBACK_USB_GetDescriptor
  14               	CALLBACK_USB_GetDescriptor:
  15               	.LVL0:
  16               	.LFB100:
  17               		.file 1 "./tmk_core/protocol/lufa/descriptor.c"
   1:./tmk_core/protocol/lufa/descriptor.c **** /* 
   2:./tmk_core/protocol/lufa/descriptor.c ****  * Copyright 2012 Jun Wako <wakojun@gmail.com>
   3:./tmk_core/protocol/lufa/descriptor.c ****  * This file is based on:
   4:./tmk_core/protocol/lufa/descriptor.c ****  *     LUFA-120219/Demos/Device/Lowlevel/KeyboardMouse
   5:./tmk_core/protocol/lufa/descriptor.c ****  *     LUFA-120219/Demos/Device/Lowlevel/GenericHID
   6:./tmk_core/protocol/lufa/descriptor.c ****  */
   7:./tmk_core/protocol/lufa/descriptor.c **** 
   8:./tmk_core/protocol/lufa/descriptor.c **** /*
   9:./tmk_core/protocol/lufa/descriptor.c ****              LUFA Library
  10:./tmk_core/protocol/lufa/descriptor.c ****      Copyright (C) Dean Camera, 2012.
  11:./tmk_core/protocol/lufa/descriptor.c **** 
  12:./tmk_core/protocol/lufa/descriptor.c ****   dean [at] fourwalledcubicle [dot] com
  13:./tmk_core/protocol/lufa/descriptor.c ****            www.lufa-lib.org
  14:./tmk_core/protocol/lufa/descriptor.c **** */
  15:./tmk_core/protocol/lufa/descriptor.c **** 
  16:./tmk_core/protocol/lufa/descriptor.c **** /*
  17:./tmk_core/protocol/lufa/descriptor.c ****   Copyright 2012  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  18:./tmk_core/protocol/lufa/descriptor.c ****   Copyright 2010  Denver Gingerich (denver [at] ossguy [dot] com)
  19:./tmk_core/protocol/lufa/descriptor.c **** 
  20:./tmk_core/protocol/lufa/descriptor.c ****   Permission to use, copy, modify, distribute, and sell this
  21:./tmk_core/protocol/lufa/descriptor.c ****   software and its documentation for any purpose is hereby granted
  22:./tmk_core/protocol/lufa/descriptor.c ****   without fee, provided that the above copyright notice appear in
  23:./tmk_core/protocol/lufa/descriptor.c ****   all copies and that both that the copyright notice and this
  24:./tmk_core/protocol/lufa/descriptor.c ****   permission notice and warranty disclaimer appear in supporting
  25:./tmk_core/protocol/lufa/descriptor.c ****   documentation, and that the name of the author not be used in
  26:./tmk_core/protocol/lufa/descriptor.c ****   advertising or publicity pertaining to distribution of the
  27:./tmk_core/protocol/lufa/descriptor.c ****   software without specific, written prior permission.
  28:./tmk_core/protocol/lufa/descriptor.c **** 
  29:./tmk_core/protocol/lufa/descriptor.c ****   The author disclaim all warranties with regard to this
  30:./tmk_core/protocol/lufa/descriptor.c ****   software, including all implied warranties of merchantability
  31:./tmk_core/protocol/lufa/descriptor.c ****   and fitness.  In no event shall the author be liable for any
  32:./tmk_core/protocol/lufa/descriptor.c ****   special, indirect or consequential damages or any damages
  33:./tmk_core/protocol/lufa/descriptor.c ****   whatsoever resulting from loss of use, data or profits, whether
  34:./tmk_core/protocol/lufa/descriptor.c ****   in an action of contract, negligence or other tortious action,
  35:./tmk_core/protocol/lufa/descriptor.c ****   arising out of or in connection with the use or performance of
  36:./tmk_core/protocol/lufa/descriptor.c ****   this software.
  37:./tmk_core/protocol/lufa/descriptor.c **** */
  38:./tmk_core/protocol/lufa/descriptor.c **** 
  39:./tmk_core/protocol/lufa/descriptor.c **** #include "util.h"
  40:./tmk_core/protocol/lufa/descriptor.c **** #include "report.h"
  41:./tmk_core/protocol/lufa/descriptor.c **** #include "descriptor.h"
  42:./tmk_core/protocol/lufa/descriptor.c **** 
  43:./tmk_core/protocol/lufa/descriptor.c **** #ifndef USB_MAX_POWER_CONSUMPTION
  44:./tmk_core/protocol/lufa/descriptor.c **** #define USB_MAX_POWER_CONSUMPTION 500
  45:./tmk_core/protocol/lufa/descriptor.c **** #endif
  46:./tmk_core/protocol/lufa/descriptor.c **** 
  47:./tmk_core/protocol/lufa/descriptor.c **** /*******************************************************************************
  48:./tmk_core/protocol/lufa/descriptor.c ****  * HID Report Descriptors
  49:./tmk_core/protocol/lufa/descriptor.c ****  ******************************************************************************/
  50:./tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM KeyboardReport[] =
  51:./tmk_core/protocol/lufa/descriptor.c **** {
  52:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
  53:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x06), /* Keyboard */
  54:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
  55:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x07), /* Key Codes */
  56:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0xE0), /* Keyboard Left Control */
  57:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0xE7), /* Keyboard Right GUI */
  58:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
  59:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(8, 0x01),
  60:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x08),
  61:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
  62:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
  63:./tmk_core/protocol/lufa/descriptor.c **** 
  64:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x01),
  65:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x08),
  66:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_CONSTANT),  /* reserved */
  67:./tmk_core/protocol/lufa/descriptor.c **** 
  68:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x08), /* LEDs */
  69:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0x01), /* Num Lock */
  70:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0x05), /* Kana */
  71:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x05),
  72:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
  73:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE | HID_IOF_NON_VOLATILE)
  74:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x01),
  75:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x03),
  76:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_CONSTANT),
  77:./tmk_core/protocol/lufa/descriptor.c **** 
  78:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x07), /* Keyboard */
  79:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0x00), /* Reserved (no event indicated) */
  80:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0xFF), /* Keyboard Application */
  81:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
  82:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(16, 0x00FF),
  83:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x06),
  84:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x08),
  85:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_ARRAY | HID_IOF_ABSOLUTE),
  86:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
  87:./tmk_core/protocol/lufa/descriptor.c **** };
  88:./tmk_core/protocol/lufa/descriptor.c **** 
  89:./tmk_core/protocol/lufa/descriptor.c **** #ifdef MOUSE_ENABLE
  90:./tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM MouseReport[] =
  91:./tmk_core/protocol/lufa/descriptor.c **** {
  92:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
  93:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x02), /* Mouse */
  94:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
  95:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE(8, 0x01), /* Pointer */
  96:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_COLLECTION(8, 0x00), /* Physical */
  97:./tmk_core/protocol/lufa/descriptor.c **** 
  98:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE_PAGE(8, 0x09), /* Button */
  99:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE_MINIMUM(8, 0x01),  /* Button 1 */
 100:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE_MAXIMUM(8, 0x05),  /* Button 5 */
 101:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MINIMUM(8, 0x00),
 102:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MAXIMUM(8, 0x01),
 103:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x05),
 104:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x01),
 105:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
 106:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x01),
 107:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x03),
 108:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_CONSTANT),
 109:./tmk_core/protocol/lufa/descriptor.c **** 
 110:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
 111:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE(8, 0x30), /* Usage X */
 112:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE(8, 0x31), /* Usage Y */
 113:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MINIMUM(8, -127),
 114:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MAXIMUM(8, 127),
 115:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x02),
 116:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x08),
 117:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_RELATIVE),
 118:./tmk_core/protocol/lufa/descriptor.c **** 
 119:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE(8, 0x38), /* Wheel */
 120:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MINIMUM(8, -127),
 121:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MAXIMUM(8, 127),
 122:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x01),
 123:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x08),
 124:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_RELATIVE),
 125:./tmk_core/protocol/lufa/descriptor.c **** 
 126:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE_PAGE(8, 0x0C), /* Consumer */
 127:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE(16, 0x0238), /* AC Pan (Horizontal wheel) */
 128:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MINIMUM(8, -127),
 129:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MAXIMUM(8, 127),
 130:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x01),
 131:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x08),
 132:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_RELATIVE),
 133:./tmk_core/protocol/lufa/descriptor.c **** 
 134:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_END_COLLECTION(0),
 135:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 136:./tmk_core/protocol/lufa/descriptor.c **** };
 137:./tmk_core/protocol/lufa/descriptor.c **** #endif
 138:./tmk_core/protocol/lufa/descriptor.c **** 
 139:./tmk_core/protocol/lufa/descriptor.c **** #ifdef EXTRAKEY_ENABLE
 140:./tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM ExtrakeyReport[] =
 141:./tmk_core/protocol/lufa/descriptor.c **** {
 142:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
 143:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x80), /* System Control */
 144:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
 145:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_ID(8, REPORT_ID_SYSTEM),
 146:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(16, 0x0001),
 147:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(16, 0x0003),
 148:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(16, 0x0081), /* System Power Down */
 149:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(16, 0x0083), /* System Wake Up */
 150:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 16),
 151:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 1),
 152:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_ARRAY | HID_IOF_ABSOLUTE),
 153:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 154:./tmk_core/protocol/lufa/descriptor.c **** 
 155:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x0C), /* Consumer */
 156:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x01), /* Consumer Control */
 157:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
 158:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_ID(8, REPORT_ID_CONSUMER),
 159:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(16, 0x0001),
 160:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(16, 0x029C),
 161:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(16, 0x0001), /* +10 */
 162:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(16, 0x029C), /* AC Distribute Vertically */
 163:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 16),
 164:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 1),
 165:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_ARRAY | HID_IOF_ABSOLUTE),
 166:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 167:./tmk_core/protocol/lufa/descriptor.c **** };
 168:./tmk_core/protocol/lufa/descriptor.c **** #endif
 169:./tmk_core/protocol/lufa/descriptor.c **** 
 170:./tmk_core/protocol/lufa/descriptor.c **** #ifdef RAW_ENABLE
 171:./tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM RawReport[] =
 172:./tmk_core/protocol/lufa/descriptor.c **** {
 173:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(16, 0xFF60), /* Vendor Page 0xFF60 */
 174:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x61), /* Vendor Usage 0x61 */
 175:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
 176:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE(8, 0x62), /* Vendor Usage 0x62 */
 177:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
 178:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(16, 0x00FF),
 179:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, RAW_EPSIZE),
 180:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x08),
 181:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
 182:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE(8, 0x63), /* Vendor Usage 0x63 */
 183:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
 184:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(16, 0x00FF),
 185:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, RAW_EPSIZE),
 186:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x08),
 187:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE | HID_IOF_NON_VOLATILE)
 188:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 189:./tmk_core/protocol/lufa/descriptor.c **** };
 190:./tmk_core/protocol/lufa/descriptor.c **** #endif
 191:./tmk_core/protocol/lufa/descriptor.c **** 
 192:./tmk_core/protocol/lufa/descriptor.c **** #ifdef CONSOLE_ENABLE
 193:./tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM ConsoleReport[] =
 194:./tmk_core/protocol/lufa/descriptor.c **** {
 195:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(16, 0xFF31), /* Vendor Page(PJRC Teensy compatible) */
 196:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x74), /* Vendor Usage(PJRC Teensy compatible) */
 197:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
 198:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE(8, 0x75), /* Vendor Usage 0x75 */
 199:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
 200:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(16, 0x00FF),
 201:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, CONSOLE_EPSIZE),
 202:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x08),
 203:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
 204:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE(8, 0x76), /* Vendor Usage 0x76 */
 205:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
 206:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(16, 0x00FF),
 207:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, CONSOLE_EPSIZE),
 208:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x08),
 209:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE | HID_IOF_NON_VOLATILE)
 210:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 211:./tmk_core/protocol/lufa/descriptor.c **** };
 212:./tmk_core/protocol/lufa/descriptor.c **** #endif
 213:./tmk_core/protocol/lufa/descriptor.c **** 
 214:./tmk_core/protocol/lufa/descriptor.c **** #ifdef NKRO_ENABLE
 215:./tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM NKROReport[] =
 216:./tmk_core/protocol/lufa/descriptor.c **** {
 217:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
 218:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x06), /* Keyboard */
 219:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
 220:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x07), /* Key Codes */
 221:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0xE0), /* Keyboard Left Control */
 222:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0xE7), /* Keyboard Right GUI */
 223:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
 224:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(8, 0x01),
 225:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x08),
 226:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
 227:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
 228:./tmk_core/protocol/lufa/descriptor.c **** 
 229:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x08), /* LEDs */
 230:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0x01), /* Num Lock */
 231:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0x05), /* Kana */
 232:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x05),
 233:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
 234:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE | HID_IOF_NON_VOLATILE)
 235:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x01),
 236:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x03),
 237:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_CONSTANT),
 238:./tmk_core/protocol/lufa/descriptor.c **** 
 239:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x07), /* Key Codes */
 240:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0x00), /* Keyboard 0 */
 241:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, (NKRO_EPSIZE-1)*8-1), /* Keyboard Right GUI */
 242:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
 243:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(8, 0x01),
 244:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, (NKRO_EPSIZE-1)*8),
 245:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
 246:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
 247:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 248:./tmk_core/protocol/lufa/descriptor.c **** };
 249:./tmk_core/protocol/lufa/descriptor.c **** #endif
 250:./tmk_core/protocol/lufa/descriptor.c **** 
 251:./tmk_core/protocol/lufa/descriptor.c **** /*******************************************************************************
 252:./tmk_core/protocol/lufa/descriptor.c ****  * Device Descriptors
 253:./tmk_core/protocol/lufa/descriptor.c ****  ******************************************************************************/
 254:./tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_Device_t PROGMEM DeviceDescriptor =
 255:./tmk_core/protocol/lufa/descriptor.c **** {
 256:./tmk_core/protocol/lufa/descriptor.c ****     .Header                 = {.Size = sizeof(USB_Descriptor_Device_t), .Type = DTYPE_Device},
 257:./tmk_core/protocol/lufa/descriptor.c **** 
 258:./tmk_core/protocol/lufa/descriptor.c ****     .USBSpecification       = VERSION_BCD(1,1,0),
 259:./tmk_core/protocol/lufa/descriptor.c **** #if VIRTSER_ENABLE
 260:./tmk_core/protocol/lufa/descriptor.c ****     .Class                  = USB_CSCP_IADDeviceClass,
 261:./tmk_core/protocol/lufa/descriptor.c ****     .SubClass               = USB_CSCP_IADDeviceSubclass,
 262:./tmk_core/protocol/lufa/descriptor.c ****     .Protocol               = USB_CSCP_IADDeviceProtocol,
 263:./tmk_core/protocol/lufa/descriptor.c **** #else
 264:./tmk_core/protocol/lufa/descriptor.c ****     .Class                  = USB_CSCP_NoDeviceClass,
 265:./tmk_core/protocol/lufa/descriptor.c ****     .SubClass               = USB_CSCP_NoDeviceSubclass,
 266:./tmk_core/protocol/lufa/descriptor.c ****     .Protocol               = USB_CSCP_NoDeviceProtocol,
 267:./tmk_core/protocol/lufa/descriptor.c **** #endif
 268:./tmk_core/protocol/lufa/descriptor.c **** 
 269:./tmk_core/protocol/lufa/descriptor.c ****     .Endpoint0Size          = FIXED_CONTROL_ENDPOINT_SIZE,
 270:./tmk_core/protocol/lufa/descriptor.c **** 
 271:./tmk_core/protocol/lufa/descriptor.c ****     /* specified in config.h */
 272:./tmk_core/protocol/lufa/descriptor.c ****     .VendorID               = VENDOR_ID,
 273:./tmk_core/protocol/lufa/descriptor.c ****     .ProductID              = PRODUCT_ID,
 274:./tmk_core/protocol/lufa/descriptor.c ****     .ReleaseNumber          = DEVICE_VER,
 275:./tmk_core/protocol/lufa/descriptor.c **** 
 276:./tmk_core/protocol/lufa/descriptor.c ****     .ManufacturerStrIndex   = 0x01,
 277:./tmk_core/protocol/lufa/descriptor.c ****     .ProductStrIndex        = 0x02,
 278:./tmk_core/protocol/lufa/descriptor.c ****     .SerialNumStrIndex      = NO_DESCRIPTOR,
 279:./tmk_core/protocol/lufa/descriptor.c **** 
 280:./tmk_core/protocol/lufa/descriptor.c ****     .NumberOfConfigurations = FIXED_NUM_CONFIGURATIONS
 281:./tmk_core/protocol/lufa/descriptor.c **** };
 282:./tmk_core/protocol/lufa/descriptor.c **** 
 283:./tmk_core/protocol/lufa/descriptor.c **** /*******************************************************************************
 284:./tmk_core/protocol/lufa/descriptor.c ****  * Configuration Descriptors
 285:./tmk_core/protocol/lufa/descriptor.c ****  ******************************************************************************/
 286:./tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_Configuration_t PROGMEM ConfigurationDescriptor =
 287:./tmk_core/protocol/lufa/descriptor.c **** {
 288:./tmk_core/protocol/lufa/descriptor.c ****     .Config =
 289:./tmk_core/protocol/lufa/descriptor.c ****         {
 290:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Configuration_Header_t), .Type
 291:./tmk_core/protocol/lufa/descriptor.c **** 
 292:./tmk_core/protocol/lufa/descriptor.c ****             .TotalConfigurationSize = sizeof(USB_Descriptor_Configuration_t),
 293:./tmk_core/protocol/lufa/descriptor.c ****             .TotalInterfaces        = TOTAL_INTERFACES,
 294:./tmk_core/protocol/lufa/descriptor.c **** 
 295:./tmk_core/protocol/lufa/descriptor.c ****             .ConfigurationNumber    = 1,
 296:./tmk_core/protocol/lufa/descriptor.c ****             .ConfigurationStrIndex  = NO_DESCRIPTOR,
 297:./tmk_core/protocol/lufa/descriptor.c **** 
 298:./tmk_core/protocol/lufa/descriptor.c ****             .ConfigAttributes       = (USB_CONFIG_ATTR_RESERVED | USB_CONFIG_ATTR_REMOTEWAKEUP),
 299:./tmk_core/protocol/lufa/descriptor.c **** 
 300:./tmk_core/protocol/lufa/descriptor.c ****             .MaxPowerConsumption    = USB_CONFIG_POWER_MA(USB_MAX_POWER_CONSUMPTION)
 301:./tmk_core/protocol/lufa/descriptor.c ****         },
 302:./tmk_core/protocol/lufa/descriptor.c **** 
 303:./tmk_core/protocol/lufa/descriptor.c ****     /*
 304:./tmk_core/protocol/lufa/descriptor.c ****      * Keyboard
 305:./tmk_core/protocol/lufa/descriptor.c ****      */
 306:./tmk_core/protocol/lufa/descriptor.c ****     .Keyboard_Interface =
 307:./tmk_core/protocol/lufa/descriptor.c ****         {
 308:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 309:./tmk_core/protocol/lufa/descriptor.c **** 
 310:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber        = KEYBOARD_INTERFACE,
 311:./tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 312:./tmk_core/protocol/lufa/descriptor.c **** 
 313:./tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 1,
 314:./tmk_core/protocol/lufa/descriptor.c **** 
 315:./tmk_core/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 316:./tmk_core/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_BootSubclass,
 317:./tmk_core/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_KeyboardBootProtocol,
 318:./tmk_core/protocol/lufa/descriptor.c **** 
 319:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 320:./tmk_core/protocol/lufa/descriptor.c ****         },
 321:./tmk_core/protocol/lufa/descriptor.c **** 
 322:./tmk_core/protocol/lufa/descriptor.c ****     .Keyboard_HID =
 323:./tmk_core/protocol/lufa/descriptor.c ****         {
 324:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 325:./tmk_core/protocol/lufa/descriptor.c **** 
 326:./tmk_core/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 327:./tmk_core/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 328:./tmk_core/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 329:./tmk_core/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 330:./tmk_core/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(KeyboardReport)
 331:./tmk_core/protocol/lufa/descriptor.c ****         },
 332:./tmk_core/protocol/lufa/descriptor.c **** 
 333:./tmk_core/protocol/lufa/descriptor.c ****     .Keyboard_INEndpoint =
 334:./tmk_core/protocol/lufa/descriptor.c ****         {
 335:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 336:./tmk_core/protocol/lufa/descriptor.c **** 
 337:./tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | KEYBOARD_IN_EPNUM),
 338:./tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 339:./tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = KEYBOARD_EPSIZE,
 340:./tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x0A
 341:./tmk_core/protocol/lufa/descriptor.c ****         },
 342:./tmk_core/protocol/lufa/descriptor.c **** 
 343:./tmk_core/protocol/lufa/descriptor.c ****     /*
 344:./tmk_core/protocol/lufa/descriptor.c ****      * Mouse
 345:./tmk_core/protocol/lufa/descriptor.c ****      */
 346:./tmk_core/protocol/lufa/descriptor.c **** #ifdef MOUSE_ENABLE
 347:./tmk_core/protocol/lufa/descriptor.c ****     .Mouse_Interface =
 348:./tmk_core/protocol/lufa/descriptor.c ****         {
 349:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 350:./tmk_core/protocol/lufa/descriptor.c **** 
 351:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber        = MOUSE_INTERFACE,
 352:./tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 353:./tmk_core/protocol/lufa/descriptor.c **** 
 354:./tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 1,
 355:./tmk_core/protocol/lufa/descriptor.c **** 
 356:./tmk_core/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 357:./tmk_core/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_BootSubclass,
 358:./tmk_core/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_MouseBootProtocol,
 359:./tmk_core/protocol/lufa/descriptor.c **** 
 360:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 361:./tmk_core/protocol/lufa/descriptor.c ****         },
 362:./tmk_core/protocol/lufa/descriptor.c **** 
 363:./tmk_core/protocol/lufa/descriptor.c ****     .Mouse_HID =
 364:./tmk_core/protocol/lufa/descriptor.c ****         {
 365:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 366:./tmk_core/protocol/lufa/descriptor.c **** 
 367:./tmk_core/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 368:./tmk_core/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 369:./tmk_core/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 370:./tmk_core/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 371:./tmk_core/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(MouseReport)
 372:./tmk_core/protocol/lufa/descriptor.c ****         },
 373:./tmk_core/protocol/lufa/descriptor.c **** 
 374:./tmk_core/protocol/lufa/descriptor.c ****     .Mouse_INEndpoint =
 375:./tmk_core/protocol/lufa/descriptor.c ****         {
 376:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 377:./tmk_core/protocol/lufa/descriptor.c **** 
 378:./tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | MOUSE_IN_EPNUM),
 379:./tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 380:./tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = MOUSE_EPSIZE,
 381:./tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x0A
 382:./tmk_core/protocol/lufa/descriptor.c ****         },
 383:./tmk_core/protocol/lufa/descriptor.c **** #endif
 384:./tmk_core/protocol/lufa/descriptor.c **** 
 385:./tmk_core/protocol/lufa/descriptor.c ****     /*
 386:./tmk_core/protocol/lufa/descriptor.c ****      * Extra
 387:./tmk_core/protocol/lufa/descriptor.c ****      */
 388:./tmk_core/protocol/lufa/descriptor.c **** #ifdef EXTRAKEY_ENABLE
 389:./tmk_core/protocol/lufa/descriptor.c ****     .Extrakey_Interface =
 390:./tmk_core/protocol/lufa/descriptor.c ****         {
 391:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 392:./tmk_core/protocol/lufa/descriptor.c **** 
 393:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber        = EXTRAKEY_INTERFACE,
 394:./tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 395:./tmk_core/protocol/lufa/descriptor.c **** 
 396:./tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 1,
 397:./tmk_core/protocol/lufa/descriptor.c **** 
 398:./tmk_core/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 399:./tmk_core/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_NonBootSubclass,
 400:./tmk_core/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_NonBootProtocol,
 401:./tmk_core/protocol/lufa/descriptor.c **** 
 402:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 403:./tmk_core/protocol/lufa/descriptor.c ****         },
 404:./tmk_core/protocol/lufa/descriptor.c **** 
 405:./tmk_core/protocol/lufa/descriptor.c ****     .Extrakey_HID =
 406:./tmk_core/protocol/lufa/descriptor.c ****         {
 407:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 408:./tmk_core/protocol/lufa/descriptor.c **** 
 409:./tmk_core/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 410:./tmk_core/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 411:./tmk_core/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 412:./tmk_core/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 413:./tmk_core/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(ExtrakeyReport)
 414:./tmk_core/protocol/lufa/descriptor.c ****         },
 415:./tmk_core/protocol/lufa/descriptor.c **** 
 416:./tmk_core/protocol/lufa/descriptor.c ****     .Extrakey_INEndpoint =
 417:./tmk_core/protocol/lufa/descriptor.c ****         {
 418:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 419:./tmk_core/protocol/lufa/descriptor.c **** 
 420:./tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | EXTRAKEY_IN_EPNUM),
 421:./tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 422:./tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = EXTRAKEY_EPSIZE,
 423:./tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x0A
 424:./tmk_core/protocol/lufa/descriptor.c ****         },
 425:./tmk_core/protocol/lufa/descriptor.c **** #endif
 426:./tmk_core/protocol/lufa/descriptor.c **** 
 427:./tmk_core/protocol/lufa/descriptor.c **** 		/*
 428:./tmk_core/protocol/lufa/descriptor.c **** 	     * Raw
 429:./tmk_core/protocol/lufa/descriptor.c **** 	     */
 430:./tmk_core/protocol/lufa/descriptor.c **** 	#ifdef RAW_ENABLE
 431:./tmk_core/protocol/lufa/descriptor.c **** 	    .Raw_Interface =
 432:./tmk_core/protocol/lufa/descriptor.c **** 	        {
 433:./tmk_core/protocol/lufa/descriptor.c **** 	            .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_I
 434:./tmk_core/protocol/lufa/descriptor.c **** 
 435:./tmk_core/protocol/lufa/descriptor.c **** 	            .InterfaceNumber        = RAW_INTERFACE,
 436:./tmk_core/protocol/lufa/descriptor.c **** 	            .AlternateSetting       = 0x00,
 437:./tmk_core/protocol/lufa/descriptor.c **** 
 438:./tmk_core/protocol/lufa/descriptor.c **** 	            .TotalEndpoints         = 2,
 439:./tmk_core/protocol/lufa/descriptor.c **** 
 440:./tmk_core/protocol/lufa/descriptor.c **** 	            .Class                  = HID_CSCP_HIDClass,
 441:./tmk_core/protocol/lufa/descriptor.c **** 	            .SubClass               = HID_CSCP_NonBootSubclass,
 442:./tmk_core/protocol/lufa/descriptor.c **** 	            .Protocol               = HID_CSCP_NonBootProtocol,
 443:./tmk_core/protocol/lufa/descriptor.c **** 
 444:./tmk_core/protocol/lufa/descriptor.c **** 	            .InterfaceStrIndex      = NO_DESCRIPTOR
 445:./tmk_core/protocol/lufa/descriptor.c **** 	        },
 446:./tmk_core/protocol/lufa/descriptor.c **** 
 447:./tmk_core/protocol/lufa/descriptor.c **** 	    .Raw_HID =
 448:./tmk_core/protocol/lufa/descriptor.c **** 	        {
 449:./tmk_core/protocol/lufa/descriptor.c **** 	            .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE
 450:./tmk_core/protocol/lufa/descriptor.c **** 
 451:./tmk_core/protocol/lufa/descriptor.c **** 	            .HIDSpec                = VERSION_BCD(1,1,1),
 452:./tmk_core/protocol/lufa/descriptor.c **** 	            .CountryCode            = 0x00,
 453:./tmk_core/protocol/lufa/descriptor.c **** 	            .TotalReportDescriptors = 1,
 454:./tmk_core/protocol/lufa/descriptor.c **** 	            .HIDReportType          = HID_DTYPE_Report,
 455:./tmk_core/protocol/lufa/descriptor.c **** 	            .HIDReportLength        = sizeof(RawReport)
 456:./tmk_core/protocol/lufa/descriptor.c **** 	        },
 457:./tmk_core/protocol/lufa/descriptor.c **** 
 458:./tmk_core/protocol/lufa/descriptor.c **** 	    .Raw_INEndpoint =
 459:./tmk_core/protocol/lufa/descriptor.c **** 	        {
 460:./tmk_core/protocol/lufa/descriptor.c **** 	            .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_En
 461:./tmk_core/protocol/lufa/descriptor.c **** 
 462:./tmk_core/protocol/lufa/descriptor.c **** 	            .EndpointAddress        = (ENDPOINT_DIR_IN | RAW_IN_EPNUM),
 463:./tmk_core/protocol/lufa/descriptor.c **** 	            .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_
 464:./tmk_core/protocol/lufa/descriptor.c **** 	            .EndpointSize           = RAW_EPSIZE,
 465:./tmk_core/protocol/lufa/descriptor.c **** 	            .PollingIntervalMS      = 0x01
 466:./tmk_core/protocol/lufa/descriptor.c **** 	        },
 467:./tmk_core/protocol/lufa/descriptor.c **** 
 468:./tmk_core/protocol/lufa/descriptor.c **** 	    .Raw_OUTEndpoint =
 469:./tmk_core/protocol/lufa/descriptor.c **** 	        {
 470:./tmk_core/protocol/lufa/descriptor.c **** 	            .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_En
 471:./tmk_core/protocol/lufa/descriptor.c **** 
 472:./tmk_core/protocol/lufa/descriptor.c **** 	            .EndpointAddress        = (ENDPOINT_DIR_OUT | RAW_OUT_EPNUM),
 473:./tmk_core/protocol/lufa/descriptor.c **** 	            .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_
 474:./tmk_core/protocol/lufa/descriptor.c **** 	            .EndpointSize           = RAW_EPSIZE,
 475:./tmk_core/protocol/lufa/descriptor.c **** 	            .PollingIntervalMS      = 0x01
 476:./tmk_core/protocol/lufa/descriptor.c **** 	        },
 477:./tmk_core/protocol/lufa/descriptor.c **** 	#endif
 478:./tmk_core/protocol/lufa/descriptor.c **** 
 479:./tmk_core/protocol/lufa/descriptor.c ****     /*
 480:./tmk_core/protocol/lufa/descriptor.c ****      * Console
 481:./tmk_core/protocol/lufa/descriptor.c ****      */
 482:./tmk_core/protocol/lufa/descriptor.c **** #ifdef CONSOLE_ENABLE
 483:./tmk_core/protocol/lufa/descriptor.c ****     .Console_Interface =
 484:./tmk_core/protocol/lufa/descriptor.c ****         {
 485:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 486:./tmk_core/protocol/lufa/descriptor.c **** 
 487:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber        = CONSOLE_INTERFACE,
 488:./tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 489:./tmk_core/protocol/lufa/descriptor.c **** 
 490:./tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 2,
 491:./tmk_core/protocol/lufa/descriptor.c **** 
 492:./tmk_core/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 493:./tmk_core/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_NonBootSubclass,
 494:./tmk_core/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_NonBootProtocol,
 495:./tmk_core/protocol/lufa/descriptor.c **** 
 496:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 497:./tmk_core/protocol/lufa/descriptor.c ****         },
 498:./tmk_core/protocol/lufa/descriptor.c **** 
 499:./tmk_core/protocol/lufa/descriptor.c ****     .Console_HID =
 500:./tmk_core/protocol/lufa/descriptor.c ****         {
 501:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 502:./tmk_core/protocol/lufa/descriptor.c **** 
 503:./tmk_core/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 504:./tmk_core/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 505:./tmk_core/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 506:./tmk_core/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 507:./tmk_core/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(ConsoleReport)
 508:./tmk_core/protocol/lufa/descriptor.c ****         },
 509:./tmk_core/protocol/lufa/descriptor.c **** 
 510:./tmk_core/protocol/lufa/descriptor.c ****     .Console_INEndpoint =
 511:./tmk_core/protocol/lufa/descriptor.c ****         {
 512:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 513:./tmk_core/protocol/lufa/descriptor.c **** 
 514:./tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | CONSOLE_IN_EPNUM),
 515:./tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 516:./tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = CONSOLE_EPSIZE,
 517:./tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x01
 518:./tmk_core/protocol/lufa/descriptor.c ****         },
 519:./tmk_core/protocol/lufa/descriptor.c **** 
 520:./tmk_core/protocol/lufa/descriptor.c ****     .Console_OUTEndpoint =
 521:./tmk_core/protocol/lufa/descriptor.c ****         {
 522:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 523:./tmk_core/protocol/lufa/descriptor.c **** 
 524:./tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_OUT | CONSOLE_OUT_EPNUM),
 525:./tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 526:./tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = CONSOLE_EPSIZE,
 527:./tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x01
 528:./tmk_core/protocol/lufa/descriptor.c ****         },
 529:./tmk_core/protocol/lufa/descriptor.c **** #endif
 530:./tmk_core/protocol/lufa/descriptor.c **** 
 531:./tmk_core/protocol/lufa/descriptor.c ****     /*
 532:./tmk_core/protocol/lufa/descriptor.c ****      * NKRO
 533:./tmk_core/protocol/lufa/descriptor.c ****      */
 534:./tmk_core/protocol/lufa/descriptor.c **** #ifdef NKRO_ENABLE
 535:./tmk_core/protocol/lufa/descriptor.c ****     .NKRO_Interface =
 536:./tmk_core/protocol/lufa/descriptor.c ****         {
 537:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 538:./tmk_core/protocol/lufa/descriptor.c **** 
 539:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber        = NKRO_INTERFACE,
 540:./tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 541:./tmk_core/protocol/lufa/descriptor.c **** 
 542:./tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 1,
 543:./tmk_core/protocol/lufa/descriptor.c **** 
 544:./tmk_core/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 545:./tmk_core/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_NonBootSubclass,
 546:./tmk_core/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_NonBootProtocol,
 547:./tmk_core/protocol/lufa/descriptor.c **** 
 548:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 549:./tmk_core/protocol/lufa/descriptor.c ****         },
 550:./tmk_core/protocol/lufa/descriptor.c **** 
 551:./tmk_core/protocol/lufa/descriptor.c ****     .NKRO_HID =
 552:./tmk_core/protocol/lufa/descriptor.c ****         {
 553:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 554:./tmk_core/protocol/lufa/descriptor.c **** 
 555:./tmk_core/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 556:./tmk_core/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 557:./tmk_core/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 558:./tmk_core/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 559:./tmk_core/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(NKROReport)
 560:./tmk_core/protocol/lufa/descriptor.c ****         },
 561:./tmk_core/protocol/lufa/descriptor.c **** 
 562:./tmk_core/protocol/lufa/descriptor.c ****     .NKRO_INEndpoint =
 563:./tmk_core/protocol/lufa/descriptor.c ****         {
 564:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 565:./tmk_core/protocol/lufa/descriptor.c **** 
 566:./tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | NKRO_IN_EPNUM),
 567:./tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 568:./tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = NKRO_EPSIZE,
 569:./tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x01
 570:./tmk_core/protocol/lufa/descriptor.c ****         },
 571:./tmk_core/protocol/lufa/descriptor.c **** #endif
 572:./tmk_core/protocol/lufa/descriptor.c **** 
 573:./tmk_core/protocol/lufa/descriptor.c **** #ifdef MIDI_ENABLE
 574:./tmk_core/protocol/lufa/descriptor.c ****     .Audio_ControlInterface =
 575:./tmk_core/protocol/lufa/descriptor.c ****         {
 576:./tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_
 577:./tmk_core/protocol/lufa/descriptor.c **** 
 578:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber          = AC_INTERFACE,
 579:./tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting         = 0,
 580:./tmk_core/protocol/lufa/descriptor.c **** 
 581:./tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints           = 0,
 582:./tmk_core/protocol/lufa/descriptor.c **** 
 583:./tmk_core/protocol/lufa/descriptor.c ****             .Class                    = AUDIO_CSCP_AudioClass,
 584:./tmk_core/protocol/lufa/descriptor.c ****             .SubClass                 = AUDIO_CSCP_ControlSubclass,
 585:./tmk_core/protocol/lufa/descriptor.c ****             .Protocol                 = AUDIO_CSCP_ControlProtocol,
 586:./tmk_core/protocol/lufa/descriptor.c **** 
 587:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex        = NO_DESCRIPTOR
 588:./tmk_core/protocol/lufa/descriptor.c ****         },
 589:./tmk_core/protocol/lufa/descriptor.c **** 
 590:./tmk_core/protocol/lufa/descriptor.c ****     .Audio_ControlInterface_SPC =
 591:./tmk_core/protocol/lufa/descriptor.c ****         {
 592:./tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_Audio_Descriptor_Interface_AC_t), .Type
 593:./tmk_core/protocol/lufa/descriptor.c ****             .Subtype                  = AUDIO_DSUBTYPE_CSInterface_Header,
 594:./tmk_core/protocol/lufa/descriptor.c **** 
 595:./tmk_core/protocol/lufa/descriptor.c ****             .ACSpecification          = VERSION_BCD(1,0,0),
 596:./tmk_core/protocol/lufa/descriptor.c ****             .TotalLength              = sizeof(USB_Audio_Descriptor_Interface_AC_t),
 597:./tmk_core/protocol/lufa/descriptor.c **** 
 598:./tmk_core/protocol/lufa/descriptor.c ****             .InCollection             = 1,
 599:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber          = AS_INTERFACE,
 600:./tmk_core/protocol/lufa/descriptor.c ****         },
 601:./tmk_core/protocol/lufa/descriptor.c **** 
 602:./tmk_core/protocol/lufa/descriptor.c ****     .Audio_StreamInterface =
 603:./tmk_core/protocol/lufa/descriptor.c ****         {
 604:./tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_
 605:./tmk_core/protocol/lufa/descriptor.c **** 
 606:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber          = AS_INTERFACE,
 607:./tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting         = 0,
 608:./tmk_core/protocol/lufa/descriptor.c **** 
 609:./tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints           = 2,
 610:./tmk_core/protocol/lufa/descriptor.c **** 
 611:./tmk_core/protocol/lufa/descriptor.c ****             .Class                    = AUDIO_CSCP_AudioClass,
 612:./tmk_core/protocol/lufa/descriptor.c ****             .SubClass                 = AUDIO_CSCP_MIDIStreamingSubclass,
 613:./tmk_core/protocol/lufa/descriptor.c ****             .Protocol                 = AUDIO_CSCP_StreamingProtocol,
 614:./tmk_core/protocol/lufa/descriptor.c **** 
 615:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex        = NO_DESCRIPTOR
 616:./tmk_core/protocol/lufa/descriptor.c ****         },
 617:./tmk_core/protocol/lufa/descriptor.c **** 
 618:./tmk_core/protocol/lufa/descriptor.c ****     .Audio_StreamInterface_SPC =
 619:./tmk_core/protocol/lufa/descriptor.c ****         {
 620:./tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_MIDI_Descriptor_AudioInterface_AS_t), .
 621:./tmk_core/protocol/lufa/descriptor.c ****             .Subtype                  = AUDIO_DSUBTYPE_CSInterface_General,
 622:./tmk_core/protocol/lufa/descriptor.c **** 
 623:./tmk_core/protocol/lufa/descriptor.c ****             .AudioSpecification       = VERSION_BCD(1,0,0),
 624:./tmk_core/protocol/lufa/descriptor.c **** 
 625:./tmk_core/protocol/lufa/descriptor.c ****             .TotalLength              = (sizeof(USB_Descriptor_Configuration_t) -
 626:./tmk_core/protocol/lufa/descriptor.c ****                                          offsetof(USB_Descriptor_Configuration_t, Audio_StreamInter
 627:./tmk_core/protocol/lufa/descriptor.c ****         },
 628:./tmk_core/protocol/lufa/descriptor.c **** 
 629:./tmk_core/protocol/lufa/descriptor.c ****     .MIDI_In_Jack_Emb =
 630:./tmk_core/protocol/lufa/descriptor.c ****         {
 631:./tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_MIDI_Descriptor_InputJack_t), .Type = D
 632:./tmk_core/protocol/lufa/descriptor.c ****             .Subtype                  = AUDIO_DSUBTYPE_CSInterface_InputTerminal,
 633:./tmk_core/protocol/lufa/descriptor.c **** 
 634:./tmk_core/protocol/lufa/descriptor.c ****             .JackType                 = MIDI_JACKTYPE_Embedded,
 635:./tmk_core/protocol/lufa/descriptor.c ****             .JackID                   = 0x01,
 636:./tmk_core/protocol/lufa/descriptor.c **** 
 637:./tmk_core/protocol/lufa/descriptor.c ****             .JackStrIndex             = NO_DESCRIPTOR
 638:./tmk_core/protocol/lufa/descriptor.c ****         },
 639:./tmk_core/protocol/lufa/descriptor.c **** 
 640:./tmk_core/protocol/lufa/descriptor.c ****     .MIDI_In_Jack_Ext =
 641:./tmk_core/protocol/lufa/descriptor.c ****         {
 642:./tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_MIDI_Descriptor_InputJack_t), .Type = D
 643:./tmk_core/protocol/lufa/descriptor.c ****             .Subtype                  = AUDIO_DSUBTYPE_CSInterface_InputTerminal,
 644:./tmk_core/protocol/lufa/descriptor.c **** 
 645:./tmk_core/protocol/lufa/descriptor.c ****             .JackType                 = MIDI_JACKTYPE_External,
 646:./tmk_core/protocol/lufa/descriptor.c ****             .JackID                   = 0x02,
 647:./tmk_core/protocol/lufa/descriptor.c **** 
 648:./tmk_core/protocol/lufa/descriptor.c ****             .JackStrIndex             = NO_DESCRIPTOR
 649:./tmk_core/protocol/lufa/descriptor.c ****         },
 650:./tmk_core/protocol/lufa/descriptor.c **** 
 651:./tmk_core/protocol/lufa/descriptor.c ****     .MIDI_Out_Jack_Emb =
 652:./tmk_core/protocol/lufa/descriptor.c ****         {
 653:./tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_MIDI_Descriptor_OutputJack_t), .Type = 
 654:./tmk_core/protocol/lufa/descriptor.c ****             .Subtype                  = AUDIO_DSUBTYPE_CSInterface_OutputTerminal,
 655:./tmk_core/protocol/lufa/descriptor.c **** 
 656:./tmk_core/protocol/lufa/descriptor.c ****             .JackType                 = MIDI_JACKTYPE_Embedded,
 657:./tmk_core/protocol/lufa/descriptor.c ****             .JackID                   = 0x03,
 658:./tmk_core/protocol/lufa/descriptor.c **** 
 659:./tmk_core/protocol/lufa/descriptor.c ****             .NumberOfPins             = 1,
 660:./tmk_core/protocol/lufa/descriptor.c ****             .SourceJackID             = {0x02},
 661:./tmk_core/protocol/lufa/descriptor.c ****             .SourcePinID              = {0x01},
 662:./tmk_core/protocol/lufa/descriptor.c **** 
 663:./tmk_core/protocol/lufa/descriptor.c ****             .JackStrIndex             = NO_DESCRIPTOR
 664:./tmk_core/protocol/lufa/descriptor.c ****         },
 665:./tmk_core/protocol/lufa/descriptor.c **** 
 666:./tmk_core/protocol/lufa/descriptor.c ****     .MIDI_Out_Jack_Ext =
 667:./tmk_core/protocol/lufa/descriptor.c ****         {
 668:./tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_MIDI_Descriptor_OutputJack_t), .Type = 
 669:./tmk_core/protocol/lufa/descriptor.c ****             .Subtype                  = AUDIO_DSUBTYPE_CSInterface_OutputTerminal,
 670:./tmk_core/protocol/lufa/descriptor.c **** 
 671:./tmk_core/protocol/lufa/descriptor.c ****             .JackType                 = MIDI_JACKTYPE_External,
 672:./tmk_core/protocol/lufa/descriptor.c ****             .JackID                   = 0x04,
 673:./tmk_core/protocol/lufa/descriptor.c **** 
 674:./tmk_core/protocol/lufa/descriptor.c ****             .NumberOfPins             = 1,
 675:./tmk_core/protocol/lufa/descriptor.c ****             .SourceJackID             = {0x01},
 676:./tmk_core/protocol/lufa/descriptor.c ****             .SourcePinID              = {0x01},
 677:./tmk_core/protocol/lufa/descriptor.c **** 
 678:./tmk_core/protocol/lufa/descriptor.c ****             .JackStrIndex             = NO_DESCRIPTOR
 679:./tmk_core/protocol/lufa/descriptor.c ****         },
 680:./tmk_core/protocol/lufa/descriptor.c **** 
 681:./tmk_core/protocol/lufa/descriptor.c ****     .MIDI_In_Jack_Endpoint =
 682:./tmk_core/protocol/lufa/descriptor.c ****         {
 683:./tmk_core/protocol/lufa/descriptor.c ****             .Endpoint =
 684:./tmk_core/protocol/lufa/descriptor.c ****                 {
 685:./tmk_core/protocol/lufa/descriptor.c ****                     .Header              = {.Size = sizeof(USB_Audio_Descriptor_StreamEndpoint_Std_
 686:./tmk_core/protocol/lufa/descriptor.c **** 
 687:./tmk_core/protocol/lufa/descriptor.c ****                     .EndpointAddress     = MIDI_STREAM_OUT_EPADDR,
 688:./tmk_core/protocol/lufa/descriptor.c ****                     .Attributes          = (EP_TYPE_BULK | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 689:./tmk_core/protocol/lufa/descriptor.c ****                     .EndpointSize        = MIDI_STREAM_EPSIZE,
 690:./tmk_core/protocol/lufa/descriptor.c ****                     .PollingIntervalMS   = 0x05
 691:./tmk_core/protocol/lufa/descriptor.c ****                 },
 692:./tmk_core/protocol/lufa/descriptor.c **** 
 693:./tmk_core/protocol/lufa/descriptor.c ****             .Refresh                  = 0,
 694:./tmk_core/protocol/lufa/descriptor.c ****             .SyncEndpointNumber       = 0
 695:./tmk_core/protocol/lufa/descriptor.c ****         },
 696:./tmk_core/protocol/lufa/descriptor.c **** 
 697:./tmk_core/protocol/lufa/descriptor.c ****     .MIDI_In_Jack_Endpoint_SPC =
 698:./tmk_core/protocol/lufa/descriptor.c ****         {
 699:./tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_MIDI_Descriptor_Jack_Endpoint_t), .Type
 700:./tmk_core/protocol/lufa/descriptor.c ****             .Subtype                  = AUDIO_DSUBTYPE_CSEndpoint_General,
 701:./tmk_core/protocol/lufa/descriptor.c **** 
 702:./tmk_core/protocol/lufa/descriptor.c ****             .TotalEmbeddedJacks       = 0x01,
 703:./tmk_core/protocol/lufa/descriptor.c ****             .AssociatedJackID         = {0x01}
 704:./tmk_core/protocol/lufa/descriptor.c ****         },
 705:./tmk_core/protocol/lufa/descriptor.c **** 
 706:./tmk_core/protocol/lufa/descriptor.c ****     .MIDI_Out_Jack_Endpoint =
 707:./tmk_core/protocol/lufa/descriptor.c ****         {
 708:./tmk_core/protocol/lufa/descriptor.c ****             .Endpoint =
 709:./tmk_core/protocol/lufa/descriptor.c ****                 {
 710:./tmk_core/protocol/lufa/descriptor.c ****                     .Header              = {.Size = sizeof(USB_Audio_Descriptor_StreamEndpoint_Std_
 711:./tmk_core/protocol/lufa/descriptor.c **** 
 712:./tmk_core/protocol/lufa/descriptor.c ****                     .EndpointAddress     = MIDI_STREAM_IN_EPADDR,
 713:./tmk_core/protocol/lufa/descriptor.c ****                     .Attributes          = (EP_TYPE_BULK | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 714:./tmk_core/protocol/lufa/descriptor.c ****                     .EndpointSize        = MIDI_STREAM_EPSIZE,
 715:./tmk_core/protocol/lufa/descriptor.c ****                     .PollingIntervalMS   = 0x05
 716:./tmk_core/protocol/lufa/descriptor.c ****                 },
 717:./tmk_core/protocol/lufa/descriptor.c **** 
 718:./tmk_core/protocol/lufa/descriptor.c ****             .Refresh                  = 0,
 719:./tmk_core/protocol/lufa/descriptor.c ****             .SyncEndpointNumber       = 0
 720:./tmk_core/protocol/lufa/descriptor.c ****         },
 721:./tmk_core/protocol/lufa/descriptor.c **** 
 722:./tmk_core/protocol/lufa/descriptor.c ****     .MIDI_Out_Jack_Endpoint_SPC =
 723:./tmk_core/protocol/lufa/descriptor.c ****         {
 724:./tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_MIDI_Descriptor_Jack_Endpoint_t), .Type
 725:./tmk_core/protocol/lufa/descriptor.c ****             .Subtype                  = AUDIO_DSUBTYPE_CSEndpoint_General,
 726:./tmk_core/protocol/lufa/descriptor.c **** 
 727:./tmk_core/protocol/lufa/descriptor.c ****             .TotalEmbeddedJacks       = 0x01,
 728:./tmk_core/protocol/lufa/descriptor.c ****             .AssociatedJackID         = {0x03}
 729:./tmk_core/protocol/lufa/descriptor.c ****         },
 730:./tmk_core/protocol/lufa/descriptor.c **** #endif
 731:./tmk_core/protocol/lufa/descriptor.c **** 
 732:./tmk_core/protocol/lufa/descriptor.c **** #ifdef VIRTSER_ENABLE
 733:./tmk_core/protocol/lufa/descriptor.c ****     .CDC_Interface_Association =
 734:./tmk_core/protocol/lufa/descriptor.c ****             {
 735:./tmk_core/protocol/lufa/descriptor.c ****                     .Header                 = {.Size = sizeof(USB_Descriptor_Interface_Association_
 736:./tmk_core/protocol/lufa/descriptor.c **** 
 737:./tmk_core/protocol/lufa/descriptor.c ****                     .FirstInterfaceIndex    = CCI_INTERFACE,
 738:./tmk_core/protocol/lufa/descriptor.c ****                     .TotalInterfaces        = 2,
 739:./tmk_core/protocol/lufa/descriptor.c **** 
 740:./tmk_core/protocol/lufa/descriptor.c ****                     .Class                  = CDC_CSCP_CDCClass,
 741:./tmk_core/protocol/lufa/descriptor.c ****                     .SubClass               = CDC_CSCP_ACMSubclass,
 742:./tmk_core/protocol/lufa/descriptor.c ****                     .Protocol               = CDC_CSCP_ATCommandProtocol,
 743:./tmk_core/protocol/lufa/descriptor.c **** 
 744:./tmk_core/protocol/lufa/descriptor.c ****                     .IADStrIndex            = NO_DESCRIPTOR,
 745:./tmk_core/protocol/lufa/descriptor.c ****             },
 746:./tmk_core/protocol/lufa/descriptor.c **** 
 747:./tmk_core/protocol/lufa/descriptor.c ****     .CDC_CCI_Interface =
 748:./tmk_core/protocol/lufa/descriptor.c ****             {
 749:./tmk_core/protocol/lufa/descriptor.c ****                     .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = 
 750:./tmk_core/protocol/lufa/descriptor.c **** 
 751:./tmk_core/protocol/lufa/descriptor.c ****                     .InterfaceNumber        = CCI_INTERFACE,
 752:./tmk_core/protocol/lufa/descriptor.c ****                     .AlternateSetting       = 0,
 753:./tmk_core/protocol/lufa/descriptor.c **** 
 754:./tmk_core/protocol/lufa/descriptor.c ****                     .TotalEndpoints         = 1,
 755:./tmk_core/protocol/lufa/descriptor.c **** 
 756:./tmk_core/protocol/lufa/descriptor.c ****                     .Class                  = CDC_CSCP_CDCClass,
 757:./tmk_core/protocol/lufa/descriptor.c ****                     .SubClass               = CDC_CSCP_ACMSubclass,
 758:./tmk_core/protocol/lufa/descriptor.c ****                     .Protocol               = CDC_CSCP_ATCommandProtocol,
 759:./tmk_core/protocol/lufa/descriptor.c **** 
 760:./tmk_core/protocol/lufa/descriptor.c ****                     .InterfaceStrIndex      = NO_DESCRIPTOR
 761:./tmk_core/protocol/lufa/descriptor.c ****             },
 762:./tmk_core/protocol/lufa/descriptor.c **** 
 763:./tmk_core/protocol/lufa/descriptor.c ****     .CDC_Functional_Header =
 764:./tmk_core/protocol/lufa/descriptor.c ****             {
 765:./tmk_core/protocol/lufa/descriptor.c ****                     .Header                 = {.Size = sizeof(USB_CDC_Descriptor_FunctionalHeader_t
 766:./tmk_core/protocol/lufa/descriptor.c ****                     .Subtype                = 0x00,
 767:./tmk_core/protocol/lufa/descriptor.c **** 
 768:./tmk_core/protocol/lufa/descriptor.c ****                     .CDCSpecification       = VERSION_BCD(1,1,0),
 769:./tmk_core/protocol/lufa/descriptor.c ****             },
 770:./tmk_core/protocol/lufa/descriptor.c **** 
 771:./tmk_core/protocol/lufa/descriptor.c ****     .CDC_Functional_ACM =
 772:./tmk_core/protocol/lufa/descriptor.c ****             {
 773:./tmk_core/protocol/lufa/descriptor.c ****                     .Header                 = {.Size = sizeof(USB_CDC_Descriptor_FunctionalACM_t), 
 774:./tmk_core/protocol/lufa/descriptor.c ****                     .Subtype                = 0x02,
 775:./tmk_core/protocol/lufa/descriptor.c **** 
 776:./tmk_core/protocol/lufa/descriptor.c ****                     .Capabilities           = 0x02,
 777:./tmk_core/protocol/lufa/descriptor.c ****             },
 778:./tmk_core/protocol/lufa/descriptor.c **** 
 779:./tmk_core/protocol/lufa/descriptor.c ****     .CDC_Functional_Union =
 780:./tmk_core/protocol/lufa/descriptor.c ****             {
 781:./tmk_core/protocol/lufa/descriptor.c ****                     .Header                 = {.Size = sizeof(USB_CDC_Descriptor_FunctionalUnion_t)
 782:./tmk_core/protocol/lufa/descriptor.c ****                     .Subtype                = 0x06,
 783:./tmk_core/protocol/lufa/descriptor.c **** 
 784:./tmk_core/protocol/lufa/descriptor.c ****                     .MasterInterfaceNumber  = CCI_INTERFACE,
 785:./tmk_core/protocol/lufa/descriptor.c ****                     .SlaveInterfaceNumber   = CDI_INTERFACE,
 786:./tmk_core/protocol/lufa/descriptor.c ****             },
 787:./tmk_core/protocol/lufa/descriptor.c **** 
 788:./tmk_core/protocol/lufa/descriptor.c ****     .CDC_NotificationEndpoint =
 789:./tmk_core/protocol/lufa/descriptor.c ****             {
 790:./tmk_core/protocol/lufa/descriptor.c ****                     .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = D
 791:./tmk_core/protocol/lufa/descriptor.c **** 
 792:./tmk_core/protocol/lufa/descriptor.c ****                     .EndpointAddress        = CDC_NOTIFICATION_EPADDR,
 793:./tmk_core/protocol/lufa/descriptor.c ****                     .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT
 794:./tmk_core/protocol/lufa/descriptor.c ****                     .EndpointSize           = CDC_NOTIFICATION_EPSIZE,
 795:./tmk_core/protocol/lufa/descriptor.c ****                     .PollingIntervalMS      = 0xFF
 796:./tmk_core/protocol/lufa/descriptor.c ****             },
 797:./tmk_core/protocol/lufa/descriptor.c **** 
 798:./tmk_core/protocol/lufa/descriptor.c ****     .CDC_DCI_Interface =
 799:./tmk_core/protocol/lufa/descriptor.c ****             {
 800:./tmk_core/protocol/lufa/descriptor.c ****                     .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = 
 801:./tmk_core/protocol/lufa/descriptor.c **** 
 802:./tmk_core/protocol/lufa/descriptor.c ****                     .InterfaceNumber        = CDI_INTERFACE,
 803:./tmk_core/protocol/lufa/descriptor.c ****                     .AlternateSetting       = 0,
 804:./tmk_core/protocol/lufa/descriptor.c **** 
 805:./tmk_core/protocol/lufa/descriptor.c ****                     .TotalEndpoints         = 2,
 806:./tmk_core/protocol/lufa/descriptor.c **** 
 807:./tmk_core/protocol/lufa/descriptor.c ****                     .Class                  = CDC_CSCP_CDCDataClass,
 808:./tmk_core/protocol/lufa/descriptor.c ****                     .SubClass               = CDC_CSCP_NoDataSubclass,
 809:./tmk_core/protocol/lufa/descriptor.c ****                     .Protocol               = CDC_CSCP_NoDataProtocol,
 810:./tmk_core/protocol/lufa/descriptor.c **** 
 811:./tmk_core/protocol/lufa/descriptor.c ****                     .InterfaceStrIndex      = NO_DESCRIPTOR
 812:./tmk_core/protocol/lufa/descriptor.c ****             },
 813:./tmk_core/protocol/lufa/descriptor.c **** 
 814:./tmk_core/protocol/lufa/descriptor.c ****     .CDC_DataOutEndpoint =
 815:./tmk_core/protocol/lufa/descriptor.c ****             {
 816:./tmk_core/protocol/lufa/descriptor.c ****                     .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = D
 817:./tmk_core/protocol/lufa/descriptor.c **** 
 818:./tmk_core/protocol/lufa/descriptor.c ****                     .EndpointAddress        = CDC_OUT_EPADDR,
 819:./tmk_core/protocol/lufa/descriptor.c ****                     .Attributes             = (EP_TYPE_BULK | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAG
 820:./tmk_core/protocol/lufa/descriptor.c ****                     .EndpointSize           = CDC_EPSIZE,
 821:./tmk_core/protocol/lufa/descriptor.c ****                     .PollingIntervalMS      = 0x05
 822:./tmk_core/protocol/lufa/descriptor.c ****             },
 823:./tmk_core/protocol/lufa/descriptor.c **** 
 824:./tmk_core/protocol/lufa/descriptor.c ****     .CDC_DataInEndpoint =
 825:./tmk_core/protocol/lufa/descriptor.c ****             {
 826:./tmk_core/protocol/lufa/descriptor.c ****                     .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = D
 827:./tmk_core/protocol/lufa/descriptor.c **** 
 828:./tmk_core/protocol/lufa/descriptor.c ****                     .EndpointAddress        = CDC_IN_EPADDR,
 829:./tmk_core/protocol/lufa/descriptor.c ****                     .Attributes             = (EP_TYPE_BULK | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAG
 830:./tmk_core/protocol/lufa/descriptor.c ****                     .EndpointSize           = CDC_EPSIZE,
 831:./tmk_core/protocol/lufa/descriptor.c ****                     .PollingIntervalMS      = 0x05
 832:./tmk_core/protocol/lufa/descriptor.c ****             },
 833:./tmk_core/protocol/lufa/descriptor.c **** #endif
 834:./tmk_core/protocol/lufa/descriptor.c **** };
 835:./tmk_core/protocol/lufa/descriptor.c **** 
 836:./tmk_core/protocol/lufa/descriptor.c **** 
 837:./tmk_core/protocol/lufa/descriptor.c **** /*******************************************************************************
 838:./tmk_core/protocol/lufa/descriptor.c ****  * String Descriptors
 839:./tmk_core/protocol/lufa/descriptor.c ****  ******************************************************************************/
 840:./tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_String_t PROGMEM LanguageString =
 841:./tmk_core/protocol/lufa/descriptor.c **** {
 842:./tmk_core/protocol/lufa/descriptor.c ****     .Header                 = {.Size = USB_STRING_LEN(1), .Type = DTYPE_String},
 843:./tmk_core/protocol/lufa/descriptor.c **** 
 844:./tmk_core/protocol/lufa/descriptor.c ****     .UnicodeString          = {LANGUAGE_ID_ENG}
 845:./tmk_core/protocol/lufa/descriptor.c **** };
 846:./tmk_core/protocol/lufa/descriptor.c **** 
 847:./tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_String_t PROGMEM ManufacturerString =
 848:./tmk_core/protocol/lufa/descriptor.c **** {
 849:./tmk_core/protocol/lufa/descriptor.c ****     /* subtract 1 for null terminator */
 850:./tmk_core/protocol/lufa/descriptor.c ****     .Header                 = {.Size = USB_STRING_LEN(sizeof(STR(MANUFACTURER))-1), .Type = DTYPE_S
 851:./tmk_core/protocol/lufa/descriptor.c **** 
 852:./tmk_core/protocol/lufa/descriptor.c ****     .UnicodeString          = LSTR(MANUFACTURER)
 853:./tmk_core/protocol/lufa/descriptor.c **** };
 854:./tmk_core/protocol/lufa/descriptor.c **** 
 855:./tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_String_t PROGMEM ProductString =
 856:./tmk_core/protocol/lufa/descriptor.c **** {
 857:./tmk_core/protocol/lufa/descriptor.c ****     /* subtract 1 for null terminator */
 858:./tmk_core/protocol/lufa/descriptor.c ****     .Header                 = {.Size = USB_STRING_LEN(sizeof(STR(PRODUCT))-1), .Type = DTYPE_String
 859:./tmk_core/protocol/lufa/descriptor.c **** 
 860:./tmk_core/protocol/lufa/descriptor.c ****     .UnicodeString          = LSTR(PRODUCT)
 861:./tmk_core/protocol/lufa/descriptor.c **** };
 862:./tmk_core/protocol/lufa/descriptor.c **** 
 863:./tmk_core/protocol/lufa/descriptor.c **** 
 864:./tmk_core/protocol/lufa/descriptor.c **** /** This function is called by the library when in device mode, and must be overridden (see library
 865:./tmk_core/protocol/lufa/descriptor.c ****  *  documentation) by the application code so that the address and size of a requested descriptor c
 866:./tmk_core/protocol/lufa/descriptor.c ****  *  to the USB library. When the device receives a Get Descriptor request on the control endpoint, 
 867:./tmk_core/protocol/lufa/descriptor.c ****  *  is called so that the descriptor details can be passed back and the appropriate descriptor sent
 868:./tmk_core/protocol/lufa/descriptor.c ****  *  USB host.
 869:./tmk_core/protocol/lufa/descriptor.c ****  */
 870:./tmk_core/protocol/lufa/descriptor.c **** uint16_t CALLBACK_USB_GetDescriptor(const uint16_t wValue,
 871:./tmk_core/protocol/lufa/descriptor.c ****                                     const uint8_t wIndex,
 872:./tmk_core/protocol/lufa/descriptor.c ****                                     const void** const DescriptorAddress)
 873:./tmk_core/protocol/lufa/descriptor.c **** {
  18               		.loc 1 873 1 view -0
  19               		.cfi_startproc
  20               	/* prologue: function */
  21               	/* frame size = 0 */
  22               	/* stack size = 0 */
  23               	.L__stack_usage = 0
  24               		.loc 1 873 1 is_stmt 0 view .LVU1
  25 0000 9C01      		movw r18,r24
  26 0002 DA01      		movw r26,r20
 874:./tmk_core/protocol/lufa/descriptor.c ****     const uint8_t  DescriptorType   = (wValue >> 8);
  27               		.loc 1 874 5 is_stmt 1 view .LVU2
  28               		.loc 1 874 47 is_stmt 0 view .LVU3
  29 0004 892F      		mov r24,r25
  30 0006 9927      		clr r25
  31               	.LVL1:
 875:./tmk_core/protocol/lufa/descriptor.c ****     const uint8_t  DescriptorIndex  = (wValue & 0xFF);
  32               		.loc 1 875 5 is_stmt 1 view .LVU4
 876:./tmk_core/protocol/lufa/descriptor.c **** 
 877:./tmk_core/protocol/lufa/descriptor.c ****     const void* Address = NULL;
  33               		.loc 1 877 5 view .LVU5
 878:./tmk_core/protocol/lufa/descriptor.c ****     uint16_t    Size    = NO_DESCRIPTOR;
  34               		.loc 1 878 5 view .LVU6
 879:./tmk_core/protocol/lufa/descriptor.c **** 
 880:./tmk_core/protocol/lufa/descriptor.c ****     switch (DescriptorType)
  35               		.loc 1 880 5 view .LVU7
  36 0008 8330      		cpi r24,3
  37 000a 9105      		cpc r25,__zero_reg__
  38 000c 01F0      		breq .L2
  39 000e 00F4      		brsh .L3
  40 0010 8130      		cpi r24,1
  41 0012 9105      		cpc r25,__zero_reg__
  42 0014 01F4      		brne .+2
  43 0016 00C0      		rjmp .L9
  44 0018 0297      		sbiw r24,2
  45 001a 01F4      		brne .L13
 881:./tmk_core/protocol/lufa/descriptor.c ****     {
 882:./tmk_core/protocol/lufa/descriptor.c ****         case DTYPE_Device:
 883:./tmk_core/protocol/lufa/descriptor.c ****             Address = &DeviceDescriptor;
 884:./tmk_core/protocol/lufa/descriptor.c ****             Size    = sizeof(USB_Descriptor_Device_t);
 885:./tmk_core/protocol/lufa/descriptor.c ****             break;
 886:./tmk_core/protocol/lufa/descriptor.c ****         case DTYPE_Configuration:
 887:./tmk_core/protocol/lufa/descriptor.c ****             Address = &ConfigurationDescriptor;
 888:./tmk_core/protocol/lufa/descriptor.c ****             Size    = sizeof(USB_Descriptor_Configuration_t);
  46               		.loc 1 888 21 is_stmt 0 view .LVU8
  47 001c 8DE6      		ldi r24,lo8(109)
  48 001e 90E0      		ldi r25,0
  49               	.LVL2:
 887:./tmk_core/protocol/lufa/descriptor.c ****             Size    = sizeof(USB_Descriptor_Configuration_t);
  50               		.loc 1 887 21 view .LVU9
  51 0020 20E0      		ldi r18,lo8(ConfigurationDescriptor)
  52 0022 30E0      		ldi r19,hi8(ConfigurationDescriptor)
  53               	.LVL3:
  54               	.L4:
 889:./tmk_core/protocol/lufa/descriptor.c ****             break;
 890:./tmk_core/protocol/lufa/descriptor.c ****         case DTYPE_String:
 891:./tmk_core/protocol/lufa/descriptor.c ****             switch (DescriptorIndex )
 892:./tmk_core/protocol/lufa/descriptor.c ****             {
 893:./tmk_core/protocol/lufa/descriptor.c ****                 case 0x00:
 894:./tmk_core/protocol/lufa/descriptor.c ****                     Address = &LanguageString;
 895:./tmk_core/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&LanguageString.Header.Size);
 896:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 897:./tmk_core/protocol/lufa/descriptor.c ****                 case 0x01:
 898:./tmk_core/protocol/lufa/descriptor.c ****                     Address = &ManufacturerString;
 899:./tmk_core/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&ManufacturerString.Header.Size);
 900:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 901:./tmk_core/protocol/lufa/descriptor.c ****                 case 0x02:
 902:./tmk_core/protocol/lufa/descriptor.c ****                     Address = &ProductString;
 903:./tmk_core/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&ProductString.Header.Size);
 904:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 905:./tmk_core/protocol/lufa/descriptor.c ****             }
 906:./tmk_core/protocol/lufa/descriptor.c ****             break;
 907:./tmk_core/protocol/lufa/descriptor.c ****         case HID_DTYPE_HID:
 908:./tmk_core/protocol/lufa/descriptor.c ****             switch (wIndex) {
 909:./tmk_core/protocol/lufa/descriptor.c ****             case KEYBOARD_INTERFACE:
 910:./tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.Keyboard_HID;
 911:./tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 912:./tmk_core/protocol/lufa/descriptor.c ****                 break;
 913:./tmk_core/protocol/lufa/descriptor.c **** #ifdef MOUSE_ENABLE
 914:./tmk_core/protocol/lufa/descriptor.c ****             case MOUSE_INTERFACE:
 915:./tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.Mouse_HID;
 916:./tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 917:./tmk_core/protocol/lufa/descriptor.c ****                 break;
 918:./tmk_core/protocol/lufa/descriptor.c **** #endif
 919:./tmk_core/protocol/lufa/descriptor.c **** #ifdef EXTRAKEY_ENABLE
 920:./tmk_core/protocol/lufa/descriptor.c ****             case EXTRAKEY_INTERFACE:
 921:./tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.Extrakey_HID;
 922:./tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 923:./tmk_core/protocol/lufa/descriptor.c ****                 break;
 924:./tmk_core/protocol/lufa/descriptor.c **** #endif
 925:./tmk_core/protocol/lufa/descriptor.c **** #ifdef RAW_ENABLE
 926:./tmk_core/protocol/lufa/descriptor.c ****             case RAW_INTERFACE:
 927:./tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.Raw_HID;
 928:./tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 929:./tmk_core/protocol/lufa/descriptor.c ****                 break;
 930:./tmk_core/protocol/lufa/descriptor.c **** #endif
 931:./tmk_core/protocol/lufa/descriptor.c **** #ifdef CONSOLE_ENABLE
 932:./tmk_core/protocol/lufa/descriptor.c ****             case CONSOLE_INTERFACE:
 933:./tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.Console_HID;
 934:./tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 935:./tmk_core/protocol/lufa/descriptor.c ****                 break;
 936:./tmk_core/protocol/lufa/descriptor.c **** #endif
 937:./tmk_core/protocol/lufa/descriptor.c **** #ifdef NKRO_ENABLE
 938:./tmk_core/protocol/lufa/descriptor.c ****             case NKRO_INTERFACE:
 939:./tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.NKRO_HID;
 940:./tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 941:./tmk_core/protocol/lufa/descriptor.c ****                 break;
 942:./tmk_core/protocol/lufa/descriptor.c **** #endif
 943:./tmk_core/protocol/lufa/descriptor.c ****             }
 944:./tmk_core/protocol/lufa/descriptor.c ****             break;
 945:./tmk_core/protocol/lufa/descriptor.c ****         case HID_DTYPE_Report:
 946:./tmk_core/protocol/lufa/descriptor.c ****             switch (wIndex) {
 947:./tmk_core/protocol/lufa/descriptor.c ****             case KEYBOARD_INTERFACE:
 948:./tmk_core/protocol/lufa/descriptor.c ****                 Address = &KeyboardReport;
 949:./tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(KeyboardReport);
 950:./tmk_core/protocol/lufa/descriptor.c ****                 break;
 951:./tmk_core/protocol/lufa/descriptor.c **** #ifdef MOUSE_ENABLE
 952:./tmk_core/protocol/lufa/descriptor.c ****             case MOUSE_INTERFACE:
 953:./tmk_core/protocol/lufa/descriptor.c ****                 Address = &MouseReport;
 954:./tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(MouseReport);
 955:./tmk_core/protocol/lufa/descriptor.c ****                 break;
 956:./tmk_core/protocol/lufa/descriptor.c **** #endif
 957:./tmk_core/protocol/lufa/descriptor.c **** #ifdef EXTRAKEY_ENABLE
 958:./tmk_core/protocol/lufa/descriptor.c ****             case EXTRAKEY_INTERFACE:
 959:./tmk_core/protocol/lufa/descriptor.c ****                 Address = &ExtrakeyReport;
 960:./tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(ExtrakeyReport);
 961:./tmk_core/protocol/lufa/descriptor.c ****                 break;
 962:./tmk_core/protocol/lufa/descriptor.c **** #endif
 963:./tmk_core/protocol/lufa/descriptor.c **** #ifdef RAW_ENABLE
 964:./tmk_core/protocol/lufa/descriptor.c ****             case RAW_INTERFACE:
 965:./tmk_core/protocol/lufa/descriptor.c ****                 Address = &RawReport;
 966:./tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(RawReport);
 967:./tmk_core/protocol/lufa/descriptor.c ****                 break;
 968:./tmk_core/protocol/lufa/descriptor.c **** #endif
 969:./tmk_core/protocol/lufa/descriptor.c **** #ifdef CONSOLE_ENABLE
 970:./tmk_core/protocol/lufa/descriptor.c ****             case CONSOLE_INTERFACE:
 971:./tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConsoleReport;
 972:./tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(ConsoleReport);
 973:./tmk_core/protocol/lufa/descriptor.c ****                 break;
 974:./tmk_core/protocol/lufa/descriptor.c **** #endif
 975:./tmk_core/protocol/lufa/descriptor.c **** #ifdef NKRO_ENABLE
 976:./tmk_core/protocol/lufa/descriptor.c ****             case NKRO_INTERFACE:
 977:./tmk_core/protocol/lufa/descriptor.c ****                 Address = &NKROReport;
 978:./tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(NKROReport);
 979:./tmk_core/protocol/lufa/descriptor.c ****                 break;
 980:./tmk_core/protocol/lufa/descriptor.c **** #endif
 981:./tmk_core/protocol/lufa/descriptor.c ****             }
 982:./tmk_core/protocol/lufa/descriptor.c ****             break;
 983:./tmk_core/protocol/lufa/descriptor.c ****     }
 984:./tmk_core/protocol/lufa/descriptor.c **** 
 985:./tmk_core/protocol/lufa/descriptor.c ****     *DescriptorAddress = Address;
  55               		.loc 1 985 5 is_stmt 1 view .LVU10
  56               		.loc 1 985 24 is_stmt 0 view .LVU11
  57 0024 2D93      		st X+,r18
  58 0026 3C93      		st X,r19
 986:./tmk_core/protocol/lufa/descriptor.c ****     return Size;
  59               		.loc 1 986 5 is_stmt 1 view .LVU12
  60               	/* epilogue start */
 987:./tmk_core/protocol/lufa/descriptor.c **** }
  61               		.loc 1 987 1 is_stmt 0 view .LVU13
  62 0028 0895      		ret
  63               	.LVL4:
  64               	.L3:
 880:./tmk_core/protocol/lufa/descriptor.c ****     {
  65               		.loc 1 880 5 view .LVU14
  66 002a 8132      		cpi r24,33
  67 002c 9105      		cpc r25,__zero_reg__
  68 002e 01F0      		breq .L5
  69 0030 8297      		sbiw r24,34
  70 0032 01F0      		breq .L6
  71               	.LVL5:
  72               	.L13:
 880:./tmk_core/protocol/lufa/descriptor.c ****     {
  73               		.loc 1 880 5 view .LVU15
  74 0034 90E0      		ldi r25,0
  75 0036 80E0      		ldi r24,0
  76 0038 30E0      		ldi r19,0
  77 003a 20E0      		ldi r18,0
  78               	.LVL6:
 880:./tmk_core/protocol/lufa/descriptor.c ****     {
  79               		.loc 1 880 5 view .LVU16
  80 003c 00C0      		rjmp .L4
  81               	.LVL7:
  82               	.L2:
 891:./tmk_core/protocol/lufa/descriptor.c ****             {
  83               		.loc 1 891 13 is_stmt 1 view .LVU17
  84 003e C901      		movw r24,r18
  85               	.LVL8:
 891:./tmk_core/protocol/lufa/descriptor.c ****             {
  86               		.loc 1 891 13 is_stmt 0 view .LVU18
  87 0040 9927      		clr r25
  88 0042 2130      		cpi r18,lo8(1)
  89 0044 01F0      		breq .L7
  90 0046 8230      		cpi r24,2
  91 0048 9105      		cpc r25,__zero_reg__
  92 004a 01F0      		breq .L8
  93               	.LBB2:
 895:./tmk_core/protocol/lufa/descriptor.c ****                     break;
  94               		.loc 1 895 31 view .LVU19
  95 004c E0E0      		ldi r30,lo8(LanguageString)
  96 004e F0E0      		ldi r31,hi8(LanguageString)
  97               	.LBE2:
  98 0050 892B      		or r24,r25
  99 0052 01F4      		brne .L13
 100               	.LVL9:
 101               	.L14:
 102               	.LBB3:
 903:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 103               		.loc 1 903 31 view .LVU20
 104               	/* #APP */
 105               	 ;  903 "./tmk_core/protocol/lufa/descriptor.c" 1
 106 0054 8491      		lpm r24, Z
 107               		
 108               	 ;  0 "" 2
 109               	.LVL10:
 903:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 110               		.loc 1 903 31 is_stmt 1 view .LVU21
 111               	/* #NOAPP */
 112               	.LBE3:
 903:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 113               		.loc 1 903 29 is_stmt 0 view .LVU22
 114 0056 90E0      		ldi r25,0
 115               	.LVL11:
 904:./tmk_core/protocol/lufa/descriptor.c ****             }
 116               		.loc 1 904 21 is_stmt 1 view .LVU23
 902:./tmk_core/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&ProductString.Header.Size);
 117               		.loc 1 902 29 is_stmt 0 view .LVU24
 118 0058 9F01      		movw r18,r30
 119               	.LVL12:
 904:./tmk_core/protocol/lufa/descriptor.c ****             }
 120               		.loc 1 904 21 view .LVU25
 121 005a 00C0      		rjmp .L4
 122               	.LVL13:
 123               	.L7:
 898:./tmk_core/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&ManufacturerString.Header.Size);
 124               		.loc 1 898 21 is_stmt 1 view .LVU26
 899:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 125               		.loc 1 899 21 view .LVU27
 126               	.LBB4:
 899:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 127               		.loc 1 899 31 view .LVU28
 899:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 128               		.loc 1 899 31 view .LVU29
 899:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 129               		.loc 1 899 31 view .LVU30
 130 005c E0E0      		ldi r30,lo8(ManufacturerString)
 131 005e F0E0      		ldi r31,hi8(ManufacturerString)
 132 0060 00C0      		rjmp .L14
 133               	.LVL14:
 134               	.L8:
 899:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 135               		.loc 1 899 31 is_stmt 0 view .LVU31
 136               	.LBE4:
 902:./tmk_core/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&ProductString.Header.Size);
 137               		.loc 1 902 21 is_stmt 1 view .LVU32
 903:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 138               		.loc 1 903 21 view .LVU33
 139               	.LBB5:
 903:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 140               		.loc 1 903 31 view .LVU34
 903:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 141               		.loc 1 903 31 view .LVU35
 903:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 142               		.loc 1 903 31 view .LVU36
 143 0062 E0E0      		ldi r30,lo8(ProductString)
 144 0064 F0E0      		ldi r31,hi8(ProductString)
 145 0066 00C0      		rjmp .L14
 146               	.LVL15:
 147               	.L5:
 903:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 148               		.loc 1 903 31 is_stmt 0 view .LVU37
 149               	.LBE5:
 908:./tmk_core/protocol/lufa/descriptor.c ****             case KEYBOARD_INTERFACE:
 150               		.loc 1 908 13 is_stmt 1 view .LVU38
 151 0068 6430      		cpi r22,lo8(4)
 152 006a 00F4      		brsh .L13
 153 006c E62F      		mov r30,r22
 154 006e F0E0      		ldi r31,0
 155 0070 EE0F      		lsl r30
 156 0072 FF1F      		rol r31
 157 0074 E050      		subi r30,lo8(-(CSWTCH.1))
 158 0076 F040      		sbci r31,hi8(-(CSWTCH.1))
 159 0078 2081      		ld r18,Z
 160 007a 3181      		ldd r19,Z+1
 161               	.LVL16:
 880:./tmk_core/protocol/lufa/descriptor.c ****     {
 162               		.loc 1 880 5 is_stmt 0 view .LVU39
 163 007c 89E0      		ldi r24,lo8(9)
 164 007e 90E0      		ldi r25,0
 165               	.LVL17:
 880:./tmk_core/protocol/lufa/descriptor.c ****     {
 166               		.loc 1 880 5 view .LVU40
 167 0080 00C0      		rjmp .L4
 168               	.LVL18:
 169               	.L6:
 946:./tmk_core/protocol/lufa/descriptor.c ****             case KEYBOARD_INTERFACE:
 170               		.loc 1 946 13 is_stmt 1 view .LVU41
 171 0082 6430      		cpi r22,lo8(4)
 172 0084 00F4      		brsh .L13
 173 0086 70E0      		ldi r23,0
 174 0088 FB01      		movw r30,r22
 175 008a EE0F      		lsl r30
 176 008c FF1F      		rol r31
 177               	.LVL19:
 946:./tmk_core/protocol/lufa/descriptor.c ****             case KEYBOARD_INTERFACE:
 178               		.loc 1 946 13 is_stmt 0 view .LVU42
 179 008e E050      		subi r30,lo8(-(CSWTCH.2))
 180 0090 F040      		sbci r31,hi8(-(CSWTCH.2))
 181 0092 2081      		ld r18,Z
 182 0094 3181      		ldd r19,Z+1
 183               	.LVL20:
 946:./tmk_core/protocol/lufa/descriptor.c ****             case KEYBOARD_INTERFACE:
 184               		.loc 1 946 13 view .LVU43
 185 0096 6050      		subi r22,lo8(-(CSWTCH.3))
 186 0098 7040      		sbci r23,hi8(-(CSWTCH.3))
 187               	.LVL21:
 946:./tmk_core/protocol/lufa/descriptor.c ****             case KEYBOARD_INTERFACE:
 188               		.loc 1 946 13 view .LVU44
 189 009a FB01      		movw r30,r22
 190 009c 8081      		ld r24,Z
 191 009e 90E0      		ldi r25,0
 192 00a0 00C0      		rjmp .L4
 193               	.LVL22:
 194               	.L9:
 880:./tmk_core/protocol/lufa/descriptor.c ****     {
 195               		.loc 1 880 5 view .LVU45
 196 00a2 82E1      		ldi r24,lo8(18)
 197 00a4 90E0      		ldi r25,0
 198               	.LVL23:
 880:./tmk_core/protocol/lufa/descriptor.c ****     {
 199               		.loc 1 880 5 view .LVU46
 200 00a6 20E0      		ldi r18,lo8(DeviceDescriptor)
 201 00a8 30E0      		ldi r19,hi8(DeviceDescriptor)
 202               	.LVL24:
 880:./tmk_core/protocol/lufa/descriptor.c ****     {
 203               		.loc 1 880 5 view .LVU47
 204 00aa 00C0      		rjmp .L4
 205               		.cfi_endproc
 206               	.LFE100:
 208               		.section	.rodata.CSWTCH.3,"a"
 211               	CSWTCH.3:
 212 0000 40        		.byte	64
 213 0001 4D        		.byte	77
 214 0002 36        		.byte	54
 215 0003 39        		.byte	57
 216               		.section	.rodata.CSWTCH.2,"a"
 219               	CSWTCH.2:
 220 0000 0000      		.word	KeyboardReport
 221 0002 0000      		.word	MouseReport
 222 0004 0000      		.word	ExtrakeyReport
 223 0006 0000      		.word	NKROReport
 224               		.section	.rodata.CSWTCH.1,"a"
 227               	CSWTCH.1:
 228 0000 0000      		.word	ConfigurationDescriptor+18
 229 0002 0000      		.word	ConfigurationDescriptor+43
 230 0004 0000      		.word	ConfigurationDescriptor+68
 231 0006 0000      		.word	ConfigurationDescriptor+93
 232               	.global	ProductString
 233               		.section	.progmem.data.ProductString,"a"
 236               	ProductString:
 237 0000 12        		.byte	18
 238 0001 03        		.byte	3
 239 0002 6B00      		.string	"k"
 240 0004 6500      		.string	"e"
 241 0006 7900      		.string	"y"
 242 0008 6200      		.string	"b"
 243 000a 6F00      		.string	"o"
 244 000c 6100      		.string	"a"
 245 000e 7200      		.string	"r"
 246 0010 6400      		.string	"d"
 247 0012 00        		.string	""
 248 0013 00        		.string	""
 249               	.global	ManufacturerString
 250               		.section	.progmem.data.ManufacturerString,"a"
 253               	ManufacturerString:
 254 0000 16        		.byte	22
 255 0001 03        		.byte	3
 256 0002 7100      		.string	"q"
 257 0004 6D00      		.string	"m"
 258 0006 6B00      		.string	"k"
 259 0008 6200      		.string	"b"
 260 000a 7500      		.string	"u"
 261 000c 6900      		.string	"i"
 262 000e 6C00      		.string	"l"
 263 0010 6400      		.string	"d"
 264 0012 6500      		.string	"e"
 265 0014 7200      		.string	"r"
 266 0016 00        		.string	""
 267 0017 00        		.string	""
 268               	.global	LanguageString
 269               		.section	.progmem.data.LanguageString,"a"
 272               	LanguageString:
 273 0000 04        		.byte	4
 274 0001 03        		.byte	3
 275 0002 0904      		.word	1033
 276               	.global	ConfigurationDescriptor
 277               		.section	.progmem.data.ConfigurationDescriptor,"a"
 280               	ConfigurationDescriptor:
 281 0000 09        		.byte	9
 282 0001 02        		.byte	2
 283 0002 6D00      		.word	109
 284 0004 04        		.byte	4
 285 0005 01        		.byte	1
 286 0006 00        		.byte	0
 287 0007 A0        		.byte	-96
 288 0008 FA        		.byte	-6
 289 0009 09        		.byte	9
 290 000a 04        		.byte	4
 291 000b 00        		.byte	0
 292 000c 00        		.byte	0
 293 000d 01        		.byte	1
 294 000e 03        		.byte	3
 295 000f 01        		.byte	1
 296 0010 01        		.byte	1
 297 0011 00        		.byte	0
 298 0012 09        		.byte	9
 299 0013 21        		.byte	33
 300 0014 1101      		.word	273
 301 0016 00        		.byte	0
 302 0017 01        		.byte	1
 303 0018 22        		.byte	34
 304 0019 4000      		.word	64
 305 001b 07        		.byte	7
 306 001c 05        		.byte	5
 307 001d 81        		.byte	-127
 308 001e 03        		.byte	3
 309 001f 0800      		.word	8
 310 0021 0A        		.byte	10
 311 0022 09        		.byte	9
 312 0023 04        		.byte	4
 313 0024 01        		.byte	1
 314 0025 00        		.byte	0
 315 0026 01        		.byte	1
 316 0027 03        		.byte	3
 317 0028 01        		.byte	1
 318 0029 02        		.byte	2
 319 002a 00        		.byte	0
 320 002b 09        		.byte	9
 321 002c 21        		.byte	33
 322 002d 1101      		.word	273
 323 002f 00        		.byte	0
 324 0030 01        		.byte	1
 325 0031 22        		.byte	34
 326 0032 4D00      		.word	77
 327 0034 07        		.byte	7
 328 0035 05        		.byte	5
 329 0036 82        		.byte	-126
 330 0037 03        		.byte	3
 331 0038 0800      		.word	8
 332 003a 0A        		.byte	10
 333 003b 09        		.byte	9
 334 003c 04        		.byte	4
 335 003d 02        		.byte	2
 336 003e 00        		.byte	0
 337 003f 01        		.byte	1
 338 0040 03        		.byte	3
 339 0041 00        		.byte	0
 340 0042 00        		.byte	0
 341 0043 00        		.byte	0
 342 0044 09        		.byte	9
 343 0045 21        		.byte	33
 344 0046 1101      		.word	273
 345 0048 00        		.byte	0
 346 0049 01        		.byte	1
 347 004a 22        		.byte	34
 348 004b 3600      		.word	54
 349 004d 07        		.byte	7
 350 004e 05        		.byte	5
 351 004f 83        		.byte	-125
 352 0050 03        		.byte	3
 353 0051 0800      		.word	8
 354 0053 0A        		.byte	10
 355 0054 09        		.byte	9
 356 0055 04        		.byte	4
 357 0056 03        		.byte	3
 358 0057 00        		.byte	0
 359 0058 01        		.byte	1
 360 0059 03        		.byte	3
 361 005a 00        		.byte	0
 362 005b 00        		.byte	0
 363 005c 00        		.byte	0
 364 005d 09        		.byte	9
 365 005e 21        		.byte	33
 366 005f 1101      		.word	273
 367 0061 00        		.byte	0
 368 0062 01        		.byte	1
 369 0063 22        		.byte	34
 370 0064 3900      		.word	57
 371 0066 07        		.byte	7
 372 0067 05        		.byte	5
 373 0068 84        		.byte	-124
 374 0069 03        		.byte	3
 375 006a 2000      		.word	32
 376 006c 01        		.byte	1
 377               	.global	DeviceDescriptor
 378               		.section	.progmem.data.DeviceDescriptor,"a"
 381               	DeviceDescriptor:
 382 0000 12        		.byte	18
 383 0001 01        		.byte	1
 384 0002 1001      		.word	272
 385 0004 00        		.byte	0
 386 0005 00        		.byte	0
 387 0006 00        		.byte	0
 388 0007 08        		.byte	8
 389 0008 EDFE      		.word	-275
 390 000a 6060      		.word	24672
 391 000c 0100      		.word	1
 392 000e 01        		.byte	1
 393 000f 02        		.byte	2
 394 0010 00        		.byte	0
 395 0011 01        		.byte	1
 396               	.global	NKROReport
 397               		.section	.progmem.data.NKROReport,"a"
 400               	NKROReport:
 401 0000 0501 0906 		.string	"\005\001\t\006\241\001\005\007\031\340)\347\025"
 401      A101 0507 
 401      19E0 29E7 
 401      1500 
 402 000e 2501 9508 		.string	"%\001\225\bu\001\201\002\005\b\031\001)\005\225\005u\001\221\002\225\001u\003\221\001\005
 402      7501 8102 
 402      0508 1901 
 402      2905 9505 
 402      7501 9102 
 403 002c 29F7 1500 		.string	")\367\025"
 404 0030 2501 95F8 		.ascii	"%\001\225\370u\001\201\002\300"
 404      7501 8102 
 404      C0
 405               	.global	ExtrakeyReport
 406               		.section	.progmem.data.ExtrakeyReport,"a"
 409               	ExtrakeyReport:
 410 0000 0501 0980 		.string	"\005\001\t\200\241\001\205\002\026\001"
 410      A101 8502 
 410      1601 00
 411 000b 2603 00   		.string	"&\003"
 412 000e 1A81 00   		.string	"\032\201"
 413 0011 2A83 00   		.string	"*\203"
 414 0014 7510 9501 		.string	"u\020\225\001\201"
 414      8100 
 415 001a C005 0C09 		.string	"\300\005\f\t\001\241\001\205\003\026\001"
 415      01A1 0185 
 415      0316 0100 
 416 0026 269C 021A 		.string	"&\234\002\032\001"
 416      0100 
 417 002c 2A9C 0275 		.string	"*\234\002u\020\225\001\201"
 417      1095 0181 
 417      00
 418 0035 C0        		.ascii	"\300"
 419               	.global	MouseReport
 420               		.section	.progmem.data.MouseReport,"a"
 423               	MouseReport:
 424 0000 0501 0902 		.string	"\005\001\t\002\241\001\t\001\241"
 424      A101 0901 
 424      A100 
 425 000a 0509 1901 		.string	"\005\t\031\001)\005\025"
 425      2905 1500 
 426 0012 2501 9505 		.ascii	"%\001\225\005u\001\201\002\225\001u\003\201\001\005\001\t0\t"
 426      7501 8102 
 426      9501 7503 
 426      8101 0501 
 426      0930 09
 427 0025 3115 8125 		.ascii	"1\025\201%\177\225\002u\b\201\006\t8\025\201%\177\225\001u\b"
 427      7F95 0275 
 427      0881 0609 
 427      3815 8125 
 427      7F95 0175 
 428 003a 8106 050C 		.ascii	"\201\006\005\f\n8\002\025\201%\177\225\001u\b\201\006\300\300"
 428      0A38 0215 
 428      8125 7F95 
 428      0175 0881 
 428      06C0 C0
 429               	.global	KeyboardReport
 430               		.section	.progmem.data.KeyboardReport,"a"
 433               	KeyboardReport:
 434 0000 0501 0906 		.string	"\005\001\t\006\241\001\005\007\031\340)\347\025"
 434      A101 0507 
 434      19E0 29E7 
 434      1500 
 435 000e 2501 9508 		.string	"%\001\225\bu\001\201\002\225\001u\b\201\001\005\b\031\001)\005\225\005u\001\221\002\225\0
 435      7501 8102 
 435      9501 7508 
 435      8101 0508 
 435      1901 2905 
 436 0032 29FF 1500 		.string	")\377\025"
 437 0036 26FF 00   		.string	"&\377"
 438 0039 9506 7508 		.string	"\225\006u\b\201"
 438      8100 
 439 003f C0        		.ascii	"\300"
 440               		.text
 441               	.Letext0:
 442               		.file 2 "/usr/avr/include/stdint.h"
 443               		.file 3 "/usr/lib/gcc/avr/10.3.0/include/stddef.h"
 444               		.file 4 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../StdDescriptors.h"
 445               		.file 5 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../Common/HIDClassCommon.
 446               		.file 6 "./tmk_core/protocol/lufa/descriptor.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 descriptor.c
     /tmp/ccQZiFfo.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccQZiFfo.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccQZiFfo.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccQZiFfo.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/ccQZiFfo.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccQZiFfo.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccQZiFfo.s:14     .text.CALLBACK_USB_GetDescriptor:0000000000000000 CALLBACK_USB_GetDescriptor
     /tmp/ccQZiFfo.s:280    .progmem.data.ConfigurationDescriptor:0000000000000000 ConfigurationDescriptor
     /tmp/ccQZiFfo.s:272    .progmem.data.LanguageString:0000000000000000 LanguageString
     /tmp/ccQZiFfo.s:253    .progmem.data.ManufacturerString:0000000000000000 ManufacturerString
     /tmp/ccQZiFfo.s:236    .progmem.data.ProductString:0000000000000000 ProductString
     /tmp/ccQZiFfo.s:227    .rodata.CSWTCH.1:0000000000000000 CSWTCH.1
     /tmp/ccQZiFfo.s:219    .rodata.CSWTCH.2:0000000000000000 CSWTCH.2
     /tmp/ccQZiFfo.s:211    .rodata.CSWTCH.3:0000000000000000 CSWTCH.3
     /tmp/ccQZiFfo.s:381    .progmem.data.DeviceDescriptor:0000000000000000 DeviceDescriptor
     /tmp/ccQZiFfo.s:433    .progmem.data.KeyboardReport:0000000000000000 KeyboardReport
     /tmp/ccQZiFfo.s:423    .progmem.data.MouseReport:0000000000000000 MouseReport
     /tmp/ccQZiFfo.s:409    .progmem.data.ExtrakeyReport:0000000000000000 ExtrakeyReport
     /tmp/ccQZiFfo.s:400    .progmem.data.NKROReport:0000000000000000 NKROReport

UNDEFINED SYMBOLS
__do_copy_data
