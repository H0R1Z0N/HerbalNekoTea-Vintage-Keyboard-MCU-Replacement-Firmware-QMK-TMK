   1               		.file	"keyboard.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.text.matrix_setup,"ax",@progbits
  12               		.weak	matrix_setup
  14               	matrix_setup:
  15               	.LFB103:
  16               		.file 1 "./tmk_core/common/keyboard.c"
   1:./tmk_core/common/keyboard.c **** /*
   2:./tmk_core/common/keyboard.c **** Copyright 2011, 2012, 2013 Jun Wako <wakojun@gmail.com>
   3:./tmk_core/common/keyboard.c **** 
   4:./tmk_core/common/keyboard.c **** This program is free software: you can redistribute it and/or modify
   5:./tmk_core/common/keyboard.c **** it under the terms of the GNU General Public License as published by
   6:./tmk_core/common/keyboard.c **** the Free Software Foundation, either version 2 of the License, or
   7:./tmk_core/common/keyboard.c **** (at your option) any later version.
   8:./tmk_core/common/keyboard.c **** 
   9:./tmk_core/common/keyboard.c **** This program is distributed in the hope that it will be useful,
  10:./tmk_core/common/keyboard.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:./tmk_core/common/keyboard.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:./tmk_core/common/keyboard.c **** GNU General Public License for more details.
  13:./tmk_core/common/keyboard.c **** 
  14:./tmk_core/common/keyboard.c **** You should have received a copy of the GNU General Public License
  15:./tmk_core/common/keyboard.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:./tmk_core/common/keyboard.c **** */
  17:./tmk_core/common/keyboard.c **** #include <stdint.h>
  18:./tmk_core/common/keyboard.c **** #include "keyboard.h"
  19:./tmk_core/common/keyboard.c **** #include "matrix.h"
  20:./tmk_core/common/keyboard.c **** #include "keymap.h"
  21:./tmk_core/common/keyboard.c **** #include "host.h"
  22:./tmk_core/common/keyboard.c **** #include "led.h"
  23:./tmk_core/common/keyboard.c **** #include "keycode.h"
  24:./tmk_core/common/keyboard.c **** #include "timer.h"
  25:./tmk_core/common/keyboard.c **** #include "print.h"
  26:./tmk_core/common/keyboard.c **** #include "debug.h"
  27:./tmk_core/common/keyboard.c **** #include "command.h"
  28:./tmk_core/common/keyboard.c **** #include "util.h"
  29:./tmk_core/common/keyboard.c **** #include "sendchar.h"
  30:./tmk_core/common/keyboard.c **** #include "eeconfig.h"
  31:./tmk_core/common/keyboard.c **** #include "backlight.h"
  32:./tmk_core/common/keyboard.c **** #include "action_layer.h"
  33:./tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
  34:./tmk_core/common/keyboard.c **** #   include "bootmagic.h"
  35:./tmk_core/common/keyboard.c **** #else
  36:./tmk_core/common/keyboard.c **** #   include "magic.h"
  37:./tmk_core/common/keyboard.c **** #endif
  38:./tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
  39:./tmk_core/common/keyboard.c **** #   include "mousekey.h"
  40:./tmk_core/common/keyboard.c **** #endif
  41:./tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  42:./tmk_core/common/keyboard.c **** #   include "ps2_mouse.h"
  43:./tmk_core/common/keyboard.c **** #endif
  44:./tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  45:./tmk_core/common/keyboard.c **** #   include "serial_mouse.h"
  46:./tmk_core/common/keyboard.c **** #endif
  47:./tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  48:./tmk_core/common/keyboard.c **** #   include "adb.h"
  49:./tmk_core/common/keyboard.c **** #endif
  50:./tmk_core/common/keyboard.c **** #ifdef RGBLIGHT_ENABLE
  51:./tmk_core/common/keyboard.c **** #   include "rgblight.h"
  52:./tmk_core/common/keyboard.c **** #endif
  53:./tmk_core/common/keyboard.c **** #ifdef SERIAL_LINK_ENABLE
  54:./tmk_core/common/keyboard.c **** #   include "serial_link/system/serial_link.h"
  55:./tmk_core/common/keyboard.c **** #endif
  56:./tmk_core/common/keyboard.c **** #ifdef VISUALIZER_ENABLE
  57:./tmk_core/common/keyboard.c **** #   include "visualizer/visualizer.h"
  58:./tmk_core/common/keyboard.c **** #endif
  59:./tmk_core/common/keyboard.c **** 
  60:./tmk_core/common/keyboard.c **** 
  61:./tmk_core/common/keyboard.c **** 
  62:./tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
  63:./tmk_core/common/keyboard.c **** static bool has_ghost_in_row(uint8_t row)
  64:./tmk_core/common/keyboard.c **** {
  65:./tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = matrix_get_row(row);
  66:./tmk_core/common/keyboard.c ****     // No ghost exists when less than 2 keys are down on the row
  67:./tmk_core/common/keyboard.c ****     if (((matrix_row - 1) & matrix_row) == 0)
  68:./tmk_core/common/keyboard.c ****         return false;
  69:./tmk_core/common/keyboard.c **** 
  70:./tmk_core/common/keyboard.c ****     // Ghost occurs when the row shares column line with other row
  71:./tmk_core/common/keyboard.c ****     for (uint8_t i=0; i < MATRIX_ROWS; i++) {
  72:./tmk_core/common/keyboard.c ****         if (i != row && (matrix_get_row(i) & matrix_row))
  73:./tmk_core/common/keyboard.c ****             return true;
  74:./tmk_core/common/keyboard.c ****     }
  75:./tmk_core/common/keyboard.c ****     return false;
  76:./tmk_core/common/keyboard.c **** }
  77:./tmk_core/common/keyboard.c **** #endif
  78:./tmk_core/common/keyboard.c **** 
  79:./tmk_core/common/keyboard.c **** __attribute__ ((weak))
  80:./tmk_core/common/keyboard.c **** void matrix_setup(void) {
  17               		.loc 1 80 25 view -0
  18               		.cfi_startproc
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  81:./tmk_core/common/keyboard.c **** }
  23               		.loc 1 81 1 view .LVU1
  24               	/* epilogue start */
  25 0000 0895      		ret
  26               		.cfi_endproc
  27               	.LFE103:
  29               		.section	.text.keyboard_setup,"ax",@progbits
  30               	.global	keyboard_setup
  32               	keyboard_setup:
  33               	.LFB104:
  82:./tmk_core/common/keyboard.c **** 
  83:./tmk_core/common/keyboard.c **** void keyboard_setup(void) {
  34               		.loc 1 83 27 view -0
  35               		.cfi_startproc
  36               	/* prologue: function */
  37               	/* frame size = 0 */
  38               	/* stack size = 0 */
  39               	.L__stack_usage = 0
  84:./tmk_core/common/keyboard.c ****     matrix_setup();
  40               		.loc 1 84 5 view .LVU3
  41 0000 0C94 0000 		jmp matrix_setup
  42               	.LVL0:
  43               		.cfi_endproc
  44               	.LFE104:
  46               		.section	.text.keyboard_init,"ax",@progbits
  47               	.global	keyboard_init
  49               	keyboard_init:
  50               	.LFB105:
  85:./tmk_core/common/keyboard.c **** }
  86:./tmk_core/common/keyboard.c **** 
  87:./tmk_core/common/keyboard.c **** void keyboard_init(void) {
  51               		.loc 1 87 26 view -0
  52               		.cfi_startproc
  53               	/* prologue: function */
  54               	/* frame size = 0 */
  55               	/* stack size = 0 */
  56               	.L__stack_usage = 0
  88:./tmk_core/common/keyboard.c ****     timer_init();
  57               		.loc 1 88 5 view .LVU5
  58 0000 0E94 0000 		call timer_init
  59               	.LVL1:
  89:./tmk_core/common/keyboard.c ****     matrix_init();
  60               		.loc 1 89 5 view .LVU6
  61 0004 0E94 0000 		call matrix_init
  62               	.LVL2:
  90:./tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  91:./tmk_core/common/keyboard.c ****     ps2_mouse_init();
  92:./tmk_core/common/keyboard.c **** #endif
  93:./tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  94:./tmk_core/common/keyboard.c ****     serial_mouse_init();
  95:./tmk_core/common/keyboard.c **** #endif
  96:./tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  97:./tmk_core/common/keyboard.c ****     adb_mouse_init();
  98:./tmk_core/common/keyboard.c **** #endif
  99:./tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
 100:./tmk_core/common/keyboard.c ****     bootmagic();
  63               		.loc 1 100 5 view .LVU7
  64 0008 0C94 0000 		jmp bootmagic
  65               	.LVL3:
  66               		.cfi_endproc
  67               	.LFE105:
  69               		.section	.text.keyboard_task,"ax",@progbits
  70               	.global	keyboard_task
  72               	keyboard_task:
  73               	.LFB106:
 101:./tmk_core/common/keyboard.c **** #else
 102:./tmk_core/common/keyboard.c ****     magic();
 103:./tmk_core/common/keyboard.c **** #endif
 104:./tmk_core/common/keyboard.c **** #ifdef BACKLIGHT_ENABLE
 105:./tmk_core/common/keyboard.c ****     backlight_init();
 106:./tmk_core/common/keyboard.c **** #endif
 107:./tmk_core/common/keyboard.c **** #ifdef RGBLIGHT_ENABLE
 108:./tmk_core/common/keyboard.c ****     rgblight_init();
 109:./tmk_core/common/keyboard.c **** #endif
 110:./tmk_core/common/keyboard.c **** #if defined(NKRO_ENABLE) && defined(FORCE_NKRO)
 111:./tmk_core/common/keyboard.c ****     keymap_config.nkro = 1;
 112:./tmk_core/common/keyboard.c **** #endif
 113:./tmk_core/common/keyboard.c **** }
 114:./tmk_core/common/keyboard.c **** 
 115:./tmk_core/common/keyboard.c **** /*
 116:./tmk_core/common/keyboard.c ****  * Do keyboard routine jobs: scan mantrix, light LEDs, ...
 117:./tmk_core/common/keyboard.c ****  * This is repeatedly called as fast as possible.
 118:./tmk_core/common/keyboard.c ****  */
 119:./tmk_core/common/keyboard.c **** void keyboard_task(void)
 120:./tmk_core/common/keyboard.c **** {
  74               		.loc 1 120 1 view -0
  75               		.cfi_startproc
  76 0000 4F92      		push r4
  77               	.LCFI0:
  78               		.cfi_def_cfa_offset 3
  79               		.cfi_offset 4, -2
  80 0002 5F92      		push r5
  81               	.LCFI1:
  82               		.cfi_def_cfa_offset 4
  83               		.cfi_offset 5, -3
  84 0004 6F92      		push r6
  85               	.LCFI2:
  86               		.cfi_def_cfa_offset 5
  87               		.cfi_offset 6, -4
  88 0006 7F92      		push r7
  89               	.LCFI3:
  90               		.cfi_def_cfa_offset 6
  91               		.cfi_offset 7, -5
  92 0008 9F92      		push r9
  93               	.LCFI4:
  94               		.cfi_def_cfa_offset 7
  95               		.cfi_offset 9, -6
  96 000a AF92      		push r10
  97               	.LCFI5:
  98               		.cfi_def_cfa_offset 8
  99               		.cfi_offset 10, -7
 100 000c BF92      		push r11
 101               	.LCFI6:
 102               		.cfi_def_cfa_offset 9
 103               		.cfi_offset 11, -8
 104 000e CF92      		push r12
 105               	.LCFI7:
 106               		.cfi_def_cfa_offset 10
 107               		.cfi_offset 12, -9
 108 0010 DF92      		push r13
 109               	.LCFI8:
 110               		.cfi_def_cfa_offset 11
 111               		.cfi_offset 13, -10
 112 0012 EF92      		push r14
 113               	.LCFI9:
 114               		.cfi_def_cfa_offset 12
 115               		.cfi_offset 14, -11
 116 0014 FF92      		push r15
 117               	.LCFI10:
 118               		.cfi_def_cfa_offset 13
 119               		.cfi_offset 15, -12
 120 0016 0F93      		push r16
 121               	.LCFI11:
 122               		.cfi_def_cfa_offset 14
 123               		.cfi_offset 16, -13
 124 0018 1F93      		push r17
 125               	.LCFI12:
 126               		.cfi_def_cfa_offset 15
 127               		.cfi_offset 17, -14
 128 001a CF93      		push r28
 129               	.LCFI13:
 130               		.cfi_def_cfa_offset 16
 131               		.cfi_offset 28, -15
 132 001c DF93      		push r29
 133               	.LCFI14:
 134               		.cfi_def_cfa_offset 17
 135               		.cfi_offset 29, -16
 136 001e 00D0      		rcall .
 137 0020 00D0      		rcall .
 138 0022 0F92      		push __tmp_reg__
 139               	.LCFI15:
 140               		.cfi_def_cfa_offset 22
 141 0024 CDB7      		in r28,__SP_L__
 142 0026 DEB7      		in r29,__SP_H__
 143               	.LCFI16:
 144               		.cfi_def_cfa_register 28
 145               	/* prologue: function */
 146               	/* frame size = 5 */
 147               	/* stack size = 20 */
 148               	.L__stack_usage = 20
 121:./tmk_core/common/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 149               		.loc 1 121 5 view .LVU9
 122:./tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 123:./tmk_core/common/keyboard.c ****     static matrix_row_t matrix_ghost[MATRIX_ROWS];
 124:./tmk_core/common/keyboard.c **** #endif
 125:./tmk_core/common/keyboard.c ****     static uint8_t led_status = 0;
 150               		.loc 1 125 5 view .LVU10
 126:./tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = 0;
 151               		.loc 1 126 5 view .LVU11
 152               	.LVL4:
 127:./tmk_core/common/keyboard.c ****     matrix_row_t matrix_change = 0;
 153               		.loc 1 127 5 view .LVU12
 128:./tmk_core/common/keyboard.c **** 
 129:./tmk_core/common/keyboard.c ****     matrix_scan();
 154               		.loc 1 129 5 view .LVU13
 155 0028 0E94 0000 		call matrix_scan
 156               	.LVL5:
 130:./tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 157               		.loc 1 130 5 view .LVU14
 158               	.LBB7:
 159               		.loc 1 130 10 view .LVU15
 160               		.loc 1 130 25 view .LVU16
 161 002c 20E0      		ldi r18,lo8(matrix_prev.1)
 162 002e A22E      		mov r10,r18
 163 0030 20E0      		ldi r18,hi8(matrix_prev.1)
 164 0032 B22E      		mov r11,r18
 165               	.LBE7:
 129:./tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 166               		.loc 1 129 5 is_stmt 0 view .LVU17
 167 0034 10E0      		ldi r17,0
 168 0036 00E0      		ldi r16,0
 169               	.LVL6:
 170               	.L11:
 129:./tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 171               		.loc 1 129 5 view .LVU18
 172 0038 902E      		mov r9,r16
 173               	.LVL7:
 174               	.LBB12:
 131:./tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 175               		.loc 1 131 9 is_stmt 1 view .LVU19
 176               		.loc 1 131 22 is_stmt 0 view .LVU20
 177 003a 802F      		mov r24,r16
 178 003c 0E94 0000 		call matrix_get_row
 179               	.LVL8:
 180 0040 6B01      		movw r12,r22
 181 0042 7C01      		movw r14,r24
 182               	.LVL9:
 132:./tmk_core/common/keyboard.c ****         matrix_change = matrix_row ^ matrix_prev[r];
 183               		.loc 1 132 9 is_stmt 1 view .LVU21
 184               		.loc 1 132 49 is_stmt 0 view .LVU22
 185 0044 F501      		movw r30,r10
 186 0046 4190      		ld r4,Z+
 187 0048 5190      		ld r5,Z+
 188 004a 6190      		ld r6,Z+
 189 004c 7190      		ld r7,Z+
 190 004e 5F01      		movw r10,r30
 191               	.LVL10:
 133:./tmk_core/common/keyboard.c ****         if (matrix_change) {
 192               		.loc 1 133 9 is_stmt 1 view .LVU23
 193               		.loc 1 133 12 is_stmt 0 view .LVU24
 194 0050 4C14      		cp r4,r12
 195 0052 5D04      		cpc r5,r13
 196 0054 6E04      		cpc r6,r14
 197 0056 7F04      		cpc r7,r15
 198 0058 01F4      		brne .+2
 199 005a 00C0      		rjmp .L5
 134:./tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 135:./tmk_core/common/keyboard.c ****             if (has_ghost_in_row(r)) {
 136:./tmk_core/common/keyboard.c ****                 /* Keep track of whether ghosted status has changed for
 137:./tmk_core/common/keyboard.c ****                  * debugging. But don't update matrix_prev until un-ghosted, or
 138:./tmk_core/common/keyboard.c ****                  * the last key would be lost.
 139:./tmk_core/common/keyboard.c ****                  */
 140:./tmk_core/common/keyboard.c ****                 if (debug_matrix && matrix_ghost[r] != matrix_row) {
 141:./tmk_core/common/keyboard.c ****                     matrix_print();
 142:./tmk_core/common/keyboard.c ****                 }
 143:./tmk_core/common/keyboard.c ****                 matrix_ghost[r] = matrix_row;
 144:./tmk_core/common/keyboard.c ****                 continue;
 145:./tmk_core/common/keyboard.c ****             }
 146:./tmk_core/common/keyboard.c ****             matrix_ghost[r] = matrix_row;
 147:./tmk_core/common/keyboard.c **** #endif
 148:./tmk_core/common/keyboard.c ****             if (debug_matrix) matrix_print();
 200               		.loc 1 148 13 is_stmt 1 view .LVU25
 201               		.loc 1 148 17 is_stmt 0 view .LVU26
 202 005c 8091 0000 		lds r24,debug_config
 203               		.loc 1 148 16 view .LVU27
 204 0060 81FD      		sbrc r24,1
 205               		.loc 1 148 31 is_stmt 1 discriminator 1 view .LVU28
 206 0062 0E94 0000 		call matrix_print
 207               	.LVL11:
 208               	.L6:
 132:./tmk_core/common/keyboard.c ****         if (matrix_change) {
 209               		.loc 1 132 23 is_stmt 0 view .LVU29
 210 0066 4C24      		eor r4,r12
 211               	.LVL12:
 132:./tmk_core/common/keyboard.c ****         if (matrix_change) {
 212               		.loc 1 132 23 view .LVU30
 213 0068 5D24      		eor r5,r13
 214 006a 6E24      		eor r6,r14
 215 006c 7F24      		eor r7,r15
 149:./tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 216               		.loc 1 149 13 is_stmt 1 view .LVU31
 217               	.LBB8:
 218               		.loc 1 149 18 view .LVU32
 219               	.LVL13:
 220               		.loc 1 149 33 view .LVU33
 221               	.LBE8:
 132:./tmk_core/common/keyboard.c ****         if (matrix_change) {
 222               		.loc 1 132 23 is_stmt 0 view .LVU34
 223 006e 90E0      		ldi r25,0
 224 0070 80E0      		ldi r24,0
 225               	.LVL14:
 226               	.L10:
 227               	.LBB10:
 150:./tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 228               		.loc 1 150 17 is_stmt 1 view .LVU35
 229               		.loc 1 150 21 is_stmt 0 view .LVU36
 230 0072 B301      		movw r22,r6
 231 0074 A201      		movw r20,r4
 232 0076 082E      		mov r0,r24
 233 0078 00C0      		rjmp 2f
 234               		1:
 235 007a 7695      		lsr r23
 236 007c 6795      		ror r22
 237 007e 5795      		ror r21
 238 0080 4795      		ror r20
 239               		2:
 240 0082 0A94      		dec r0
 241 0084 02F4      		brpl 1b
 242               		.loc 1 150 20 view .LVU37
 243 0086 40FF      		sbrs r20,0
 244 0088 00C0      		rjmp .L7
 245               	.LBB9:
 151:./tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 246               		.loc 1 151 21 is_stmt 1 view .LVU38
 247               		.loc 1 151 45 is_stmt 0 view .LVU39
 248 008a 8983      		std Y+1,r24
 249 008c 9A82      		std Y+2,r9
 152:./tmk_core/common/keyboard.c ****                         .key = (keypos_t){ .row = r, .col = c },
 153:./tmk_core/common/keyboard.c ****                         .pressed = (matrix_row & ((matrix_row_t)1<<c)),
 250               		.loc 1 153 66 view .LVU40
 251 008e 412C      		mov r4,__zero_reg__
 252 0090 512C      		mov r5,__zero_reg__
 253 0092 3201      		movw r6,r4
 254 0094 4394      		inc r4
 255 0096 00C0      		rjmp 2f
 256               		1:
 257 0098 440C      		lsl r4
 258 009a 551C      		rol r5
 259 009c 661C      		rol r6
 260 009e 771C      		rol r7
 261               		2:
 262 00a0 8A95      		dec r24
 263 00a2 02F4      		brpl 1b
 264               		.loc 1 153 48 view .LVU41
 265 00a4 C420      		and r12,r4
 266               	.LVL15:
 267               		.loc 1 153 48 view .LVU42
 268 00a6 D520      		and r13,r5
 269 00a8 E620      		and r14,r6
 270 00aa F720      		and r15,r7
 271 00ac 81E0      		ldi r24,lo8(1)
 272               	.LVL16:
 273               		.loc 1 153 48 view .LVU43
 274 00ae CD28      		or r12,r13
 275 00b0 CE28      		or r12,r14
 276 00b2 CF28      		or r12,r15
 277 00b4 01F4      		brne .L8
 278 00b6 80E0      		ldi r24,0
 279               	.L8:
 151:./tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 280               		.loc 1 151 45 view .LVU44
 281 00b8 8B83      		std Y+3,r24
 154:./tmk_core/common/keyboard.c ****                         .time = (timer_read() | 1) /* time should not be 0 */
 282               		.loc 1 154 34 view .LVU45
 283 00ba 0E94 0000 		call timer_read
 284               	.LVL17:
 285               		.loc 1 154 47 view .LVU46
 286 00be 8160      		ori r24,1
 151:./tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 287               		.loc 1 151 45 view .LVU47
 288 00c0 782F      		mov r23,r24
 289 00c2 9D83      		std Y+5,r25
 290 00c4 8C83      		std Y+4,r24
 151:./tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 291               		.loc 1 151 21 view .LVU48
 292 00c6 4981      		ldd r20,Y+1
 293 00c8 5A81      		ldd r21,Y+2
 294 00ca 6B81      		ldd r22,Y+3
 295 00cc 8D81      		ldd r24,Y+5
 296 00ce 0E94 0000 		call action_exec
 297               	.LVL18:
 155:./tmk_core/common/keyboard.c ****                     });
 156:./tmk_core/common/keyboard.c ****                     // record a processed key
 157:./tmk_core/common/keyboard.c ****                     matrix_prev[r] ^= ((matrix_row_t)1<<c);
 298               		.loc 1 157 21 is_stmt 1 view .LVU49
 299               		.loc 1 157 36 is_stmt 0 view .LVU50
 300 00d2 000F      		lsl r16
 301 00d4 111F      		rol r17
 302 00d6 000F      		lsl r16
 303 00d8 111F      		rol r17
 304               	.LVL19:
 305               		.loc 1 157 36 view .LVU51
 306 00da F801      		movw r30,r16
 307 00dc E050      		subi r30,lo8(-(matrix_prev.1))
 308 00de F040      		sbci r31,hi8(-(matrix_prev.1))
 309 00e0 8081      		ld r24,Z
 310 00e2 9181      		ldd r25,Z+1
 311 00e4 A281      		ldd r26,Z+2
 312 00e6 B381      		ldd r27,Z+3
 313 00e8 8425      		eor r24,r4
 314 00ea 9525      		eor r25,r5
 315 00ec A625      		eor r26,r6
 316 00ee B725      		eor r27,r7
 317 00f0 8083      		st Z,r24
 318 00f2 9183      		std Z+1,r25
 319 00f4 A283      		std Z+2,r26
 320 00f6 B383      		std Z+3,r27
 158:./tmk_core/common/keyboard.c ****                     // process a key per task call
 159:./tmk_core/common/keyboard.c ****                     goto MATRIX_LOOP_END;
 321               		.loc 1 159 21 is_stmt 1 view .LVU52
 322               	.L9:
 323               		.loc 1 159 21 is_stmt 0 view .LVU53
 324               	.LBE9:
 325               	.LBE10:
 326               	.LBE12:
 160:./tmk_core/common/keyboard.c ****                 }
 161:./tmk_core/common/keyboard.c ****             }
 162:./tmk_core/common/keyboard.c ****         }
 163:./tmk_core/common/keyboard.c ****     }
 164:./tmk_core/common/keyboard.c ****     // call with pseudo tick event when no real key event.
 165:./tmk_core/common/keyboard.c ****     action_exec(TICK);
 166:./tmk_core/common/keyboard.c **** 
 167:./tmk_core/common/keyboard.c **** MATRIX_LOOP_END:
 168:./tmk_core/common/keyboard.c **** 
 169:./tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
 170:./tmk_core/common/keyboard.c ****     // mousekey repeat & acceleration
 171:./tmk_core/common/keyboard.c ****     mousekey_task();
 327               		.loc 1 171 5 is_stmt 1 view .LVU54
 328 00f8 0E94 0000 		call mousekey_task
 329               	.LVL20:
 172:./tmk_core/common/keyboard.c **** #endif
 173:./tmk_core/common/keyboard.c **** 
 174:./tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
 175:./tmk_core/common/keyboard.c ****     ps2_mouse_task();
 176:./tmk_core/common/keyboard.c **** #endif
 177:./tmk_core/common/keyboard.c **** 
 178:./tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
 179:./tmk_core/common/keyboard.c ****     serial_mouse_task();
 180:./tmk_core/common/keyboard.c **** #endif
 181:./tmk_core/common/keyboard.c **** 
 182:./tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
 183:./tmk_core/common/keyboard.c ****     adb_mouse_task();
 184:./tmk_core/common/keyboard.c **** #endif
 185:./tmk_core/common/keyboard.c **** 
 186:./tmk_core/common/keyboard.c **** #ifdef SERIAL_LINK_ENABLE
 187:./tmk_core/common/keyboard.c **** 	serial_link_update();
 188:./tmk_core/common/keyboard.c **** #endif
 189:./tmk_core/common/keyboard.c **** 
 190:./tmk_core/common/keyboard.c **** #ifdef VISUALIZER_ENABLE
 191:./tmk_core/common/keyboard.c ****     visualizer_update(default_layer_state, layer_state, host_keyboard_leds());
 192:./tmk_core/common/keyboard.c **** #endif
 193:./tmk_core/common/keyboard.c **** 
 194:./tmk_core/common/keyboard.c ****     // update LED
 195:./tmk_core/common/keyboard.c ****     if (led_status != host_keyboard_leds()) {
 330               		.loc 1 195 5 view .LVU55
 331               		.loc 1 195 23 is_stmt 0 view .LVU56
 332 00fc 0E94 0000 		call host_keyboard_leds
 333               	.LVL21:
 334               		.loc 1 195 8 view .LVU57
 335 0100 9091 0000 		lds r25,led_status.0
 336 0104 8917      		cp r24,r25
 337 0106 01F0      		breq .L4
 196:./tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 338               		.loc 1 196 9 is_stmt 1 view .LVU58
 339               		.loc 1 196 22 is_stmt 0 view .LVU59
 340 0108 0E94 0000 		call host_keyboard_leds
 341               	.LVL22:
 342               		.loc 1 196 20 view .LVU60
 343 010c 8093 0000 		sts led_status.0,r24
 197:./tmk_core/common/keyboard.c ****         keyboard_set_leds(led_status);
 344               		.loc 1 197 9 is_stmt 1 view .LVU61
 345               	.LVL23:
 346               	.LBB13:
 347               	.LBI13:
 198:./tmk_core/common/keyboard.c ****     }
 199:./tmk_core/common/keyboard.c **** }
 200:./tmk_core/common/keyboard.c **** 
 201:./tmk_core/common/keyboard.c **** void keyboard_set_leds(uint8_t leds)
 348               		.loc 1 201 6 view .LVU62
 349               	.LBB14:
 202:./tmk_core/common/keyboard.c **** {
 203:./tmk_core/common/keyboard.c ****     if (debug_keyboard) { debug("keyboard_set_led: "); debug_hex8(leds); debug("\n"); }
 350               		.loc 1 203 5 view .LVU63
 351               		.loc 1 203 54 view .LVU64
 352               		.loc 1 203 72 view .LVU65
 353               		.loc 1 203 85 view .LVU66
 204:./tmk_core/common/keyboard.c ****     led_set(leds);
 354               		.loc 1 204 5 view .LVU67
 355               	/* epilogue start */
 356               	.LBE14:
 357               	.LBE13:
 199:./tmk_core/common/keyboard.c **** 
 358               		.loc 1 199 1 is_stmt 0 view .LVU68
 359 0110 0F90      		pop __tmp_reg__
 360 0112 0F90      		pop __tmp_reg__
 361 0114 0F90      		pop __tmp_reg__
 362 0116 0F90      		pop __tmp_reg__
 363 0118 0F90      		pop __tmp_reg__
 364 011a DF91      		pop r29
 365 011c CF91      		pop r28
 366 011e 1F91      		pop r17
 367 0120 0F91      		pop r16
 368 0122 FF90      		pop r15
 369 0124 EF90      		pop r14
 370 0126 DF90      		pop r13
 371 0128 CF90      		pop r12
 372 012a BF90      		pop r11
 373 012c AF90      		pop r10
 374 012e 9F90      		pop r9
 375 0130 7F90      		pop r7
 376 0132 6F90      		pop r6
 377 0134 5F90      		pop r5
 378 0136 4F90      		pop r4
 379               	.LBB16:
 380               	.LBB15:
 381               		.loc 1 204 5 view .LVU69
 382 0138 0C94 0000 		jmp led_set
 383               	.LVL24:
 384               	.L7:
 385               		.loc 1 204 5 view .LVU70
 386               	.LBE15:
 387               	.LBE16:
 388               	.LBB17:
 389               	.LBB11:
 149:./tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 390               		.loc 1 149 50 is_stmt 1 discriminator 2 view .LVU71
 149:./tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 391               		.loc 1 149 33 discriminator 2 view .LVU72
 149:./tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 392               		.loc 1 149 13 is_stmt 0 discriminator 2 view .LVU73
 393 013c 0196      		adiw r24,1
 394               	.LVL25:
 149:./tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 395               		.loc 1 149 13 discriminator 2 view .LVU74
 396 013e 8231      		cpi r24,18
 397 0140 9105      		cpc r25,__zero_reg__
 398 0142 01F0      		breq .+2
 399 0144 00C0      		rjmp .L10
 400               	.LVL26:
 401               	.L5:
 149:./tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 402               		.loc 1 149 13 discriminator 2 view .LVU75
 403               	.LBE11:
 130:./tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 404               		.loc 1 130 42 is_stmt 1 view .LVU76
 130:./tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 405               		.loc 1 130 25 view .LVU77
 130:./tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 406               		.loc 1 130 5 is_stmt 0 view .LVU78
 407 0146 0F5F      		subi r16,-1
 408 0148 1F4F      		sbci r17,-1
 409               	.LVL27:
 130:./tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 410               		.loc 1 130 5 view .LVU79
 411 014a 0930      		cpi r16,9
 412 014c 1105      		cpc r17,__zero_reg__
 413 014e 01F0      		breq .+2
 414 0150 00C0      		rjmp .L11
 415               	.LBE17:
 165:./tmk_core/common/keyboard.c **** 
 416               		.loc 1 165 5 is_stmt 1 view .LVU80
 165:./tmk_core/common/keyboard.c **** 
 417               		.loc 1 165 17 is_stmt 0 view .LVU81
 418 0152 8FEF      		ldi r24,lo8(-1)
 419 0154 8983      		std Y+1,r24
 420 0156 8A83      		std Y+2,r24
 421 0158 1B82      		std Y+3,__zero_reg__
 422 015a 0E94 0000 		call timer_read
 423               	.LVL28:
 424 015e 8160      		ori r24,1
 425 0160 782F      		mov r23,r24
 426 0162 9D83      		std Y+5,r25
 427 0164 8C83      		std Y+4,r24
 165:./tmk_core/common/keyboard.c **** 
 428               		.loc 1 165 5 view .LVU82
 429 0166 4981      		ldd r20,Y+1
 430 0168 5A81      		ldd r21,Y+2
 431 016a 6B81      		ldd r22,Y+3
 432 016c 8D81      		ldd r24,Y+5
 433 016e 0E94 0000 		call action_exec
 434               	.LVL29:
 435 0172 00C0      		rjmp .L9
 436               	.LVL30:
 437               	.L4:
 438               	/* epilogue start */
 199:./tmk_core/common/keyboard.c **** 
 439               		.loc 1 199 1 view .LVU83
 440 0174 0F90      		pop __tmp_reg__
 441 0176 0F90      		pop __tmp_reg__
 442 0178 0F90      		pop __tmp_reg__
 443 017a 0F90      		pop __tmp_reg__
 444 017c 0F90      		pop __tmp_reg__
 445 017e DF91      		pop r29
 446 0180 CF91      		pop r28
 447 0182 1F91      		pop r17
 448 0184 0F91      		pop r16
 449 0186 FF90      		pop r15
 450 0188 EF90      		pop r14
 451 018a DF90      		pop r13
 452 018c CF90      		pop r12
 453 018e BF90      		pop r11
 454 0190 AF90      		pop r10
 455 0192 9F90      		pop r9
 456 0194 7F90      		pop r7
 457 0196 6F90      		pop r6
 458 0198 5F90      		pop r5
 459 019a 4F90      		pop r4
 460 019c 0895      		ret
 461               		.cfi_endproc
 462               	.LFE106:
 464               		.section	.text.keyboard_set_leds,"ax",@progbits
 465               	.global	keyboard_set_leds
 467               	keyboard_set_leds:
 468               	.LVL31:
 469               	.LFB107:
 202:./tmk_core/common/keyboard.c ****     if (debug_keyboard) { debug("keyboard_set_led: "); debug_hex8(leds); debug("\n"); }
 470               		.loc 1 202 1 is_stmt 1 view -0
 471               		.cfi_startproc
 472               	/* prologue: function */
 473               	/* frame size = 0 */
 474               	/* stack size = 0 */
 475               	.L__stack_usage = 0
 203:./tmk_core/common/keyboard.c ****     led_set(leds);
 476               		.loc 1 203 5 view .LVU85
 203:./tmk_core/common/keyboard.c ****     led_set(leds);
 477               		.loc 1 203 54 view .LVU86
 203:./tmk_core/common/keyboard.c ****     led_set(leds);
 478               		.loc 1 203 72 view .LVU87
 203:./tmk_core/common/keyboard.c ****     led_set(leds);
 479               		.loc 1 203 85 view .LVU88
 480               		.loc 1 204 5 view .LVU89
 481 0000 0C94 0000 		jmp led_set
 482               	.LVL32:
 483               		.loc 1 204 5 is_stmt 0 view .LVU90
 484               		.cfi_endproc
 485               	.LFE107:
 487               		.section	.bss.led_status.0,"aw",@nobits
 490               	led_status.0:
 491 0000 00        		.zero	1
 492               		.section	.bss.matrix_prev.1,"aw",@nobits
 495               	matrix_prev.1:
 496 0000 0000 0000 		.zero	36
 496      0000 0000 
 496      0000 0000 
 496      0000 0000 
 496      0000 0000 
 497               		.text
 498               	.Letext0:
 499               		.file 2 "/usr/avr/include/stdint.h"
 500               		.file 3 "./tmk_core/common/keyboard.h"
 501               		.file 4 "./tmk_core/common/matrix.h"
 502               		.file 5 "./tmk_core/common/debug.h"
 503               		.file 6 "./tmk_core/common/timer.h"
 504               		.file 7 "./tmk_core/common/action.h"
 505               		.file 8 "./tmk_core/common/led.h"
 506               		.file 9 "./tmk_core/common/mousekey.h"
 507               		.file 10 "./tmk_core/common/host.h"
 508               		.file 11 "./tmk_core/common/bootmagic.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keyboard.c
     /tmp/cc2lXIoL.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cc2lXIoL.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cc2lXIoL.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cc2lXIoL.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/cc2lXIoL.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cc2lXIoL.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/cc2lXIoL.s:14     .text.matrix_setup:0000000000000000 matrix_setup
     /tmp/cc2lXIoL.s:32     .text.keyboard_setup:0000000000000000 keyboard_setup
     /tmp/cc2lXIoL.s:49     .text.keyboard_init:0000000000000000 keyboard_init
     /tmp/cc2lXIoL.s:72     .text.keyboard_task:0000000000000000 keyboard_task
     /tmp/cc2lXIoL.s:495    .bss.matrix_prev.1:0000000000000000 matrix_prev.1
     /tmp/cc2lXIoL.s:490    .bss.led_status.0:0000000000000000 led_status.0
     /tmp/cc2lXIoL.s:467    .text.keyboard_set_leds:0000000000000000 keyboard_set_leds

UNDEFINED SYMBOLS
timer_init
matrix_init
bootmagic
matrix_scan
matrix_get_row
debug_config
matrix_print
timer_read
action_exec
mousekey_task
host_keyboard_leds
led_set
__do_clear_bss
