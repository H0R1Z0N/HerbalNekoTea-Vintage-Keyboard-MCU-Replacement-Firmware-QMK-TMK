   1               		.file	"action_layer.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.text.default_layer_debug,"ax",@progbits
  12               	.global	default_layer_debug
  14               	default_layer_debug:
  15               	.LFB5:
  16               		.file 1 "./tmk_core/common/action_layer.c"
   1:./tmk_core/common/action_layer.c **** #include <stdint.h>
   2:./tmk_core/common/action_layer.c **** #include "keyboard.h"
   3:./tmk_core/common/action_layer.c **** #include "action.h"
   4:./tmk_core/common/action_layer.c **** #include "util.h"
   5:./tmk_core/common/action_layer.c **** #include "action_layer.h"
   6:./tmk_core/common/action_layer.c **** 
   7:./tmk_core/common/action_layer.c **** #ifdef DEBUG_ACTION
   8:./tmk_core/common/action_layer.c **** #include "debug.h"
   9:./tmk_core/common/action_layer.c **** #else
  10:./tmk_core/common/action_layer.c **** #include "nodebug.h"
  11:./tmk_core/common/action_layer.c **** #endif
  12:./tmk_core/common/action_layer.c **** 
  13:./tmk_core/common/action_layer.c **** 
  14:./tmk_core/common/action_layer.c **** /*
  15:./tmk_core/common/action_layer.c ****  * Default Layer State
  16:./tmk_core/common/action_layer.c ****  */
  17:./tmk_core/common/action_layer.c **** uint32_t default_layer_state = 0;
  18:./tmk_core/common/action_layer.c **** 
  19:./tmk_core/common/action_layer.c **** static void default_layer_state_set(uint32_t state)
  20:./tmk_core/common/action_layer.c **** {
  21:./tmk_core/common/action_layer.c ****     debug("default_layer_state: ");
  22:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug(" to ");
  23:./tmk_core/common/action_layer.c ****     default_layer_state = state;
  24:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug("\n");
  25:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
  26:./tmk_core/common/action_layer.c **** }
  27:./tmk_core/common/action_layer.c **** 
  28:./tmk_core/common/action_layer.c **** void default_layer_debug(void)
  29:./tmk_core/common/action_layer.c **** {
  17               		.loc 1 29 1 view -0
  18               		.cfi_startproc
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  30:./tmk_core/common/action_layer.c ****     dprintf("%08lX(%u)", default_layer_state, biton32(default_layer_state));
  23               		.loc 1 30 76 view .LVU1
  24               	/* epilogue start */
  31:./tmk_core/common/action_layer.c **** }
  25               		.loc 1 31 1 is_stmt 0 view .LVU2
  26 0000 0895      		ret
  27               		.cfi_endproc
  28               	.LFE5:
  30               		.section	.text.default_layer_set,"ax",@progbits
  31               	.global	default_layer_set
  33               	default_layer_set:
  34               	.LVL0:
  35               	.LFB6:
  32:./tmk_core/common/action_layer.c **** 
  33:./tmk_core/common/action_layer.c **** void default_layer_set(uint32_t state)
  34:./tmk_core/common/action_layer.c **** {
  36               		.loc 1 34 1 is_stmt 1 view -0
  37               		.cfi_startproc
  38               	/* prologue: function */
  39               	/* frame size = 0 */
  40               	/* stack size = 0 */
  41               	.L__stack_usage = 0
  42               		.loc 1 34 1 is_stmt 0 view .LVU4
  43 0000 6093 0000 		sts default_layer_state,r22
  44 0004 7093 0000 		sts default_layer_state+1,r23
  45 0008 8093 0000 		sts default_layer_state+2,r24
  46 000c 9093 0000 		sts default_layer_state+3,r25
  35:./tmk_core/common/action_layer.c ****     default_layer_state_set(state);
  47               		.loc 1 35 5 is_stmt 1 view .LVU5
  48               	.LVL1:
  49               	.LBB4:
  50               	.LBI4:
  19:./tmk_core/common/action_layer.c **** {
  51               		.loc 1 19 13 view .LVU6
  52               	.LBB5:
  21:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug(" to ");
  53               		.loc 1 21 35 view .LVU7
  22:./tmk_core/common/action_layer.c ****     default_layer_state = state;
  54               		.loc 1 22 5 view .LVU8
  22:./tmk_core/common/action_layer.c ****     default_layer_state = state;
  55               		.loc 1 22 41 view .LVU9
  23:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug("\n");
  56               		.loc 1 23 5 view .LVU10
  24:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
  57               		.loc 1 24 5 view .LVU11
  24:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
  58               		.loc 1 24 39 view .LVU12
  25:./tmk_core/common/action_layer.c **** }
  59               		.loc 1 25 5 view .LVU13
  60 0010 0C94 0000 		jmp clear_keyboard_but_mods
  61               	.LVL2:
  25:./tmk_core/common/action_layer.c **** }
  62               		.loc 1 25 5 is_stmt 0 view .LVU14
  63               	.LBE5:
  64               	.LBE4:
  65               		.cfi_endproc
  66               	.LFE6:
  68               		.section	.text.default_layer_or,"ax",@progbits
  69               	.global	default_layer_or
  71               	default_layer_or:
  72               	.LVL3:
  73               	.LFB7:
  36:./tmk_core/common/action_layer.c **** }
  37:./tmk_core/common/action_layer.c **** 
  38:./tmk_core/common/action_layer.c **** #ifndef NO_ACTION_LAYER
  39:./tmk_core/common/action_layer.c **** void default_layer_or(uint32_t state)
  40:./tmk_core/common/action_layer.c **** {
  74               		.loc 1 40 1 is_stmt 1 view -0
  75               		.cfi_startproc
  76               		.loc 1 40 1 is_stmt 0 view .LVU16
  77 0000 CF93      		push r28
  78               	.LCFI0:
  79               		.cfi_def_cfa_offset 3
  80               		.cfi_offset 28, -2
  81 0002 DF93      		push r29
  82               	.LCFI1:
  83               		.cfi_def_cfa_offset 4
  84               		.cfi_offset 29, -3
  85 0004 00D0      		rcall .
  86 0006 00D0      		rcall .
  87               	.LCFI2:
  88               		.cfi_def_cfa_offset 8
  89 0008 CDB7      		in r28,__SP_L__
  90 000a DEB7      		in r29,__SP_H__
  91               	.LCFI3:
  92               		.cfi_def_cfa_register 28
  93               	/* prologue: function */
  94               	/* frame size = 4 */
  95               	/* stack size = 6 */
  96               	.L__stack_usage = 6
  97 000c 6983      		std Y+1,r22
  98 000e 7A83      		std Y+2,r23
  99 0010 8B83      		std Y+3,r24
 100 0012 9C83      		std Y+4,r25
  41:./tmk_core/common/action_layer.c ****     default_layer_state_set(default_layer_state | state);
 101               		.loc 1 41 5 is_stmt 1 view .LVU17
 102               	.LVL4:
 103               	.LBB8:
 104               	.LBI8:
  19:./tmk_core/common/action_layer.c **** {
 105               		.loc 1 19 13 view .LVU18
 106               	.LBB9:
  21:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug(" to ");
 107               		.loc 1 21 35 view .LVU19
  22:./tmk_core/common/action_layer.c ****     default_layer_state = state;
 108               		.loc 1 22 5 view .LVU20
  22:./tmk_core/common/action_layer.c ****     default_layer_state = state;
 109               		.loc 1 22 41 view .LVU21
  23:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug("\n");
 110               		.loc 1 23 5 view .LVU22
 111               	.LBE9:
 112               	.LBE8:
 113               		.loc 1 41 5 is_stmt 0 view .LVU23
 114 0014 8091 0000 		lds r24,default_layer_state
 115 0018 9091 0000 		lds r25,default_layer_state+1
 116 001c A091 0000 		lds r26,default_layer_state+2
 117 0020 B091 0000 		lds r27,default_layer_state+3
 118 0024 2981      		ldd r18,Y+1
 119 0026 3A81      		ldd r19,Y+2
 120 0028 4B81      		ldd r20,Y+3
 121 002a 5C81      		ldd r21,Y+4
 122 002c 822B      		or r24,r18
 123 002e 932B      		or r25,r19
 124 0030 A42B      		or r26,r20
 125 0032 B52B      		or r27,r21
 126               	.LBB12:
 127               	.LBB10:
  23:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug("\n");
 128               		.loc 1 23 25 view .LVU24
 129 0034 8093 0000 		sts default_layer_state,r24
 130 0038 9093 0000 		sts default_layer_state+1,r25
 131 003c A093 0000 		sts default_layer_state+2,r26
 132 0040 B093 0000 		sts default_layer_state+3,r27
 133               	.LVL5:
  24:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 134               		.loc 1 24 5 is_stmt 1 view .LVU25
  24:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 135               		.loc 1 24 39 view .LVU26
  25:./tmk_core/common/action_layer.c **** }
 136               		.loc 1 25 5 view .LVU27
 137               	/* epilogue start */
 138               	.LBE10:
 139               	.LBE12:
  42:./tmk_core/common/action_layer.c **** }
 140               		.loc 1 42 1 is_stmt 0 view .LVU28
 141 0044 0F90      		pop __tmp_reg__
 142 0046 0F90      		pop __tmp_reg__
 143 0048 0F90      		pop __tmp_reg__
 144 004a 0F90      		pop __tmp_reg__
 145 004c DF91      		pop r29
 146 004e CF91      		pop r28
 147               	.LBB13:
 148               	.LBB11:
  25:./tmk_core/common/action_layer.c **** }
 149               		.loc 1 25 5 view .LVU29
 150 0050 0C94 0000 		jmp clear_keyboard_but_mods
 151               	.LVL6:
  25:./tmk_core/common/action_layer.c **** }
 152               		.loc 1 25 5 view .LVU30
 153               	.LBE11:
 154               	.LBE13:
 155               		.cfi_endproc
 156               	.LFE7:
 158               		.section	.text.default_layer_and,"ax",@progbits
 159               	.global	default_layer_and
 161               	default_layer_and:
 162               	.LVL7:
 163               	.LFB8:
  43:./tmk_core/common/action_layer.c **** void default_layer_and(uint32_t state)
  44:./tmk_core/common/action_layer.c **** {
 164               		.loc 1 44 1 is_stmt 1 view -0
 165               		.cfi_startproc
 166               		.loc 1 44 1 is_stmt 0 view .LVU32
 167 0000 CF93      		push r28
 168               	.LCFI4:
 169               		.cfi_def_cfa_offset 3
 170               		.cfi_offset 28, -2
 171 0002 DF93      		push r29
 172               	.LCFI5:
 173               		.cfi_def_cfa_offset 4
 174               		.cfi_offset 29, -3
 175 0004 00D0      		rcall .
 176 0006 00D0      		rcall .
 177               	.LCFI6:
 178               		.cfi_def_cfa_offset 8
 179 0008 CDB7      		in r28,__SP_L__
 180 000a DEB7      		in r29,__SP_H__
 181               	.LCFI7:
 182               		.cfi_def_cfa_register 28
 183               	/* prologue: function */
 184               	/* frame size = 4 */
 185               	/* stack size = 6 */
 186               	.L__stack_usage = 6
 187 000c 6983      		std Y+1,r22
 188 000e 7A83      		std Y+2,r23
 189 0010 8B83      		std Y+3,r24
 190 0012 9C83      		std Y+4,r25
  45:./tmk_core/common/action_layer.c ****     default_layer_state_set(default_layer_state & state);
 191               		.loc 1 45 5 is_stmt 1 view .LVU33
 192               	.LVL8:
 193               	.LBB16:
 194               	.LBI16:
  19:./tmk_core/common/action_layer.c **** {
 195               		.loc 1 19 13 view .LVU34
 196               	.LBB17:
  21:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug(" to ");
 197               		.loc 1 21 35 view .LVU35
  22:./tmk_core/common/action_layer.c ****     default_layer_state = state;
 198               		.loc 1 22 5 view .LVU36
  22:./tmk_core/common/action_layer.c ****     default_layer_state = state;
 199               		.loc 1 22 41 view .LVU37
  23:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug("\n");
 200               		.loc 1 23 5 view .LVU38
 201               	.LBE17:
 202               	.LBE16:
 203               		.loc 1 45 5 is_stmt 0 view .LVU39
 204 0014 8091 0000 		lds r24,default_layer_state
 205 0018 9091 0000 		lds r25,default_layer_state+1
 206 001c A091 0000 		lds r26,default_layer_state+2
 207 0020 B091 0000 		lds r27,default_layer_state+3
 208 0024 2981      		ldd r18,Y+1
 209 0026 3A81      		ldd r19,Y+2
 210 0028 4B81      		ldd r20,Y+3
 211 002a 5C81      		ldd r21,Y+4
 212 002c 8223      		and r24,r18
 213 002e 9323      		and r25,r19
 214 0030 A423      		and r26,r20
 215 0032 B523      		and r27,r21
 216               	.LBB20:
 217               	.LBB18:
  23:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug("\n");
 218               		.loc 1 23 25 view .LVU40
 219 0034 8093 0000 		sts default_layer_state,r24
 220 0038 9093 0000 		sts default_layer_state+1,r25
 221 003c A093 0000 		sts default_layer_state+2,r26
 222 0040 B093 0000 		sts default_layer_state+3,r27
 223               	.LVL9:
  24:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 224               		.loc 1 24 5 is_stmt 1 view .LVU41
  24:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 225               		.loc 1 24 39 view .LVU42
  25:./tmk_core/common/action_layer.c **** }
 226               		.loc 1 25 5 view .LVU43
 227               	/* epilogue start */
 228               	.LBE18:
 229               	.LBE20:
  46:./tmk_core/common/action_layer.c **** }
 230               		.loc 1 46 1 is_stmt 0 view .LVU44
 231 0044 0F90      		pop __tmp_reg__
 232 0046 0F90      		pop __tmp_reg__
 233 0048 0F90      		pop __tmp_reg__
 234 004a 0F90      		pop __tmp_reg__
 235 004c DF91      		pop r29
 236 004e CF91      		pop r28
 237               	.LBB21:
 238               	.LBB19:
  25:./tmk_core/common/action_layer.c **** }
 239               		.loc 1 25 5 view .LVU45
 240 0050 0C94 0000 		jmp clear_keyboard_but_mods
 241               	.LVL10:
  25:./tmk_core/common/action_layer.c **** }
 242               		.loc 1 25 5 view .LVU46
 243               	.LBE19:
 244               	.LBE21:
 245               		.cfi_endproc
 246               	.LFE8:
 248               		.section	.text.default_layer_xor,"ax",@progbits
 249               	.global	default_layer_xor
 251               	default_layer_xor:
 252               	.LVL11:
 253               	.LFB9:
  47:./tmk_core/common/action_layer.c **** void default_layer_xor(uint32_t state)
  48:./tmk_core/common/action_layer.c **** {
 254               		.loc 1 48 1 is_stmt 1 view -0
 255               		.cfi_startproc
 256               		.loc 1 48 1 is_stmt 0 view .LVU48
 257 0000 CF93      		push r28
 258               	.LCFI8:
 259               		.cfi_def_cfa_offset 3
 260               		.cfi_offset 28, -2
 261 0002 DF93      		push r29
 262               	.LCFI9:
 263               		.cfi_def_cfa_offset 4
 264               		.cfi_offset 29, -3
 265 0004 00D0      		rcall .
 266 0006 00D0      		rcall .
 267               	.LCFI10:
 268               		.cfi_def_cfa_offset 8
 269 0008 CDB7      		in r28,__SP_L__
 270 000a DEB7      		in r29,__SP_H__
 271               	.LCFI11:
 272               		.cfi_def_cfa_register 28
 273               	/* prologue: function */
 274               	/* frame size = 4 */
 275               	/* stack size = 6 */
 276               	.L__stack_usage = 6
 277 000c 6983      		std Y+1,r22
 278 000e 7A83      		std Y+2,r23
 279 0010 8B83      		std Y+3,r24
 280 0012 9C83      		std Y+4,r25
  49:./tmk_core/common/action_layer.c ****     default_layer_state_set(default_layer_state ^ state);
 281               		.loc 1 49 5 is_stmt 1 view .LVU49
 282               	.LVL12:
 283               	.LBB24:
 284               	.LBI24:
  19:./tmk_core/common/action_layer.c **** {
 285               		.loc 1 19 13 view .LVU50
 286               	.LBB25:
  21:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug(" to ");
 287               		.loc 1 21 35 view .LVU51
  22:./tmk_core/common/action_layer.c ****     default_layer_state = state;
 288               		.loc 1 22 5 view .LVU52
  22:./tmk_core/common/action_layer.c ****     default_layer_state = state;
 289               		.loc 1 22 41 view .LVU53
  23:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug("\n");
 290               		.loc 1 23 5 view .LVU54
 291               	.LBE25:
 292               	.LBE24:
 293               		.loc 1 49 5 is_stmt 0 view .LVU55
 294 0014 8091 0000 		lds r24,default_layer_state
 295 0018 9091 0000 		lds r25,default_layer_state+1
 296 001c A091 0000 		lds r26,default_layer_state+2
 297 0020 B091 0000 		lds r27,default_layer_state+3
 298 0024 2981      		ldd r18,Y+1
 299 0026 3A81      		ldd r19,Y+2
 300 0028 4B81      		ldd r20,Y+3
 301 002a 5C81      		ldd r21,Y+4
 302 002c 8227      		eor r24,r18
 303 002e 9327      		eor r25,r19
 304 0030 A427      		eor r26,r20
 305 0032 B527      		eor r27,r21
 306               	.LBB28:
 307               	.LBB26:
  23:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug("\n");
 308               		.loc 1 23 25 view .LVU56
 309 0034 8093 0000 		sts default_layer_state,r24
 310 0038 9093 0000 		sts default_layer_state+1,r25
 311 003c A093 0000 		sts default_layer_state+2,r26
 312 0040 B093 0000 		sts default_layer_state+3,r27
 313               	.LVL13:
  24:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 314               		.loc 1 24 5 is_stmt 1 view .LVU57
  24:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 315               		.loc 1 24 39 view .LVU58
  25:./tmk_core/common/action_layer.c **** }
 316               		.loc 1 25 5 view .LVU59
 317               	/* epilogue start */
 318               	.LBE26:
 319               	.LBE28:
  50:./tmk_core/common/action_layer.c **** }
 320               		.loc 1 50 1 is_stmt 0 view .LVU60
 321 0044 0F90      		pop __tmp_reg__
 322 0046 0F90      		pop __tmp_reg__
 323 0048 0F90      		pop __tmp_reg__
 324 004a 0F90      		pop __tmp_reg__
 325 004c DF91      		pop r29
 326 004e CF91      		pop r28
 327               	.LBB29:
 328               	.LBB27:
  25:./tmk_core/common/action_layer.c **** }
 329               		.loc 1 25 5 view .LVU61
 330 0050 0C94 0000 		jmp clear_keyboard_but_mods
 331               	.LVL14:
  25:./tmk_core/common/action_layer.c **** }
 332               		.loc 1 25 5 view .LVU62
 333               	.LBE27:
 334               	.LBE29:
 335               		.cfi_endproc
 336               	.LFE9:
 338               		.section	.text.layer_clear,"ax",@progbits
 339               	.global	layer_clear
 341               	layer_clear:
 342               	.LFB11:
  51:./tmk_core/common/action_layer.c **** #endif
  52:./tmk_core/common/action_layer.c **** 
  53:./tmk_core/common/action_layer.c **** 
  54:./tmk_core/common/action_layer.c **** #ifndef NO_ACTION_LAYER
  55:./tmk_core/common/action_layer.c **** /*
  56:./tmk_core/common/action_layer.c ****  * Keymap Layer State
  57:./tmk_core/common/action_layer.c ****  */
  58:./tmk_core/common/action_layer.c **** uint32_t layer_state = 0;
  59:./tmk_core/common/action_layer.c **** 
  60:./tmk_core/common/action_layer.c **** static void layer_state_set(uint32_t state)
  61:./tmk_core/common/action_layer.c **** {
  62:./tmk_core/common/action_layer.c ****     dprint("layer_state: ");
  63:./tmk_core/common/action_layer.c ****     layer_debug(); dprint(" to ");
  64:./tmk_core/common/action_layer.c ****     layer_state = state;
  65:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
  66:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
  67:./tmk_core/common/action_layer.c **** }
  68:./tmk_core/common/action_layer.c **** 
  69:./tmk_core/common/action_layer.c **** void layer_clear(void)
  70:./tmk_core/common/action_layer.c **** {
 343               		.loc 1 70 1 is_stmt 1 view -0
 344               		.cfi_startproc
 345               	/* prologue: function */
 346               	/* frame size = 0 */
 347               	/* stack size = 0 */
 348               	.L__stack_usage = 0
  71:./tmk_core/common/action_layer.c ****     layer_state_set(0);
 349               		.loc 1 71 5 view .LVU64
 350               	.LVL15:
 351               	.LBB32:
 352               	.LBI32:
  60:./tmk_core/common/action_layer.c **** {
 353               		.loc 1 60 13 view .LVU65
 354               	.LBB33:
  62:./tmk_core/common/action_layer.c ****     layer_debug(); dprint(" to ");
 355               		.loc 1 62 28 view .LVU66
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 356               		.loc 1 63 5 view .LVU67
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 357               		.loc 1 63 34 view .LVU68
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 358               		.loc 1 64 5 view .LVU69
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 359               		.loc 1 64 17 is_stmt 0 view .LVU70
 360 0000 1092 0000 		sts layer_state,__zero_reg__
 361 0004 1092 0000 		sts layer_state+1,__zero_reg__
 362 0008 1092 0000 		sts layer_state+2,__zero_reg__
 363 000c 1092 0000 		sts layer_state+3,__zero_reg__
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 364               		.loc 1 65 5 is_stmt 1 view .LVU71
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 365               		.loc 1 65 30 view .LVU72
  66:./tmk_core/common/action_layer.c **** }
 366               		.loc 1 66 5 view .LVU73
 367 0010 0C94 0000 		jmp clear_keyboard_but_mods
 368               	.LVL16:
 369               	.LBE33:
 370               	.LBE32:
 371               		.cfi_endproc
 372               	.LFE11:
 374               		.section	.text.layer_move,"ax",@progbits
 375               	.global	layer_move
 377               	layer_move:
 378               	.LVL17:
 379               	.LFB12:
  72:./tmk_core/common/action_layer.c **** }
  73:./tmk_core/common/action_layer.c **** 
  74:./tmk_core/common/action_layer.c **** void layer_move(uint8_t layer)
  75:./tmk_core/common/action_layer.c **** {
 380               		.loc 1 75 1 view -0
 381               		.cfi_startproc
 382               	/* prologue: function */
 383               	/* frame size = 0 */
 384               	/* stack size = 0 */
 385               	.L__stack_usage = 0
  76:./tmk_core/common/action_layer.c ****     layer_state_set(1UL<<layer);
 386               		.loc 1 76 5 view .LVU75
 387               	.LBB36:
 388               	.LBI36:
  60:./tmk_core/common/action_layer.c **** {
 389               		.loc 1 60 13 view .LVU76
 390               	.LBB37:
  62:./tmk_core/common/action_layer.c ****     layer_debug(); dprint(" to ");
 391               		.loc 1 62 28 view .LVU77
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 392               		.loc 1 63 5 view .LVU78
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 393               		.loc 1 63 34 view .LVU79
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 394               		.loc 1 64 5 view .LVU80
 395               	.LBE37:
 396               	.LBE36:
 397               		.loc 1 76 5 is_stmt 0 view .LVU81
 398 0000 41E0      		ldi r20,lo8(1)
 399 0002 50E0      		ldi r21,0
 400 0004 60E0      		ldi r22,0
 401 0006 70E0      		ldi r23,0
 402 0008 00C0      		rjmp 2f
 403               		1:
 404 000a 440F      		lsl r20
 405 000c 551F      		rol r21
 406 000e 661F      		rol r22
 407 0010 771F      		rol r23
 408               		2:
 409 0012 8A95      		dec r24
 410 0014 02F4      		brpl 1b
 411               	.LBB39:
 412               	.LBB38:
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 413               		.loc 1 64 17 view .LVU82
 414 0016 4093 0000 		sts layer_state,r20
 415 001a 5093 0000 		sts layer_state+1,r21
 416 001e 6093 0000 		sts layer_state+2,r22
 417 0022 7093 0000 		sts layer_state+3,r23
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 418               		.loc 1 65 5 is_stmt 1 view .LVU83
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 419               		.loc 1 65 30 view .LVU84
  66:./tmk_core/common/action_layer.c **** }
 420               		.loc 1 66 5 view .LVU85
 421 0026 0C94 0000 		jmp clear_keyboard_but_mods
 422               	.LVL18:
  66:./tmk_core/common/action_layer.c **** }
 423               		.loc 1 66 5 is_stmt 0 view .LVU86
 424               	.LBE38:
 425               	.LBE39:
 426               		.cfi_endproc
 427               	.LFE12:
 429               		.section	.text.layer_on,"ax",@progbits
 430               	.global	layer_on
 432               	layer_on:
 433               	.LVL19:
 434               	.LFB13:
  77:./tmk_core/common/action_layer.c **** }
  78:./tmk_core/common/action_layer.c **** 
  79:./tmk_core/common/action_layer.c **** void layer_on(uint8_t layer)
  80:./tmk_core/common/action_layer.c **** {
 435               		.loc 1 80 1 is_stmt 1 view -0
 436               		.cfi_startproc
 437               	/* prologue: function */
 438               	/* frame size = 0 */
 439               	/* stack size = 0 */
 440               	.L__stack_usage = 0
 441               		.loc 1 80 1 is_stmt 0 view .LVU88
 442 0000 282F      		mov r18,r24
  81:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state | (1UL<<layer));
 443               		.loc 1 81 5 is_stmt 1 view .LVU89
 444               	.LVL20:
 445               	.LBB42:
 446               	.LBI42:
  60:./tmk_core/common/action_layer.c **** {
 447               		.loc 1 60 13 view .LVU90
 448               	.LBB43:
  62:./tmk_core/common/action_layer.c ****     layer_debug(); dprint(" to ");
 449               		.loc 1 62 28 view .LVU91
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 450               		.loc 1 63 5 view .LVU92
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 451               		.loc 1 63 34 view .LVU93
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 452               		.loc 1 64 5 view .LVU94
 453               	.LBE43:
 454               	.LBE42:
 455               		.loc 1 81 39 is_stmt 0 view .LVU95
 456 0002 81E0      		ldi r24,lo8(1)
 457 0004 90E0      		ldi r25,0
 458 0006 A0E0      		ldi r26,0
 459 0008 B0E0      		ldi r27,0
 460               	.LVL21:
 461               		.loc 1 81 39 view .LVU96
 462 000a 00C0      		rjmp 2f
 463               		1:
 464 000c 880F      		lsl r24
 465 000e 991F      		rol r25
 466 0010 AA1F      		rol r26
 467 0012 BB1F      		rol r27
 468               		2:
 469 0014 2A95      		dec r18
 470 0016 02F4      		brpl 1b
 471               		.loc 1 81 5 view .LVU97
 472 0018 4091 0000 		lds r20,layer_state
 473 001c 5091 0000 		lds r21,layer_state+1
 474 0020 6091 0000 		lds r22,layer_state+2
 475 0024 7091 0000 		lds r23,layer_state+3
 476 0028 842B      		or r24,r20
 477 002a 952B      		or r25,r21
 478 002c A62B      		or r26,r22
 479 002e B72B      		or r27,r23
 480               	.LBB45:
 481               	.LBB44:
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 482               		.loc 1 64 17 view .LVU98
 483 0030 8093 0000 		sts layer_state,r24
 484 0034 9093 0000 		sts layer_state+1,r25
 485 0038 A093 0000 		sts layer_state+2,r26
 486 003c B093 0000 		sts layer_state+3,r27
 487               	.LVL22:
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 488               		.loc 1 65 5 is_stmt 1 view .LVU99
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 489               		.loc 1 65 30 view .LVU100
  66:./tmk_core/common/action_layer.c **** }
 490               		.loc 1 66 5 view .LVU101
 491 0040 0C94 0000 		jmp clear_keyboard_but_mods
 492               	.LVL23:
  66:./tmk_core/common/action_layer.c **** }
 493               		.loc 1 66 5 is_stmt 0 view .LVU102
 494               	.LBE44:
 495               	.LBE45:
 496               		.cfi_endproc
 497               	.LFE13:
 499               		.section	.text.layer_off,"ax",@progbits
 500               	.global	layer_off
 502               	layer_off:
 503               	.LVL24:
 504               	.LFB14:
  82:./tmk_core/common/action_layer.c **** }
  83:./tmk_core/common/action_layer.c **** 
  84:./tmk_core/common/action_layer.c **** void layer_off(uint8_t layer)
  85:./tmk_core/common/action_layer.c **** {
 505               		.loc 1 85 1 is_stmt 1 view -0
 506               		.cfi_startproc
 507               	/* prologue: function */
 508               	/* frame size = 0 */
 509               	/* stack size = 0 */
 510               	.L__stack_usage = 0
  86:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state & ~(1UL<<layer));
 511               		.loc 1 86 5 view .LVU104
 512               	.LBB48:
 513               	.LBI48:
  60:./tmk_core/common/action_layer.c **** {
 514               		.loc 1 60 13 view .LVU105
 515               	.LBB49:
  62:./tmk_core/common/action_layer.c ****     layer_debug(); dprint(" to ");
 516               		.loc 1 62 28 view .LVU106
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 517               		.loc 1 63 5 view .LVU107
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 518               		.loc 1 63 34 view .LVU108
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 519               		.loc 1 64 5 view .LVU109
 520               	.LBE49:
 521               	.LBE48:
 522               		.loc 1 86 40 is_stmt 0 view .LVU110
 523 0000 41E0      		ldi r20,lo8(1)
 524 0002 50E0      		ldi r21,0
 525 0004 60E0      		ldi r22,0
 526 0006 70E0      		ldi r23,0
 527 0008 00C0      		rjmp 2f
 528               		1:
 529 000a 440F      		lsl r20
 530 000c 551F      		rol r21
 531 000e 661F      		rol r22
 532 0010 771F      		rol r23
 533               		2:
 534 0012 8A95      		dec r24
 535 0014 02F4      		brpl 1b
 536               		.loc 1 86 35 view .LVU111
 537 0016 4095      		com r20
 538 0018 5095      		com r21
 539 001a 6095      		com r22
 540 001c 7095      		com r23
 541               		.loc 1 86 5 view .LVU112
 542 001e 8091 0000 		lds r24,layer_state
 543 0022 9091 0000 		lds r25,layer_state+1
 544 0026 A091 0000 		lds r26,layer_state+2
 545 002a B091 0000 		lds r27,layer_state+3
 546               	.LVL25:
 547               		.loc 1 86 5 view .LVU113
 548 002e 8423      		and r24,r20
 549 0030 9523      		and r25,r21
 550 0032 A623      		and r26,r22
 551 0034 B723      		and r27,r23
 552               	.LBB51:
 553               	.LBB50:
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 554               		.loc 1 64 17 view .LVU114
 555 0036 8093 0000 		sts layer_state,r24
 556 003a 9093 0000 		sts layer_state+1,r25
 557 003e A093 0000 		sts layer_state+2,r26
 558 0042 B093 0000 		sts layer_state+3,r27
 559               	.LVL26:
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 560               		.loc 1 65 5 is_stmt 1 view .LVU115
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 561               		.loc 1 65 30 view .LVU116
  66:./tmk_core/common/action_layer.c **** }
 562               		.loc 1 66 5 view .LVU117
 563 0046 0C94 0000 		jmp clear_keyboard_but_mods
 564               	.LVL27:
 565               	.LBE50:
 566               	.LBE51:
 567               		.cfi_endproc
 568               	.LFE14:
 570               		.section	.text.layer_invert,"ax",@progbits
 571               	.global	layer_invert
 573               	layer_invert:
 574               	.LVL28:
 575               	.LFB15:
  87:./tmk_core/common/action_layer.c **** }
  88:./tmk_core/common/action_layer.c **** 
  89:./tmk_core/common/action_layer.c **** void layer_invert(uint8_t layer)
  90:./tmk_core/common/action_layer.c **** {
 576               		.loc 1 90 1 view -0
 577               		.cfi_startproc
 578               	/* prologue: function */
 579               	/* frame size = 0 */
 580               	/* stack size = 0 */
 581               	.L__stack_usage = 0
 582               		.loc 1 90 1 is_stmt 0 view .LVU119
 583 0000 282F      		mov r18,r24
  91:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state ^ (1UL<<layer));
 584               		.loc 1 91 5 is_stmt 1 view .LVU120
 585               	.LVL29:
 586               	.LBB54:
 587               	.LBI54:
  60:./tmk_core/common/action_layer.c **** {
 588               		.loc 1 60 13 view .LVU121
 589               	.LBB55:
  62:./tmk_core/common/action_layer.c ****     layer_debug(); dprint(" to ");
 590               		.loc 1 62 28 view .LVU122
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 591               		.loc 1 63 5 view .LVU123
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 592               		.loc 1 63 34 view .LVU124
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 593               		.loc 1 64 5 view .LVU125
 594               	.LBE55:
 595               	.LBE54:
 596               		.loc 1 91 39 is_stmt 0 view .LVU126
 597 0002 81E0      		ldi r24,lo8(1)
 598 0004 90E0      		ldi r25,0
 599 0006 A0E0      		ldi r26,0
 600 0008 B0E0      		ldi r27,0
 601               	.LVL30:
 602               		.loc 1 91 39 view .LVU127
 603 000a 00C0      		rjmp 2f
 604               		1:
 605 000c 880F      		lsl r24
 606 000e 991F      		rol r25
 607 0010 AA1F      		rol r26
 608 0012 BB1F      		rol r27
 609               		2:
 610 0014 2A95      		dec r18
 611 0016 02F4      		brpl 1b
 612               		.loc 1 91 5 view .LVU128
 613 0018 4091 0000 		lds r20,layer_state
 614 001c 5091 0000 		lds r21,layer_state+1
 615 0020 6091 0000 		lds r22,layer_state+2
 616 0024 7091 0000 		lds r23,layer_state+3
 617 0028 8427      		eor r24,r20
 618 002a 9527      		eor r25,r21
 619 002c A627      		eor r26,r22
 620 002e B727      		eor r27,r23
 621               	.LBB57:
 622               	.LBB56:
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 623               		.loc 1 64 17 view .LVU129
 624 0030 8093 0000 		sts layer_state,r24
 625 0034 9093 0000 		sts layer_state+1,r25
 626 0038 A093 0000 		sts layer_state+2,r26
 627 003c B093 0000 		sts layer_state+3,r27
 628               	.LVL31:
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 629               		.loc 1 65 5 is_stmt 1 view .LVU130
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 630               		.loc 1 65 30 view .LVU131
  66:./tmk_core/common/action_layer.c **** }
 631               		.loc 1 66 5 view .LVU132
 632 0040 0C94 0000 		jmp clear_keyboard_but_mods
 633               	.LVL32:
  66:./tmk_core/common/action_layer.c **** }
 634               		.loc 1 66 5 is_stmt 0 view .LVU133
 635               	.LBE56:
 636               	.LBE57:
 637               		.cfi_endproc
 638               	.LFE15:
 640               		.section	.text.layer_or,"ax",@progbits
 641               	.global	layer_or
 643               	layer_or:
 644               	.LVL33:
 645               	.LFB16:
  92:./tmk_core/common/action_layer.c **** }
  93:./tmk_core/common/action_layer.c **** 
  94:./tmk_core/common/action_layer.c **** void layer_or(uint32_t state)
  95:./tmk_core/common/action_layer.c **** {
 646               		.loc 1 95 1 is_stmt 1 view -0
 647               		.cfi_startproc
 648               		.loc 1 95 1 is_stmt 0 view .LVU135
 649 0000 CF93      		push r28
 650               	.LCFI12:
 651               		.cfi_def_cfa_offset 3
 652               		.cfi_offset 28, -2
 653 0002 DF93      		push r29
 654               	.LCFI13:
 655               		.cfi_def_cfa_offset 4
 656               		.cfi_offset 29, -3
 657 0004 00D0      		rcall .
 658 0006 00D0      		rcall .
 659               	.LCFI14:
 660               		.cfi_def_cfa_offset 8
 661 0008 CDB7      		in r28,__SP_L__
 662 000a DEB7      		in r29,__SP_H__
 663               	.LCFI15:
 664               		.cfi_def_cfa_register 28
 665               	/* prologue: function */
 666               	/* frame size = 4 */
 667               	/* stack size = 6 */
 668               	.L__stack_usage = 6
 669 000c 6983      		std Y+1,r22
 670 000e 7A83      		std Y+2,r23
 671 0010 8B83      		std Y+3,r24
 672 0012 9C83      		std Y+4,r25
  96:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state | state);
 673               		.loc 1 96 5 is_stmt 1 view .LVU136
 674               	.LVL34:
 675               	.LBB60:
 676               	.LBI60:
  60:./tmk_core/common/action_layer.c **** {
 677               		.loc 1 60 13 view .LVU137
 678               	.LBB61:
  62:./tmk_core/common/action_layer.c ****     layer_debug(); dprint(" to ");
 679               		.loc 1 62 28 view .LVU138
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 680               		.loc 1 63 5 view .LVU139
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 681               		.loc 1 63 34 view .LVU140
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 682               		.loc 1 64 5 view .LVU141
 683               	.LBE61:
 684               	.LBE60:
 685               		.loc 1 96 5 is_stmt 0 view .LVU142
 686 0014 8091 0000 		lds r24,layer_state
 687 0018 9091 0000 		lds r25,layer_state+1
 688 001c A091 0000 		lds r26,layer_state+2
 689 0020 B091 0000 		lds r27,layer_state+3
 690 0024 2981      		ldd r18,Y+1
 691 0026 3A81      		ldd r19,Y+2
 692 0028 4B81      		ldd r20,Y+3
 693 002a 5C81      		ldd r21,Y+4
 694 002c 822B      		or r24,r18
 695 002e 932B      		or r25,r19
 696 0030 A42B      		or r26,r20
 697 0032 B52B      		or r27,r21
 698               	.LBB64:
 699               	.LBB62:
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 700               		.loc 1 64 17 view .LVU143
 701 0034 8093 0000 		sts layer_state,r24
 702 0038 9093 0000 		sts layer_state+1,r25
 703 003c A093 0000 		sts layer_state+2,r26
 704 0040 B093 0000 		sts layer_state+3,r27
 705               	.LVL35:
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 706               		.loc 1 65 5 is_stmt 1 view .LVU144
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 707               		.loc 1 65 30 view .LVU145
  66:./tmk_core/common/action_layer.c **** }
 708               		.loc 1 66 5 view .LVU146
 709               	/* epilogue start */
 710               	.LBE62:
 711               	.LBE64:
  97:./tmk_core/common/action_layer.c **** }
 712               		.loc 1 97 1 is_stmt 0 view .LVU147
 713 0044 0F90      		pop __tmp_reg__
 714 0046 0F90      		pop __tmp_reg__
 715 0048 0F90      		pop __tmp_reg__
 716 004a 0F90      		pop __tmp_reg__
 717 004c DF91      		pop r29
 718 004e CF91      		pop r28
 719               	.LBB65:
 720               	.LBB63:
  66:./tmk_core/common/action_layer.c **** }
 721               		.loc 1 66 5 view .LVU148
 722 0050 0C94 0000 		jmp clear_keyboard_but_mods
 723               	.LVL36:
  66:./tmk_core/common/action_layer.c **** }
 724               		.loc 1 66 5 view .LVU149
 725               	.LBE63:
 726               	.LBE65:
 727               		.cfi_endproc
 728               	.LFE16:
 730               		.section	.text.layer_and,"ax",@progbits
 731               	.global	layer_and
 733               	layer_and:
 734               	.LVL37:
 735               	.LFB17:
  98:./tmk_core/common/action_layer.c **** void layer_and(uint32_t state)
  99:./tmk_core/common/action_layer.c **** {
 736               		.loc 1 99 1 is_stmt 1 view -0
 737               		.cfi_startproc
 738               		.loc 1 99 1 is_stmt 0 view .LVU151
 739 0000 CF93      		push r28
 740               	.LCFI16:
 741               		.cfi_def_cfa_offset 3
 742               		.cfi_offset 28, -2
 743 0002 DF93      		push r29
 744               	.LCFI17:
 745               		.cfi_def_cfa_offset 4
 746               		.cfi_offset 29, -3
 747 0004 00D0      		rcall .
 748 0006 00D0      		rcall .
 749               	.LCFI18:
 750               		.cfi_def_cfa_offset 8
 751 0008 CDB7      		in r28,__SP_L__
 752 000a DEB7      		in r29,__SP_H__
 753               	.LCFI19:
 754               		.cfi_def_cfa_register 28
 755               	/* prologue: function */
 756               	/* frame size = 4 */
 757               	/* stack size = 6 */
 758               	.L__stack_usage = 6
 759 000c 6983      		std Y+1,r22
 760 000e 7A83      		std Y+2,r23
 761 0010 8B83      		std Y+3,r24
 762 0012 9C83      		std Y+4,r25
 100:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state & state);
 763               		.loc 1 100 5 is_stmt 1 view .LVU152
 764               	.LVL38:
 765               	.LBB68:
 766               	.LBI68:
  60:./tmk_core/common/action_layer.c **** {
 767               		.loc 1 60 13 view .LVU153
 768               	.LBB69:
  62:./tmk_core/common/action_layer.c ****     layer_debug(); dprint(" to ");
 769               		.loc 1 62 28 view .LVU154
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 770               		.loc 1 63 5 view .LVU155
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 771               		.loc 1 63 34 view .LVU156
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 772               		.loc 1 64 5 view .LVU157
 773               	.LBE69:
 774               	.LBE68:
 775               		.loc 1 100 5 is_stmt 0 view .LVU158
 776 0014 8091 0000 		lds r24,layer_state
 777 0018 9091 0000 		lds r25,layer_state+1
 778 001c A091 0000 		lds r26,layer_state+2
 779 0020 B091 0000 		lds r27,layer_state+3
 780 0024 2981      		ldd r18,Y+1
 781 0026 3A81      		ldd r19,Y+2
 782 0028 4B81      		ldd r20,Y+3
 783 002a 5C81      		ldd r21,Y+4
 784 002c 8223      		and r24,r18
 785 002e 9323      		and r25,r19
 786 0030 A423      		and r26,r20
 787 0032 B523      		and r27,r21
 788               	.LBB72:
 789               	.LBB70:
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 790               		.loc 1 64 17 view .LVU159
 791 0034 8093 0000 		sts layer_state,r24
 792 0038 9093 0000 		sts layer_state+1,r25
 793 003c A093 0000 		sts layer_state+2,r26
 794 0040 B093 0000 		sts layer_state+3,r27
 795               	.LVL39:
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 796               		.loc 1 65 5 is_stmt 1 view .LVU160
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 797               		.loc 1 65 30 view .LVU161
  66:./tmk_core/common/action_layer.c **** }
 798               		.loc 1 66 5 view .LVU162
 799               	/* epilogue start */
 800               	.LBE70:
 801               	.LBE72:
 101:./tmk_core/common/action_layer.c **** }
 802               		.loc 1 101 1 is_stmt 0 view .LVU163
 803 0044 0F90      		pop __tmp_reg__
 804 0046 0F90      		pop __tmp_reg__
 805 0048 0F90      		pop __tmp_reg__
 806 004a 0F90      		pop __tmp_reg__
 807 004c DF91      		pop r29
 808 004e CF91      		pop r28
 809               	.LBB73:
 810               	.LBB71:
  66:./tmk_core/common/action_layer.c **** }
 811               		.loc 1 66 5 view .LVU164
 812 0050 0C94 0000 		jmp clear_keyboard_but_mods
 813               	.LVL40:
  66:./tmk_core/common/action_layer.c **** }
 814               		.loc 1 66 5 view .LVU165
 815               	.LBE71:
 816               	.LBE73:
 817               		.cfi_endproc
 818               	.LFE17:
 820               		.section	.text.layer_xor,"ax",@progbits
 821               	.global	layer_xor
 823               	layer_xor:
 824               	.LVL41:
 825               	.LFB18:
 102:./tmk_core/common/action_layer.c **** void layer_xor(uint32_t state)
 103:./tmk_core/common/action_layer.c **** {
 826               		.loc 1 103 1 is_stmt 1 view -0
 827               		.cfi_startproc
 828               		.loc 1 103 1 is_stmt 0 view .LVU167
 829 0000 CF93      		push r28
 830               	.LCFI20:
 831               		.cfi_def_cfa_offset 3
 832               		.cfi_offset 28, -2
 833 0002 DF93      		push r29
 834               	.LCFI21:
 835               		.cfi_def_cfa_offset 4
 836               		.cfi_offset 29, -3
 837 0004 00D0      		rcall .
 838 0006 00D0      		rcall .
 839               	.LCFI22:
 840               		.cfi_def_cfa_offset 8
 841 0008 CDB7      		in r28,__SP_L__
 842 000a DEB7      		in r29,__SP_H__
 843               	.LCFI23:
 844               		.cfi_def_cfa_register 28
 845               	/* prologue: function */
 846               	/* frame size = 4 */
 847               	/* stack size = 6 */
 848               	.L__stack_usage = 6
 849 000c 6983      		std Y+1,r22
 850 000e 7A83      		std Y+2,r23
 851 0010 8B83      		std Y+3,r24
 852 0012 9C83      		std Y+4,r25
 104:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state ^ state);
 853               		.loc 1 104 5 is_stmt 1 view .LVU168
 854               	.LVL42:
 855               	.LBB76:
 856               	.LBI76:
  60:./tmk_core/common/action_layer.c **** {
 857               		.loc 1 60 13 view .LVU169
 858               	.LBB77:
  62:./tmk_core/common/action_layer.c ****     layer_debug(); dprint(" to ");
 859               		.loc 1 62 28 view .LVU170
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 860               		.loc 1 63 5 view .LVU171
  63:./tmk_core/common/action_layer.c ****     layer_state = state;
 861               		.loc 1 63 34 view .LVU172
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 862               		.loc 1 64 5 view .LVU173
 863               	.LBE77:
 864               	.LBE76:
 865               		.loc 1 104 5 is_stmt 0 view .LVU174
 866 0014 8091 0000 		lds r24,layer_state
 867 0018 9091 0000 		lds r25,layer_state+1
 868 001c A091 0000 		lds r26,layer_state+2
 869 0020 B091 0000 		lds r27,layer_state+3
 870 0024 2981      		ldd r18,Y+1
 871 0026 3A81      		ldd r19,Y+2
 872 0028 4B81      		ldd r20,Y+3
 873 002a 5C81      		ldd r21,Y+4
 874 002c 8227      		eor r24,r18
 875 002e 9327      		eor r25,r19
 876 0030 A427      		eor r26,r20
 877 0032 B527      		eor r27,r21
 878               	.LBB80:
 879               	.LBB78:
  64:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 880               		.loc 1 64 17 view .LVU175
 881 0034 8093 0000 		sts layer_state,r24
 882 0038 9093 0000 		sts layer_state+1,r25
 883 003c A093 0000 		sts layer_state+2,r26
 884 0040 B093 0000 		sts layer_state+3,r27
 885               	.LVL43:
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 886               		.loc 1 65 5 is_stmt 1 view .LVU176
  65:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 887               		.loc 1 65 30 view .LVU177
  66:./tmk_core/common/action_layer.c **** }
 888               		.loc 1 66 5 view .LVU178
 889               	/* epilogue start */
 890               	.LBE78:
 891               	.LBE80:
 105:./tmk_core/common/action_layer.c **** }
 892               		.loc 1 105 1 is_stmt 0 view .LVU179
 893 0044 0F90      		pop __tmp_reg__
 894 0046 0F90      		pop __tmp_reg__
 895 0048 0F90      		pop __tmp_reg__
 896 004a 0F90      		pop __tmp_reg__
 897 004c DF91      		pop r29
 898 004e CF91      		pop r28
 899               	.LBB81:
 900               	.LBB79:
  66:./tmk_core/common/action_layer.c **** }
 901               		.loc 1 66 5 view .LVU180
 902 0050 0C94 0000 		jmp clear_keyboard_but_mods
 903               	.LVL44:
  66:./tmk_core/common/action_layer.c **** }
 904               		.loc 1 66 5 view .LVU181
 905               	.LBE79:
 906               	.LBE81:
 907               		.cfi_endproc
 908               	.LFE18:
 910               		.section	.text.layer_debug,"ax",@progbits
 911               	.global	layer_debug
 913               	layer_debug:
 914               	.LFB26:
 915               		.cfi_startproc
 916               	/* prologue: function */
 917               	/* frame size = 0 */
 918               	/* stack size = 0 */
 919               	.L__stack_usage = 0
 920               	/* epilogue start */
 921 0000 0895      		ret
 922               		.cfi_endproc
 923               	.LFE26:
 925               		.section	.text.update_source_layers_cache,"ax",@progbits
 926               	.global	update_source_layers_cache
 928               	update_source_layers_cache:
 929               	.LVL45:
 930               	.LFB20:
 106:./tmk_core/common/action_layer.c **** 
 107:./tmk_core/common/action_layer.c **** void layer_debug(void)
 108:./tmk_core/common/action_layer.c **** {
 109:./tmk_core/common/action_layer.c ****     dprintf("%08lX(%u)", layer_state, biton32(layer_state));
 110:./tmk_core/common/action_layer.c **** }
 111:./tmk_core/common/action_layer.c **** #endif
 112:./tmk_core/common/action_layer.c **** 
 113:./tmk_core/common/action_layer.c **** #if !defined(NO_ACTION_LAYER) && defined(PREVENT_STUCK_MODIFIERS)
 114:./tmk_core/common/action_layer.c **** uint8_t source_layers_cache[(MATRIX_ROWS * MATRIX_COLS + 7) / 8][MAX_LAYER_BITS] = {{0}};
 115:./tmk_core/common/action_layer.c **** 
 116:./tmk_core/common/action_layer.c **** void update_source_layers_cache(keypos_t key, uint8_t layer)
 117:./tmk_core/common/action_layer.c **** {
 931               		.loc 1 117 1 is_stmt 1 view -0
 932               		.cfi_startproc
 933               	/* prologue: function */
 934               	/* frame size = 0 */
 935               	/* stack size = 0 */
 936               	.L__stack_usage = 0
 118:./tmk_core/common/action_layer.c ****     const uint8_t key_number = key.col + (key.row * MATRIX_COLS);
 937               		.loc 1 118 5 view .LVU183
 938               		.loc 1 118 19 is_stmt 0 view .LVU184
 939 0000 E82F      		mov r30,r24
 940 0002 2DE0      		ldi r18,lo8(13)
 941 0004 929F      		mul r25,r18
 942 0006 E00D      		add r30,r0
 943 0008 1124      		clr __zero_reg__
 944               	.LVL46:
 119:./tmk_core/common/action_layer.c ****     const uint8_t storage_row = key_number / 8;
 945               		.loc 1 119 5 is_stmt 1 view .LVU185
 120:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 946               		.loc 1 120 5 view .LVU186
 121:./tmk_core/common/action_layer.c **** 
 122:./tmk_core/common/action_layer.c ****     for (uint8_t bit_number = 0; bit_number < MAX_LAYER_BITS; bit_number++) {
 947               		.loc 1 122 5 view .LVU187
 948               	.LBB82:
 949               		.loc 1 122 10 view .LVU188
 950               		.loc 1 122 34 view .LVU189
 951               	.LBE82:
 120:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 952               		.loc 1 120 19 is_stmt 0 view .LVU190
 953 000a 8E2F      		mov r24,r30
 954               	.LVL47:
 120:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 955               		.loc 1 120 19 view .LVU191
 956 000c 8770      		andi r24,lo8(7)
 957               	.LVL48:
 958               	.LBB83:
 123:./tmk_core/common/action_layer.c ****         source_layers_cache[storage_row][bit_number] ^=
 124:./tmk_core/common/action_layer.c ****             (-((layer & (1U << bit_number)) != 0)
 125:./tmk_core/common/action_layer.c ****              ^ source_layers_cache[storage_row][bit_number])
 126:./tmk_core/common/action_layer.c ****             & (1U << storage_bit);
 959               		.loc 1 126 13 view .LVU192
 960 000e 41E0      		ldi r20,lo8(1)
 961 0010 00C0      		rjmp 2f
 962               		1:
 963 0012 440F      		lsl r20
 964               		2:
 965 0014 8A95      		dec r24
 966 0016 02F4      		brpl 1b
 967               	.LBE83:
 119:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 968               		.loc 1 119 19 view .LVU193
 969 0018 E695      		lsr r30
 970 001a E695      		lsr r30
 971 001c E695      		lsr r30
 972               	.LVL49:
 119:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 973               		.loc 1 119 19 view .LVU194
 974 001e 85E0      		ldi r24,lo8(5)
 975               	.LVL50:
 119:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 976               		.loc 1 119 19 view .LVU195
 977 0020 E89F      		mul r30,r24
 978 0022 F001      		movw r30,r0
 979 0024 1124      		clr __zero_reg__
 980               	.LVL51:
 119:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 981               		.loc 1 119 19 view .LVU196
 982 0026 E050      		subi r30,lo8(-(source_layers_cache))
 983 0028 F040      		sbci r31,hi8(-(source_layers_cache))
 984               	.LBB84:
 985               		.loc 1 126 13 view .LVU197
 986 002a 30E0      		ldi r19,0
 987 002c 20E0      		ldi r18,0
 124:./tmk_core/common/action_layer.c ****              ^ source_layers_cache[storage_row][bit_number])
 988               		.loc 1 124 45 view .LVU198
 989 002e 70E0      		ldi r23,0
 990               	.LVL52:
 991               	.L16:
 123:./tmk_core/common/action_layer.c ****         source_layers_cache[storage_row][bit_number] ^=
 992               		.loc 1 123 9 is_stmt 1 discriminator 3 view .LVU199
 123:./tmk_core/common/action_layer.c ****         source_layers_cache[storage_row][bit_number] ^=
 993               		.loc 1 123 54 is_stmt 0 discriminator 3 view .LVU200
 994 0030 5191      		ld r21,Z+
 995 0032 DF01      		movw r26,r30
 996 0034 1197      		sbiw r26,1
 124:./tmk_core/common/action_layer.c ****              ^ source_layers_cache[storage_row][bit_number])
 997               		.loc 1 124 45 discriminator 3 view .LVU201
 998 0036 CB01      		movw r24,r22
 999 0038 022E      		mov r0,r18
 1000 003a 00C0      		rjmp 2f
 1001               		1:
 1002 003c 9695      		lsr r25
 1003 003e 8795      		ror r24
 1004               		2:
 1005 0040 0A94      		dec r0
 1006 0042 02F4      		brpl 1b
 1007 0044 8170      		andi r24,lo8(1)
 125:./tmk_core/common/action_layer.c ****             & (1U << storage_bit);
 1008               		.loc 1 125 14 discriminator 3 view .LVU202
 1009 0046 8195      		neg r24
 1010 0048 8527      		eor r24,r21
 1011               		.loc 1 126 13 discriminator 3 view .LVU203
 1012 004a 8423      		and r24,r20
 123:./tmk_core/common/action_layer.c ****             (-((layer & (1U << bit_number)) != 0)
 1013               		.loc 1 123 54 discriminator 3 view .LVU204
 1014 004c 8527      		eor r24,r21
 1015 004e 8C93      		st X,r24
 122:./tmk_core/common/action_layer.c ****         source_layers_cache[storage_row][bit_number] ^=
 1016               		.loc 1 122 63 is_stmt 1 discriminator 3 view .LVU205
 1017               	.LVL53:
 122:./tmk_core/common/action_layer.c ****         source_layers_cache[storage_row][bit_number] ^=
 1018               		.loc 1 122 34 discriminator 3 view .LVU206
 122:./tmk_core/common/action_layer.c ****         source_layers_cache[storage_row][bit_number] ^=
 1019               		.loc 1 122 5 is_stmt 0 discriminator 3 view .LVU207
 1020 0050 2F5F      		subi r18,-1
 1021 0052 3F4F      		sbci r19,-1
 1022               	.LVL54:
 122:./tmk_core/common/action_layer.c ****         source_layers_cache[storage_row][bit_number] ^=
 1023               		.loc 1 122 5 discriminator 3 view .LVU208
 1024 0054 2530      		cpi r18,5
 1025 0056 3105      		cpc r19,__zero_reg__
 1026 0058 01F4      		brne .L16
 1027               	/* epilogue start */
 1028               	.LBE84:
 127:./tmk_core/common/action_layer.c ****     }
 128:./tmk_core/common/action_layer.c **** }
 1029               		.loc 1 128 1 view .LVU209
 1030 005a 0895      		ret
 1031               		.cfi_endproc
 1032               	.LFE20:
 1034               		.section	.text.read_source_layers_cache,"ax",@progbits
 1035               	.global	read_source_layers_cache
 1037               	read_source_layers_cache:
 1038               	.LVL55:
 1039               	.LFB21:
 129:./tmk_core/common/action_layer.c **** 
 130:./tmk_core/common/action_layer.c **** uint8_t read_source_layers_cache(keypos_t key)
 131:./tmk_core/common/action_layer.c **** {
 1040               		.loc 1 131 1 is_stmt 1 view -0
 1041               		.cfi_startproc
 1042               	/* prologue: function */
 1043               	/* frame size = 0 */
 1044               	/* stack size = 0 */
 1045               	.L__stack_usage = 0
 132:./tmk_core/common/action_layer.c ****     const uint8_t key_number = key.col + (key.row * MATRIX_COLS);
 1046               		.loc 1 132 5 view .LVU211
 1047               		.loc 1 132 19 is_stmt 0 view .LVU212
 1048 0000 E82F      		mov r30,r24
 1049 0002 2DE0      		ldi r18,lo8(13)
 1050 0004 929F      		mul r25,r18
 1051 0006 E00D      		add r30,r0
 1052 0008 1124      		clr __zero_reg__
 1053               	.LVL56:
 133:./tmk_core/common/action_layer.c ****     const uint8_t storage_row = key_number / 8;
 1054               		.loc 1 133 5 is_stmt 1 view .LVU213
 134:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 1055               		.loc 1 134 5 view .LVU214
 1056               		.loc 1 134 19 is_stmt 0 view .LVU215
 1057 000a 9E2F      		mov r25,r30
 1058 000c 9770      		andi r25,lo8(7)
 1059               	.LVL57:
 135:./tmk_core/common/action_layer.c ****     uint8_t layer = 0;
 1060               		.loc 1 135 5 is_stmt 1 view .LVU216
 136:./tmk_core/common/action_layer.c **** 
 137:./tmk_core/common/action_layer.c ****     for (uint8_t bit_number = 0; bit_number < MAX_LAYER_BITS; bit_number++) {
 1061               		.loc 1 137 5 view .LVU217
 1062               	.LBB85:
 1063               		.loc 1 137 10 view .LVU218
 1064               		.loc 1 137 34 view .LVU219
 1065               	.LBE85:
 133:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 1066               		.loc 1 133 19 is_stmt 0 view .LVU220
 1067 000e E695      		lsr r30
 1068 0010 E695      		lsr r30
 1069 0012 E695      		lsr r30
 1070               	.LVL58:
 133:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 1071               		.loc 1 133 19 view .LVU221
 1072 0014 85E0      		ldi r24,lo8(5)
 1073               	.LVL59:
 133:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 1074               		.loc 1 133 19 view .LVU222
 1075 0016 E89F      		mul r30,r24
 1076 0018 F001      		movw r30,r0
 1077 001a 1124      		clr __zero_reg__
 1078               	.LVL60:
 133:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 1079               		.loc 1 133 19 view .LVU223
 1080 001c E050      		subi r30,lo8(-(source_layers_cache))
 1081 001e F040      		sbci r31,hi8(-(source_layers_cache))
 134:./tmk_core/common/action_layer.c ****     uint8_t layer = 0;
 1082               		.loc 1 134 19 view .LVU224
 1083 0020 50E0      		ldi r21,0
 1084 0022 40E0      		ldi r20,0
 135:./tmk_core/common/action_layer.c **** 
 1085               		.loc 1 135 13 view .LVU225
 1086 0024 80E0      		ldi r24,0
 1087               	.LVL61:
 1088               	.L19:
 1089               	.LBB86:
 138:./tmk_core/common/action_layer.c ****         layer |=
 1090               		.loc 1 138 9 is_stmt 1 discriminator 3 view .LVU226
 139:./tmk_core/common/action_layer.c ****             ((source_layers_cache[storage_row][bit_number]
 1091               		.loc 1 139 47 is_stmt 0 discriminator 3 view .LVU227
 1092 0026 2191      		ld r18,Z+
 1093 0028 30E0      		ldi r19,0
 140:./tmk_core/common/action_layer.c ****               & (1U << storage_bit)) != 0)
 1094               		.loc 1 140 38 discriminator 3 view .LVU228
 1095 002a 092E      		mov r0,r25
 1096 002c 00C0      		rjmp 2f
 1097               		1:
 1098 002e 3695      		lsr r19
 1099 0030 2795      		ror r18
 1100               		2:
 1101 0032 0A94      		dec r0
 1102 0034 02F4      		brpl 1b
 1103 0036 2170      		andi r18,1
 1104 0038 3327      		clr r19
 141:./tmk_core/common/action_layer.c ****             << bit_number;
 1105               		.loc 1 141 13 discriminator 3 view .LVU229
 1106 003a 042E      		mov r0,r20
 1107 003c 00C0      		rjmp 2f
 1108               		1:
 1109 003e 220F      		lsl r18
 1110               		2:
 1111 0040 0A94      		dec r0
 1112 0042 02F4      		brpl 1b
 138:./tmk_core/common/action_layer.c ****             ((source_layers_cache[storage_row][bit_number]
 1113               		.loc 1 138 15 discriminator 3 view .LVU230
 1114 0044 822B      		or r24,r18
 1115               	.LVL62:
 137:./tmk_core/common/action_layer.c ****         layer |=
 1116               		.loc 1 137 63 is_stmt 1 discriminator 3 view .LVU231
 137:./tmk_core/common/action_layer.c ****         layer |=
 1117               		.loc 1 137 34 discriminator 3 view .LVU232
 137:./tmk_core/common/action_layer.c ****         layer |=
 1118               		.loc 1 137 5 is_stmt 0 discriminator 3 view .LVU233
 1119 0046 4F5F      		subi r20,-1
 1120 0048 5F4F      		sbci r21,-1
 1121               	.LVL63:
 137:./tmk_core/common/action_layer.c ****         layer |=
 1122               		.loc 1 137 5 discriminator 3 view .LVU234
 1123 004a 4530      		cpi r20,5
 1124 004c 5105      		cpc r21,__zero_reg__
 1125 004e 01F4      		brne .L19
 1126               	.LBE86:
 142:./tmk_core/common/action_layer.c ****     }
 143:./tmk_core/common/action_layer.c **** 
 144:./tmk_core/common/action_layer.c ****     return layer;
 1127               		.loc 1 144 5 is_stmt 1 view .LVU235
 1128               	/* epilogue start */
 145:./tmk_core/common/action_layer.c **** }
 1129               		.loc 1 145 1 is_stmt 0 view .LVU236
 1130 0050 0895      		ret
 1131               		.cfi_endproc
 1132               	.LFE21:
 1134               		.section	.text.layer_switch_get_layer,"ax",@progbits
 1135               	.global	layer_switch_get_layer
 1137               	layer_switch_get_layer:
 1138               	.LVL64:
 1139               	.LFB23:
 146:./tmk_core/common/action_layer.c **** #endif
 147:./tmk_core/common/action_layer.c **** 
 148:./tmk_core/common/action_layer.c **** /*
 149:./tmk_core/common/action_layer.c ****  * Make sure the action triggered when the key is released is the same
 150:./tmk_core/common/action_layer.c ****  * one as the one triggered on press. It's important for the mod keys
 151:./tmk_core/common/action_layer.c ****  * when the layer is switched after the down event but before the up
 152:./tmk_core/common/action_layer.c ****  * event as they may get stuck otherwise.
 153:./tmk_core/common/action_layer.c ****  */
 154:./tmk_core/common/action_layer.c **** action_t store_or_get_action(bool pressed, keypos_t key)
 155:./tmk_core/common/action_layer.c **** {
 156:./tmk_core/common/action_layer.c **** #if !defined(NO_ACTION_LAYER) && defined(PREVENT_STUCK_MODIFIERS)
 157:./tmk_core/common/action_layer.c ****     if (disable_action_cache) {
 158:./tmk_core/common/action_layer.c ****         return layer_switch_get_action(key);
 159:./tmk_core/common/action_layer.c ****     }
 160:./tmk_core/common/action_layer.c **** 
 161:./tmk_core/common/action_layer.c ****     uint8_t layer;
 162:./tmk_core/common/action_layer.c **** 
 163:./tmk_core/common/action_layer.c ****     if (pressed) {
 164:./tmk_core/common/action_layer.c ****         layer = layer_switch_get_layer(key);
 165:./tmk_core/common/action_layer.c ****         update_source_layers_cache(key, layer);
 166:./tmk_core/common/action_layer.c ****     }
 167:./tmk_core/common/action_layer.c ****     else {
 168:./tmk_core/common/action_layer.c ****         layer = read_source_layers_cache(key);
 169:./tmk_core/common/action_layer.c ****     }
 170:./tmk_core/common/action_layer.c ****     return action_for_key(layer, key);
 171:./tmk_core/common/action_layer.c **** #else
 172:./tmk_core/common/action_layer.c ****     return layer_switch_get_action(key);
 173:./tmk_core/common/action_layer.c **** #endif
 174:./tmk_core/common/action_layer.c **** }
 175:./tmk_core/common/action_layer.c **** 
 176:./tmk_core/common/action_layer.c **** 
 177:./tmk_core/common/action_layer.c **** int8_t layer_switch_get_layer(keypos_t key)
 178:./tmk_core/common/action_layer.c **** {
 1140               		.loc 1 178 1 is_stmt 1 view -0
 1141               		.cfi_startproc
 1142               		.loc 1 178 1 is_stmt 0 view .LVU238
 1143 0000 BF92      		push r11
 1144               	.LCFI24:
 1145               		.cfi_def_cfa_offset 3
 1146               		.cfi_offset 11, -2
 1147 0002 CF92      		push r12
 1148               	.LCFI25:
 1149               		.cfi_def_cfa_offset 4
 1150               		.cfi_offset 12, -3
 1151 0004 DF92      		push r13
 1152               	.LCFI26:
 1153               		.cfi_def_cfa_offset 5
 1154               		.cfi_offset 13, -4
 1155 0006 EF92      		push r14
 1156               	.LCFI27:
 1157               		.cfi_def_cfa_offset 6
 1158               		.cfi_offset 14, -5
 1159 0008 FF92      		push r15
 1160               	.LCFI28:
 1161               		.cfi_def_cfa_offset 7
 1162               		.cfi_offset 15, -6
 1163 000a 0F93      		push r16
 1164               	.LCFI29:
 1165               		.cfi_def_cfa_offset 8
 1166               		.cfi_offset 16, -7
 1167 000c 1F93      		push r17
 1168               	.LCFI30:
 1169               		.cfi_def_cfa_offset 9
 1170               		.cfi_offset 17, -8
 1171 000e CF93      		push r28
 1172               	.LCFI31:
 1173               		.cfi_def_cfa_offset 10
 1174               		.cfi_offset 28, -9
 1175 0010 DF93      		push r29
 1176               	.LCFI32:
 1177               		.cfi_def_cfa_offset 11
 1178               		.cfi_offset 29, -10
 1179               	/* prologue: function */
 1180               	/* frame size = 0 */
 1181               	/* stack size = 9 */
 1182               	.L__stack_usage = 9
 1183 0012 8C01      		movw r16,r24
 179:./tmk_core/common/action_layer.c ****     action_t action;
 1184               		.loc 1 179 5 is_stmt 1 view .LVU239
 180:./tmk_core/common/action_layer.c ****     action.code = ACTION_TRANSPARENT;
 1185               		.loc 1 180 5 view .LVU240
 1186               	.LVL65:
 181:./tmk_core/common/action_layer.c **** 
 182:./tmk_core/common/action_layer.c **** #ifndef NO_ACTION_LAYER
 183:./tmk_core/common/action_layer.c ****     uint32_t layers = layer_state | default_layer_state;
 1187               		.loc 1 183 5 view .LVU241
 1188               		.loc 1 183 14 is_stmt 0 view .LVU242
 1189 0014 C090 0000 		lds r12,layer_state
 1190 0018 D090 0000 		lds r13,layer_state+1
 1191 001c E090 0000 		lds r14,layer_state+2
 1192 0020 F090 0000 		lds r15,layer_state+3
 1193 0024 8091 0000 		lds r24,default_layer_state
 1194 0028 9091 0000 		lds r25,default_layer_state+1
 1195 002c A091 0000 		lds r26,default_layer_state+2
 1196 0030 B091 0000 		lds r27,default_layer_state+3
 1197               	.LVL66:
 1198               		.loc 1 183 14 view .LVU243
 1199 0034 C82A      		or r12,r24
 1200 0036 D92A      		or r13,r25
 1201 0038 EA2A      		or r14,r26
 1202 003a FB2A      		or r15,r27
 1203               	.LVL67:
 184:./tmk_core/common/action_layer.c ****     /* check top layer first */
 185:./tmk_core/common/action_layer.c ****     for (int8_t i = 31; i >= 0; i--) {
 1204               		.loc 1 185 5 is_stmt 1 view .LVU244
 1205               	.LBB87:
 1206               		.loc 1 185 10 view .LVU245
 1207               		.loc 1 185 25 view .LVU246
 1208               	.LBE87:
 183:./tmk_core/common/action_layer.c ****     /* check top layer first */
 1209               		.loc 1 183 14 is_stmt 0 view .LVU247
 1210 003c CFE1      		ldi r28,lo8(31)
 1211 003e D0E0      		ldi r29,0
 1212               	.LVL68:
 1213               	.L23:
 183:./tmk_core/common/action_layer.c ****     /* check top layer first */
 1214               		.loc 1 183 14 view .LVU248
 1215 0040 BC2E      		mov r11,r28
 1216               	.LVL69:
 1217               	.LBB88:
 186:./tmk_core/common/action_layer.c ****         if (layers & (1UL<<i)) {
 1218               		.loc 1 186 9 is_stmt 1 view .LVU249
 1219               		.loc 1 186 13 is_stmt 0 view .LVU250
 1220 0042 D701      		movw r26,r14
 1221 0044 C601      		movw r24,r12
 1222 0046 0C2E      		mov r0,r28
 1223 0048 00C0      		rjmp 2f
 1224               		1:
 1225 004a B695      		lsr r27
 1226 004c A795      		ror r26
 1227 004e 9795      		ror r25
 1228 0050 8795      		ror r24
 1229               		2:
 1230 0052 0A94      		dec r0
 1231 0054 02F4      		brpl 1b
 1232               		.loc 1 186 12 view .LVU251
 1233 0056 80FD      		sbrc r24,0
 1234 0058 00C0      		rjmp .L22
 1235               	.L25:
 185:./tmk_core/common/action_layer.c ****         if (layers & (1UL<<i)) {
 1236               		.loc 1 185 33 is_stmt 1 view .LVU252
 1237               	.LVL70:
 185:./tmk_core/common/action_layer.c ****         if (layers & (1UL<<i)) {
 1238               		.loc 1 185 25 view .LVU253
 185:./tmk_core/common/action_layer.c ****         if (layers & (1UL<<i)) {
 1239               		.loc 1 185 5 is_stmt 0 view .LVU254
 1240               	.LVL71:
 1241 005a 2197      		sbiw r28,1
 1242 005c 00F4      		brcc .L23
 185:./tmk_core/common/action_layer.c ****         if (layers & (1UL<<i)) {
 1243               		.loc 1 185 5 view .LVU255
 1244               	.LBE88:
 187:./tmk_core/common/action_layer.c ****             action = action_for_key(i, key);
 188:./tmk_core/common/action_layer.c ****             if (action.code != ACTION_TRANSPARENT) {
 189:./tmk_core/common/action_layer.c ****                 return i;
 190:./tmk_core/common/action_layer.c ****             }
 191:./tmk_core/common/action_layer.c ****         }
 192:./tmk_core/common/action_layer.c ****     }
 193:./tmk_core/common/action_layer.c ****     /* fall back to layer 0 */
 194:./tmk_core/common/action_layer.c ****     return 0;
 1245               		.loc 1 194 12 view .LVU256
 1246 005e B12C      		mov r11,__zero_reg__
 1247               	.LVL72:
 1248               	.L21:
 195:./tmk_core/common/action_layer.c **** #else
 196:./tmk_core/common/action_layer.c ****     return biton32(default_layer_state);
 197:./tmk_core/common/action_layer.c **** #endif
 198:./tmk_core/common/action_layer.c **** }
 1249               		.loc 1 198 1 view .LVU257
 1250 0060 8B2D      		mov r24,r11
 1251               	/* epilogue start */
 1252 0062 DF91      		pop r29
 1253 0064 CF91      		pop r28
 1254 0066 1F91      		pop r17
 1255 0068 0F91      		pop r16
 1256 006a FF90      		pop r15
 1257 006c EF90      		pop r14
 1258 006e DF90      		pop r13
 1259 0070 CF90      		pop r12
 1260               	.LVL73:
 1261               		.loc 1 198 1 view .LVU258
 1262 0072 BF90      		pop r11
 1263 0074 0895      		ret
 1264               	.LVL74:
 1265               	.L22:
 1266               	.LBB89:
 187:./tmk_core/common/action_layer.c ****             action = action_for_key(i, key);
 1267               		.loc 1 187 13 is_stmt 1 view .LVU259
 187:./tmk_core/common/action_layer.c ****             action = action_for_key(i, key);
 1268               		.loc 1 187 22 is_stmt 0 view .LVU260
 1269 0076 B801      		movw r22,r16
 1270 0078 8C2F      		mov r24,r28
 1271 007a 0E94 0000 		call action_for_key
 1272               	.LVL75:
 188:./tmk_core/common/action_layer.c ****                 return i;
 1273               		.loc 1 188 13 is_stmt 1 view .LVU261
 188:./tmk_core/common/action_layer.c ****                 return i;
 1274               		.loc 1 188 16 is_stmt 0 view .LVU262
 1275 007e 0197      		sbiw r24,1
 1276 0080 01F0      		breq .L25
 1277 0082 00C0      		rjmp .L21
 1278               	.LBE89:
 1279               		.cfi_endproc
 1280               	.LFE23:
 1282               		.section	.text.layer_switch_get_action,"ax",@progbits
 1283               	.global	layer_switch_get_action
 1285               	layer_switch_get_action:
 1286               	.LVL76:
 1287               	.LFB24:
 199:./tmk_core/common/action_layer.c **** 
 200:./tmk_core/common/action_layer.c **** action_t layer_switch_get_action(keypos_t key)
 201:./tmk_core/common/action_layer.c **** {
 1288               		.loc 1 201 1 is_stmt 1 view -0
 1289               		.cfi_startproc
 1290               		.loc 1 201 1 is_stmt 0 view .LVU264
 1291 0000 CF93      		push r28
 1292               	.LCFI33:
 1293               		.cfi_def_cfa_offset 3
 1294               		.cfi_offset 28, -2
 1295 0002 DF93      		push r29
 1296               	.LCFI34:
 1297               		.cfi_def_cfa_offset 4
 1298               		.cfi_offset 29, -3
 1299               	/* prologue: function */
 1300               	/* frame size = 0 */
 1301               	/* stack size = 2 */
 1302               	.L__stack_usage = 2
 1303 0004 D82F      		mov r29,r24
 1304               	.LVL77:
 1305               		.loc 1 201 1 view .LVU265
 1306 0006 C92F      		mov r28,r25
 1307               	.LVL78:
 202:./tmk_core/common/action_layer.c ****     return action_for_key(layer_switch_get_layer(key), key);
 1308               		.loc 1 202 5 is_stmt 1 view .LVU266
 1309               		.loc 1 202 27 is_stmt 0 view .LVU267
 1310 0008 0E94 0000 		call layer_switch_get_layer
 1311               	.LVL79:
 1312               		.loc 1 202 12 view .LVU268
 1313 000c 6D2F      		mov r22,r29
 1314 000e 7C2F      		mov r23,r28
 1315               	/* epilogue start */
 203:./tmk_core/common/action_layer.c **** }
 1316               		.loc 1 203 1 view .LVU269
 1317 0010 DF91      		pop r29
 1318               	.LVL80:
 1319               		.loc 1 203 1 view .LVU270
 1320 0012 CF91      		pop r28
 202:./tmk_core/common/action_layer.c ****     return action_for_key(layer_switch_get_layer(key), key);
 1321               		.loc 1 202 12 view .LVU271
 1322 0014 0C94 0000 		jmp action_for_key
 1323               	.LVL81:
 1324               		.cfi_endproc
 1325               	.LFE24:
 1327               		.section	.text.store_or_get_action,"ax",@progbits
 1328               	.global	store_or_get_action
 1330               	store_or_get_action:
 1331               	.LVL82:
 1332               	.LFB22:
 155:./tmk_core/common/action_layer.c **** #if !defined(NO_ACTION_LAYER) && defined(PREVENT_STUCK_MODIFIERS)
 1333               		.loc 1 155 1 is_stmt 1 view -0
 1334               		.cfi_startproc
 155:./tmk_core/common/action_layer.c **** #if !defined(NO_ACTION_LAYER) && defined(PREVENT_STUCK_MODIFIERS)
 1335               		.loc 1 155 1 is_stmt 0 view .LVU273
 1336 0000 1F93      		push r17
 1337               	.LCFI35:
 1338               		.cfi_def_cfa_offset 3
 1339               		.cfi_offset 17, -2
 1340 0002 CF93      		push r28
 1341               	.LCFI36:
 1342               		.cfi_def_cfa_offset 4
 1343               		.cfi_offset 28, -3
 1344 0004 DF93      		push r29
 1345               	.LCFI37:
 1346               		.cfi_def_cfa_offset 5
 1347               		.cfi_offset 29, -4
 1348               	/* prologue: function */
 1349               	/* frame size = 0 */
 1350               	/* stack size = 3 */
 1351               	.L__stack_usage = 3
 1352 0006 162F      		mov r17,r22
 1353               	.LVL83:
 155:./tmk_core/common/action_layer.c **** #if !defined(NO_ACTION_LAYER) && defined(PREVENT_STUCK_MODIFIERS)
 1354               		.loc 1 155 1 view .LVU274
 1355 0008 D72F      		mov r29,r23
 1356               	.LVL84:
 157:./tmk_core/common/action_layer.c ****         return layer_switch_get_action(key);
 1357               		.loc 1 157 5 is_stmt 1 view .LVU275
 157:./tmk_core/common/action_layer.c ****         return layer_switch_get_action(key);
 1358               		.loc 1 157 8 is_stmt 0 view .LVU276
 1359 000a 9091 0000 		lds r25,disable_action_cache
 1360 000e 9923      		tst r25
 1361 0010 01F0      		breq .L32
 158:./tmk_core/common/action_layer.c ****     }
 1362               		.loc 1 158 9 is_stmt 1 view .LVU277
 1363               	.LVL85:
 158:./tmk_core/common/action_layer.c ****     }
 1364               		.loc 1 158 16 is_stmt 0 view .LVU278
 1365 0012 862F      		mov r24,r22
 1366               	.LVL86:
 158:./tmk_core/common/action_layer.c ****     }
 1367               		.loc 1 158 16 view .LVU279
 1368 0014 972F      		mov r25,r23
 1369               	/* epilogue start */
 174:./tmk_core/common/action_layer.c **** 
 1370               		.loc 1 174 1 view .LVU280
 1371 0016 DF91      		pop r29
 1372               	.LVL87:
 174:./tmk_core/common/action_layer.c **** 
 1373               		.loc 1 174 1 view .LVU281
 1374 0018 CF91      		pop r28
 1375 001a 1F91      		pop r17
 158:./tmk_core/common/action_layer.c ****     }
 1376               		.loc 1 158 16 view .LVU282
 1377 001c 0C94 0000 		jmp layer_switch_get_action
 1378               	.LVL88:
 1379               	.L32:
 161:./tmk_core/common/action_layer.c **** 
 1380               		.loc 1 161 5 is_stmt 1 view .LVU283
 163:./tmk_core/common/action_layer.c ****         layer = layer_switch_get_layer(key);
 1381               		.loc 1 163 5 view .LVU284
 163:./tmk_core/common/action_layer.c ****         layer = layer_switch_get_layer(key);
 1382               		.loc 1 163 8 is_stmt 0 view .LVU285
 1383 0020 8823      		tst r24
 1384 0022 01F0      		breq .L33
 164:./tmk_core/common/action_layer.c ****         update_source_layers_cache(key, layer);
 1385               		.loc 1 164 9 is_stmt 1 view .LVU286
 164:./tmk_core/common/action_layer.c ****         update_source_layers_cache(key, layer);
 1386               		.loc 1 164 17 is_stmt 0 view .LVU287
 1387 0024 862F      		mov r24,r22
 1388               	.LVL89:
 164:./tmk_core/common/action_layer.c ****         update_source_layers_cache(key, layer);
 1389               		.loc 1 164 17 view .LVU288
 1390 0026 972F      		mov r25,r23
 1391 0028 0E94 0000 		call layer_switch_get_layer
 1392               	.LVL90:
 1393 002c C82F      		mov r28,r24
 1394               	.LVL91:
 165:./tmk_core/common/action_layer.c ****     }
 1395               		.loc 1 165 9 is_stmt 1 view .LVU289
 1396 002e 682F      		mov r22,r24
 1397 0030 812F      		mov r24,r17
 1398               	.LVL92:
 165:./tmk_core/common/action_layer.c ****     }
 1399               		.loc 1 165 9 is_stmt 0 view .LVU290
 1400 0032 9D2F      		mov r25,r29
 1401 0034 0E94 0000 		call update_source_layers_cache
 1402               	.LVL93:
 1403               	.L34:
 170:./tmk_core/common/action_layer.c **** #else
 1404               		.loc 1 170 5 is_stmt 1 view .LVU291
 170:./tmk_core/common/action_layer.c **** #else
 1405               		.loc 1 170 12 is_stmt 0 view .LVU292
 1406 0038 612F      		mov r22,r17
 1407 003a 7D2F      		mov r23,r29
 1408 003c 8C2F      		mov r24,r28
 1409               	/* epilogue start */
 174:./tmk_core/common/action_layer.c **** 
 1410               		.loc 1 174 1 view .LVU293
 1411 003e DF91      		pop r29
 1412               	.LVL94:
 174:./tmk_core/common/action_layer.c **** 
 1413               		.loc 1 174 1 view .LVU294
 1414 0040 CF91      		pop r28
 1415               	.LVL95:
 174:./tmk_core/common/action_layer.c **** 
 1416               		.loc 1 174 1 view .LVU295
 1417 0042 1F91      		pop r17
 170:./tmk_core/common/action_layer.c **** #else
 1418               		.loc 1 170 12 view .LVU296
 1419 0044 0C94 0000 		jmp action_for_key
 1420               	.LVL96:
 1421               	.L33:
 168:./tmk_core/common/action_layer.c ****     }
 1422               		.loc 1 168 9 is_stmt 1 view .LVU297
 168:./tmk_core/common/action_layer.c ****     }
 1423               		.loc 1 168 17 is_stmt 0 view .LVU298
 1424 0048 862F      		mov r24,r22
 1425               	.LVL97:
 168:./tmk_core/common/action_layer.c ****     }
 1426               		.loc 1 168 17 view .LVU299
 1427 004a 972F      		mov r25,r23
 1428 004c 0E94 0000 		call read_source_layers_cache
 1429               	.LVL98:
 1430 0050 C82F      		mov r28,r24
 1431               	.LVL99:
 168:./tmk_core/common/action_layer.c ****     }
 1432               		.loc 1 168 17 view .LVU300
 1433 0052 00C0      		rjmp .L34
 1434               		.cfi_endproc
 1435               	.LFE22:
 1437               	.global	source_layers_cache
 1438               		.section	.bss.source_layers_cache,"aw",@nobits
 1441               	source_layers_cache:
 1442 0000 0000 0000 		.zero	65
 1442      0000 0000 
 1442      0000 0000 
 1442      0000 0000 
 1442      0000 0000 
 1443               	.global	layer_state
 1444               		.section	.bss.layer_state,"aw",@nobits
 1447               	layer_state:
 1448 0000 0000 0000 		.zero	4
 1449               	.global	default_layer_state
 1450               		.section	.bss.default_layer_state,"aw",@nobits
 1453               	default_layer_state:
 1454 0000 0000 0000 		.zero	4
 1455               		.text
 1456               	.Letext0:
 1457               		.file 2 "/usr/avr/include/stdint.h"
 1458               		.file 3 "./tmk_core/common/keyboard.h"
 1459               		.file 4 "./tmk_core/common/action_code.h"
 1460               		.file 5 "./tmk_core/common/action.h"
 1461               		.file 6 "./tmk_core/common/action_layer.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 action_layer.c
     /tmp/ccBViMjQ.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccBViMjQ.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccBViMjQ.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccBViMjQ.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/ccBViMjQ.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccBViMjQ.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccBViMjQ.s:14     .text.default_layer_debug:0000000000000000 default_layer_debug
     /tmp/ccBViMjQ.s:33     .text.default_layer_set:0000000000000000 default_layer_set
     /tmp/ccBViMjQ.s:1453   .bss.default_layer_state:0000000000000000 default_layer_state
     /tmp/ccBViMjQ.s:71     .text.default_layer_or:0000000000000000 default_layer_or
     /tmp/ccBViMjQ.s:161    .text.default_layer_and:0000000000000000 default_layer_and
     /tmp/ccBViMjQ.s:251    .text.default_layer_xor:0000000000000000 default_layer_xor
     /tmp/ccBViMjQ.s:341    .text.layer_clear:0000000000000000 layer_clear
     /tmp/ccBViMjQ.s:1447   .bss.layer_state:0000000000000000 layer_state
     /tmp/ccBViMjQ.s:377    .text.layer_move:0000000000000000 layer_move
     /tmp/ccBViMjQ.s:432    .text.layer_on:0000000000000000 layer_on
     /tmp/ccBViMjQ.s:502    .text.layer_off:0000000000000000 layer_off
     /tmp/ccBViMjQ.s:573    .text.layer_invert:0000000000000000 layer_invert
     /tmp/ccBViMjQ.s:643    .text.layer_or:0000000000000000 layer_or
     /tmp/ccBViMjQ.s:733    .text.layer_and:0000000000000000 layer_and
     /tmp/ccBViMjQ.s:823    .text.layer_xor:0000000000000000 layer_xor
     /tmp/ccBViMjQ.s:913    .text.layer_debug:0000000000000000 layer_debug
     /tmp/ccBViMjQ.s:928    .text.update_source_layers_cache:0000000000000000 update_source_layers_cache
     /tmp/ccBViMjQ.s:1441   .bss.source_layers_cache:0000000000000000 source_layers_cache
     /tmp/ccBViMjQ.s:1037   .text.read_source_layers_cache:0000000000000000 read_source_layers_cache
     /tmp/ccBViMjQ.s:1137   .text.layer_switch_get_layer:0000000000000000 layer_switch_get_layer
     /tmp/ccBViMjQ.s:1285   .text.layer_switch_get_action:0000000000000000 layer_switch_get_action
     /tmp/ccBViMjQ.s:1330   .text.store_or_get_action:0000000000000000 store_or_get_action

UNDEFINED SYMBOLS
clear_keyboard_but_mods
action_for_key
disable_action_cache
__do_clear_bss
