   1               		.file	"keyboard.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.file 1 "./tmk_core/common/keyboard.c"
  12               		.section	.text.matrix_setup,"ax",@progbits
  13               		.weak	matrix_setup
  15               	matrix_setup:
  16               	.LFB107:
   1:./tmk_core/common/keyboard.c **** /*
   2:./tmk_core/common/keyboard.c **** Copyright 2011, 2012, 2013 Jun Wako <wakojun@gmail.com>
   3:./tmk_core/common/keyboard.c **** 
   4:./tmk_core/common/keyboard.c **** This program is free software: you can redistribute it and/or modify
   5:./tmk_core/common/keyboard.c **** it under the terms of the GNU General Public License as published by
   6:./tmk_core/common/keyboard.c **** the Free Software Foundation, either version 2 of the License, or
   7:./tmk_core/common/keyboard.c **** (at your option) any later version.
   8:./tmk_core/common/keyboard.c **** 
   9:./tmk_core/common/keyboard.c **** This program is distributed in the hope that it will be useful,
  10:./tmk_core/common/keyboard.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:./tmk_core/common/keyboard.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:./tmk_core/common/keyboard.c **** GNU General Public License for more details.
  13:./tmk_core/common/keyboard.c **** 
  14:./tmk_core/common/keyboard.c **** You should have received a copy of the GNU General Public License
  15:./tmk_core/common/keyboard.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:./tmk_core/common/keyboard.c **** */
  17:./tmk_core/common/keyboard.c **** #include <stdint.h>
  18:./tmk_core/common/keyboard.c **** #include "keyboard.h"
  19:./tmk_core/common/keyboard.c **** #include "matrix.h"
  20:./tmk_core/common/keyboard.c **** #include "keymap.h"
  21:./tmk_core/common/keyboard.c **** #include "host.h"
  22:./tmk_core/common/keyboard.c **** #include "led.h"
  23:./tmk_core/common/keyboard.c **** #include "keycode.h"
  24:./tmk_core/common/keyboard.c **** #include "timer.h"
  25:./tmk_core/common/keyboard.c **** #include "print.h"
  26:./tmk_core/common/keyboard.c **** #include "debug.h"
  27:./tmk_core/common/keyboard.c **** #include "command.h"
  28:./tmk_core/common/keyboard.c **** #include "util.h"
  29:./tmk_core/common/keyboard.c **** #include "sendchar.h"
  30:./tmk_core/common/keyboard.c **** #include "eeconfig.h"
  31:./tmk_core/common/keyboard.c **** #include "backlight.h"
  32:./tmk_core/common/keyboard.c **** #include "action_layer.h"
  33:./tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
  34:./tmk_core/common/keyboard.c **** #   include "bootmagic.h"
  35:./tmk_core/common/keyboard.c **** #else
  36:./tmk_core/common/keyboard.c **** #   include "magic.h"
  37:./tmk_core/common/keyboard.c **** #endif
  38:./tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
  39:./tmk_core/common/keyboard.c **** #   include "mousekey.h"
  40:./tmk_core/common/keyboard.c **** #endif
  41:./tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  42:./tmk_core/common/keyboard.c **** #   include "ps2_mouse.h"
  43:./tmk_core/common/keyboard.c **** #endif
  44:./tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  45:./tmk_core/common/keyboard.c **** #   include "serial_mouse.h"
  46:./tmk_core/common/keyboard.c **** #endif
  47:./tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  48:./tmk_core/common/keyboard.c **** #   include "adb.h"
  49:./tmk_core/common/keyboard.c **** #endif
  50:./tmk_core/common/keyboard.c **** #ifdef RGBLIGHT_ENABLE
  51:./tmk_core/common/keyboard.c **** #   include "rgblight.h"
  52:./tmk_core/common/keyboard.c **** #endif
  53:./tmk_core/common/keyboard.c **** #ifdef SERIAL_LINK_ENABLE
  54:./tmk_core/common/keyboard.c **** #   include "serial_link/system/serial_link.h"
  55:./tmk_core/common/keyboard.c **** #endif
  56:./tmk_core/common/keyboard.c **** #ifdef VISUALIZER_ENABLE
  57:./tmk_core/common/keyboard.c **** #   include "visualizer/visualizer.h"
  58:./tmk_core/common/keyboard.c **** #endif
  59:./tmk_core/common/keyboard.c **** 
  60:./tmk_core/common/keyboard.c **** 
  61:./tmk_core/common/keyboard.c **** 
  62:./tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
  63:./tmk_core/common/keyboard.c **** static bool has_ghost_in_row(uint8_t row)
  64:./tmk_core/common/keyboard.c **** {
  65:./tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = matrix_get_row(row);
  66:./tmk_core/common/keyboard.c ****     // No ghost exists when less than 2 keys are down on the row
  67:./tmk_core/common/keyboard.c ****     if (((matrix_row - 1) & matrix_row) == 0)
  68:./tmk_core/common/keyboard.c ****         return false;
  69:./tmk_core/common/keyboard.c **** 
  70:./tmk_core/common/keyboard.c ****     // Ghost occurs when the row shares column line with other row
  71:./tmk_core/common/keyboard.c ****     for (uint8_t i=0; i < MATRIX_ROWS; i++) {
  72:./tmk_core/common/keyboard.c ****         if (i != row && (matrix_get_row(i) & matrix_row))
  73:./tmk_core/common/keyboard.c ****             return true;
  74:./tmk_core/common/keyboard.c ****     }
  75:./tmk_core/common/keyboard.c ****     return false;
  76:./tmk_core/common/keyboard.c **** }
  77:./tmk_core/common/keyboard.c **** #endif
  78:./tmk_core/common/keyboard.c **** 
  79:./tmk_core/common/keyboard.c **** __attribute__ ((weak))
  80:./tmk_core/common/keyboard.c **** void matrix_setup(void) {
  17               		.loc 1 80 25 view -0
  18               		.cfi_startproc
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  81:./tmk_core/common/keyboard.c **** }
  23               		.loc 1 81 1 view .LVU1
  24               	/* epilogue start */
  25 0000 0895      		ret
  26               		.cfi_endproc
  27               	.LFE107:
  29               		.section	.text.keyboard_setup,"ax",@progbits
  30               	.global	keyboard_setup
  32               	keyboard_setup:
  33               	.LFB108:
  82:./tmk_core/common/keyboard.c **** 
  83:./tmk_core/common/keyboard.c **** void keyboard_setup(void) {
  34               		.loc 1 83 27 view -0
  35               		.cfi_startproc
  36               	/* prologue: function */
  37               	/* frame size = 0 */
  38               	/* stack size = 0 */
  39               	.L__stack_usage = 0
  84:./tmk_core/common/keyboard.c ****     matrix_setup();
  40               		.loc 1 84 5 view .LVU3
  41 0000 0C94 0000 		jmp matrix_setup
  42               	.LVL0:
  43               		.cfi_endproc
  44               	.LFE108:
  46               		.section	.text.keyboard_init,"ax",@progbits
  47               	.global	keyboard_init
  49               	keyboard_init:
  50               	.LFB109:
  85:./tmk_core/common/keyboard.c **** }
  86:./tmk_core/common/keyboard.c **** 
  87:./tmk_core/common/keyboard.c **** void keyboard_init(void) {
  51               		.loc 1 87 26 view -0
  52               		.cfi_startproc
  53               	/* prologue: function */
  54               	/* frame size = 0 */
  55               	/* stack size = 0 */
  56               	.L__stack_usage = 0
  88:./tmk_core/common/keyboard.c ****     timer_init();
  57               		.loc 1 88 5 view .LVU5
  58 0000 0E94 0000 		call timer_init
  59               	.LVL1:
  89:./tmk_core/common/keyboard.c ****     matrix_init();
  60               		.loc 1 89 5 view .LVU6
  61 0004 0E94 0000 		call matrix_init
  62               	.LVL2:
  90:./tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  91:./tmk_core/common/keyboard.c ****     ps2_mouse_init();
  92:./tmk_core/common/keyboard.c **** #endif
  93:./tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  94:./tmk_core/common/keyboard.c ****     serial_mouse_init();
  95:./tmk_core/common/keyboard.c **** #endif
  96:./tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  97:./tmk_core/common/keyboard.c ****     adb_mouse_init();
  98:./tmk_core/common/keyboard.c **** #endif
  99:./tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
 100:./tmk_core/common/keyboard.c ****     bootmagic();
  63               		.loc 1 100 5 view .LVU7
  64 0008 0C94 0000 		jmp bootmagic
  65               	.LVL3:
  66               		.cfi_endproc
  67               	.LFE109:
  69               		.section	.text.keyboard_task,"ax",@progbits
  70               	.global	keyboard_task
  72               	keyboard_task:
  73               	.LFB110:
 101:./tmk_core/common/keyboard.c **** #else
 102:./tmk_core/common/keyboard.c ****     magic();
 103:./tmk_core/common/keyboard.c **** #endif
 104:./tmk_core/common/keyboard.c **** #ifdef BACKLIGHT_ENABLE
 105:./tmk_core/common/keyboard.c ****     backlight_init();
 106:./tmk_core/common/keyboard.c **** #endif
 107:./tmk_core/common/keyboard.c **** #ifdef RGBLIGHT_ENABLE
 108:./tmk_core/common/keyboard.c ****     rgblight_init();
 109:./tmk_core/common/keyboard.c **** #endif
 110:./tmk_core/common/keyboard.c **** #if defined(NKRO_ENABLE) && defined(FORCE_NKRO)
 111:./tmk_core/common/keyboard.c ****     keymap_config.nkro = 1;
 112:./tmk_core/common/keyboard.c **** #endif
 113:./tmk_core/common/keyboard.c **** }
 114:./tmk_core/common/keyboard.c **** 
 115:./tmk_core/common/keyboard.c **** /*
 116:./tmk_core/common/keyboard.c ****  * Do keyboard routine jobs: scan mantrix, light LEDs, ...
 117:./tmk_core/common/keyboard.c ****  * This is repeatedly called as fast as possible.
 118:./tmk_core/common/keyboard.c ****  */
 119:./tmk_core/common/keyboard.c **** void keyboard_task(void)
 120:./tmk_core/common/keyboard.c **** {
  74               		.loc 1 120 1 view -0
  75               		.cfi_startproc
  76 0000 7F92      		push r7
  77               	.LCFI0:
  78               		.cfi_def_cfa_offset 3
  79               		.cfi_offset 7, -2
  80 0002 8F92      		push r8
  81               	.LCFI1:
  82               		.cfi_def_cfa_offset 4
  83               		.cfi_offset 8, -3
  84 0004 9F92      		push r9
  85               	.LCFI2:
  86               		.cfi_def_cfa_offset 5
  87               		.cfi_offset 9, -4
  88 0006 AF92      		push r10
  89               	.LCFI3:
  90               		.cfi_def_cfa_offset 6
  91               		.cfi_offset 10, -5
  92 0008 BF92      		push r11
  93               	.LCFI4:
  94               		.cfi_def_cfa_offset 7
  95               		.cfi_offset 11, -6
  96 000a CF92      		push r12
  97               	.LCFI5:
  98               		.cfi_def_cfa_offset 8
  99               		.cfi_offset 12, -7
 100 000c DF92      		push r13
 101               	.LCFI6:
 102               		.cfi_def_cfa_offset 9
 103               		.cfi_offset 13, -8
 104 000e EF92      		push r14
 105               	.LCFI7:
 106               		.cfi_def_cfa_offset 10
 107               		.cfi_offset 14, -9
 108 0010 FF92      		push r15
 109               	.LCFI8:
 110               		.cfi_def_cfa_offset 11
 111               		.cfi_offset 15, -10
 112 0012 0F93      		push r16
 113               	.LCFI9:
 114               		.cfi_def_cfa_offset 12
 115               		.cfi_offset 16, -11
 116 0014 1F93      		push r17
 117               	.LCFI10:
 118               		.cfi_def_cfa_offset 13
 119               		.cfi_offset 17, -12
 120 0016 CF93      		push r28
 121               	.LCFI11:
 122               		.cfi_def_cfa_offset 14
 123               		.cfi_offset 28, -13
 124 0018 DF93      		push r29
 125               	.LCFI12:
 126               		.cfi_def_cfa_offset 15
 127               		.cfi_offset 29, -14
 128 001a 00D0      		rcall .
 129 001c 00D0      		rcall .
 130 001e 0F92      		push __tmp_reg__
 131               	.LCFI13:
 132               		.cfi_def_cfa_offset 20
 133 0020 CDB7      		in r28,__SP_L__
 134 0022 DEB7      		in r29,__SP_H__
 135               	.LCFI14:
 136               		.cfi_def_cfa_register 28
 137               	/* prologue: function */
 138               	/* frame size = 5 */
 139               	/* stack size = 18 */
 140               	.L__stack_usage = 18
 121:./tmk_core/common/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 141               		.loc 1 121 5 view .LVU9
 122:./tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 123:./tmk_core/common/keyboard.c ****     static matrix_row_t matrix_ghost[MATRIX_ROWS];
 124:./tmk_core/common/keyboard.c **** #endif
 125:./tmk_core/common/keyboard.c ****     static uint8_t led_status = 0;
 142               		.loc 1 125 5 view .LVU10
 126:./tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = 0;
 143               		.loc 1 126 5 view .LVU11
 144               	.LVL4:
 127:./tmk_core/common/keyboard.c ****     matrix_row_t matrix_change = 0;
 145               		.loc 1 127 5 view .LVU12
 128:./tmk_core/common/keyboard.c **** 
 129:./tmk_core/common/keyboard.c ****     matrix_scan();
 146               		.loc 1 129 5 view .LVU13
 147 0024 0E94 0000 		call matrix_scan
 148               	.LVL5:
 130:./tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 149               		.loc 1 130 5 view .LVU14
 150               	.LBB7:
 151               		.loc 1 130 10 view .LVU15
 152               		.loc 1 130 27 view .LVU16
 153 0028 90E0      		ldi r25,lo8(matrix_prev.1)
 154 002a A92E      		mov r10,r25
 155 002c 90E0      		ldi r25,hi8(matrix_prev.1)
 156 002e B92E      		mov r11,r25
 157               	.LBE7:
 129:./tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 158               		.loc 1 129 5 is_stmt 0 view .LVU17
 159 0030 00E0      		ldi r16,0
 160 0032 10E0      		ldi r17,0
 161               	.LBB12:
 162               	.LBB8:
 131:./tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 132:./tmk_core/common/keyboard.c ****         matrix_change = matrix_row ^ matrix_prev[r];
 133:./tmk_core/common/keyboard.c ****         if (matrix_change) {
 134:./tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 135:./tmk_core/common/keyboard.c ****             if (has_ghost_in_row(r)) {
 136:./tmk_core/common/keyboard.c ****                 /* Keep track of whether ghosted status has changed for
 137:./tmk_core/common/keyboard.c ****                  * debugging. But don't update matrix_prev until un-ghosted, or
 138:./tmk_core/common/keyboard.c ****                  * the last key would be lost.
 139:./tmk_core/common/keyboard.c ****                  */
 140:./tmk_core/common/keyboard.c ****                 if (debug_matrix && matrix_ghost[r] != matrix_row) {
 141:./tmk_core/common/keyboard.c ****                     matrix_print();
 142:./tmk_core/common/keyboard.c ****                 }
 143:./tmk_core/common/keyboard.c ****                 matrix_ghost[r] = matrix_row;
 144:./tmk_core/common/keyboard.c ****                 continue;
 145:./tmk_core/common/keyboard.c ****             }
 146:./tmk_core/common/keyboard.c ****             matrix_ghost[r] = matrix_row;
 147:./tmk_core/common/keyboard.c **** #endif
 148:./tmk_core/common/keyboard.c ****             if (debug_matrix) matrix_print();
 149:./tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 150:./tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 163               		.loc 1 150 20 view .LVU18
 164 0034 8824      		clr r8
 165 0036 8394      		inc r8
 166 0038 912C      		mov r9,__zero_reg__
 167               	.LVL6:
 168               	.L6:
 169               		.loc 1 150 20 view .LVU19
 170 003a 702E      		mov r7,r16
 171               	.LVL7:
 172               		.loc 1 150 20 view .LVU20
 173               	.LBE8:
 131:./tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 174               		.loc 1 131 9 is_stmt 1 view .LVU21
 131:./tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 175               		.loc 1 131 22 is_stmt 0 view .LVU22
 176 003c 802F      		mov r24,r16
 177 003e 0E94 0000 		call matrix_get_row
 178               	.LVL8:
 179 0042 7C01      		movw r14,r24
 180               	.LVL9:
 132:./tmk_core/common/keyboard.c ****         if (matrix_change) {
 181               		.loc 1 132 9 is_stmt 1 view .LVU23
 132:./tmk_core/common/keyboard.c ****         if (matrix_change) {
 182               		.loc 1 132 49 is_stmt 0 view .LVU24
 183 0044 F501      		movw r30,r10
 184 0046 C190      		ld r12,Z+
 185 0048 D190      		ld r13,Z+
 186 004a 5F01      		movw r10,r30
 187               	.LVL10:
 133:./tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 188               		.loc 1 133 9 is_stmt 1 view .LVU25
 133:./tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 189               		.loc 1 133 12 is_stmt 0 view .LVU26
 190 004c C816      		cp r12,r24
 191 004e D906      		cpc r13,r25
 192 0050 01F4      		brne .L5
 193               	.LVL11:
 194               	.L14:
 130:./tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 195               		.loc 1 130 43 is_stmt 1 view .LVU27
 130:./tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 196               		.loc 1 130 27 view .LVU28
 197 0052 0F5F      		subi r16,-1
 198 0054 1F4F      		sbci r17,-1
 199               	.LVL12:
 130:./tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 200               		.loc 1 130 27 is_stmt 0 view .LVU29
 201 0056 0830      		cpi r16,8
 202 0058 1105      		cpc r17,__zero_reg__
 203 005a 01F4      		brne .L6
 204               	.LBE12:
 151:./tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 152:./tmk_core/common/keyboard.c ****                         .key = (keypos_t){ .row = r, .col = c },
 153:./tmk_core/common/keyboard.c ****                         .pressed = (matrix_row & ((matrix_row_t)1<<c)),
 154:./tmk_core/common/keyboard.c ****                         .time = (timer_read() | 1) /* time should not be 0 */
 155:./tmk_core/common/keyboard.c ****                     });
 156:./tmk_core/common/keyboard.c ****                     // record a processed key
 157:./tmk_core/common/keyboard.c ****                     matrix_prev[r] ^= ((matrix_row_t)1<<c);
 158:./tmk_core/common/keyboard.c ****                     // process a key per task call
 159:./tmk_core/common/keyboard.c ****                     goto MATRIX_LOOP_END;
 160:./tmk_core/common/keyboard.c ****                 }
 161:./tmk_core/common/keyboard.c ****             }
 162:./tmk_core/common/keyboard.c ****         }
 163:./tmk_core/common/keyboard.c ****     }
 164:./tmk_core/common/keyboard.c ****     // call with pseudo tick event when no real key event.
 165:./tmk_core/common/keyboard.c ****     action_exec(TICK);
 205               		.loc 1 165 5 is_stmt 1 view .LVU30
 206               		.loc 1 165 17 is_stmt 0 view .LVU31
 207 005c 8FEF      		ldi r24,lo8(-1)
 208 005e 8983      		std Y+1,r24
 209 0060 8A83      		std Y+2,r24
 210 0062 1B82      		std Y+3,__zero_reg__
 211 0064 0E94 0000 		call timer_read
 212               	.LVL13:
 213 0068 8160      		ori r24,1
 214 006a 782F      		mov r23,r24
 215 006c 9D83      		std Y+5,r25
 216 006e 8C83      		std Y+4,r24
 217               		.loc 1 165 5 view .LVU32
 218 0070 4981      		ldd r20,Y+1
 219 0072 5A81      		ldd r21,Y+2
 220 0074 6B81      		ldd r22,Y+3
 221 0076 892F      		mov r24,r25
 222 0078 0E94 0000 		call action_exec
 223               	.LVL14:
 224 007c 00C0      		rjmp .L12
 225               	.LVL15:
 226               	.L5:
 227               	.LBB13:
 148:./tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 228               		.loc 1 148 13 is_stmt 1 view .LVU33
 148:./tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 229               		.loc 1 148 17 is_stmt 0 view .LVU34
 230 007e 8091 0000 		lds r24,debug_config
 148:./tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 231               		.loc 1 148 16 view .LVU35
 232 0082 81FD      		sbrc r24,1
 148:./tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 233               		.loc 1 148 31 is_stmt 1 discriminator 1 view .LVU36
 234 0084 0E94 0000 		call matrix_print
 235               	.LVL16:
 236               	.L8:
 132:./tmk_core/common/keyboard.c ****         if (matrix_change) {
 237               		.loc 1 132 23 is_stmt 0 view .LVU37
 238 0088 9601      		movw r18,r12
 239 008a 2E25      		eor r18,r14
 240 008c 3F25      		eor r19,r15
 149:./tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 241               		.loc 1 149 13 is_stmt 1 view .LVU38
 242               	.LBB10:
 149:./tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 243               		.loc 1 149 18 view .LVU39
 244               	.LVL17:
 149:./tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 245               		.loc 1 149 35 view .LVU40
 150:./tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 246               		.loc 1 150 17 view .LVU41
 150:./tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 247               		.loc 1 150 35 is_stmt 0 view .LVU42
 248 008e 6901      		movw r12,r18
 249               	.LVL18:
 150:./tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 250               		.loc 1 150 35 view .LVU43
 251 0090 F1E0      		ldi r31,1
 252 0092 CF22      		and r12,r31
 253 0094 DD24      		clr r13
 150:./tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 254               		.loc 1 150 20 view .LVU44
 255 0096 C114      		cp r12,__zero_reg__
 256 0098 D104      		cpc r13,__zero_reg__
 257 009a 01F0      		breq .+2
 258 009c 00C0      		rjmp .L16
 259 009e 81E0      		ldi r24,lo8(1)
 260 00a0 90E0      		ldi r25,0
 261               	.LVL19:
 262               	.L10:
 149:./tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 263               		.loc 1 149 51 is_stmt 1 discriminator 2 view .LVU45
 149:./tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 264               		.loc 1 149 35 discriminator 2 view .LVU46
 265 00a2 8031      		cpi r24,16
 266 00a4 9105      		cpc r25,__zero_reg__
 267 00a6 01F0      		breq .L14
 150:./tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 268               		.loc 1 150 17 view .LVU47
 150:./tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 269               		.loc 1 150 53 is_stmt 0 view .LVU48
 270 00a8 6401      		movw r12,r8
 271 00aa 082E      		mov r0,r24
 272 00ac 00C0      		rjmp 2f
 273               		1:
 274 00ae CC0C      		lsl r12
 275 00b0 DD1C      		rol r13
 276               		2:
 277 00b2 0A94      		dec r0
 278 00b4 02F4      		brpl 1b
 150:./tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 279               		.loc 1 150 20 view .LVU49
 280 00b6 AC01      		movw r20,r24
 281 00b8 4F5F      		subi r20,-1
 282 00ba 5F4F      		sbci r21,-1
 150:./tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 283               		.loc 1 150 35 view .LVU50
 284 00bc B601      		movw r22,r12
 285 00be 6223      		and r22,r18
 286 00c0 7323      		and r23,r19
 150:./tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 287               		.loc 1 150 20 view .LVU51
 288 00c2 672B      		or r22,r23
 289 00c4 01F4      		brne .+2
 290 00c6 00C0      		rjmp .L17
 291               	.LVL20:
 292               	.L9:
 293               	.LBB9:
 151:./tmk_core/common/keyboard.c ****                         .key = (keypos_t){ .row = r, .col = c },
 294               		.loc 1 151 21 is_stmt 1 view .LVU52
 151:./tmk_core/common/keyboard.c ****                         .key = (keypos_t){ .row = r, .col = c },
 295               		.loc 1 151 45 is_stmt 0 view .LVU53
 296 00c8 8983      		std Y+1,r24
 297 00ca 7A82      		std Y+2,r7
 153:./tmk_core/common/keyboard.c ****                         .time = (timer_read() | 1) /* time should not be 0 */
 298               		.loc 1 153 48 view .LVU54
 299 00cc EC20      		and r14,r12
 300 00ce FD20      		and r15,r13
 301               	.LVL21:
 153:./tmk_core/common/keyboard.c ****                         .time = (timer_read() | 1) /* time should not be 0 */
 302               		.loc 1 153 48 view .LVU55
 303 00d0 81E0      		ldi r24,lo8(1)
 304 00d2 EF28      		or r14,r15
 305 00d4 01F4      		brne .L11
 306 00d6 80E0      		ldi r24,0
 307               	.L11:
 151:./tmk_core/common/keyboard.c ****                         .key = (keypos_t){ .row = r, .col = c },
 308               		.loc 1 151 45 view .LVU56
 309 00d8 8B83      		std Y+3,r24
 154:./tmk_core/common/keyboard.c ****                     });
 310               		.loc 1 154 34 view .LVU57
 311 00da 0E94 0000 		call timer_read
 312               	.LVL22:
 154:./tmk_core/common/keyboard.c ****                     });
 313               		.loc 1 154 47 view .LVU58
 314 00de 8160      		ori r24,1
 151:./tmk_core/common/keyboard.c ****                         .key = (keypos_t){ .row = r, .col = c },
 315               		.loc 1 151 45 view .LVU59
 316 00e0 782F      		mov r23,r24
 317 00e2 9D83      		std Y+5,r25
 318 00e4 8C83      		std Y+4,r24
 151:./tmk_core/common/keyboard.c ****                         .key = (keypos_t){ .row = r, .col = c },
 319               		.loc 1 151 21 view .LVU60
 320 00e6 4981      		ldd r20,Y+1
 321 00e8 5A81      		ldd r21,Y+2
 322 00ea 6B81      		ldd r22,Y+3
 323 00ec 892F      		mov r24,r25
 324 00ee 0E94 0000 		call action_exec
 325               	.LVL23:
 157:./tmk_core/common/keyboard.c ****                     // process a key per task call
 326               		.loc 1 157 21 is_stmt 1 view .LVU61
 157:./tmk_core/common/keyboard.c ****                     // process a key per task call
 327               		.loc 1 157 36 is_stmt 0 view .LVU62
 328 00f2 000F      		lsl r16
 329 00f4 111F      		rol r17
 330               	.LVL24:
 157:./tmk_core/common/keyboard.c ****                     // process a key per task call
 331               		.loc 1 157 36 view .LVU63
 332 00f6 F801      		movw r30,r16
 333 00f8 E050      		subi r30,lo8(-(matrix_prev.1))
 334 00fa F040      		sbci r31,hi8(-(matrix_prev.1))
 335 00fc 8081      		ld r24,Z
 336 00fe 9181      		ldd r25,Z+1
 337 0100 8C25      		eor r24,r12
 338 0102 9D25      		eor r25,r13
 339 0104 9183      		std Z+1,r25
 340 0106 8083      		st Z,r24
 159:./tmk_core/common/keyboard.c ****                 }
 341               		.loc 1 159 21 is_stmt 1 view .LVU64
 342               	.LVL25:
 343               	.L12:
 159:./tmk_core/common/keyboard.c ****                 }
 344               		.loc 1 159 21 is_stmt 0 view .LVU65
 345               	.LBE9:
 346               	.LBE10:
 347               	.LBE13:
 166:./tmk_core/common/keyboard.c **** 
 167:./tmk_core/common/keyboard.c **** MATRIX_LOOP_END:
 168:./tmk_core/common/keyboard.c **** 
 169:./tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
 170:./tmk_core/common/keyboard.c ****     // mousekey repeat & acceleration
 171:./tmk_core/common/keyboard.c ****     mousekey_task();
 348               		.loc 1 171 5 is_stmt 1 view .LVU66
 349 0108 0E94 0000 		call mousekey_task
 350               	.LVL26:
 172:./tmk_core/common/keyboard.c **** #endif
 173:./tmk_core/common/keyboard.c **** 
 174:./tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
 175:./tmk_core/common/keyboard.c ****     ps2_mouse_task();
 176:./tmk_core/common/keyboard.c **** #endif
 177:./tmk_core/common/keyboard.c **** 
 178:./tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
 179:./tmk_core/common/keyboard.c ****     serial_mouse_task();
 180:./tmk_core/common/keyboard.c **** #endif
 181:./tmk_core/common/keyboard.c **** 
 182:./tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
 183:./tmk_core/common/keyboard.c ****     adb_mouse_task();
 184:./tmk_core/common/keyboard.c **** #endif
 185:./tmk_core/common/keyboard.c **** 
 186:./tmk_core/common/keyboard.c **** #ifdef SERIAL_LINK_ENABLE
 187:./tmk_core/common/keyboard.c **** 	serial_link_update();
 188:./tmk_core/common/keyboard.c **** #endif
 189:./tmk_core/common/keyboard.c **** 
 190:./tmk_core/common/keyboard.c **** #ifdef VISUALIZER_ENABLE
 191:./tmk_core/common/keyboard.c ****     visualizer_update(default_layer_state, layer_state, host_keyboard_leds());
 192:./tmk_core/common/keyboard.c **** #endif
 193:./tmk_core/common/keyboard.c **** 
 194:./tmk_core/common/keyboard.c ****     // update LED
 195:./tmk_core/common/keyboard.c ****     if (led_status != host_keyboard_leds()) {
 351               		.loc 1 195 5 view .LVU67
 352               		.loc 1 195 23 is_stmt 0 view .LVU68
 353 010c 0E94 0000 		call host_keyboard_leds
 354               	.LVL27:
 355               		.loc 1 195 8 view .LVU69
 356 0110 9091 0000 		lds r25,led_status.0
 357 0114 8917      		cp r24,r25
 358 0116 01F0      		breq .L4
 196:./tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 359               		.loc 1 196 9 is_stmt 1 view .LVU70
 360               		.loc 1 196 22 is_stmt 0 view .LVU71
 361 0118 0E94 0000 		call host_keyboard_leds
 362               	.LVL28:
 363               		.loc 1 196 20 view .LVU72
 364 011c 8093 0000 		sts led_status.0,r24
 197:./tmk_core/common/keyboard.c ****         keyboard_set_leds(led_status);
 365               		.loc 1 197 9 is_stmt 1 view .LVU73
 366               	.LVL29:
 367               	.LBB14:
 368               	.LBI14:
 198:./tmk_core/common/keyboard.c ****     }
 199:./tmk_core/common/keyboard.c **** }
 200:./tmk_core/common/keyboard.c **** 
 201:./tmk_core/common/keyboard.c **** void keyboard_set_leds(uint8_t leds)
 369               		.loc 1 201 6 view .LVU74
 370               	.LBB15:
 202:./tmk_core/common/keyboard.c **** {
 203:./tmk_core/common/keyboard.c ****     if (debug_keyboard) { debug("keyboard_set_led: "); debug_hex8(leds); debug("\n"); }
 371               		.loc 1 203 5 view .LVU75
 372               		.loc 1 203 54 view .LVU76
 373               		.loc 1 203 72 view .LVU77
 374               		.loc 1 203 85 view .LVU78
 204:./tmk_core/common/keyboard.c ****     led_set(leds);
 375               		.loc 1 204 5 view .LVU79
 376               	/* epilogue start */
 377               	.LBE15:
 378               	.LBE14:
 199:./tmk_core/common/keyboard.c **** 
 379               		.loc 1 199 1 is_stmt 0 view .LVU80
 380 0120 0F90      		pop __tmp_reg__
 381 0122 0F90      		pop __tmp_reg__
 382 0124 0F90      		pop __tmp_reg__
 383 0126 0F90      		pop __tmp_reg__
 384 0128 0F90      		pop __tmp_reg__
 385 012a DF91      		pop r29
 386 012c CF91      		pop r28
 387 012e 1F91      		pop r17
 388 0130 0F91      		pop r16
 389 0132 FF90      		pop r15
 390 0134 EF90      		pop r14
 391 0136 DF90      		pop r13
 392 0138 CF90      		pop r12
 393 013a BF90      		pop r11
 394 013c AF90      		pop r10
 395 013e 9F90      		pop r9
 396 0140 8F90      		pop r8
 397 0142 7F90      		pop r7
 398               	.LBB17:
 399               	.LBB16:
 400               		.loc 1 204 5 view .LVU81
 401 0144 0C94 0000 		jmp led_set
 402               	.LVL30:
 403               	.L16:
 404               		.loc 1 204 5 view .LVU82
 405               	.LBE16:
 406               	.LBE17:
 407               	.LBB18:
 408               	.LBB11:
 149:./tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 409               		.loc 1 149 26 view .LVU83
 410 0148 80E0      		ldi r24,0
 411 014a 00C0      		rjmp .L9
 412               	.LVL31:
 413               	.L17:
 149:./tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 414               		.loc 1 149 26 view .LVU84
 415 014c CA01      		movw r24,r20
 416               	.LVL32:
 149:./tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 417               		.loc 1 149 26 view .LVU85
 418 014e 00C0      		rjmp .L10
 419               	.LVL33:
 420               	.L4:
 421               	/* epilogue start */
 149:./tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 422               		.loc 1 149 26 view .LVU86
 423               	.LBE11:
 424               	.LBE18:
 199:./tmk_core/common/keyboard.c **** 
 425               		.loc 1 199 1 view .LVU87
 426 0150 0F90      		pop __tmp_reg__
 427 0152 0F90      		pop __tmp_reg__
 428 0154 0F90      		pop __tmp_reg__
 429 0156 0F90      		pop __tmp_reg__
 430 0158 0F90      		pop __tmp_reg__
 431 015a DF91      		pop r29
 432 015c CF91      		pop r28
 433 015e 1F91      		pop r17
 434 0160 0F91      		pop r16
 435 0162 FF90      		pop r15
 436 0164 EF90      		pop r14
 437 0166 DF90      		pop r13
 438 0168 CF90      		pop r12
 439 016a BF90      		pop r11
 440 016c AF90      		pop r10
 441 016e 9F90      		pop r9
 442 0170 8F90      		pop r8
 443 0172 7F90      		pop r7
 444 0174 0895      		ret
 445               		.cfi_endproc
 446               	.LFE110:
 448               		.section	.text.keyboard_set_leds,"ax",@progbits
 449               	.global	keyboard_set_leds
 451               	keyboard_set_leds:
 452               	.LVL34:
 453               	.LFB111:
 202:./tmk_core/common/keyboard.c ****     if (debug_keyboard) { debug("keyboard_set_led: "); debug_hex8(leds); debug("\n"); }
 454               		.loc 1 202 1 is_stmt 1 view -0
 455               		.cfi_startproc
 456               	/* prologue: function */
 457               	/* frame size = 0 */
 458               	/* stack size = 0 */
 459               	.L__stack_usage = 0
 203:./tmk_core/common/keyboard.c ****     led_set(leds);
 460               		.loc 1 203 5 view .LVU89
 203:./tmk_core/common/keyboard.c ****     led_set(leds);
 461               		.loc 1 203 54 view .LVU90
 203:./tmk_core/common/keyboard.c ****     led_set(leds);
 462               		.loc 1 203 72 view .LVU91
 203:./tmk_core/common/keyboard.c ****     led_set(leds);
 463               		.loc 1 203 85 view .LVU92
 464               		.loc 1 204 5 view .LVU93
 465 0000 0C94 0000 		jmp led_set
 466               	.LVL35:
 467               		.loc 1 204 5 is_stmt 0 view .LVU94
 468               		.cfi_endproc
 469               	.LFE111:
 471               		.section	.bss.led_status.0,"aw",@nobits
 474               	led_status.0:
 475 0000 00        		.zero	1
 476               		.section	.bss.matrix_prev.1,"aw",@nobits
 479               	matrix_prev.1:
 480 0000 0000 0000 		.zero	16
 480      0000 0000 
 480      0000 0000 
 480      0000 0000 
 481               		.text
 482               	.Letext0:
 483               		.file 2 "/usr/avr/include/stdint.h"
 484               		.file 3 "./tmk_core/common/keyboard.h"
 485               		.file 4 "./tmk_core/common/matrix.h"
 486               		.file 5 "./tmk_core/common/debug.h"
 487               		.file 6 "./tmk_core/common/led.h"
 488               		.file 7 "./tmk_core/common/action.h"
 489               		.file 8 "./tmk_core/common/host.h"
 490               		.file 9 "./tmk_core/common/timer.h"
 491               		.file 10 "./tmk_core/common/mousekey.h"
 492               		.file 11 "./tmk_core/common/bootmagic.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keyboard.c
     /tmp/ccKGVw1V.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccKGVw1V.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccKGVw1V.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccKGVw1V.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/ccKGVw1V.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccKGVw1V.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccKGVw1V.s:15     .text.matrix_setup:0000000000000000 matrix_setup
     /tmp/ccKGVw1V.s:17     .text.matrix_setup:0000000000000000 .Loc.0
     /tmp/ccKGVw1V.s:18     .text.matrix_setup:0000000000000000 L0
     /tmp/ccKGVw1V.s:23     .text.matrix_setup:0000000000000000 .Loc.1
     /tmp/ccKGVw1V.s:26     .text.matrix_setup:0000000000000002 L0
     /tmp/ccKGVw1V.s:32     .text.keyboard_setup:0000000000000000 keyboard_setup
     /tmp/ccKGVw1V.s:34     .text.keyboard_setup:0000000000000000 .Loc.2
     /tmp/ccKGVw1V.s:35     .text.keyboard_setup:0000000000000000 L0
     /tmp/ccKGVw1V.s:40     .text.keyboard_setup:0000000000000000 .Loc.3
     /tmp/ccKGVw1V.s:43     .text.keyboard_setup:0000000000000004 L0
     /tmp/ccKGVw1V.s:49     .text.keyboard_init:0000000000000000 keyboard_init
     /tmp/ccKGVw1V.s:51     .text.keyboard_init:0000000000000000 .Loc.4
     /tmp/ccKGVw1V.s:52     .text.keyboard_init:0000000000000000 L0
     /tmp/ccKGVw1V.s:57     .text.keyboard_init:0000000000000000 .Loc.5
     /tmp/ccKGVw1V.s:60     .text.keyboard_init:0000000000000004 .Loc.6
     /tmp/ccKGVw1V.s:63     .text.keyboard_init:0000000000000008 .Loc.7
     /tmp/ccKGVw1V.s:66     .text.keyboard_init:000000000000000c L0
     /tmp/ccKGVw1V.s:72     .text.keyboard_task:0000000000000000 keyboard_task
     /tmp/ccKGVw1V.s:74     .text.keyboard_task:0000000000000000 .Loc.8
     /tmp/ccKGVw1V.s:75     .text.keyboard_task:0000000000000000 L0
     /tmp/ccKGVw1V.s:128    .text.keyboard_task:000000000000001c L0
     /tmp/ccKGVw1V.s:129    .text.keyboard_task:000000000000001e L0
     /tmp/ccKGVw1V.s:141    .text.keyboard_task:0000000000000024 .Loc.9
     /tmp/ccKGVw1V.s:142    .text.keyboard_task:0000000000000024 .Loc.10
     /tmp/ccKGVw1V.s:143    .text.keyboard_task:0000000000000024 .Loc.11
     /tmp/ccKGVw1V.s:145    .text.keyboard_task:0000000000000024 .Loc.12
     /tmp/ccKGVw1V.s:146    .text.keyboard_task:0000000000000024 .Loc.13
     /tmp/ccKGVw1V.s:149    .text.keyboard_task:0000000000000028 .Loc.14
     /tmp/ccKGVw1V.s:151    .text.keyboard_task:0000000000000028 .Loc.15
     /tmp/ccKGVw1V.s:152    .text.keyboard_task:0000000000000028 .Loc.16
     /tmp/ccKGVw1V.s:479    .bss.matrix_prev.1:0000000000000000 matrix_prev.1
     /tmp/ccKGVw1V.s:158    .text.keyboard_task:0000000000000030 .Loc.17
     /tmp/ccKGVw1V.s:163    .text.keyboard_task:0000000000000034 .Loc.18
     /tmp/ccKGVw1V.s:169    .text.keyboard_task:000000000000003a .Loc.19
     /tmp/ccKGVw1V.s:172    .text.keyboard_task:000000000000003c .Loc.20
     /tmp/ccKGVw1V.s:174    .text.keyboard_task:000000000000003c .Loc.21
     /tmp/ccKGVw1V.s:175    .text.keyboard_task:000000000000003c .Loc.22
     /tmp/ccKGVw1V.s:181    .text.keyboard_task:0000000000000044 .Loc.23
     /tmp/ccKGVw1V.s:182    .text.keyboard_task:0000000000000044 .Loc.24
     /tmp/ccKGVw1V.s:188    .text.keyboard_task:000000000000004c .Loc.25
     /tmp/ccKGVw1V.s:189    .text.keyboard_task:000000000000004c .Loc.26
     /tmp/ccKGVw1V.s:195    .text.keyboard_task:0000000000000052 .Loc.27
     /tmp/ccKGVw1V.s:196    .text.keyboard_task:0000000000000052 .Loc.28
     /tmp/ccKGVw1V.s:200    .text.keyboard_task:0000000000000056 .Loc.29
     /tmp/ccKGVw1V.s:205    .text.keyboard_task:000000000000005c .Loc.30
     /tmp/ccKGVw1V.s:206    .text.keyboard_task:000000000000005c .Loc.31
     /tmp/ccKGVw1V.s:217    .text.keyboard_task:0000000000000070 .Loc.32
     /tmp/ccKGVw1V.s:228    .text.keyboard_task:000000000000007e .Loc.33
     /tmp/ccKGVw1V.s:229    .text.keyboard_task:000000000000007e .Loc.34
     /tmp/ccKGVw1V.s:231    .text.keyboard_task:0000000000000082 .Loc.35
     /tmp/ccKGVw1V.s:233    .text.keyboard_task:0000000000000084 .Loc.36
     /tmp/ccKGVw1V.s:237    .text.keyboard_task:0000000000000088 .Loc.37
     /tmp/ccKGVw1V.s:241    .text.keyboard_task:000000000000008e .Loc.38
     /tmp/ccKGVw1V.s:243    .text.keyboard_task:000000000000008e .Loc.39
     /tmp/ccKGVw1V.s:245    .text.keyboard_task:000000000000008e .Loc.40
     /tmp/ccKGVw1V.s:246    .text.keyboard_task:000000000000008e .Loc.41
     /tmp/ccKGVw1V.s:247    .text.keyboard_task:000000000000008e .Loc.42
     /tmp/ccKGVw1V.s:250    .text.keyboard_task:0000000000000090 .Loc.43
     /tmp/ccKGVw1V.s:254    .text.keyboard_task:0000000000000096 .Loc.44
     /tmp/ccKGVw1V.s:257    .text.keyboard_task:000000000000009c L0
     /tmp/ccKGVw1V.s:263    .text.keyboard_task:00000000000000a2 .Loc.45
     /tmp/ccKGVw1V.s:264    .text.keyboard_task:00000000000000a2 .Loc.46
     /tmp/ccKGVw1V.s:268    .text.keyboard_task:00000000000000a8 .Loc.47
     /tmp/ccKGVw1V.s:269    .text.keyboard_task:00000000000000a8 .Loc.48
     /tmp/ccKGVw1V.s:279    .text.keyboard_task:00000000000000b6 .Loc.49
     /tmp/ccKGVw1V.s:283    .text.keyboard_task:00000000000000bc .Loc.50
     /tmp/ccKGVw1V.s:287    .text.keyboard_task:00000000000000c2 .Loc.51
     /tmp/ccKGVw1V.s:289    .text.keyboard_task:00000000000000c6 L0
     /tmp/ccKGVw1V.s:294    .text.keyboard_task:00000000000000c8 .Loc.52
     /tmp/ccKGVw1V.s:295    .text.keyboard_task:00000000000000c8 .Loc.53
     /tmp/ccKGVw1V.s:298    .text.keyboard_task:00000000000000cc .Loc.54
     /tmp/ccKGVw1V.s:302    .text.keyboard_task:00000000000000d0 .Loc.55
     /tmp/ccKGVw1V.s:308    .text.keyboard_task:00000000000000d8 .Loc.56
     /tmp/ccKGVw1V.s:310    .text.keyboard_task:00000000000000da .Loc.57
     /tmp/ccKGVw1V.s:313    .text.keyboard_task:00000000000000de .Loc.58
     /tmp/ccKGVw1V.s:315    .text.keyboard_task:00000000000000e0 .Loc.59
     /tmp/ccKGVw1V.s:319    .text.keyboard_task:00000000000000e6 .Loc.60
     /tmp/ccKGVw1V.s:326    .text.keyboard_task:00000000000000f2 .Loc.61
     /tmp/ccKGVw1V.s:327    .text.keyboard_task:00000000000000f2 .Loc.62
     /tmp/ccKGVw1V.s:331    .text.keyboard_task:00000000000000f6 .Loc.63
     /tmp/ccKGVw1V.s:341    .text.keyboard_task:0000000000000108 .Loc.64
     /tmp/ccKGVw1V.s:344    .text.keyboard_task:0000000000000108 .Loc.65
     /tmp/ccKGVw1V.s:348    .text.keyboard_task:0000000000000108 .Loc.66
     /tmp/ccKGVw1V.s:351    .text.keyboard_task:000000000000010c .Loc.67
     /tmp/ccKGVw1V.s:352    .text.keyboard_task:000000000000010c .Loc.68
     /tmp/ccKGVw1V.s:355    .text.keyboard_task:0000000000000110 .Loc.69
     /tmp/ccKGVw1V.s:474    .bss.led_status.0:0000000000000000 led_status.0
     /tmp/ccKGVw1V.s:359    .text.keyboard_task:0000000000000118 .Loc.70
     /tmp/ccKGVw1V.s:360    .text.keyboard_task:0000000000000118 .Loc.71
     /tmp/ccKGVw1V.s:363    .text.keyboard_task:000000000000011c .Loc.72
     /tmp/ccKGVw1V.s:365    .text.keyboard_task:0000000000000120 .Loc.73
     /tmp/ccKGVw1V.s:369    .text.keyboard_task:0000000000000120 .Loc.74
     /tmp/ccKGVw1V.s:371    .text.keyboard_task:0000000000000120 .Loc.75
     /tmp/ccKGVw1V.s:372    .text.keyboard_task:0000000000000120 .Loc.76
     /tmp/ccKGVw1V.s:373    .text.keyboard_task:0000000000000120 .Loc.77
     /tmp/ccKGVw1V.s:374    .text.keyboard_task:0000000000000120 .Loc.78
     /tmp/ccKGVw1V.s:375    .text.keyboard_task:0000000000000120 .Loc.79
     /tmp/ccKGVw1V.s:379    .text.keyboard_task:0000000000000120 .Loc.80
     /tmp/ccKGVw1V.s:400    .text.keyboard_task:0000000000000144 .Loc.81
     /tmp/ccKGVw1V.s:404    .text.keyboard_task:0000000000000148 .Loc.82
     /tmp/ccKGVw1V.s:409    .text.keyboard_task:0000000000000148 .Loc.83
     /tmp/ccKGVw1V.s:414    .text.keyboard_task:000000000000014c .Loc.84
     /tmp/ccKGVw1V.s:417    .text.keyboard_task:000000000000014e .Loc.85
     /tmp/ccKGVw1V.s:422    .text.keyboard_task:0000000000000150 .Loc.86
     /tmp/ccKGVw1V.s:425    .text.keyboard_task:0000000000000150 .Loc.87
     /tmp/ccKGVw1V.s:445    .text.keyboard_task:0000000000000176 L0
     /tmp/ccKGVw1V.s:451    .text.keyboard_set_leds:0000000000000000 keyboard_set_leds
     /tmp/ccKGVw1V.s:454    .text.keyboard_set_leds:0000000000000000 .Loc.88
     /tmp/ccKGVw1V.s:455    .text.keyboard_set_leds:0000000000000000 L0
     /tmp/ccKGVw1V.s:460    .text.keyboard_set_leds:0000000000000000 .Loc.89
     /tmp/ccKGVw1V.s:461    .text.keyboard_set_leds:0000000000000000 .Loc.90
     /tmp/ccKGVw1V.s:462    .text.keyboard_set_leds:0000000000000000 .Loc.91
     /tmp/ccKGVw1V.s:463    .text.keyboard_set_leds:0000000000000000 .Loc.92
     /tmp/ccKGVw1V.s:464    .text.keyboard_set_leds:0000000000000000 .Loc.93
     /tmp/ccKGVw1V.s:467    .text.keyboard_set_leds:0000000000000004 .Loc.94
     /tmp/ccKGVw1V.s:468    .text.keyboard_set_leds:0000000000000004 L0
     /tmp/ccKGVw1V.s:29     .text.matrix_setup:0000000000000002 L0
     /tmp/ccKGVw1V.s:46     .text.keyboard_setup:0000000000000004 L0
     /tmp/ccKGVw1V.s:69     .text.keyboard_init:000000000000000c L0
     /tmp/ccKGVw1V.s:448    .text.keyboard_task:0000000000000176 L0
     /tmp/ccKGVw1V.s:471    .text.keyboard_set_leds:0000000000000004 L0
                     .debug_frame:0000000000000000 L0
     /tmp/ccKGVw1V.s:226    .text.keyboard_task:000000000000007e .L5
     /tmp/ccKGVw1V.s:168    .text.keyboard_task:000000000000003a .L6
     /tmp/ccKGVw1V.s:343    .text.keyboard_task:0000000000000108 .L12
     /tmp/ccKGVw1V.s:403    .text.keyboard_task:0000000000000148 .L16
     /tmp/ccKGVw1V.s:194    .text.keyboard_task:0000000000000052 .L14
     /tmp/ccKGVw1V.s:276    .text.keyboard_task:00000000000000b2 .L21
     /tmp/ccKGVw1V.s:273    .text.keyboard_task:00000000000000ae .L11
     /tmp/ccKGVw1V.s:413    .text.keyboard_task:000000000000014c .L17
     /tmp/ccKGVw1V.s:307    .text.keyboard_task:00000000000000d8 .L11
     /tmp/ccKGVw1V.s:420    .text.keyboard_task:0000000000000150 .L4
     /tmp/ccKGVw1V.s:292    .text.keyboard_task:00000000000000c8 .L9
     /tmp/ccKGVw1V.s:262    .text.keyboard_task:00000000000000a2 .L10
     /tmp/ccKGVw1V.s:1081   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccKGVw1V.s:1969   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccKGVw1V.s:2007   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccKGVw1V.s:73     .text.keyboard_task:0000000000000000 .LFB110
     /tmp/ccKGVw1V.s:446    .text.keyboard_task:0000000000000176 .LFE110
     /tmp/ccKGVw1V.s:1672   .debug_loc:0000000000000000 .LLST0
     /tmp/ccKGVw1V.s:1777   .debug_loc:00000000000000dd .LLST1
     /tmp/ccKGVw1V.s:1770   .debug_loc:00000000000000d7 .LVUS1
     /tmp/ccKGVw1V.s:1810   .debug_loc:0000000000000117 .LLST2
     /tmp/ccKGVw1V.s:1803   .debug_loc:0000000000000111 .LVUS2
     /tmp/ccKGVw1V.s:1847   .debug_loc:0000000000000155 .LLST3
     /tmp/ccKGVw1V.s:1836   .debug_loc:000000000000014b .LVUS3
     /tmp/ccKGVw1V.s:1886   .debug_loc:00000000000001a3 .LLST4
     /tmp/ccKGVw1V.s:1873   .debug_loc:0000000000000197 .LVUS4
     /tmp/ccKGVw1V.s:312    .text.keyboard_task:00000000000000de .LVL22
     /tmp/ccKGVw1V.s:325    .text.keyboard_task:00000000000000f2 .LVL23
     /tmp/ccKGVw1V.s:178    .text.keyboard_task:0000000000000042 .LVL8
     /tmp/ccKGVw1V.s:235    .text.keyboard_task:0000000000000088 .LVL16
     /tmp/ccKGVw1V.s:368    .text.keyboard_task:0000000000000120 .LBI14
     /tmp/ccKGVw1V.s:1922   .debug_loc:00000000000001f5 .LLST5
     /tmp/ccKGVw1V.s:1919   .debug_loc:00000000000001f3 .LVUS5
     /tmp/ccKGVw1V.s:402    .text.keyboard_task:0000000000000148 .LVL30
     /tmp/ccKGVw1V.s:148    .text.keyboard_task:0000000000000028 .LVL5
     /tmp/ccKGVw1V.s:212    .text.keyboard_task:0000000000000068 .LVL13
     /tmp/ccKGVw1V.s:223    .text.keyboard_task:000000000000007c .LVL14
     /tmp/ccKGVw1V.s:350    .text.keyboard_task:000000000000010c .LVL26
     /tmp/ccKGVw1V.s:354    .text.keyboard_task:0000000000000110 .LVL27
     /tmp/ccKGVw1V.s:362    .text.keyboard_task:000000000000011c .LVL28
     /tmp/ccKGVw1V.s:50     .text.keyboard_init:0000000000000000 .LFB109
     /tmp/ccKGVw1V.s:67     .text.keyboard_init:000000000000000c .LFE109
     /tmp/ccKGVw1V.s:59     .text.keyboard_init:0000000000000004 .LVL1
     /tmp/ccKGVw1V.s:62     .text.keyboard_init:0000000000000008 .LVL2
     /tmp/ccKGVw1V.s:65     .text.keyboard_init:000000000000000c .LVL3
     /tmp/ccKGVw1V.s:33     .text.keyboard_setup:0000000000000000 .LFB108
     /tmp/ccKGVw1V.s:44     .text.keyboard_setup:0000000000000004 .LFE108
     /tmp/ccKGVw1V.s:42     .text.keyboard_setup:0000000000000004 .LVL0
     /tmp/ccKGVw1V.s:16     .text.matrix_setup:0000000000000000 .LFB107
     /tmp/ccKGVw1V.s:27     .text.matrix_setup:0000000000000002 .LFE107
     /tmp/ccKGVw1V.s:453    .text.keyboard_set_leds:0000000000000000 .LFB111
     /tmp/ccKGVw1V.s:469    .text.keyboard_set_leds:0000000000000004 .LFE111
     /tmp/ccKGVw1V.s:1934   .debug_loc:000000000000020c .LLST6
     /tmp/ccKGVw1V.s:1929   .debug_loc:0000000000000208 .LVUS6
     /tmp/ccKGVw1V.s:466    .text.keyboard_set_leds:0000000000000004 .LVL35
     /tmp/ccKGVw1V.s:77     .text.keyboard_task:0000000000000002 .LCFI0
     /tmp/ccKGVw1V.s:81     .text.keyboard_task:0000000000000004 .LCFI1
     /tmp/ccKGVw1V.s:85     .text.keyboard_task:0000000000000006 .LCFI2
     /tmp/ccKGVw1V.s:89     .text.keyboard_task:0000000000000008 .LCFI3
     /tmp/ccKGVw1V.s:93     .text.keyboard_task:000000000000000a .LCFI4
     /tmp/ccKGVw1V.s:97     .text.keyboard_task:000000000000000c .LCFI5
     /tmp/ccKGVw1V.s:101    .text.keyboard_task:000000000000000e .LCFI6
     /tmp/ccKGVw1V.s:105    .text.keyboard_task:0000000000000010 .LCFI7
     /tmp/ccKGVw1V.s:109    .text.keyboard_task:0000000000000012 .LCFI8
     /tmp/ccKGVw1V.s:113    .text.keyboard_task:0000000000000014 .LCFI9
     /tmp/ccKGVw1V.s:117    .text.keyboard_task:0000000000000016 .LCFI10
     /tmp/ccKGVw1V.s:121    .text.keyboard_task:0000000000000018 .LCFI11
     /tmp/ccKGVw1V.s:125    .text.keyboard_task:000000000000001a .LCFI12
     /tmp/ccKGVw1V.s:131    .text.keyboard_task:0000000000000020 .LCFI13
     /tmp/ccKGVw1V.s:135    .text.keyboard_task:0000000000000024 .LCFI14
     /tmp/ccKGVw1V.s:144    .text.keyboard_task:0000000000000024 .LVL4
     /tmp/ccKGVw1V.s:167    .text.keyboard_task:000000000000003a .LVL6
     /tmp/ccKGVw1V.s:180    .text.keyboard_task:0000000000000044 .LVL9
     /tmp/ccKGVw1V.s:301    .text.keyboard_task:00000000000000d0 .LVL21
     /tmp/ccKGVw1V.s:419    .text.keyboard_task:0000000000000150 .LVL33
     /tmp/ccKGVw1V.s:187    .text.keyboard_task:000000000000004c .LVL10
     /tmp/ccKGVw1V.s:193    .text.keyboard_task:0000000000000052 .LVL11
     /tmp/ccKGVw1V.s:225    .text.keyboard_task:000000000000007e .LVL15
     /tmp/ccKGVw1V.s:249    .text.keyboard_task:0000000000000090 .LVL18
     /tmp/ccKGVw1V.s:171    .text.keyboard_task:000000000000003c .LVL7
     /tmp/ccKGVw1V.s:199    .text.keyboard_task:0000000000000056 .LVL12
     /tmp/ccKGVw1V.s:330    .text.keyboard_task:00000000000000f6 .LVL24
     /tmp/ccKGVw1V.s:244    .text.keyboard_task:000000000000008e .LVL17
     /tmp/ccKGVw1V.s:261    .text.keyboard_task:00000000000000a2 .LVL19
     /tmp/ccKGVw1V.s:291    .text.keyboard_task:00000000000000c8 .LVL20
     /tmp/ccKGVw1V.s:412    .text.keyboard_task:000000000000014c .LVL31
     /tmp/ccKGVw1V.s:416    .text.keyboard_task:000000000000014e .LVL32
     /tmp/ccKGVw1V.s:366    .text.keyboard_task:0000000000000120 .LVL29
     /tmp/ccKGVw1V.s:452    .text.keyboard_set_leds:0000000000000000 .LVL34
     /tmp/ccKGVw1V.s:494    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccKGVw1V.s:150    .text.keyboard_task:0000000000000028 .LBB7
     /tmp/ccKGVw1V.s:157    .text.keyboard_task:0000000000000030 .LBE7
     /tmp/ccKGVw1V.s:161    .text.keyboard_task:0000000000000034 .LBB12
     /tmp/ccKGVw1V.s:204    .text.keyboard_task:000000000000005c .LBE12
     /tmp/ccKGVw1V.s:227    .text.keyboard_task:000000000000007e .LBB13
     /tmp/ccKGVw1V.s:347    .text.keyboard_task:0000000000000108 .LBE13
     /tmp/ccKGVw1V.s:407    .text.keyboard_task:0000000000000148 .LBB18
     /tmp/ccKGVw1V.s:424    .text.keyboard_task:0000000000000150 .LBE18
     /tmp/ccKGVw1V.s:162    .text.keyboard_task:0000000000000034 .LBB8
     /tmp/ccKGVw1V.s:173    .text.keyboard_task:000000000000003c .LBE8
     /tmp/ccKGVw1V.s:242    .text.keyboard_task:000000000000008e .LBB10
     /tmp/ccKGVw1V.s:346    .text.keyboard_task:0000000000000108 .LBE10
     /tmp/ccKGVw1V.s:408    .text.keyboard_task:0000000000000148 .LBB11
     /tmp/ccKGVw1V.s:423    .text.keyboard_task:0000000000000150 .LBE11
     /tmp/ccKGVw1V.s:367    .text.keyboard_task:0000000000000120 .LBB14
     /tmp/ccKGVw1V.s:378    .text.keyboard_task:0000000000000120 .LBE14
     /tmp/ccKGVw1V.s:398    .text.keyboard_task:0000000000000144 .LBB17
     /tmp/ccKGVw1V.s:406    .text.keyboard_task:0000000000000148 .LBE17

UNDEFINED SYMBOLS
timer_init
matrix_init
bootmagic
matrix_scan
matrix_get_row
timer_read
action_exec
debug_config
matrix_print
mousekey_task
host_keyboard_leds
led_set
__do_clear_bss
