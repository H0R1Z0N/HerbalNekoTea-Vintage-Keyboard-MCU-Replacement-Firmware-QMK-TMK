   1               		.file	"action_macro.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.file 1 "./tmk_core/common/action_macro.c"
  12               		.section	.text.action_macro_play,"ax",@progbits
  13               	.global	action_macro_play
  15               	action_macro_play:
  16               	.LVL0:
  17               	.LFB107:
   1:./tmk_core/common/action_macro.c **** /*
   2:./tmk_core/common/action_macro.c **** Copyright 2013 Jun Wako <wakojun@gmail.com>
   3:./tmk_core/common/action_macro.c **** 
   4:./tmk_core/common/action_macro.c **** This program is free software: you can redistribute it and/or modify
   5:./tmk_core/common/action_macro.c **** it under the terms of the GNU General Public License as published by
   6:./tmk_core/common/action_macro.c **** the Free Software Foundation, either version 2 of the License, or
   7:./tmk_core/common/action_macro.c **** (at your option) any later version.
   8:./tmk_core/common/action_macro.c **** 
   9:./tmk_core/common/action_macro.c **** This program is distributed in the hope that it will be useful,
  10:./tmk_core/common/action_macro.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:./tmk_core/common/action_macro.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:./tmk_core/common/action_macro.c **** GNU General Public License for more details.
  13:./tmk_core/common/action_macro.c **** 
  14:./tmk_core/common/action_macro.c **** You should have received a copy of the GNU General Public License
  15:./tmk_core/common/action_macro.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:./tmk_core/common/action_macro.c **** */
  17:./tmk_core/common/action_macro.c **** #include "action.h"
  18:./tmk_core/common/action_macro.c **** #include "action_util.h"
  19:./tmk_core/common/action_macro.c **** #include "action_macro.h"
  20:./tmk_core/common/action_macro.c **** #include "wait.h"
  21:./tmk_core/common/action_macro.c **** 
  22:./tmk_core/common/action_macro.c **** #ifdef DEBUG_ACTION
  23:./tmk_core/common/action_macro.c **** #include "debug.h"
  24:./tmk_core/common/action_macro.c **** #else
  25:./tmk_core/common/action_macro.c **** #include "nodebug.h"
  26:./tmk_core/common/action_macro.c **** #endif
  27:./tmk_core/common/action_macro.c **** 
  28:./tmk_core/common/action_macro.c **** 
  29:./tmk_core/common/action_macro.c **** #ifndef NO_ACTION_MACRO
  30:./tmk_core/common/action_macro.c **** 
  31:./tmk_core/common/action_macro.c **** #define MACRO_READ()  (macro = MACRO_GET(macro_p++))
  32:./tmk_core/common/action_macro.c **** void action_macro_play(const macro_t *macro_p)
  33:./tmk_core/common/action_macro.c **** {
  18               		.loc 1 33 1 view -0
  19               		.cfi_startproc
  20               		.loc 1 33 1 is_stmt 0 view .LVU1
  21 0000 FF92      		push r15
  22               	.LCFI0:
  23               		.cfi_def_cfa_offset 3
  24               		.cfi_offset 15, -2
  25 0002 0F93      		push r16
  26               	.LCFI1:
  27               		.cfi_def_cfa_offset 4
  28               		.cfi_offset 16, -3
  29 0004 1F93      		push r17
  30               	.LCFI2:
  31               		.cfi_def_cfa_offset 5
  32               		.cfi_offset 17, -4
  33 0006 CF93      		push r28
  34               	.LCFI3:
  35               		.cfi_def_cfa_offset 6
  36               		.cfi_offset 28, -5
  37 0008 DF93      		push r29
  38               	.LCFI4:
  39               		.cfi_def_cfa_offset 7
  40               		.cfi_offset 29, -6
  41               	/* prologue: function */
  42               	/* frame size = 0 */
  43               	/* stack size = 5 */
  44               	.L__stack_usage = 5
  45 000a 8C01      		movw r16,r24
  34:./tmk_core/common/action_macro.c ****     macro_t macro = END;
  46               		.loc 1 34 5 is_stmt 1 view .LVU2
  47               	.LVL1:
  35:./tmk_core/common/action_macro.c ****     uint8_t interval = 0;
  48               		.loc 1 35 5 view .LVU3
  36:./tmk_core/common/action_macro.c **** 
  37:./tmk_core/common/action_macro.c ****     if (!macro_p) return;
  49               		.loc 1 37 5 view .LVU4
  50               		.loc 1 37 8 is_stmt 0 view .LVU5
  51 000c 892B      		or r24,r25
  52 000e 01F0      		breq .L1
  35:./tmk_core/common/action_macro.c ****     uint8_t interval = 0;
  53               		.loc 1 35 13 view .LVU6
  54 0010 F12C      		mov r15,__zero_reg__
  55               	.LVL2:
  56               	.L20:
  38:./tmk_core/common/action_macro.c ****     while (true) {
  57               		.loc 1 38 5 is_stmt 1 view .LVU7
  39:./tmk_core/common/action_macro.c ****         switch (MACRO_READ()) {
  58               		.loc 1 39 9 view .LVU8
  59               	.LBB28:
  60               		.loc 1 39 17 view .LVU9
  61 0012 E801      		movw r28,r16
  62 0014 2196      		adiw r28,1
  63               	.LVL3:
  64               		.loc 1 39 17 view .LVU10
  65               		.loc 1 39 17 view .LVU11
  66 0016 F801      		movw r30,r16
  67               	/* #APP */
  68               	 ;  39 "./tmk_core/common/action_macro.c" 1
  69 0018 8491      		lpm r24, Z
  70               		
  71               	 ;  0 "" 2
  72               	.LVL4:
  73               		.loc 1 39 17 view .LVU12
  74               		.loc 1 39 17 is_stmt 0 view .LVU13
  75               	/* #NOAPP */
  76               	.LBE28:
  77               		.loc 1 39 9 view .LVU14
  78 001a 8437      		cpi r24,lo8(116)
  79 001c 01F4      		brne .+2
  80 001e 00C0      		rjmp .L3
  81               		.loc 1 39 9 view .LVU15
  82 0020 00F4      		brsh .L4
  83 0022 8230      		cpi r24,lo8(2)
  84 0024 01F4      		brne .+2
  85 0026 00C0      		rjmp .L5
  86 0028 00F4      		brsh .L6
  87 002a 8130      		cpi r24,lo8(1)
  88 002c 01F0      		breq .L7
  89               	.LVL5:
  90               	.L1:
  91               	/* epilogue start */
  40:./tmk_core/common/action_macro.c ****             case KEY_DOWN:
  41:./tmk_core/common/action_macro.c ****                 MACRO_READ();
  42:./tmk_core/common/action_macro.c ****                 dprintf("KEY_DOWN(%02X)\n", macro);
  43:./tmk_core/common/action_macro.c ****                 if (IS_MOD(macro)) {
  44:./tmk_core/common/action_macro.c ****                     add_macro_mods(MOD_BIT(macro));
  45:./tmk_core/common/action_macro.c ****                     send_keyboard_report();
  46:./tmk_core/common/action_macro.c ****                 } else {
  47:./tmk_core/common/action_macro.c ****                     register_code(macro);
  48:./tmk_core/common/action_macro.c ****                 }
  49:./tmk_core/common/action_macro.c ****                 break;
  50:./tmk_core/common/action_macro.c ****             case KEY_UP:
  51:./tmk_core/common/action_macro.c ****                 MACRO_READ();
  52:./tmk_core/common/action_macro.c ****                 dprintf("KEY_UP(%02X)\n", macro);
  53:./tmk_core/common/action_macro.c ****                 if (IS_MOD(macro)) {
  54:./tmk_core/common/action_macro.c ****                     del_macro_mods(MOD_BIT(macro));
  55:./tmk_core/common/action_macro.c ****                     send_keyboard_report();
  56:./tmk_core/common/action_macro.c ****                 } else {
  57:./tmk_core/common/action_macro.c ****                     unregister_code(macro);
  58:./tmk_core/common/action_macro.c ****                 }
  59:./tmk_core/common/action_macro.c ****                 break;
  60:./tmk_core/common/action_macro.c ****             case WAIT:
  61:./tmk_core/common/action_macro.c ****                 MACRO_READ();
  62:./tmk_core/common/action_macro.c ****                 dprintf("WAIT(%u)\n", macro);
  63:./tmk_core/common/action_macro.c ****                 { uint8_t ms = macro; while (ms--) wait_ms(1); }
  64:./tmk_core/common/action_macro.c ****                 break;
  65:./tmk_core/common/action_macro.c ****             case INTERVAL:
  66:./tmk_core/common/action_macro.c ****                 interval = MACRO_READ();
  67:./tmk_core/common/action_macro.c ****                 dprintf("INTERVAL(%u)\n", interval);
  68:./tmk_core/common/action_macro.c ****                 break;
  69:./tmk_core/common/action_macro.c ****             case 0x04 ... 0x73:
  70:./tmk_core/common/action_macro.c ****                 dprintf("DOWN(%02X)\n", macro);
  71:./tmk_core/common/action_macro.c ****                 register_code(macro);
  72:./tmk_core/common/action_macro.c ****                 break;
  73:./tmk_core/common/action_macro.c ****             case 0x84 ... 0xF3:
  74:./tmk_core/common/action_macro.c ****                 dprintf("UP(%02X)\n", macro);
  75:./tmk_core/common/action_macro.c ****                 unregister_code(macro&0x7F);
  76:./tmk_core/common/action_macro.c ****                 break;
  77:./tmk_core/common/action_macro.c ****             case END:
  78:./tmk_core/common/action_macro.c ****             default:
  79:./tmk_core/common/action_macro.c ****                 return;
  80:./tmk_core/common/action_macro.c ****         }
  81:./tmk_core/common/action_macro.c ****         // interval
  82:./tmk_core/common/action_macro.c ****         { uint8_t ms = interval; while (ms--) wait_ms(1); }
  83:./tmk_core/common/action_macro.c ****     }
  84:./tmk_core/common/action_macro.c **** }
  92               		.loc 1 84 1 view .LVU16
  93 002e DF91      		pop r29
  94 0030 CF91      		pop r28
  95 0032 1F91      		pop r17
  96 0034 0F91      		pop r16
  97 0036 FF90      		pop r15
  98 0038 0895      		ret
  99               	.LVL6:
 100               	.L6:
  39:./tmk_core/common/action_macro.c ****         switch (MACRO_READ()) {
 101               		.loc 1 39 9 view .LVU17
 102 003a 9CEF      		ldi r25,lo8(-4)
 103 003c 980F      		add r25,r24
 104 003e 9037      		cpi r25,lo8(112)
 105 0040 00F4      		brsh .L1
  70:./tmk_core/common/action_macro.c ****                 register_code(macro);
 106               		.loc 1 70 47 is_stmt 1 view .LVU18
  71:./tmk_core/common/action_macro.c ****                 break;
 107               		.loc 1 71 17 view .LVU19
 108 0042 0E94 0000 		call register_code
 109               	.LVL7:
  72:./tmk_core/common/action_macro.c ****             case 0x84 ... 0xF3:
 110               		.loc 1 72 17 view .LVU20
 111 0046 00C0      		rjmp .L10
 112               	.LVL8:
 113               	.L4:
  39:./tmk_core/common/action_macro.c ****             case KEY_DOWN:
 114               		.loc 1 39 9 is_stmt 0 view .LVU21
 115 0048 8537      		cpi r24,lo8(117)
 116 004a 01F4      		brne .+2
 117 004c 00C0      		rjmp .L9
 118 004e 9CE7      		ldi r25,lo8(124)
 119 0050 980F      		add r25,r24
 120 0052 9037      		cpi r25,lo8(112)
 121 0054 00F4      		brsh .L1
  74:./tmk_core/common/action_macro.c ****                 unregister_code(macro&0x7F);
 122               		.loc 1 74 45 is_stmt 1 view .LVU22
  75:./tmk_core/common/action_macro.c ****                 break;
 123               		.loc 1 75 17 view .LVU23
 124 0056 8F77      		andi r24,lo8(127)
 125               	.LVL9:
  75:./tmk_core/common/action_macro.c ****                 break;
 126               		.loc 1 75 17 is_stmt 0 view .LVU24
 127 0058 0E94 0000 		call unregister_code
 128               	.LVL10:
  76:./tmk_core/common/action_macro.c ****             case END:
 129               		.loc 1 76 17 is_stmt 1 view .LVU25
 130               	.L10:
 131               	.LBB29:
  39:./tmk_core/common/action_macro.c ****             case KEY_DOWN:
 132               		.loc 1 39 17 is_stmt 0 view .LVU26
 133 005c 8E01      		movw r16,r28
 134               	.LVL11:
  39:./tmk_core/common/action_macro.c ****             case KEY_DOWN:
 135               		.loc 1 39 17 view .LVU27
 136 005e 00C0      		rjmp .L12
 137               	.LVL12:
 138               	.L7:
  39:./tmk_core/common/action_macro.c ****             case KEY_DOWN:
 139               		.loc 1 39 17 view .LVU28
 140               	.LBE29:
  41:./tmk_core/common/action_macro.c ****                 dprintf("KEY_DOWN(%02X)\n", macro);
 141               		.loc 1 41 17 is_stmt 1 view .LVU29
 142               	.LBB30:
  41:./tmk_core/common/action_macro.c ****                 dprintf("KEY_DOWN(%02X)\n", macro);
 143               		.loc 1 41 17 view .LVU30
  41:./tmk_core/common/action_macro.c ****                 dprintf("KEY_DOWN(%02X)\n", macro);
 144               		.loc 1 41 17 view .LVU31
  41:./tmk_core/common/action_macro.c ****                 dprintf("KEY_DOWN(%02X)\n", macro);
 145               		.loc 1 41 17 view .LVU32
 146 0060 FE01      		movw r30,r28
 147               	/* #APP */
 148               	 ;  41 "./tmk_core/common/action_macro.c" 1
 149 0062 8491      		lpm r24, Z
 150               		
 151               	 ;  0 "" 2
 152               	.LVL13:
  41:./tmk_core/common/action_macro.c ****                 dprintf("KEY_DOWN(%02X)\n", macro);
 153               		.loc 1 41 17 view .LVU33
  41:./tmk_core/common/action_macro.c ****                 dprintf("KEY_DOWN(%02X)\n", macro);
 154               		.loc 1 41 17 is_stmt 0 view .LVU34
 155               	/* #NOAPP */
 156               	.LBE30:
  42:./tmk_core/common/action_macro.c ****                 if (IS_MOD(macro)) {
 157               		.loc 1 42 51 is_stmt 1 view .LVU35
  43:./tmk_core/common/action_macro.c ****                     add_macro_mods(MOD_BIT(macro));
 158               		.loc 1 43 17 view .LVU36
  43:./tmk_core/common/action_macro.c ****                     add_macro_mods(MOD_BIT(macro));
 159               		.loc 1 43 21 is_stmt 0 view .LVU37
 160 0064 90E2      		ldi r25,lo8(32)
 161 0066 980F      		add r25,r24
  43:./tmk_core/common/action_macro.c ****                     add_macro_mods(MOD_BIT(macro));
 162               		.loc 1 43 20 view .LVU38
 163 0068 9830      		cpi r25,lo8(8)
 164 006a 00F4      		brsh .L11
  44:./tmk_core/common/action_macro.c ****                     send_keyboard_report();
 165               		.loc 1 44 21 is_stmt 1 view .LVU39
  44:./tmk_core/common/action_macro.c ****                     send_keyboard_report();
 166               		.loc 1 44 36 is_stmt 0 view .LVU40
 167 006c 8770      		andi r24,lo8(7)
 168               	.LVL14:
  44:./tmk_core/common/action_macro.c ****                     send_keyboard_report();
 169               		.loc 1 44 21 view .LVU41
 170 006e 91E0      		ldi r25,lo8(1)
 171 0070 00C0      		rjmp 2f
 172               		1:
 173 0072 990F      		lsl r25
 174               		2:
 175 0074 8A95      		dec r24
 176 0076 02F4      		brpl 1b
 177 0078 892F      		mov r24,r25
 178 007a 0E94 0000 		call add_macro_mods
 179               	.LVL15:
  45:./tmk_core/common/action_macro.c ****                 } else {
 180               		.loc 1 45 21 is_stmt 1 view .LVU42
 181               	.L25:
  55:./tmk_core/common/action_macro.c ****                 } else {
 182               		.loc 1 55 21 view .LVU43
 183 007e 0E94 0000 		call send_keyboard_report
 184               	.LVL16:
 185 0082 00C0      		rjmp .L15
 186               	.LVL17:
 187               	.L11:
  47:./tmk_core/common/action_macro.c ****                 }
 188               		.loc 1 47 21 view .LVU44
 189 0084 0E94 0000 		call register_code
 190               	.LVL18:
 191               	.L15:
 192               	.LBB31:
  51:./tmk_core/common/action_macro.c ****                 dprintf("KEY_UP(%02X)\n", macro);
 193               		.loc 1 51 17 is_stmt 0 view .LVU45
 194 0088 0E5F      		subi r16,-2
 195 008a 1F4F      		sbci r17,-1
 196               	.LVL19:
 197               	.L12:
  51:./tmk_core/common/action_macro.c ****                 dprintf("KEY_UP(%02X)\n", macro);
 198               		.loc 1 51 17 view .LVU46
 199               	.LBE31:
 200               	.LBB32:
  82:./tmk_core/common/action_macro.c ****     }
 201               		.loc 1 82 11 is_stmt 1 view .LVU47
  82:./tmk_core/common/action_macro.c ****     }
 202               		.loc 1 82 34 view .LVU48
  82:./tmk_core/common/action_macro.c ****     }
 203               		.loc 1 82 40 is_stmt 0 view .LVU49
 204 008c 8F2D      		mov r24,r15
 205               	.LVL20:
 206               	.L18:
  82:./tmk_core/common/action_macro.c ****     }
 207               		.loc 1 82 41 is_stmt 1 discriminator 1 view .LVU50
  82:./tmk_core/common/action_macro.c ****     }
 208               		.loc 1 82 41 is_stmt 0 discriminator 1 view .LVU51
 209 008e 8823      		tst r24
 210 0090 01F4      		brne .+2
 211 0092 00C0      		rjmp .L20
  82:./tmk_core/common/action_macro.c ****     }
 212               		.loc 1 82 47 is_stmt 1 view .LVU52
 213               	.LVL21:
 214               	.LBB33:
 215               	.LBI33:
 216               		.file 2 "/usr/avr/include/util/delay.h"
   1:/usr/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/avr/include/util/delay.h **** 
   6:/usr/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/avr/include/util/delay.h **** 
   9:/usr/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/avr/include/util/delay.h **** 
  12:/usr/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/avr/include/util/delay.h ****      distribution.
  16:/usr/avr/include/util/delay.h **** 
  17:/usr/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/avr/include/util/delay.h **** 
  21:/usr/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/avr/include/util/delay.h **** 
  33:/usr/avr/include/util/delay.h **** /* $Id: delay.h.in 2551 2020-10-10 20:33:35Z joerg_wunsch $ */
  34:/usr/avr/include/util/delay.h **** 
  35:/usr/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/avr/include/util/delay.h **** 
  38:/usr/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/usr/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/usr/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/usr/avr/include/util/delay.h **** #  endif
  42:/usr/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/usr/avr/include/util/delay.h **** 
  44:/usr/avr/include/util/delay.h **** #include <inttypes.h>
  45:/usr/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/usr/avr/include/util/delay.h **** #include <math.h>
  47:/usr/avr/include/util/delay.h **** 
  48:/usr/avr/include/util/delay.h **** /** \file */
  49:/usr/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/usr/avr/include/util/delay.h ****     \code
  51:/usr/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/usr/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/usr/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/usr/avr/include/util/delay.h ****     \endcode
  55:/usr/avr/include/util/delay.h **** 
  56:/usr/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/usr/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/usr/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/usr/avr/include/util/delay.h ****     used.
  60:/usr/avr/include/util/delay.h **** 
  61:/usr/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/usr/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/usr/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/usr/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/usr/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/usr/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/usr/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/usr/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/usr/avr/include/util/delay.h **** 
  70:/usr/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/usr/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/usr/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/usr/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/usr/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/usr/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/usr/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/usr/avr/include/util/delay.h ****     routines linked into the application.
  78:/usr/avr/include/util/delay.h **** 
  79:/usr/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/usr/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/usr/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/usr/avr/include/util/delay.h **** 
  83:/usr/avr/include/util/delay.h **** */
  84:/usr/avr/include/util/delay.h **** 
  85:/usr/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/usr/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/usr/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/usr/avr/include/util/delay.h **** #endif
  89:/usr/avr/include/util/delay.h **** 
  90:/usr/avr/include/util/delay.h **** #ifndef F_CPU
  91:/usr/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/usr/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/usr/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/usr/avr/include/util/delay.h ****     \def F_CPU
  95:/usr/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/usr/avr/include/util/delay.h **** 
  97:/usr/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/usr/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/usr/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/usr/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/usr/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/usr/avr/include/util/delay.h **** 
 103:/usr/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/usr/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/usr/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/usr/avr/include/util/delay.h ****     integer value.
 107:/usr/avr/include/util/delay.h ****  */
 108:/usr/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/usr/avr/include/util/delay.h **** #endif
 110:/usr/avr/include/util/delay.h **** 
 111:/usr/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/usr/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/usr/avr/include/util/delay.h **** #endif
 114:/usr/avr/include/util/delay.h **** 
 115:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/usr/avr/include/util/delay.h **** #  include <math.h>
 119:/usr/avr/include/util/delay.h **** #endif
 120:/usr/avr/include/util/delay.h **** 
 121:/usr/avr/include/util/delay.h **** /**
 122:/usr/avr/include/util/delay.h ****    \ingroup util_delay
 123:/usr/avr/include/util/delay.h **** 
 124:/usr/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/usr/avr/include/util/delay.h **** 
 126:/usr/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/usr/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/usr/avr/include/util/delay.h **** 
 129:/usr/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/usr/avr/include/util/delay.h **** 
 131:/usr/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/usr/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/usr/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/usr/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/usr/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/usr/avr/include/util/delay.h **** 
 137:/usr/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/usr/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/usr/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/usr/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/usr/avr/include/util/delay.h **** 
 142:/usr/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/usr/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/usr/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/usr/avr/include/util/delay.h ****    microseconds of delay.
 146:/usr/avr/include/util/delay.h **** 
 147:/usr/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/usr/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/usr/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/usr/avr/include/util/delay.h ****    respectively.
 151:/usr/avr/include/util/delay.h **** 
 152:/usr/avr/include/util/delay.h ****    \note
 153:/usr/avr/include/util/delay.h **** 
 154:/usr/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/usr/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/usr/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/usr/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/usr/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/usr/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/usr/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/usr/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/usr/avr/include/util/delay.h ****    not available to the compiler then.
 163:/usr/avr/include/util/delay.h **** 
 164:/usr/avr/include/util/delay.h ****  */
 165:/usr/avr/include/util/delay.h **** void
 166:/usr/avr/include/util/delay.h **** _delay_ms(double __ms)
 217               		.loc 2 166 1 view .LVU53
 218               	.LBB34:
 167:/usr/avr/include/util/delay.h **** {
 168:/usr/avr/include/util/delay.h **** 	double __tmp ;
 219               		.loc 2 168 2 view .LVU54
 169:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/usr/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 220               		.loc 2 172 2 view .LVU55
 173:/usr/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 221               		.loc 2 173 2 view .LVU56
 174:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 222               		.loc 2 174 2 view .LVU57
 175:/usr/avr/include/util/delay.h **** 
 176:/usr/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/usr/avr/include/util/delay.h **** 
 179:/usr/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/usr/avr/include/util/delay.h **** 
 182:/usr/avr/include/util/delay.h **** 	#else
 183:/usr/avr/include/util/delay.h **** 		//round up by default
 184:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 223               		.loc 2 184 3 view .LVU58
 185:/usr/avr/include/util/delay.h **** 	#endif
 186:/usr/avr/include/util/delay.h **** 
 187:/usr/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 224               		.loc 2 187 2 view .LVU59
 225 0094 EFE9      		ldi r30,lo8(3999)
 226 0096 FFE0      		ldi r31,hi8(3999)
 227 0098 3197      	1:	sbiw r30,1
 228 009a 01F4      		brne 1b
 229 009c 00C0      		rjmp .
 230 009e 0000      		nop
 231 00a0 8150      		subi r24,lo8(-(-1))
 232               	.LVL22:
 188:/usr/avr/include/util/delay.h **** 
 189:/usr/avr/include/util/delay.h **** #else
 190:/usr/avr/include/util/delay.h **** 	uint16_t __ticks;
 191:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 4e3) * __ms;
 192:/usr/avr/include/util/delay.h **** 	if (__tmp < 1.0)
 193:/usr/avr/include/util/delay.h **** 		__ticks = 1;
 194:/usr/avr/include/util/delay.h **** 	else if (__tmp > 65535)
 195:/usr/avr/include/util/delay.h **** 	{
 196:/usr/avr/include/util/delay.h **** 		//	__ticks = requested delay in 1/10 ms
 197:/usr/avr/include/util/delay.h **** 		__ticks = (uint16_t) (__ms * 10.0);
 198:/usr/avr/include/util/delay.h **** 		while(__ticks)
 199:/usr/avr/include/util/delay.h **** 		{
 200:/usr/avr/include/util/delay.h **** 			// wait 1/10 ms
 201:/usr/avr/include/util/delay.h **** 			_delay_loop_2(((F_CPU) / 4e3) / 10);
 202:/usr/avr/include/util/delay.h **** 			__ticks --;
 203:/usr/avr/include/util/delay.h **** 		}
 204:/usr/avr/include/util/delay.h **** 		return;
 205:/usr/avr/include/util/delay.h **** 	}
 206:/usr/avr/include/util/delay.h **** 	else
 207:/usr/avr/include/util/delay.h **** 		__ticks = (uint16_t)__tmp;
 208:/usr/avr/include/util/delay.h **** 	_delay_loop_2(__ticks);
 209:/usr/avr/include/util/delay.h **** #endif
 210:/usr/avr/include/util/delay.h **** }
 233               		.loc 2 210 1 is_stmt 0 view .LVU60
 234 00a2 00C0      		rjmp .L18
 235               	.LVL23:
 236               	.L5:
 237               		.loc 2 210 1 view .LVU61
 238               	.LBE34:
 239               	.LBE33:
 240               	.LBE32:
  51:./tmk_core/common/action_macro.c ****                 dprintf("KEY_UP(%02X)\n", macro);
 241               		.loc 1 51 17 is_stmt 1 view .LVU62
 242               	.LBB35:
  51:./tmk_core/common/action_macro.c ****                 dprintf("KEY_UP(%02X)\n", macro);
 243               		.loc 1 51 17 view .LVU63
  51:./tmk_core/common/action_macro.c ****                 dprintf("KEY_UP(%02X)\n", macro);
 244               		.loc 1 51 17 view .LVU64
  51:./tmk_core/common/action_macro.c ****                 dprintf("KEY_UP(%02X)\n", macro);
 245               		.loc 1 51 17 view .LVU65
 246 00a4 FE01      		movw r30,r28
 247               	/* #APP */
 248               	 ;  51 "./tmk_core/common/action_macro.c" 1
 249 00a6 8491      		lpm r24, Z
 250               		
 251               	 ;  0 "" 2
 252               	.LVL24:
  51:./tmk_core/common/action_macro.c ****                 dprintf("KEY_UP(%02X)\n", macro);
 253               		.loc 1 51 17 view .LVU66
  51:./tmk_core/common/action_macro.c ****                 dprintf("KEY_UP(%02X)\n", macro);
 254               		.loc 1 51 17 is_stmt 0 view .LVU67
 255               	/* #NOAPP */
 256               	.LBE35:
  52:./tmk_core/common/action_macro.c ****                 if (IS_MOD(macro)) {
 257               		.loc 1 52 49 is_stmt 1 view .LVU68
  53:./tmk_core/common/action_macro.c ****                     del_macro_mods(MOD_BIT(macro));
 258               		.loc 1 53 17 view .LVU69
  53:./tmk_core/common/action_macro.c ****                     del_macro_mods(MOD_BIT(macro));
 259               		.loc 1 53 21 is_stmt 0 view .LVU70
 260 00a8 90E2      		ldi r25,lo8(32)
 261 00aa 980F      		add r25,r24
  53:./tmk_core/common/action_macro.c ****                     del_macro_mods(MOD_BIT(macro));
 262               		.loc 1 53 20 view .LVU71
 263 00ac 9830      		cpi r25,lo8(8)
 264 00ae 00F4      		brsh .L14
  54:./tmk_core/common/action_macro.c ****                     send_keyboard_report();
 265               		.loc 1 54 21 is_stmt 1 view .LVU72
  54:./tmk_core/common/action_macro.c ****                     send_keyboard_report();
 266               		.loc 1 54 36 is_stmt 0 view .LVU73
 267 00b0 8770      		andi r24,lo8(7)
 268               	.LVL25:
  54:./tmk_core/common/action_macro.c ****                     send_keyboard_report();
 269               		.loc 1 54 21 view .LVU74
 270 00b2 91E0      		ldi r25,lo8(1)
 271 00b4 00C0      		rjmp 2f
 272               		1:
 273 00b6 990F      		lsl r25
 274               		2:
 275 00b8 8A95      		dec r24
 276 00ba 02F4      		brpl 1b
 277 00bc 892F      		mov r24,r25
 278 00be 0E94 0000 		call del_macro_mods
 279               	.LVL26:
 280 00c2 00C0      		rjmp .L25
 281               	.LVL27:
 282               	.L14:
  57:./tmk_core/common/action_macro.c ****                 }
 283               		.loc 1 57 21 is_stmt 1 view .LVU75
 284 00c4 0E94 0000 		call unregister_code
 285               	.LVL28:
  57:./tmk_core/common/action_macro.c ****                 }
 286               		.loc 1 57 21 is_stmt 0 view .LVU76
 287 00c8 00C0      		rjmp .L15
 288               	.LVL29:
 289               	.L3:
  61:./tmk_core/common/action_macro.c ****                 dprintf("WAIT(%u)\n", macro);
 290               		.loc 1 61 17 is_stmt 1 view .LVU77
 291               	.LBB36:
  61:./tmk_core/common/action_macro.c ****                 dprintf("WAIT(%u)\n", macro);
 292               		.loc 1 61 17 view .LVU78
 293 00ca 0E5F      		subi r16,-2
 294 00cc 1F4F      		sbci r17,-1
 295               	.LVL30:
  61:./tmk_core/common/action_macro.c ****                 dprintf("WAIT(%u)\n", macro);
 296               		.loc 1 61 17 view .LVU79
  61:./tmk_core/common/action_macro.c ****                 dprintf("WAIT(%u)\n", macro);
 297               		.loc 1 61 17 view .LVU80
 298 00ce FE01      		movw r30,r28
 299               	.LVL31:
  61:./tmk_core/common/action_macro.c ****                 dprintf("WAIT(%u)\n", macro);
 300               		.loc 1 61 17 is_stmt 0 view .LVU81
 301               	/* #APP */
 302               	 ;  61 "./tmk_core/common/action_macro.c" 1
 303 00d0 C491      		lpm r28, Z
 304               		
 305               	 ;  0 "" 2
 306               	.LVL32:
  61:./tmk_core/common/action_macro.c ****                 dprintf("WAIT(%u)\n", macro);
 307               		.loc 1 61 17 is_stmt 1 view .LVU82
  61:./tmk_core/common/action_macro.c ****                 dprintf("WAIT(%u)\n", macro);
 308               		.loc 1 61 17 is_stmt 0 view .LVU83
 309               	/* #NOAPP */
 310               	.LBE36:
  62:./tmk_core/common/action_macro.c ****                 { uint8_t ms = macro; while (ms--) wait_ms(1); }
 311               		.loc 1 62 45 is_stmt 1 view .LVU84
 312               	.LBB37:
  63:./tmk_core/common/action_macro.c ****                 break;
 313               		.loc 1 63 19 view .LVU85
  63:./tmk_core/common/action_macro.c ****                 break;
 314               		.loc 1 63 39 view .LVU86
 315               	.L16:
  63:./tmk_core/common/action_macro.c ****                 break;
 316               		.loc 1 63 46 discriminator 1 view .LVU87
  63:./tmk_core/common/action_macro.c ****                 break;
 317               		.loc 1 63 46 is_stmt 0 discriminator 1 view .LVU88
 318 00d2 CC23      		tst r28
 319 00d4 01F0      		breq .L12
  63:./tmk_core/common/action_macro.c ****                 break;
 320               		.loc 1 63 52 is_stmt 1 view .LVU89
 321               	.LVL33:
 322               	.LBB38:
 323               	.LBI38:
 166:/usr/avr/include/util/delay.h **** {
 324               		.loc 2 166 1 view .LVU90
 325               	.LBB39:
 168:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 326               		.loc 2 168 2 view .LVU91
 172:/usr/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 327               		.loc 2 172 2 view .LVU92
 173:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 328               		.loc 2 173 2 view .LVU93
 174:/usr/avr/include/util/delay.h **** 
 329               		.loc 2 174 2 view .LVU94
 184:/usr/avr/include/util/delay.h **** 	#endif
 330               		.loc 2 184 3 view .LVU95
 187:/usr/avr/include/util/delay.h **** 
 331               		.loc 2 187 2 view .LVU96
 332 00d6 8FE9      		ldi r24,lo8(3999)
 333 00d8 9FE0      		ldi r25,hi8(3999)
 334 00da 0197      	1:	sbiw r24,1
 335 00dc 01F4      		brne 1b
 336 00de 00C0      		rjmp .
 337 00e0 0000      		nop
 338 00e2 C150      		subi r28,lo8(-(-1))
 339               	.LVL34:
 340               		.loc 2 210 1 is_stmt 0 view .LVU97
 341 00e4 00C0      		rjmp .L16
 342               	.LVL35:
 343               	.L9:
 344               		.loc 2 210 1 view .LVU98
 345               	.LBE39:
 346               	.LBE38:
 347               	.LBE37:
  66:./tmk_core/common/action_macro.c ****                 dprintf("INTERVAL(%u)\n", interval);
 348               		.loc 1 66 17 is_stmt 1 view .LVU99
 349               	.LBB40:
  66:./tmk_core/common/action_macro.c ****                 dprintf("INTERVAL(%u)\n", interval);
 350               		.loc 1 66 28 view .LVU100
 351 00e6 0E5F      		subi r16,-2
 352 00e8 1F4F      		sbci r17,-1
 353               	.LVL36:
  66:./tmk_core/common/action_macro.c ****                 dprintf("INTERVAL(%u)\n", interval);
 354               		.loc 1 66 28 view .LVU101
  66:./tmk_core/common/action_macro.c ****                 dprintf("INTERVAL(%u)\n", interval);
 355               		.loc 1 66 28 view .LVU102
 356 00ea FE01      		movw r30,r28
 357               	.LVL37:
  66:./tmk_core/common/action_macro.c ****                 dprintf("INTERVAL(%u)\n", interval);
 358               		.loc 1 66 28 is_stmt 0 view .LVU103
 359               	/* #APP */
 360               	 ;  66 "./tmk_core/common/action_macro.c" 1
 361 00ec C491      		lpm r28, Z
 362               		
 363               	 ;  0 "" 2
 364               	.LVL38:
  66:./tmk_core/common/action_macro.c ****                 dprintf("INTERVAL(%u)\n", interval);
 365               		.loc 1 66 28 view .LVU104
 366               	/* #NOAPP */
 367 00ee FC2E      		mov r15,r28
 368               	.LVL39:
  66:./tmk_core/common/action_macro.c ****                 dprintf("INTERVAL(%u)\n", interval);
 369               		.loc 1 66 28 is_stmt 1 view .LVU105
  66:./tmk_core/common/action_macro.c ****                 dprintf("INTERVAL(%u)\n", interval);
 370               		.loc 1 66 28 is_stmt 0 view .LVU106
 371               	.LBE40:
  67:./tmk_core/common/action_macro.c ****                 break;
 372               		.loc 1 67 52 is_stmt 1 view .LVU107
  68:./tmk_core/common/action_macro.c ****             case 0x04 ... 0x73:
 373               		.loc 1 68 17 view .LVU108
 374 00f0 00C0      		rjmp .L12
 375               		.cfi_endproc
 376               	.LFE107:
 378               		.text
 379               	.Letext0:
 380               		.file 3 "/usr/avr/include/stdint.h"
 381               		.file 4 "./tmk_core/common/action_macro.h"
 382               		.file 5 "./tmk_core/common/keycode.h"
 383               		.file 6 "./tmk_core/common/action.h"
 384               		.file 7 "./tmk_core/common/action_util.h"
 385               		.file 8 "/usr/avr/include/math.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 action_macro.c
     /tmp/ccvMsYS2.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccvMsYS2.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccvMsYS2.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccvMsYS2.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/ccvMsYS2.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccvMsYS2.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccvMsYS2.s:15     .text.action_macro_play:0000000000000000 action_macro_play
     /tmp/ccvMsYS2.s:18     .text.action_macro_play:0000000000000000 .Loc.0
     /tmp/ccvMsYS2.s:19     .text.action_macro_play:0000000000000000 L0
     /tmp/ccvMsYS2.s:20     .text.action_macro_play:0000000000000000 .Loc.1
     /tmp/ccvMsYS2.s:46     .text.action_macro_play:000000000000000c .Loc.2
     /tmp/ccvMsYS2.s:48     .text.action_macro_play:000000000000000c .Loc.3
     /tmp/ccvMsYS2.s:49     .text.action_macro_play:000000000000000c .Loc.4
     /tmp/ccvMsYS2.s:50     .text.action_macro_play:000000000000000c .Loc.5
     /tmp/ccvMsYS2.s:53     .text.action_macro_play:0000000000000010 .Loc.6
     /tmp/ccvMsYS2.s:57     .text.action_macro_play:0000000000000012 .Loc.7
     /tmp/ccvMsYS2.s:58     .text.action_macro_play:0000000000000012 .Loc.8
     /tmp/ccvMsYS2.s:60     .text.action_macro_play:0000000000000012 .Loc.9
     /tmp/ccvMsYS2.s:64     .text.action_macro_play:0000000000000016 .Loc.10
     /tmp/ccvMsYS2.s:65     .text.action_macro_play:0000000000000016 .Loc.11
     /tmp/ccvMsYS2.s:73     .text.action_macro_play:000000000000001a .Loc.12
     /tmp/ccvMsYS2.s:74     .text.action_macro_play:000000000000001a .Loc.13
     /tmp/ccvMsYS2.s:77     .text.action_macro_play:000000000000001a .Loc.14
     /tmp/ccvMsYS2.s:79     .text.action_macro_play:000000000000001e L0
     /tmp/ccvMsYS2.s:81     .text.action_macro_play:0000000000000020 .Loc.15
     /tmp/ccvMsYS2.s:84     .text.action_macro_play:0000000000000026 L0
     /tmp/ccvMsYS2.s:92     .text.action_macro_play:000000000000002e .Loc.16
     /tmp/ccvMsYS2.s:101    .text.action_macro_play:000000000000003a .Loc.17
     /tmp/ccvMsYS2.s:106    .text.action_macro_play:0000000000000042 .Loc.18
     /tmp/ccvMsYS2.s:107    .text.action_macro_play:0000000000000042 .Loc.19
     /tmp/ccvMsYS2.s:110    .text.action_macro_play:0000000000000046 .Loc.20
     /tmp/ccvMsYS2.s:114    .text.action_macro_play:0000000000000048 .Loc.21
     /tmp/ccvMsYS2.s:116    .text.action_macro_play:000000000000004c L0
     /tmp/ccvMsYS2.s:122    .text.action_macro_play:0000000000000056 .Loc.22
     /tmp/ccvMsYS2.s:123    .text.action_macro_play:0000000000000056 .Loc.23
     /tmp/ccvMsYS2.s:126    .text.action_macro_play:0000000000000058 .Loc.24
     /tmp/ccvMsYS2.s:129    .text.action_macro_play:000000000000005c .Loc.25
     /tmp/ccvMsYS2.s:132    .text.action_macro_play:000000000000005c .Loc.26
     /tmp/ccvMsYS2.s:135    .text.action_macro_play:000000000000005e .Loc.27
     /tmp/ccvMsYS2.s:139    .text.action_macro_play:0000000000000060 .Loc.28
     /tmp/ccvMsYS2.s:141    .text.action_macro_play:0000000000000060 .Loc.29
     /tmp/ccvMsYS2.s:143    .text.action_macro_play:0000000000000060 .Loc.30
     /tmp/ccvMsYS2.s:144    .text.action_macro_play:0000000000000060 .Loc.31
     /tmp/ccvMsYS2.s:145    .text.action_macro_play:0000000000000060 .Loc.32
     /tmp/ccvMsYS2.s:153    .text.action_macro_play:0000000000000064 .Loc.33
     /tmp/ccvMsYS2.s:154    .text.action_macro_play:0000000000000064 .Loc.34
     /tmp/ccvMsYS2.s:157    .text.action_macro_play:0000000000000064 .Loc.35
     /tmp/ccvMsYS2.s:158    .text.action_macro_play:0000000000000064 .Loc.36
     /tmp/ccvMsYS2.s:159    .text.action_macro_play:0000000000000064 .Loc.37
     /tmp/ccvMsYS2.s:162    .text.action_macro_play:0000000000000068 .Loc.38
     /tmp/ccvMsYS2.s:165    .text.action_macro_play:000000000000006c .Loc.39
     /tmp/ccvMsYS2.s:166    .text.action_macro_play:000000000000006c .Loc.40
     /tmp/ccvMsYS2.s:169    .text.action_macro_play:000000000000006e .Loc.41
     /tmp/ccvMsYS2.s:180    .text.action_macro_play:000000000000007e .Loc.42
     /tmp/ccvMsYS2.s:182    .text.action_macro_play:000000000000007e .Loc.43
     /tmp/ccvMsYS2.s:188    .text.action_macro_play:0000000000000084 .Loc.44
     /tmp/ccvMsYS2.s:193    .text.action_macro_play:0000000000000088 .Loc.45
     /tmp/ccvMsYS2.s:198    .text.action_macro_play:000000000000008c .Loc.46
     /tmp/ccvMsYS2.s:201    .text.action_macro_play:000000000000008c .Loc.47
     /tmp/ccvMsYS2.s:202    .text.action_macro_play:000000000000008c .Loc.48
     /tmp/ccvMsYS2.s:203    .text.action_macro_play:000000000000008c .Loc.49
     /tmp/ccvMsYS2.s:207    .text.action_macro_play:000000000000008e .Loc.50
     /tmp/ccvMsYS2.s:208    .text.action_macro_play:000000000000008e .Loc.51
     /tmp/ccvMsYS2.s:210    .text.action_macro_play:0000000000000092 L0
     /tmp/ccvMsYS2.s:212    .text.action_macro_play:0000000000000094 .Loc.52
     /tmp/ccvMsYS2.s:217    .text.action_macro_play:0000000000000094 .Loc.53
     /tmp/ccvMsYS2.s:219    .text.action_macro_play:0000000000000094 .Loc.54
     /tmp/ccvMsYS2.s:220    .text.action_macro_play:0000000000000094 .Loc.55
     /tmp/ccvMsYS2.s:221    .text.action_macro_play:0000000000000094 .Loc.56
     /tmp/ccvMsYS2.s:222    .text.action_macro_play:0000000000000094 .Loc.57
     /tmp/ccvMsYS2.s:223    .text.action_macro_play:0000000000000094 .Loc.58
     /tmp/ccvMsYS2.s:224    .text.action_macro_play:0000000000000094 .Loc.59
     /tmp/ccvMsYS2.s:229    .text.action_macro_play:000000000000009e L0
     /tmp/ccvMsYS2.s:233    .text.action_macro_play:00000000000000a2 .Loc.60
     /tmp/ccvMsYS2.s:237    .text.action_macro_play:00000000000000a4 .Loc.61
     /tmp/ccvMsYS2.s:241    .text.action_macro_play:00000000000000a4 .Loc.62
     /tmp/ccvMsYS2.s:243    .text.action_macro_play:00000000000000a4 .Loc.63
     /tmp/ccvMsYS2.s:244    .text.action_macro_play:00000000000000a4 .Loc.64
     /tmp/ccvMsYS2.s:245    .text.action_macro_play:00000000000000a4 .Loc.65
     /tmp/ccvMsYS2.s:253    .text.action_macro_play:00000000000000a8 .Loc.66
     /tmp/ccvMsYS2.s:254    .text.action_macro_play:00000000000000a8 .Loc.67
     /tmp/ccvMsYS2.s:257    .text.action_macro_play:00000000000000a8 .Loc.68
     /tmp/ccvMsYS2.s:258    .text.action_macro_play:00000000000000a8 .Loc.69
     /tmp/ccvMsYS2.s:259    .text.action_macro_play:00000000000000a8 .Loc.70
     /tmp/ccvMsYS2.s:262    .text.action_macro_play:00000000000000ac .Loc.71
     /tmp/ccvMsYS2.s:265    .text.action_macro_play:00000000000000b0 .Loc.72
     /tmp/ccvMsYS2.s:266    .text.action_macro_play:00000000000000b0 .Loc.73
     /tmp/ccvMsYS2.s:269    .text.action_macro_play:00000000000000b2 .Loc.74
     /tmp/ccvMsYS2.s:283    .text.action_macro_play:00000000000000c4 .Loc.75
     /tmp/ccvMsYS2.s:286    .text.action_macro_play:00000000000000c8 .Loc.76
     /tmp/ccvMsYS2.s:290    .text.action_macro_play:00000000000000ca .Loc.77
     /tmp/ccvMsYS2.s:292    .text.action_macro_play:00000000000000ca .Loc.78
     /tmp/ccvMsYS2.s:296    .text.action_macro_play:00000000000000ce .Loc.79
     /tmp/ccvMsYS2.s:297    .text.action_macro_play:00000000000000ce .Loc.80
     /tmp/ccvMsYS2.s:300    .text.action_macro_play:00000000000000d0 .Loc.81
     /tmp/ccvMsYS2.s:307    .text.action_macro_play:00000000000000d2 .Loc.82
     /tmp/ccvMsYS2.s:308    .text.action_macro_play:00000000000000d2 .Loc.83
     /tmp/ccvMsYS2.s:311    .text.action_macro_play:00000000000000d2 .Loc.84
     /tmp/ccvMsYS2.s:313    .text.action_macro_play:00000000000000d2 .Loc.85
     /tmp/ccvMsYS2.s:314    .text.action_macro_play:00000000000000d2 .Loc.86
     /tmp/ccvMsYS2.s:316    .text.action_macro_play:00000000000000d2 .Loc.87
     /tmp/ccvMsYS2.s:317    .text.action_macro_play:00000000000000d2 .Loc.88
     /tmp/ccvMsYS2.s:320    .text.action_macro_play:00000000000000d6 .Loc.89
     /tmp/ccvMsYS2.s:324    .text.action_macro_play:00000000000000d6 .Loc.90
     /tmp/ccvMsYS2.s:326    .text.action_macro_play:00000000000000d6 .Loc.91
     /tmp/ccvMsYS2.s:327    .text.action_macro_play:00000000000000d6 .Loc.92
     /tmp/ccvMsYS2.s:328    .text.action_macro_play:00000000000000d6 .Loc.93
     /tmp/ccvMsYS2.s:329    .text.action_macro_play:00000000000000d6 .Loc.94
     /tmp/ccvMsYS2.s:330    .text.action_macro_play:00000000000000d6 .Loc.95
     /tmp/ccvMsYS2.s:331    .text.action_macro_play:00000000000000d6 .Loc.96
     /tmp/ccvMsYS2.s:336    .text.action_macro_play:00000000000000e0 L0
     /tmp/ccvMsYS2.s:340    .text.action_macro_play:00000000000000e4 .Loc.97
     /tmp/ccvMsYS2.s:344    .text.action_macro_play:00000000000000e6 .Loc.98
     /tmp/ccvMsYS2.s:348    .text.action_macro_play:00000000000000e6 .Loc.99
     /tmp/ccvMsYS2.s:350    .text.action_macro_play:00000000000000e6 .Loc.100
     /tmp/ccvMsYS2.s:354    .text.action_macro_play:00000000000000ea .Loc.101
     /tmp/ccvMsYS2.s:355    .text.action_macro_play:00000000000000ea .Loc.102
     /tmp/ccvMsYS2.s:358    .text.action_macro_play:00000000000000ec .Loc.103
     /tmp/ccvMsYS2.s:365    .text.action_macro_play:00000000000000ee .Loc.104
     /tmp/ccvMsYS2.s:369    .text.action_macro_play:00000000000000f0 .Loc.105
     /tmp/ccvMsYS2.s:370    .text.action_macro_play:00000000000000f0 .Loc.106
     /tmp/ccvMsYS2.s:372    .text.action_macro_play:00000000000000f0 .Loc.107
     /tmp/ccvMsYS2.s:373    .text.action_macro_play:00000000000000f0 .Loc.108
     /tmp/ccvMsYS2.s:375    .text.action_macro_play:00000000000000f2 L0
     /tmp/ccvMsYS2.s:378    .text.action_macro_play:00000000000000f2 L0
                     .debug_frame:0000000000000000 L0
     /tmp/ccvMsYS2.s:90     .text.action_macro_play:000000000000002e .L1
     /tmp/ccvMsYS2.s:289    .text.action_macro_play:00000000000000ca .L3
     /tmp/ccvMsYS2.s:113    .text.action_macro_play:0000000000000048 .L4
     /tmp/ccvMsYS2.s:236    .text.action_macro_play:00000000000000a4 .L5
     /tmp/ccvMsYS2.s:100    .text.action_macro_play:000000000000003a .L6
     /tmp/ccvMsYS2.s:138    .text.action_macro_play:0000000000000060 .L7
     /tmp/ccvMsYS2.s:130    .text.action_macro_play:000000000000005c .L10
     /tmp/ccvMsYS2.s:343    .text.action_macro_play:00000000000000e6 .L9
     /tmp/ccvMsYS2.s:197    .text.action_macro_play:000000000000008c .L12
     /tmp/ccvMsYS2.s:187    .text.action_macro_play:0000000000000084 .L11
     /tmp/ccvMsYS2.s:174    .text.action_macro_play:0000000000000074 .L21
     /tmp/ccvMsYS2.s:172    .text.action_macro_play:0000000000000072 .L11
     /tmp/ccvMsYS2.s:191    .text.action_macro_play:0000000000000088 .L15
     /tmp/ccvMsYS2.s:56     .text.action_macro_play:0000000000000012 .L20
     /tmp/ccvMsYS2.s:227    .text.action_macro_play:0000000000000098 .L12
     /tmp/ccvMsYS2.s:206    .text.action_macro_play:000000000000008e .L18
     /tmp/ccvMsYS2.s:282    .text.action_macro_play:00000000000000c4 .L14
     /tmp/ccvMsYS2.s:274    .text.action_macro_play:00000000000000b8 .L22
     /tmp/ccvMsYS2.s:272    .text.action_macro_play:00000000000000b6 .L13
     /tmp/ccvMsYS2.s:181    .text.action_macro_play:000000000000007e .L25
     /tmp/ccvMsYS2.s:334    .text.action_macro_play:00000000000000da .L14
     /tmp/ccvMsYS2.s:315    .text.action_macro_play:00000000000000d2 .L16
     /tmp/ccvMsYS2.s:1396   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccvMsYS2.s:2594   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccvMsYS2.s:2612   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccvMsYS2.s:17     .text.action_macro_play:0000000000000000 .LFB107
     /tmp/ccvMsYS2.s:376    .text.action_macro_play:00000000000000f2 .LFE107
     /tmp/ccvMsYS2.s:1864   .debug_loc:0000000000000000 .LLST0
     /tmp/ccvMsYS2.s:1930   .debug_loc:0000000000000070 .LLST1
     /tmp/ccvMsYS2.s:1903   .debug_loc:0000000000000056 .LVUS1
     /tmp/ccvMsYS2.s:2070   .debug_loc:000000000000015b .LLST2
     /tmp/ccvMsYS2.s:2041   .debug_loc:000000000000013f .LVUS2
     /tmp/ccvMsYS2.s:2139   .debug_loc:0000000000000206 .LLST3
     /tmp/ccvMsYS2.s:2130   .debug_loc:00000000000001fe .LVUS3
     /tmp/ccvMsYS2.s:2180   .debug_loc:000000000000024f .LLST4
     /tmp/ccvMsYS2.s:2159   .debug_loc:000000000000023b .LVUS4
     /tmp/ccvMsYS2.s:2279   .debug_loc:00000000000002fc .LLST5
     /tmp/ccvMsYS2.s:2264   .debug_loc:00000000000002ee .LVUS5
     /tmp/ccvMsYS2.s:142    .text.action_macro_play:0000000000000060 .LBB30
     /tmp/ccvMsYS2.s:156    .text.action_macro_play:0000000000000064 .LBE30
     /tmp/ccvMsYS2.s:2315   .debug_loc:0000000000000355 .LLST6
     /tmp/ccvMsYS2.s:2310   .debug_loc:0000000000000351 .LVUS6
     /tmp/ccvMsYS2.s:2341   .debug_loc:0000000000000381 .LLST7
     /tmp/ccvMsYS2.s:2336   .debug_loc:000000000000037d .LVUS7
     /tmp/ccvMsYS2.s:2355   .debug_loc:00000000000003a1 .LLST8
     /tmp/ccvMsYS2.s:2352   .debug_loc:000000000000039f .LVUS8
     /tmp/ccvMsYS2.s:2372   .debug_loc:00000000000003bd .LLST9
     /tmp/ccvMsYS2.s:2367   .debug_loc:00000000000003b9 .LVUS9
     /tmp/ccvMsYS2.s:291    .text.action_macro_play:00000000000000ca .LBB36
     /tmp/ccvMsYS2.s:310    .text.action_macro_play:00000000000000d2 .LBE36
     /tmp/ccvMsYS2.s:2388   .debug_loc:00000000000003df .LLST14
     /tmp/ccvMsYS2.s:2383   .debug_loc:00000000000003db .LVUS14
     /tmp/ccvMsYS2.s:2412   .debug_loc:0000000000000409 .LLST15
     /tmp/ccvMsYS2.s:2409   .debug_loc:0000000000000407 .LVUS15
     /tmp/ccvMsYS2.s:312    .text.action_macro_play:00000000000000d2 .LBB37
     /tmp/ccvMsYS2.s:347    .text.action_macro_play:00000000000000e6 .LBE37
     /tmp/ccvMsYS2.s:2426   .debug_loc:0000000000000422 .LLST16
     /tmp/ccvMsYS2.s:2419   .debug_loc:000000000000041c .LVUS16
     /tmp/ccvMsYS2.s:323    .text.action_macro_play:00000000000000d6 .LBI38
     /tmp/ccvMsYS2.s:322    .text.action_macro_play:00000000000000d6 .LBB38
     /tmp/ccvMsYS2.s:346    .text.action_macro_play:00000000000000e6 .LBE38
     /tmp/ccvMsYS2.s:2446   .debug_loc:000000000000044f .LLST17
     /tmp/ccvMsYS2.s:2443   .debug_loc:000000000000044d .LVUS17
     /tmp/ccvMsYS2.s:2458   .debug_loc:0000000000000469 .LLST18
     /tmp/ccvMsYS2.s:2455   .debug_loc:0000000000000467 .LVUS18
     /tmp/ccvMsYS2.s:2470   .debug_loc:0000000000000483 .LLST19
     /tmp/ccvMsYS2.s:2467   .debug_loc:0000000000000481 .LVUS19
     /tmp/ccvMsYS2.s:349    .text.action_macro_play:00000000000000e6 .LBB40
     /tmp/ccvMsYS2.s:371    .text.action_macro_play:00000000000000f0 .LBE40
     /tmp/ccvMsYS2.s:2484   .debug_loc:000000000000049d .LLST20
     /tmp/ccvMsYS2.s:2479   .debug_loc:0000000000000499 .LVUS20
     /tmp/ccvMsYS2.s:2508   .debug_loc:00000000000004c7 .LLST21
     /tmp/ccvMsYS2.s:2505   .debug_loc:00000000000004c5 .LVUS21
     /tmp/ccvMsYS2.s:200    .text.action_macro_play:000000000000008c .LBB32
     /tmp/ccvMsYS2.s:240    .text.action_macro_play:00000000000000a4 .LBE32
     /tmp/ccvMsYS2.s:2524   .debug_loc:00000000000004e2 .LLST10
     /tmp/ccvMsYS2.s:2515   .debug_loc:00000000000004da .LVUS10
     /tmp/ccvMsYS2.s:215    .text.action_macro_play:0000000000000094 .LBI33
     /tmp/ccvMsYS2.s:214    .text.action_macro_play:0000000000000094 .LBB33
     /tmp/ccvMsYS2.s:239    .text.action_macro_play:00000000000000a4 .LBE33
     /tmp/ccvMsYS2.s:2548   .debug_loc:000000000000051a .LLST11
     /tmp/ccvMsYS2.s:2545   .debug_loc:0000000000000518 .LVUS11
     /tmp/ccvMsYS2.s:2560   .debug_loc:0000000000000534 .LLST12
     /tmp/ccvMsYS2.s:2557   .debug_loc:0000000000000532 .LVUS12
     /tmp/ccvMsYS2.s:2572   .debug_loc:000000000000054e .LLST13
     /tmp/ccvMsYS2.s:2569   .debug_loc:000000000000054c .LVUS13
     /tmp/ccvMsYS2.s:109    .text.action_macro_play:0000000000000046 .LVL7
     /tmp/ccvMsYS2.s:128    .text.action_macro_play:000000000000005c .LVL10
     /tmp/ccvMsYS2.s:179    .text.action_macro_play:000000000000007e .LVL15
     /tmp/ccvMsYS2.s:184    .text.action_macro_play:0000000000000082 .LVL16
     /tmp/ccvMsYS2.s:190    .text.action_macro_play:0000000000000088 .LVL18
     /tmp/ccvMsYS2.s:279    .text.action_macro_play:00000000000000c2 .LVL26
     /tmp/ccvMsYS2.s:285    .text.action_macro_play:00000000000000c8 .LVL28
     /tmp/ccvMsYS2.s:22     .text.action_macro_play:0000000000000002 .LCFI0
     /tmp/ccvMsYS2.s:26     .text.action_macro_play:0000000000000004 .LCFI1
     /tmp/ccvMsYS2.s:30     .text.action_macro_play:0000000000000006 .LCFI2
     /tmp/ccvMsYS2.s:34     .text.action_macro_play:0000000000000008 .LCFI3
     /tmp/ccvMsYS2.s:38     .text.action_macro_play:000000000000000a .LCFI4
     /tmp/ccvMsYS2.s:16     .text.action_macro_play:0000000000000000 .LVL0
     /tmp/ccvMsYS2.s:55     .text.action_macro_play:0000000000000012 .LVL2
     /tmp/ccvMsYS2.s:63     .text.action_macro_play:0000000000000016 .LVL3
     /tmp/ccvMsYS2.s:89     .text.action_macro_play:000000000000002e .LVL5
     /tmp/ccvMsYS2.s:99     .text.action_macro_play:000000000000003a .LVL6
     /tmp/ccvMsYS2.s:137    .text.action_macro_play:0000000000000060 .LVL12
     /tmp/ccvMsYS2.s:186    .text.action_macro_play:0000000000000084 .LVL17
     /tmp/ccvMsYS2.s:196    .text.action_macro_play:000000000000008c .LVL19
     /tmp/ccvMsYS2.s:235    .text.action_macro_play:00000000000000a4 .LVL23
     /tmp/ccvMsYS2.s:288    .text.action_macro_play:00000000000000ca .LVL29
     /tmp/ccvMsYS2.s:295    .text.action_macro_play:00000000000000ce .LVL30
     /tmp/ccvMsYS2.s:342    .text.action_macro_play:00000000000000e6 .LVL35
     /tmp/ccvMsYS2.s:353    .text.action_macro_play:00000000000000ea .LVL36
     /tmp/ccvMsYS2.s:47     .text.action_macro_play:000000000000000c .LVL1
     /tmp/ccvMsYS2.s:72     .text.action_macro_play:000000000000001a .LVL4
     /tmp/ccvMsYS2.s:112    .text.action_macro_play:0000000000000048 .LVL8
     /tmp/ccvMsYS2.s:125    .text.action_macro_play:0000000000000058 .LVL9
     /tmp/ccvMsYS2.s:152    .text.action_macro_play:0000000000000064 .LVL13
     /tmp/ccvMsYS2.s:168    .text.action_macro_play:000000000000006e .LVL14
     /tmp/ccvMsYS2.s:252    .text.action_macro_play:00000000000000a8 .LVL24
     /tmp/ccvMsYS2.s:268    .text.action_macro_play:00000000000000b2 .LVL25
     /tmp/ccvMsYS2.s:281    .text.action_macro_play:00000000000000c4 .LVL27
     /tmp/ccvMsYS2.s:306    .text.action_macro_play:00000000000000d2 .LVL32
     /tmp/ccvMsYS2.s:368    .text.action_macro_play:00000000000000f0 .LVL39
     /tmp/ccvMsYS2.s:134    .text.action_macro_play:000000000000005e .LVL11
     /tmp/ccvMsYS2.s:299    .text.action_macro_play:00000000000000d0 .LVL31
     /tmp/ccvMsYS2.s:357    .text.action_macro_play:00000000000000ec .LVL37
     /tmp/ccvMsYS2.s:339    .text.action_macro_play:00000000000000e4 .LVL34
     /tmp/ccvMsYS2.s:321    .text.action_macro_play:00000000000000d6 .LVL33
     /tmp/ccvMsYS2.s:364    .text.action_macro_play:00000000000000ee .LVL38
     /tmp/ccvMsYS2.s:205    .text.action_macro_play:000000000000008e .LVL20
     /tmp/ccvMsYS2.s:232    .text.action_macro_play:00000000000000a2 .LVL22
     /tmp/ccvMsYS2.s:213    .text.action_macro_play:0000000000000094 .LVL21
     /tmp/ccvMsYS2.s:387    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccvMsYS2.s:59     .text.action_macro_play:0000000000000012 .LBB28
     /tmp/ccvMsYS2.s:76     .text.action_macro_play:000000000000001a .LBE28
     /tmp/ccvMsYS2.s:131    .text.action_macro_play:000000000000005c .LBB29
     /tmp/ccvMsYS2.s:140    .text.action_macro_play:0000000000000060 .LBE29
     /tmp/ccvMsYS2.s:192    .text.action_macro_play:0000000000000088 .LBB31
     /tmp/ccvMsYS2.s:199    .text.action_macro_play:000000000000008c .LBE31
     /tmp/ccvMsYS2.s:242    .text.action_macro_play:00000000000000a4 .LBB35
     /tmp/ccvMsYS2.s:256    .text.action_macro_play:00000000000000a8 .LBE35

UNDEFINED SYMBOLS
register_code
unregister_code
add_macro_mods
send_keyboard_report
del_macro_mods
