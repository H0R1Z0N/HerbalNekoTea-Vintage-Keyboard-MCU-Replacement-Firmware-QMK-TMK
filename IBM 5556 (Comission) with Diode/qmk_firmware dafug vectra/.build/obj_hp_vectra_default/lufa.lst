   1               		.file	"lufa.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.file 1 "./tmk_core/protocol/lufa/lufa.c"
  11               		.section	.text.keyboard_leds,"ax",@progbits
  13               	keyboard_leds:
  14               	.LFB128:
   1:./tmk_core/protocol/lufa/lufa.c **** /*
   2:./tmk_core/protocol/lufa/lufa.c ****  * Copyright 2012 Jun Wako <wakojun@gmail.com>
   3:./tmk_core/protocol/lufa/lufa.c ****  * This file is based on:
   4:./tmk_core/protocol/lufa/lufa.c ****  *     LUFA-120219/Demos/Device/Lowlevel/KeyboardMouse
   5:./tmk_core/protocol/lufa/lufa.c ****  *     LUFA-120219/Demos/Device/Lowlevel/GenericHID
   6:./tmk_core/protocol/lufa/lufa.c ****  */
   7:./tmk_core/protocol/lufa/lufa.c **** 
   8:./tmk_core/protocol/lufa/lufa.c **** /*
   9:./tmk_core/protocol/lufa/lufa.c ****              LUFA Library
  10:./tmk_core/protocol/lufa/lufa.c ****      Copyright (C) Dean Camera, 2012.
  11:./tmk_core/protocol/lufa/lufa.c **** 
  12:./tmk_core/protocol/lufa/lufa.c ****   dean [at] fourwalledcubicle [dot] com
  13:./tmk_core/protocol/lufa/lufa.c ****            www.lufa-lib.org
  14:./tmk_core/protocol/lufa/lufa.c **** */
  15:./tmk_core/protocol/lufa/lufa.c **** 
  16:./tmk_core/protocol/lufa/lufa.c **** /*
  17:./tmk_core/protocol/lufa/lufa.c ****   Copyright 2012  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  18:./tmk_core/protocol/lufa/lufa.c ****   Copyright 2010  Denver Gingerich (denver [at] ossguy [dot] com)
  19:./tmk_core/protocol/lufa/lufa.c **** 
  20:./tmk_core/protocol/lufa/lufa.c ****   Permission to use, copy, modify, distribute, and sell this
  21:./tmk_core/protocol/lufa/lufa.c ****   software and its documentation for any purpose is hereby granted
  22:./tmk_core/protocol/lufa/lufa.c ****   without fee, provided that the above copyright notice appear in
  23:./tmk_core/protocol/lufa/lufa.c ****   all copies and that both that the copyright notice and this
  24:./tmk_core/protocol/lufa/lufa.c ****   permission notice and warranty disclaimer appear in supporting
  25:./tmk_core/protocol/lufa/lufa.c ****   documentation, and that the name of the author not be used in
  26:./tmk_core/protocol/lufa/lufa.c ****   advertising or publicity pertaining to distribution of the
  27:./tmk_core/protocol/lufa/lufa.c ****   software without specific, written prior permission.
  28:./tmk_core/protocol/lufa/lufa.c **** 
  29:./tmk_core/protocol/lufa/lufa.c ****   The author disclaim all warranties with regard to this
  30:./tmk_core/protocol/lufa/lufa.c ****   software, including all implied warranties of merchantability
  31:./tmk_core/protocol/lufa/lufa.c ****   and fitness.  In no event shall the author be liable for any
  32:./tmk_core/protocol/lufa/lufa.c ****   special, indirect or consequential damages or any damages
  33:./tmk_core/protocol/lufa/lufa.c ****   whatsoever resulting from loss of use, data or profits, whether
  34:./tmk_core/protocol/lufa/lufa.c ****   in an action of contract, negligence or other tortious action,
  35:./tmk_core/protocol/lufa/lufa.c ****   arising out of or in connection with the use or performance of
  36:./tmk_core/protocol/lufa/lufa.c ****   this software.
  37:./tmk_core/protocol/lufa/lufa.c **** */
  38:./tmk_core/protocol/lufa/lufa.c **** 
  39:./tmk_core/protocol/lufa/lufa.c **** #include "report.h"
  40:./tmk_core/protocol/lufa/lufa.c **** #include "host.h"
  41:./tmk_core/protocol/lufa/lufa.c **** #include "host_driver.h"
  42:./tmk_core/protocol/lufa/lufa.c **** #include "keyboard.h"
  43:./tmk_core/protocol/lufa/lufa.c **** #include "action.h"
  44:./tmk_core/protocol/lufa/lufa.c **** #include "led.h"
  45:./tmk_core/protocol/lufa/lufa.c **** #include "sendchar.h"
  46:./tmk_core/protocol/lufa/lufa.c **** #include "debug.h"
  47:./tmk_core/protocol/lufa/lufa.c **** #ifdef SLEEP_LED_ENABLE
  48:./tmk_core/protocol/lufa/lufa.c **** #include "sleep_led.h"
  49:./tmk_core/protocol/lufa/lufa.c **** #endif
  50:./tmk_core/protocol/lufa/lufa.c **** #include "suspend.h"
  51:./tmk_core/protocol/lufa/lufa.c **** 
  52:./tmk_core/protocol/lufa/lufa.c **** #include "descriptor.h"
  53:./tmk_core/protocol/lufa/lufa.c **** #include "lufa.h"
  54:./tmk_core/protocol/lufa/lufa.c **** #include "quantum.h"
  55:./tmk_core/protocol/lufa/lufa.c **** #include <util/atomic.h>
  56:./tmk_core/protocol/lufa/lufa.c **** 
  57:./tmk_core/protocol/lufa/lufa.c **** #ifdef NKRO_ENABLE
  58:./tmk_core/protocol/lufa/lufa.c ****   #include "keycode_config.h"
  59:./tmk_core/protocol/lufa/lufa.c **** 
  60:./tmk_core/protocol/lufa/lufa.c ****   extern keymap_config_t keymap_config;
  61:./tmk_core/protocol/lufa/lufa.c **** #endif
  62:./tmk_core/protocol/lufa/lufa.c **** 
  63:./tmk_core/protocol/lufa/lufa.c **** 
  64:./tmk_core/protocol/lufa/lufa.c **** #ifdef AUDIO_ENABLE
  65:./tmk_core/protocol/lufa/lufa.c ****     #include <audio.h>
  66:./tmk_core/protocol/lufa/lufa.c **** #endif
  67:./tmk_core/protocol/lufa/lufa.c **** 
  68:./tmk_core/protocol/lufa/lufa.c **** #ifdef BLUETOOTH_ENABLE
  69:./tmk_core/protocol/lufa/lufa.c ****     #include "bluetooth.h"
  70:./tmk_core/protocol/lufa/lufa.c **** #endif
  71:./tmk_core/protocol/lufa/lufa.c **** #ifdef ADAFRUIT_BLE_ENABLE
  72:./tmk_core/protocol/lufa/lufa.c ****     #include "adafruit_ble.h"
  73:./tmk_core/protocol/lufa/lufa.c **** #endif
  74:./tmk_core/protocol/lufa/lufa.c **** 
  75:./tmk_core/protocol/lufa/lufa.c **** #ifdef VIRTSER_ENABLE
  76:./tmk_core/protocol/lufa/lufa.c ****     #include "virtser.h"
  77:./tmk_core/protocol/lufa/lufa.c **** #endif
  78:./tmk_core/protocol/lufa/lufa.c **** 
  79:./tmk_core/protocol/lufa/lufa.c **** #if (defined(RGB_MIDI) | defined(RGBLIGHT_ANIMATIONS)) & defined(RGBLIGHT_ENABLE)
  80:./tmk_core/protocol/lufa/lufa.c ****     #include "rgblight.h"
  81:./tmk_core/protocol/lufa/lufa.c **** #endif
  82:./tmk_core/protocol/lufa/lufa.c **** 
  83:./tmk_core/protocol/lufa/lufa.c **** #ifdef MIDI_ENABLE
  84:./tmk_core/protocol/lufa/lufa.c ****   #include "sysex_tools.h"
  85:./tmk_core/protocol/lufa/lufa.c **** #endif
  86:./tmk_core/protocol/lufa/lufa.c **** 
  87:./tmk_core/protocol/lufa/lufa.c **** #ifdef RAW_ENABLE
  88:./tmk_core/protocol/lufa/lufa.c **** 	#include "raw_hid.h"
  89:./tmk_core/protocol/lufa/lufa.c **** #endif
  90:./tmk_core/protocol/lufa/lufa.c **** 
  91:./tmk_core/protocol/lufa/lufa.c **** uint8_t keyboard_idle = 0;
  92:./tmk_core/protocol/lufa/lufa.c **** /* 0: Boot Protocol, 1: Report Protocol(default) */
  93:./tmk_core/protocol/lufa/lufa.c **** uint8_t keyboard_protocol = 1;
  94:./tmk_core/protocol/lufa/lufa.c **** static uint8_t keyboard_led_stats = 0;
  95:./tmk_core/protocol/lufa/lufa.c **** 
  96:./tmk_core/protocol/lufa/lufa.c **** static report_keyboard_t keyboard_report_sent;
  97:./tmk_core/protocol/lufa/lufa.c **** 
  98:./tmk_core/protocol/lufa/lufa.c **** #ifdef MIDI_ENABLE
  99:./tmk_core/protocol/lufa/lufa.c **** static void usb_send_func(MidiDevice * device, uint16_t cnt, uint8_t byte0, uint8_t byte1, uint8_t 
 100:./tmk_core/protocol/lufa/lufa.c **** static void usb_get_midi(MidiDevice * device);
 101:./tmk_core/protocol/lufa/lufa.c **** static void midi_usb_init(MidiDevice * device);
 102:./tmk_core/protocol/lufa/lufa.c **** #endif
 103:./tmk_core/protocol/lufa/lufa.c **** 
 104:./tmk_core/protocol/lufa/lufa.c **** /* Host driver */
 105:./tmk_core/protocol/lufa/lufa.c **** static uint8_t keyboard_leds(void);
 106:./tmk_core/protocol/lufa/lufa.c **** static void send_keyboard(report_keyboard_t *report);
 107:./tmk_core/protocol/lufa/lufa.c **** static void send_mouse(report_mouse_t *report);
 108:./tmk_core/protocol/lufa/lufa.c **** static void send_system(uint16_t data);
 109:./tmk_core/protocol/lufa/lufa.c **** static void send_consumer(uint16_t data);
 110:./tmk_core/protocol/lufa/lufa.c **** host_driver_t lufa_driver = {
 111:./tmk_core/protocol/lufa/lufa.c ****     keyboard_leds,
 112:./tmk_core/protocol/lufa/lufa.c ****     send_keyboard,
 113:./tmk_core/protocol/lufa/lufa.c ****     send_mouse,
 114:./tmk_core/protocol/lufa/lufa.c ****     send_system,
 115:./tmk_core/protocol/lufa/lufa.c ****     send_consumer,
 116:./tmk_core/protocol/lufa/lufa.c **** #ifdef MIDI_ENABLE
 117:./tmk_core/protocol/lufa/lufa.c ****     usb_send_func,
 118:./tmk_core/protocol/lufa/lufa.c ****     usb_get_midi,
 119:./tmk_core/protocol/lufa/lufa.c ****     midi_usb_init
 120:./tmk_core/protocol/lufa/lufa.c **** #endif
 121:./tmk_core/protocol/lufa/lufa.c **** };
 122:./tmk_core/protocol/lufa/lufa.c **** 
 123:./tmk_core/protocol/lufa/lufa.c **** /*******************************************************************************
 124:./tmk_core/protocol/lufa/lufa.c ****  * MIDI
 125:./tmk_core/protocol/lufa/lufa.c ****  ******************************************************************************/
 126:./tmk_core/protocol/lufa/lufa.c **** 
 127:./tmk_core/protocol/lufa/lufa.c **** #ifdef MIDI_ENABLE
 128:./tmk_core/protocol/lufa/lufa.c **** USB_ClassInfo_MIDI_Device_t USB_MIDI_Interface =
 129:./tmk_core/protocol/lufa/lufa.c **** {
 130:./tmk_core/protocol/lufa/lufa.c ****   .Config =
 131:./tmk_core/protocol/lufa/lufa.c ****   {
 132:./tmk_core/protocol/lufa/lufa.c ****     .StreamingInterfaceNumber = AS_INTERFACE,
 133:./tmk_core/protocol/lufa/lufa.c ****     .DataINEndpoint           =
 134:./tmk_core/protocol/lufa/lufa.c ****     {
 135:./tmk_core/protocol/lufa/lufa.c ****       .Address          = MIDI_STREAM_IN_EPADDR,
 136:./tmk_core/protocol/lufa/lufa.c ****       .Size             = MIDI_STREAM_EPSIZE,
 137:./tmk_core/protocol/lufa/lufa.c ****       .Banks            = 1,
 138:./tmk_core/protocol/lufa/lufa.c ****     },
 139:./tmk_core/protocol/lufa/lufa.c ****     .DataOUTEndpoint          =
 140:./tmk_core/protocol/lufa/lufa.c ****     {
 141:./tmk_core/protocol/lufa/lufa.c ****       .Address          = MIDI_STREAM_OUT_EPADDR,
 142:./tmk_core/protocol/lufa/lufa.c ****       .Size             = MIDI_STREAM_EPSIZE,
 143:./tmk_core/protocol/lufa/lufa.c ****       .Banks            = 1,
 144:./tmk_core/protocol/lufa/lufa.c ****     },
 145:./tmk_core/protocol/lufa/lufa.c ****   },
 146:./tmk_core/protocol/lufa/lufa.c **** };
 147:./tmk_core/protocol/lufa/lufa.c **** 
 148:./tmk_core/protocol/lufa/lufa.c **** #define SYSEX_START_OR_CONT 0x40
 149:./tmk_core/protocol/lufa/lufa.c **** #define SYSEX_ENDS_IN_1 0x50
 150:./tmk_core/protocol/lufa/lufa.c **** #define SYSEX_ENDS_IN_2 0x60
 151:./tmk_core/protocol/lufa/lufa.c **** #define SYSEX_ENDS_IN_3 0x70
 152:./tmk_core/protocol/lufa/lufa.c **** 
 153:./tmk_core/protocol/lufa/lufa.c **** #define SYS_COMMON_1 0x50
 154:./tmk_core/protocol/lufa/lufa.c **** #define SYS_COMMON_2 0x20
 155:./tmk_core/protocol/lufa/lufa.c **** #define SYS_COMMON_3 0x30
 156:./tmk_core/protocol/lufa/lufa.c **** #endif
 157:./tmk_core/protocol/lufa/lufa.c **** 
 158:./tmk_core/protocol/lufa/lufa.c **** #ifdef VIRTSER_ENABLE
 159:./tmk_core/protocol/lufa/lufa.c **** USB_ClassInfo_CDC_Device_t cdc_device =
 160:./tmk_core/protocol/lufa/lufa.c **** {
 161:./tmk_core/protocol/lufa/lufa.c ****   .Config =
 162:./tmk_core/protocol/lufa/lufa.c ****   {
 163:./tmk_core/protocol/lufa/lufa.c ****     .ControlInterfaceNumber = CCI_INTERFACE,
 164:./tmk_core/protocol/lufa/lufa.c ****     .DataINEndpoint         =
 165:./tmk_core/protocol/lufa/lufa.c ****     {
 166:./tmk_core/protocol/lufa/lufa.c ****       .Address		= CDC_IN_EPADDR,
 167:./tmk_core/protocol/lufa/lufa.c ****       .Size		= CDC_EPSIZE,
 168:./tmk_core/protocol/lufa/lufa.c ****       .Banks		= 1,
 169:./tmk_core/protocol/lufa/lufa.c ****     },
 170:./tmk_core/protocol/lufa/lufa.c ****     .DataOUTEndpoint	    =
 171:./tmk_core/protocol/lufa/lufa.c ****     {
 172:./tmk_core/protocol/lufa/lufa.c ****       .Address		= CDC_OUT_EPADDR,
 173:./tmk_core/protocol/lufa/lufa.c ****       .Size		= CDC_EPSIZE,
 174:./tmk_core/protocol/lufa/lufa.c ****       .Banks		= 1,
 175:./tmk_core/protocol/lufa/lufa.c ****     },
 176:./tmk_core/protocol/lufa/lufa.c ****     .NotificationEndpoint   =
 177:./tmk_core/protocol/lufa/lufa.c ****     {
 178:./tmk_core/protocol/lufa/lufa.c ****       .Address		= CDC_NOTIFICATION_EPADDR,
 179:./tmk_core/protocol/lufa/lufa.c ****       .Size		= CDC_NOTIFICATION_EPSIZE,
 180:./tmk_core/protocol/lufa/lufa.c ****       .Banks		= 1,
 181:./tmk_core/protocol/lufa/lufa.c ****     },
 182:./tmk_core/protocol/lufa/lufa.c ****   },
 183:./tmk_core/protocol/lufa/lufa.c **** };
 184:./tmk_core/protocol/lufa/lufa.c **** #endif
 185:./tmk_core/protocol/lufa/lufa.c **** 
 186:./tmk_core/protocol/lufa/lufa.c **** #ifdef RAW_ENABLE
 187:./tmk_core/protocol/lufa/lufa.c **** 
 188:./tmk_core/protocol/lufa/lufa.c **** void raw_hid_send( uint8_t *data, uint8_t length )
 189:./tmk_core/protocol/lufa/lufa.c **** {
 190:./tmk_core/protocol/lufa/lufa.c **** 	// TODO: implement variable size packet
 191:./tmk_core/protocol/lufa/lufa.c **** 	if ( length != RAW_EPSIZE )
 192:./tmk_core/protocol/lufa/lufa.c **** 	{
 193:./tmk_core/protocol/lufa/lufa.c **** 		return;
 194:./tmk_core/protocol/lufa/lufa.c **** 	}
 195:./tmk_core/protocol/lufa/lufa.c **** 
 196:./tmk_core/protocol/lufa/lufa.c **** 	if (USB_DeviceState != DEVICE_STATE_Configured)
 197:./tmk_core/protocol/lufa/lufa.c **** 	{
 198:./tmk_core/protocol/lufa/lufa.c **** 		return;
 199:./tmk_core/protocol/lufa/lufa.c **** 	}
 200:./tmk_core/protocol/lufa/lufa.c **** 
 201:./tmk_core/protocol/lufa/lufa.c **** 	// TODO: decide if we allow calls to raw_hid_send() in the middle
 202:./tmk_core/protocol/lufa/lufa.c **** 	// of other endpoint usage.
 203:./tmk_core/protocol/lufa/lufa.c **** 	uint8_t ep = Endpoint_GetCurrentEndpoint();
 204:./tmk_core/protocol/lufa/lufa.c **** 
 205:./tmk_core/protocol/lufa/lufa.c **** 	Endpoint_SelectEndpoint(RAW_IN_EPNUM);
 206:./tmk_core/protocol/lufa/lufa.c **** 
 207:./tmk_core/protocol/lufa/lufa.c **** 	// Check to see if the host is ready to accept another packet
 208:./tmk_core/protocol/lufa/lufa.c **** 	if (Endpoint_IsINReady())
 209:./tmk_core/protocol/lufa/lufa.c **** 	{
 210:./tmk_core/protocol/lufa/lufa.c **** 		// Write data
 211:./tmk_core/protocol/lufa/lufa.c **** 		Endpoint_Write_Stream_LE(data, RAW_EPSIZE, NULL);
 212:./tmk_core/protocol/lufa/lufa.c **** 		// Finalize the stream transfer to send the last packet
 213:./tmk_core/protocol/lufa/lufa.c **** 		Endpoint_ClearIN();
 214:./tmk_core/protocol/lufa/lufa.c **** 	}
 215:./tmk_core/protocol/lufa/lufa.c **** 
 216:./tmk_core/protocol/lufa/lufa.c **** 	Endpoint_SelectEndpoint(ep);
 217:./tmk_core/protocol/lufa/lufa.c **** }
 218:./tmk_core/protocol/lufa/lufa.c **** 
 219:./tmk_core/protocol/lufa/lufa.c **** __attribute__ ((weak))
 220:./tmk_core/protocol/lufa/lufa.c **** void raw_hid_receive( uint8_t *data, uint8_t length )
 221:./tmk_core/protocol/lufa/lufa.c **** {
 222:./tmk_core/protocol/lufa/lufa.c **** 	// Users should #include "raw_hid.h" in their own code
 223:./tmk_core/protocol/lufa/lufa.c **** 	// and implement this function there. Leave this as weak linkage
 224:./tmk_core/protocol/lufa/lufa.c **** 	// so users can opt to not handle data coming in.
 225:./tmk_core/protocol/lufa/lufa.c **** }
 226:./tmk_core/protocol/lufa/lufa.c **** 
 227:./tmk_core/protocol/lufa/lufa.c **** static void raw_hid_task(void)
 228:./tmk_core/protocol/lufa/lufa.c **** {
 229:./tmk_core/protocol/lufa/lufa.c **** 	// Create a temporary buffer to hold the read in data from the host
 230:./tmk_core/protocol/lufa/lufa.c **** 	uint8_t data[RAW_EPSIZE];
 231:./tmk_core/protocol/lufa/lufa.c **** 	bool data_read = false;
 232:./tmk_core/protocol/lufa/lufa.c **** 
 233:./tmk_core/protocol/lufa/lufa.c **** 	// Device must be connected and configured for the task to run
 234:./tmk_core/protocol/lufa/lufa.c **** 	if (USB_DeviceState != DEVICE_STATE_Configured)
 235:./tmk_core/protocol/lufa/lufa.c **** 	return;
 236:./tmk_core/protocol/lufa/lufa.c **** 
 237:./tmk_core/protocol/lufa/lufa.c **** 	Endpoint_SelectEndpoint(RAW_OUT_EPNUM);
 238:./tmk_core/protocol/lufa/lufa.c **** 
 239:./tmk_core/protocol/lufa/lufa.c **** 	// Check to see if a packet has been sent from the host
 240:./tmk_core/protocol/lufa/lufa.c **** 	if (Endpoint_IsOUTReceived())
 241:./tmk_core/protocol/lufa/lufa.c **** 	{
 242:./tmk_core/protocol/lufa/lufa.c **** 		// Check to see if the packet contains data
 243:./tmk_core/protocol/lufa/lufa.c **** 		if (Endpoint_IsReadWriteAllowed())
 244:./tmk_core/protocol/lufa/lufa.c **** 		{
 245:./tmk_core/protocol/lufa/lufa.c **** 			/* Read data */
 246:./tmk_core/protocol/lufa/lufa.c **** 			Endpoint_Read_Stream_LE(data, sizeof(data), NULL);
 247:./tmk_core/protocol/lufa/lufa.c **** 			data_read = true;
 248:./tmk_core/protocol/lufa/lufa.c **** 		}
 249:./tmk_core/protocol/lufa/lufa.c **** 
 250:./tmk_core/protocol/lufa/lufa.c **** 		// Finalize the stream transfer to receive the last packet
 251:./tmk_core/protocol/lufa/lufa.c **** 		Endpoint_ClearOUT();
 252:./tmk_core/protocol/lufa/lufa.c **** 
 253:./tmk_core/protocol/lufa/lufa.c **** 		if ( data_read )
 254:./tmk_core/protocol/lufa/lufa.c **** 		{
 255:./tmk_core/protocol/lufa/lufa.c **** 			raw_hid_receive( data, sizeof(data) );
 256:./tmk_core/protocol/lufa/lufa.c **** 		}
 257:./tmk_core/protocol/lufa/lufa.c **** 	}
 258:./tmk_core/protocol/lufa/lufa.c **** }
 259:./tmk_core/protocol/lufa/lufa.c **** #endif
 260:./tmk_core/protocol/lufa/lufa.c **** 
 261:./tmk_core/protocol/lufa/lufa.c **** /*******************************************************************************
 262:./tmk_core/protocol/lufa/lufa.c ****  * Console
 263:./tmk_core/protocol/lufa/lufa.c ****  ******************************************************************************/
 264:./tmk_core/protocol/lufa/lufa.c **** #ifdef CONSOLE_ENABLE
 265:./tmk_core/protocol/lufa/lufa.c **** static void Console_Task(void)
 266:./tmk_core/protocol/lufa/lufa.c **** {
 267:./tmk_core/protocol/lufa/lufa.c ****     /* Device must be connected and configured for the task to run */
 268:./tmk_core/protocol/lufa/lufa.c ****     if (USB_DeviceState != DEVICE_STATE_Configured)
 269:./tmk_core/protocol/lufa/lufa.c ****         return;
 270:./tmk_core/protocol/lufa/lufa.c **** 
 271:./tmk_core/protocol/lufa/lufa.c ****     uint8_t ep = Endpoint_GetCurrentEndpoint();
 272:./tmk_core/protocol/lufa/lufa.c **** 
 273:./tmk_core/protocol/lufa/lufa.c **** #if 0
 274:./tmk_core/protocol/lufa/lufa.c ****     // TODO: impl receivechar()/recvchar()
 275:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(CONSOLE_OUT_EPNUM);
 276:./tmk_core/protocol/lufa/lufa.c **** 
 277:./tmk_core/protocol/lufa/lufa.c ****     /* Check to see if a packet has been sent from the host */
 278:./tmk_core/protocol/lufa/lufa.c ****     if (Endpoint_IsOUTReceived())
 279:./tmk_core/protocol/lufa/lufa.c ****     {
 280:./tmk_core/protocol/lufa/lufa.c ****         /* Check to see if the packet contains data */
 281:./tmk_core/protocol/lufa/lufa.c ****         if (Endpoint_IsReadWriteAllowed())
 282:./tmk_core/protocol/lufa/lufa.c ****         {
 283:./tmk_core/protocol/lufa/lufa.c ****             /* Create a temporary buffer to hold the read in report from the host */
 284:./tmk_core/protocol/lufa/lufa.c ****             uint8_t ConsoleData[CONSOLE_EPSIZE];
 285:./tmk_core/protocol/lufa/lufa.c **** 
 286:./tmk_core/protocol/lufa/lufa.c ****             /* Read Console Report Data */
 287:./tmk_core/protocol/lufa/lufa.c ****             Endpoint_Read_Stream_LE(&ConsoleData, sizeof(ConsoleData), NULL);
 288:./tmk_core/protocol/lufa/lufa.c **** 
 289:./tmk_core/protocol/lufa/lufa.c ****             /* Process Console Report Data */
 290:./tmk_core/protocol/lufa/lufa.c ****             //ProcessConsoleHIDReport(ConsoleData);
 291:./tmk_core/protocol/lufa/lufa.c ****         }
 292:./tmk_core/protocol/lufa/lufa.c **** 
 293:./tmk_core/protocol/lufa/lufa.c ****         /* Finalize the stream transfer to send the last packet */
 294:./tmk_core/protocol/lufa/lufa.c ****         Endpoint_ClearOUT();
 295:./tmk_core/protocol/lufa/lufa.c ****     }
 296:./tmk_core/protocol/lufa/lufa.c **** #endif
 297:./tmk_core/protocol/lufa/lufa.c **** 
 298:./tmk_core/protocol/lufa/lufa.c ****     /* IN packet */
 299:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(CONSOLE_IN_EPNUM);
 300:./tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsEnabled() || !Endpoint_IsConfigured()) {
 301:./tmk_core/protocol/lufa/lufa.c ****         Endpoint_SelectEndpoint(ep);
 302:./tmk_core/protocol/lufa/lufa.c ****         return;
 303:./tmk_core/protocol/lufa/lufa.c ****     }
 304:./tmk_core/protocol/lufa/lufa.c **** 
 305:./tmk_core/protocol/lufa/lufa.c ****     // fill empty bank
 306:./tmk_core/protocol/lufa/lufa.c ****     while (Endpoint_IsReadWriteAllowed())
 307:./tmk_core/protocol/lufa/lufa.c ****         Endpoint_Write_8(0);
 308:./tmk_core/protocol/lufa/lufa.c **** 
 309:./tmk_core/protocol/lufa/lufa.c ****     // flash senchar packet
 310:./tmk_core/protocol/lufa/lufa.c ****     if (Endpoint_IsINReady()) {
 311:./tmk_core/protocol/lufa/lufa.c ****         Endpoint_ClearIN();
 312:./tmk_core/protocol/lufa/lufa.c ****     }
 313:./tmk_core/protocol/lufa/lufa.c **** 
 314:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(ep);
 315:./tmk_core/protocol/lufa/lufa.c **** }
 316:./tmk_core/protocol/lufa/lufa.c **** #endif
 317:./tmk_core/protocol/lufa/lufa.c **** 
 318:./tmk_core/protocol/lufa/lufa.c **** 
 319:./tmk_core/protocol/lufa/lufa.c **** /*******************************************************************************
 320:./tmk_core/protocol/lufa/lufa.c ****  * USB Events
 321:./tmk_core/protocol/lufa/lufa.c ****  ******************************************************************************/
 322:./tmk_core/protocol/lufa/lufa.c **** /*
 323:./tmk_core/protocol/lufa/lufa.c ****  * Event Order of Plug in:
 324:./tmk_core/protocol/lufa/lufa.c ****  * 0) EVENT_USB_Device_Connect
 325:./tmk_core/protocol/lufa/lufa.c ****  * 1) EVENT_USB_Device_Suspend
 326:./tmk_core/protocol/lufa/lufa.c ****  * 2) EVENT_USB_Device_Reset
 327:./tmk_core/protocol/lufa/lufa.c ****  * 3) EVENT_USB_Device_Wake
 328:./tmk_core/protocol/lufa/lufa.c **** */
 329:./tmk_core/protocol/lufa/lufa.c **** void EVENT_USB_Device_Connect(void)
 330:./tmk_core/protocol/lufa/lufa.c **** {
 331:./tmk_core/protocol/lufa/lufa.c ****     print("[C]");
 332:./tmk_core/protocol/lufa/lufa.c ****     /* For battery powered device */
 333:./tmk_core/protocol/lufa/lufa.c ****     if (!USB_IsInitialized) {
 334:./tmk_core/protocol/lufa/lufa.c ****         USB_Disable();
 335:./tmk_core/protocol/lufa/lufa.c ****         USB_Init();
 336:./tmk_core/protocol/lufa/lufa.c ****         USB_Device_EnableSOFEvents();
 337:./tmk_core/protocol/lufa/lufa.c ****     }
 338:./tmk_core/protocol/lufa/lufa.c **** }
 339:./tmk_core/protocol/lufa/lufa.c **** 
 340:./tmk_core/protocol/lufa/lufa.c **** void EVENT_USB_Device_Disconnect(void)
 341:./tmk_core/protocol/lufa/lufa.c **** {
 342:./tmk_core/protocol/lufa/lufa.c ****     print("[D]");
 343:./tmk_core/protocol/lufa/lufa.c ****     /* For battery powered device */
 344:./tmk_core/protocol/lufa/lufa.c ****     USB_IsInitialized = false;
 345:./tmk_core/protocol/lufa/lufa.c **** /* TODO: This doesn't work. After several plug in/outs can not be enumerated.
 346:./tmk_core/protocol/lufa/lufa.c ****     if (USB_IsInitialized) {
 347:./tmk_core/protocol/lufa/lufa.c ****         USB_Disable();  // Disable all interrupts
 348:./tmk_core/protocol/lufa/lufa.c **** 	USB_Controller_Enable();
 349:./tmk_core/protocol/lufa/lufa.c ****         USB_INT_Enable(USB_INT_VBUSTI);
 350:./tmk_core/protocol/lufa/lufa.c ****     }
 351:./tmk_core/protocol/lufa/lufa.c **** */
 352:./tmk_core/protocol/lufa/lufa.c **** }
 353:./tmk_core/protocol/lufa/lufa.c **** 
 354:./tmk_core/protocol/lufa/lufa.c **** void EVENT_USB_Device_Reset(void)
 355:./tmk_core/protocol/lufa/lufa.c **** {
 356:./tmk_core/protocol/lufa/lufa.c ****     print("[R]");
 357:./tmk_core/protocol/lufa/lufa.c **** }
 358:./tmk_core/protocol/lufa/lufa.c **** 
 359:./tmk_core/protocol/lufa/lufa.c **** void EVENT_USB_Device_Suspend()
 360:./tmk_core/protocol/lufa/lufa.c **** {
 361:./tmk_core/protocol/lufa/lufa.c ****     print("[S]");
 362:./tmk_core/protocol/lufa/lufa.c **** #ifdef SLEEP_LED_ENABLE
 363:./tmk_core/protocol/lufa/lufa.c ****     sleep_led_enable();
 364:./tmk_core/protocol/lufa/lufa.c **** #endif
 365:./tmk_core/protocol/lufa/lufa.c **** }
 366:./tmk_core/protocol/lufa/lufa.c **** 
 367:./tmk_core/protocol/lufa/lufa.c **** void EVENT_USB_Device_WakeUp()
 368:./tmk_core/protocol/lufa/lufa.c **** {
 369:./tmk_core/protocol/lufa/lufa.c ****     print("[W]");
 370:./tmk_core/protocol/lufa/lufa.c ****     suspend_wakeup_init();
 371:./tmk_core/protocol/lufa/lufa.c **** 
 372:./tmk_core/protocol/lufa/lufa.c **** #ifdef SLEEP_LED_ENABLE
 373:./tmk_core/protocol/lufa/lufa.c ****     sleep_led_disable();
 374:./tmk_core/protocol/lufa/lufa.c ****     // NOTE: converters may not accept this
 375:./tmk_core/protocol/lufa/lufa.c ****     led_set(host_keyboard_leds());
 376:./tmk_core/protocol/lufa/lufa.c **** #endif
 377:./tmk_core/protocol/lufa/lufa.c **** }
 378:./tmk_core/protocol/lufa/lufa.c **** 
 379:./tmk_core/protocol/lufa/lufa.c **** 
 380:./tmk_core/protocol/lufa/lufa.c **** 
 381:./tmk_core/protocol/lufa/lufa.c **** #ifdef CONSOLE_ENABLE
 382:./tmk_core/protocol/lufa/lufa.c **** static bool console_flush = false;
 383:./tmk_core/protocol/lufa/lufa.c **** #define CONSOLE_FLUSH_SET(b)   do { \
 384:./tmk_core/protocol/lufa/lufa.c ****   ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {\
 385:./tmk_core/protocol/lufa/lufa.c ****     console_flush = b; \
 386:./tmk_core/protocol/lufa/lufa.c ****   } \
 387:./tmk_core/protocol/lufa/lufa.c **** } while (0)
 388:./tmk_core/protocol/lufa/lufa.c **** 
 389:./tmk_core/protocol/lufa/lufa.c **** // called every 1ms
 390:./tmk_core/protocol/lufa/lufa.c **** void EVENT_USB_Device_StartOfFrame(void)
 391:./tmk_core/protocol/lufa/lufa.c **** {
 392:./tmk_core/protocol/lufa/lufa.c ****     static uint8_t count;
 393:./tmk_core/protocol/lufa/lufa.c ****     if (++count % 50) return;
 394:./tmk_core/protocol/lufa/lufa.c ****     count = 0;
 395:./tmk_core/protocol/lufa/lufa.c **** 
 396:./tmk_core/protocol/lufa/lufa.c ****     if (!console_flush) return;
 397:./tmk_core/protocol/lufa/lufa.c ****     Console_Task();
 398:./tmk_core/protocol/lufa/lufa.c ****     console_flush = false;
 399:./tmk_core/protocol/lufa/lufa.c **** }
 400:./tmk_core/protocol/lufa/lufa.c **** 
 401:./tmk_core/protocol/lufa/lufa.c **** #endif
 402:./tmk_core/protocol/lufa/lufa.c **** 
 403:./tmk_core/protocol/lufa/lufa.c **** /** Event handler for the USB_ConfigurationChanged event.
 404:./tmk_core/protocol/lufa/lufa.c ****  * This is fired when the host sets the current configuration of the USB device after enumeration.
 405:./tmk_core/protocol/lufa/lufa.c ****  *
 406:./tmk_core/protocol/lufa/lufa.c ****  * ATMega32u2 supports dual bank(ping-pong mode) only on endpoint 3 and 4,
 407:./tmk_core/protocol/lufa/lufa.c ****  * it is safe to use singl bank for all endpoints.
 408:./tmk_core/protocol/lufa/lufa.c ****  */
 409:./tmk_core/protocol/lufa/lufa.c **** void EVENT_USB_Device_ConfigurationChanged(void)
 410:./tmk_core/protocol/lufa/lufa.c **** {
 411:./tmk_core/protocol/lufa/lufa.c ****     bool ConfigSuccess = true;
 412:./tmk_core/protocol/lufa/lufa.c **** 
 413:./tmk_core/protocol/lufa/lufa.c ****     /* Setup Keyboard HID Report Endpoints */
 414:./tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= ENDPOINT_CONFIG(KEYBOARD_IN_EPNUM, EP_TYPE_INTERRUPT, ENDPOINT_DIR_IN,
 415:./tmk_core/protocol/lufa/lufa.c ****                                      KEYBOARD_EPSIZE, ENDPOINT_BANK_SINGLE);
 416:./tmk_core/protocol/lufa/lufa.c **** 
 417:./tmk_core/protocol/lufa/lufa.c **** #ifdef MOUSE_ENABLE
 418:./tmk_core/protocol/lufa/lufa.c ****     /* Setup Mouse HID Report Endpoint */
 419:./tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= ENDPOINT_CONFIG(MOUSE_IN_EPNUM, EP_TYPE_INTERRUPT, ENDPOINT_DIR_IN,
 420:./tmk_core/protocol/lufa/lufa.c ****                                      MOUSE_EPSIZE, ENDPOINT_BANK_SINGLE);
 421:./tmk_core/protocol/lufa/lufa.c **** #endif
 422:./tmk_core/protocol/lufa/lufa.c **** 
 423:./tmk_core/protocol/lufa/lufa.c **** #ifdef EXTRAKEY_ENABLE
 424:./tmk_core/protocol/lufa/lufa.c ****     /* Setup Extra HID Report Endpoint */
 425:./tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= ENDPOINT_CONFIG(EXTRAKEY_IN_EPNUM, EP_TYPE_INTERRUPT, ENDPOINT_DIR_IN,
 426:./tmk_core/protocol/lufa/lufa.c ****                                      EXTRAKEY_EPSIZE, ENDPOINT_BANK_SINGLE);
 427:./tmk_core/protocol/lufa/lufa.c **** #endif
 428:./tmk_core/protocol/lufa/lufa.c **** 
 429:./tmk_core/protocol/lufa/lufa.c **** #ifdef RAW_ENABLE
 430:./tmk_core/protocol/lufa/lufa.c ****     /* Setup Raw HID Report Endpoints */
 431:./tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= ENDPOINT_CONFIG(RAW_IN_EPNUM, EP_TYPE_INTERRUPT, ENDPOINT_DIR_IN,
 432:./tmk_core/protocol/lufa/lufa.c **** 									 RAW_EPSIZE, ENDPOINT_BANK_SINGLE);
 433:./tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= ENDPOINT_CONFIG(RAW_OUT_EPNUM, EP_TYPE_INTERRUPT, ENDPOINT_DIR_OUT,
 434:./tmk_core/protocol/lufa/lufa.c **** 									 RAW_EPSIZE, ENDPOINT_BANK_SINGLE);
 435:./tmk_core/protocol/lufa/lufa.c **** #endif
 436:./tmk_core/protocol/lufa/lufa.c **** 
 437:./tmk_core/protocol/lufa/lufa.c **** #ifdef CONSOLE_ENABLE
 438:./tmk_core/protocol/lufa/lufa.c ****     /* Setup Console HID Report Endpoints */
 439:./tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= ENDPOINT_CONFIG(CONSOLE_IN_EPNUM, EP_TYPE_INTERRUPT, ENDPOINT_DIR_IN,
 440:./tmk_core/protocol/lufa/lufa.c ****                                      CONSOLE_EPSIZE, ENDPOINT_BANK_SINGLE);
 441:./tmk_core/protocol/lufa/lufa.c **** #if 0
 442:./tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= ENDPOINT_CONFIG(CONSOLE_OUT_EPNUM, EP_TYPE_INTERRUPT, ENDPOINT_DIR_OUT,
 443:./tmk_core/protocol/lufa/lufa.c ****                                      CONSOLE_EPSIZE, ENDPOINT_BANK_SINGLE);
 444:./tmk_core/protocol/lufa/lufa.c **** #endif
 445:./tmk_core/protocol/lufa/lufa.c **** #endif
 446:./tmk_core/protocol/lufa/lufa.c **** 
 447:./tmk_core/protocol/lufa/lufa.c **** #ifdef NKRO_ENABLE
 448:./tmk_core/protocol/lufa/lufa.c ****     /* Setup NKRO HID Report Endpoints */
 449:./tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= ENDPOINT_CONFIG(NKRO_IN_EPNUM, EP_TYPE_INTERRUPT, ENDPOINT_DIR_IN,
 450:./tmk_core/protocol/lufa/lufa.c ****                                      NKRO_EPSIZE, ENDPOINT_BANK_SINGLE);
 451:./tmk_core/protocol/lufa/lufa.c **** #endif
 452:./tmk_core/protocol/lufa/lufa.c **** 
 453:./tmk_core/protocol/lufa/lufa.c **** #ifdef MIDI_ENABLE
 454:./tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= Endpoint_ConfigureEndpoint(MIDI_STREAM_IN_EPADDR, EP_TYPE_BULK, MIDI_STREAM_EP
 455:./tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= Endpoint_ConfigureEndpoint(MIDI_STREAM_OUT_EPADDR, EP_TYPE_BULK, MIDI_STREAM_E
 456:./tmk_core/protocol/lufa/lufa.c **** #endif
 457:./tmk_core/protocol/lufa/lufa.c **** 
 458:./tmk_core/protocol/lufa/lufa.c **** #ifdef VIRTSER_ENABLE
 459:./tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= Endpoint_ConfigureEndpoint(CDC_NOTIFICATION_EPADDR, EP_TYPE_INTERRUPT, CDC_NOT
 460:./tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= Endpoint_ConfigureEndpoint(CDC_OUT_EPADDR, EP_TYPE_BULK, CDC_EPSIZE, ENDPOINT_
 461:./tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= Endpoint_ConfigureEndpoint(CDC_IN_EPADDR, EP_TYPE_BULK, CDC_EPSIZE, ENDPOINT_B
 462:./tmk_core/protocol/lufa/lufa.c **** #endif
 463:./tmk_core/protocol/lufa/lufa.c **** }
 464:./tmk_core/protocol/lufa/lufa.c **** 
 465:./tmk_core/protocol/lufa/lufa.c **** /*
 466:./tmk_core/protocol/lufa/lufa.c **** Appendix G: HID Request Support Requirements
 467:./tmk_core/protocol/lufa/lufa.c **** 
 468:./tmk_core/protocol/lufa/lufa.c **** The following table enumerates the requests that need to be supported by various types of HID class
 469:./tmk_core/protocol/lufa/lufa.c **** 
 470:./tmk_core/protocol/lufa/lufa.c **** Device type     GetReport   SetReport   GetIdle     SetIdle     GetProtocol SetProtocol
 471:./tmk_core/protocol/lufa/lufa.c **** ------------------------------------------------------------------------------------------
 472:./tmk_core/protocol/lufa/lufa.c **** Boot Mouse      Required    Optional    Optional    Optional    Required    Required
 473:./tmk_core/protocol/lufa/lufa.c **** Non-Boot Mouse  Required    Optional    Optional    Optional    Optional    Optional
 474:./tmk_core/protocol/lufa/lufa.c **** Boot Keyboard   Required    Optional    Required    Required    Required    Required
 475:./tmk_core/protocol/lufa/lufa.c **** Non-Boot Keybrd Required    Optional    Required    Required    Optional    Optional
 476:./tmk_core/protocol/lufa/lufa.c **** Other Device    Required    Optional    Optional    Optional    Optional    Optional
 477:./tmk_core/protocol/lufa/lufa.c **** */
 478:./tmk_core/protocol/lufa/lufa.c **** /** Event handler for the USB_ControlRequest event.
 479:./tmk_core/protocol/lufa/lufa.c ****  *  This is fired before passing along unhandled control requests to the library for processing int
 480:./tmk_core/protocol/lufa/lufa.c ****  */
 481:./tmk_core/protocol/lufa/lufa.c **** void EVENT_USB_Device_ControlRequest(void)
 482:./tmk_core/protocol/lufa/lufa.c **** {
 483:./tmk_core/protocol/lufa/lufa.c ****     uint8_t* ReportData = NULL;
 484:./tmk_core/protocol/lufa/lufa.c ****     uint8_t  ReportSize = 0;
 485:./tmk_core/protocol/lufa/lufa.c **** 
 486:./tmk_core/protocol/lufa/lufa.c ****     /* Handle HID Class specific requests */
 487:./tmk_core/protocol/lufa/lufa.c ****     switch (USB_ControlRequest.bRequest)
 488:./tmk_core/protocol/lufa/lufa.c ****     {
 489:./tmk_core/protocol/lufa/lufa.c ****         case HID_REQ_GetReport:
 490:./tmk_core/protocol/lufa/lufa.c ****             if (USB_ControlRequest.bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_I
 491:./tmk_core/protocol/lufa/lufa.c ****             {
 492:./tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearSETUP();
 493:./tmk_core/protocol/lufa/lufa.c **** 
 494:./tmk_core/protocol/lufa/lufa.c ****                 // Interface
 495:./tmk_core/protocol/lufa/lufa.c ****                 switch (USB_ControlRequest.wIndex) {
 496:./tmk_core/protocol/lufa/lufa.c ****                 case KEYBOARD_INTERFACE:
 497:./tmk_core/protocol/lufa/lufa.c ****                     // TODO: test/check
 498:./tmk_core/protocol/lufa/lufa.c ****                     ReportData = (uint8_t*)&keyboard_report_sent;
 499:./tmk_core/protocol/lufa/lufa.c ****                     ReportSize = sizeof(keyboard_report_sent);
 500:./tmk_core/protocol/lufa/lufa.c ****                     break;
 501:./tmk_core/protocol/lufa/lufa.c ****                 }
 502:./tmk_core/protocol/lufa/lufa.c **** 
 503:./tmk_core/protocol/lufa/lufa.c ****                 /* Write the report data to the control endpoint */
 504:./tmk_core/protocol/lufa/lufa.c ****                 Endpoint_Write_Control_Stream_LE(ReportData, ReportSize);
 505:./tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearOUT();
 506:./tmk_core/protocol/lufa/lufa.c ****             }
 507:./tmk_core/protocol/lufa/lufa.c **** 
 508:./tmk_core/protocol/lufa/lufa.c ****             break;
 509:./tmk_core/protocol/lufa/lufa.c ****         case HID_REQ_SetReport:
 510:./tmk_core/protocol/lufa/lufa.c ****             if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_I
 511:./tmk_core/protocol/lufa/lufa.c ****             {
 512:./tmk_core/protocol/lufa/lufa.c **** 
 513:./tmk_core/protocol/lufa/lufa.c ****                 // Interface
 514:./tmk_core/protocol/lufa/lufa.c ****                 switch (USB_ControlRequest.wIndex) {
 515:./tmk_core/protocol/lufa/lufa.c ****                 case KEYBOARD_INTERFACE:
 516:./tmk_core/protocol/lufa/lufa.c **** #ifdef NKRO_ENABLE
 517:./tmk_core/protocol/lufa/lufa.c ****                 case NKRO_INTERFACE:
 518:./tmk_core/protocol/lufa/lufa.c **** #endif
 519:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearSETUP();
 520:./tmk_core/protocol/lufa/lufa.c **** 
 521:./tmk_core/protocol/lufa/lufa.c ****                     while (!(Endpoint_IsOUTReceived())) {
 522:./tmk_core/protocol/lufa/lufa.c ****                         if (USB_DeviceState == DEVICE_STATE_Unattached)
 523:./tmk_core/protocol/lufa/lufa.c ****                           return;
 524:./tmk_core/protocol/lufa/lufa.c ****                     }
 525:./tmk_core/protocol/lufa/lufa.c ****                     keyboard_led_stats = Endpoint_Read_8();
 526:./tmk_core/protocol/lufa/lufa.c **** 
 527:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearOUT();
 528:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearStatusStage();
 529:./tmk_core/protocol/lufa/lufa.c ****                     break;
 530:./tmk_core/protocol/lufa/lufa.c ****                 }
 531:./tmk_core/protocol/lufa/lufa.c **** 
 532:./tmk_core/protocol/lufa/lufa.c ****             }
 533:./tmk_core/protocol/lufa/lufa.c **** 
 534:./tmk_core/protocol/lufa/lufa.c ****             break;
 535:./tmk_core/protocol/lufa/lufa.c **** 
 536:./tmk_core/protocol/lufa/lufa.c ****         case HID_REQ_GetProtocol:
 537:./tmk_core/protocol/lufa/lufa.c ****             if (USB_ControlRequest.bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_I
 538:./tmk_core/protocol/lufa/lufa.c ****             {
 539:./tmk_core/protocol/lufa/lufa.c ****                 if (USB_ControlRequest.wIndex == KEYBOARD_INTERFACE) {
 540:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearSETUP();
 541:./tmk_core/protocol/lufa/lufa.c ****                     while (!(Endpoint_IsINReady()));
 542:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_Write_8(keyboard_protocol);
 543:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearIN();
 544:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearStatusStage();
 545:./tmk_core/protocol/lufa/lufa.c ****                 }
 546:./tmk_core/protocol/lufa/lufa.c ****             }
 547:./tmk_core/protocol/lufa/lufa.c **** 
 548:./tmk_core/protocol/lufa/lufa.c ****             break;
 549:./tmk_core/protocol/lufa/lufa.c ****         case HID_REQ_SetProtocol:
 550:./tmk_core/protocol/lufa/lufa.c ****             if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_I
 551:./tmk_core/protocol/lufa/lufa.c ****             {
 552:./tmk_core/protocol/lufa/lufa.c ****                 if (USB_ControlRequest.wIndex == KEYBOARD_INTERFACE) {
 553:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearSETUP();
 554:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearStatusStage();
 555:./tmk_core/protocol/lufa/lufa.c **** 
 556:./tmk_core/protocol/lufa/lufa.c ****                     keyboard_protocol = (USB_ControlRequest.wValue & 0xFF);
 557:./tmk_core/protocol/lufa/lufa.c ****                     clear_keyboard();
 558:./tmk_core/protocol/lufa/lufa.c ****                 }
 559:./tmk_core/protocol/lufa/lufa.c ****             }
 560:./tmk_core/protocol/lufa/lufa.c **** 
 561:./tmk_core/protocol/lufa/lufa.c ****             break;
 562:./tmk_core/protocol/lufa/lufa.c ****         case HID_REQ_SetIdle:
 563:./tmk_core/protocol/lufa/lufa.c ****             if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_I
 564:./tmk_core/protocol/lufa/lufa.c ****             {
 565:./tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearSETUP();
 566:./tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearStatusStage();
 567:./tmk_core/protocol/lufa/lufa.c **** 
 568:./tmk_core/protocol/lufa/lufa.c ****                 keyboard_idle = ((USB_ControlRequest.wValue & 0xFF00) >> 8);
 569:./tmk_core/protocol/lufa/lufa.c ****             }
 570:./tmk_core/protocol/lufa/lufa.c **** 
 571:./tmk_core/protocol/lufa/lufa.c ****             break;
 572:./tmk_core/protocol/lufa/lufa.c ****         case HID_REQ_GetIdle:
 573:./tmk_core/protocol/lufa/lufa.c ****             if (USB_ControlRequest.bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_I
 574:./tmk_core/protocol/lufa/lufa.c ****             {
 575:./tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearSETUP();
 576:./tmk_core/protocol/lufa/lufa.c ****                 while (!(Endpoint_IsINReady()));
 577:./tmk_core/protocol/lufa/lufa.c ****                 Endpoint_Write_8(keyboard_idle);
 578:./tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearIN();
 579:./tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearStatusStage();
 580:./tmk_core/protocol/lufa/lufa.c ****             }
 581:./tmk_core/protocol/lufa/lufa.c **** 
 582:./tmk_core/protocol/lufa/lufa.c ****             break;
 583:./tmk_core/protocol/lufa/lufa.c ****     }
 584:./tmk_core/protocol/lufa/lufa.c **** 
 585:./tmk_core/protocol/lufa/lufa.c **** #ifdef VIRTSER_ENABLE
 586:./tmk_core/protocol/lufa/lufa.c ****     CDC_Device_ProcessControlRequest(&cdc_device);
 587:./tmk_core/protocol/lufa/lufa.c **** #endif
 588:./tmk_core/protocol/lufa/lufa.c **** }
 589:./tmk_core/protocol/lufa/lufa.c **** 
 590:./tmk_core/protocol/lufa/lufa.c **** /*******************************************************************************
 591:./tmk_core/protocol/lufa/lufa.c ****  * Host driver
 592:./tmk_core/protocol/lufa/lufa.c **** p
 593:./tmk_core/protocol/lufa/lufa.c ****  ******************************************************************************/
 594:./tmk_core/protocol/lufa/lufa.c **** static uint8_t keyboard_leds(void)
 595:./tmk_core/protocol/lufa/lufa.c **** {
  15               		.loc 1 595 1 view -0
  16               		.cfi_startproc
  17               	/* prologue: function */
  18               	/* frame size = 0 */
  19               	/* stack size = 0 */
  20               	.L__stack_usage = 0
 596:./tmk_core/protocol/lufa/lufa.c ****     return keyboard_led_stats;
  21               		.loc 1 596 5 view .LVU1
 597:./tmk_core/protocol/lufa/lufa.c **** }
  22               		.loc 1 597 1 is_stmt 0 view .LVU2
  23 0000 8091 0000 		lds r24,keyboard_led_stats
  24               	/* epilogue start */
  25 0004 0895      		ret
  26               		.cfi_endproc
  27               	.LFE128:
  29               		.section	.text.send_consumer,"ax",@progbits
  31               	send_consumer:
  32               	.LVL0:
  33               	.LFB133:
 598:./tmk_core/protocol/lufa/lufa.c **** 
 599:./tmk_core/protocol/lufa/lufa.c **** #define SendToUSB 1
 600:./tmk_core/protocol/lufa/lufa.c **** #define SendToBT  2
 601:./tmk_core/protocol/lufa/lufa.c **** #define SendToBLE 4
 602:./tmk_core/protocol/lufa/lufa.c **** 
 603:./tmk_core/protocol/lufa/lufa.c **** static inline uint8_t where_to_send(void) {
 604:./tmk_core/protocol/lufa/lufa.c **** #ifdef ADAFRUIT_BLE_ENABLE
 605:./tmk_core/protocol/lufa/lufa.c **** #if 0
 606:./tmk_core/protocol/lufa/lufa.c ****   if (adafruit_ble_is_connected()) {
 607:./tmk_core/protocol/lufa/lufa.c ****     // For testing, send to BLE as a priority
 608:./tmk_core/protocol/lufa/lufa.c ****     return SendToBLE;
 609:./tmk_core/protocol/lufa/lufa.c ****   }
 610:./tmk_core/protocol/lufa/lufa.c **** #endif
 611:./tmk_core/protocol/lufa/lufa.c **** 
 612:./tmk_core/protocol/lufa/lufa.c ****   // This is the real policy
 613:./tmk_core/protocol/lufa/lufa.c ****   if (USB_DeviceState != DEVICE_STATE_Configured) {
 614:./tmk_core/protocol/lufa/lufa.c ****     if (adafruit_ble_is_connected()) {
 615:./tmk_core/protocol/lufa/lufa.c ****       return SendToBLE;
 616:./tmk_core/protocol/lufa/lufa.c ****     }
 617:./tmk_core/protocol/lufa/lufa.c ****   }
 618:./tmk_core/protocol/lufa/lufa.c **** #endif
 619:./tmk_core/protocol/lufa/lufa.c ****   return ((USB_DeviceState == DEVICE_STATE_Configured) ? SendToUSB : 0)
 620:./tmk_core/protocol/lufa/lufa.c **** #ifdef BLUETOOTH_ENABLE
 621:./tmk_core/protocol/lufa/lufa.c ****     || SendToBT
 622:./tmk_core/protocol/lufa/lufa.c **** #endif
 623:./tmk_core/protocol/lufa/lufa.c ****     ;
 624:./tmk_core/protocol/lufa/lufa.c **** }
 625:./tmk_core/protocol/lufa/lufa.c **** 
 626:./tmk_core/protocol/lufa/lufa.c **** static void send_keyboard(report_keyboard_t *report)
 627:./tmk_core/protocol/lufa/lufa.c **** {
 628:./tmk_core/protocol/lufa/lufa.c **** #ifdef BLUETOOTH_ENABLE
 629:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(0xFD);
 630:./tmk_core/protocol/lufa/lufa.c ****     for (uint8_t i = 0; i < KEYBOARD_EPSIZE; i++) {
 631:./tmk_core/protocol/lufa/lufa.c ****         bluefruit_serial_send(report->raw[i]);
 632:./tmk_core/protocol/lufa/lufa.c ****     }
 633:./tmk_core/protocol/lufa/lufa.c **** #endif
 634:./tmk_core/protocol/lufa/lufa.c **** 
 635:./tmk_core/protocol/lufa/lufa.c ****     uint8_t timeout = 255;
 636:./tmk_core/protocol/lufa/lufa.c ****     uint8_t where = where_to_send();
 637:./tmk_core/protocol/lufa/lufa.c **** 
 638:./tmk_core/protocol/lufa/lufa.c **** #ifdef ADAFRUIT_BLE_ENABLE
 639:./tmk_core/protocol/lufa/lufa.c ****     if (where & SendToBLE) {
 640:./tmk_core/protocol/lufa/lufa.c ****       adafruit_ble_send_keys(report->mods, report->keys, sizeof(report->keys));
 641:./tmk_core/protocol/lufa/lufa.c ****     }
 642:./tmk_core/protocol/lufa/lufa.c **** #endif
 643:./tmk_core/protocol/lufa/lufa.c **** 
 644:./tmk_core/protocol/lufa/lufa.c ****     if (!(where & SendToUSB)) {
 645:./tmk_core/protocol/lufa/lufa.c ****       return;
 646:./tmk_core/protocol/lufa/lufa.c ****     }
 647:./tmk_core/protocol/lufa/lufa.c **** 
 648:./tmk_core/protocol/lufa/lufa.c ****     /* Select the Keyboard Report Endpoint */
 649:./tmk_core/protocol/lufa/lufa.c **** #ifdef NKRO_ENABLE
 650:./tmk_core/protocol/lufa/lufa.c ****     if (keyboard_protocol && keymap_config.nkro) {
 651:./tmk_core/protocol/lufa/lufa.c ****         /* Report protocol - NKRO */
 652:./tmk_core/protocol/lufa/lufa.c ****         Endpoint_SelectEndpoint(NKRO_IN_EPNUM);
 653:./tmk_core/protocol/lufa/lufa.c **** 
 654:./tmk_core/protocol/lufa/lufa.c ****         /* Check if write ready for a polling interval around 1ms */
 655:./tmk_core/protocol/lufa/lufa.c ****         while (timeout-- && !Endpoint_IsReadWriteAllowed()) _delay_us(4);
 656:./tmk_core/protocol/lufa/lufa.c ****         if (!Endpoint_IsReadWriteAllowed()) return;
 657:./tmk_core/protocol/lufa/lufa.c **** 
 658:./tmk_core/protocol/lufa/lufa.c ****         /* Write Keyboard Report Data */
 659:./tmk_core/protocol/lufa/lufa.c ****         Endpoint_Write_Stream_LE(report, NKRO_EPSIZE, NULL);
 660:./tmk_core/protocol/lufa/lufa.c ****     }
 661:./tmk_core/protocol/lufa/lufa.c ****     else
 662:./tmk_core/protocol/lufa/lufa.c **** #endif
 663:./tmk_core/protocol/lufa/lufa.c ****     {
 664:./tmk_core/protocol/lufa/lufa.c ****         /* Boot protocol */
 665:./tmk_core/protocol/lufa/lufa.c ****         Endpoint_SelectEndpoint(KEYBOARD_IN_EPNUM);
 666:./tmk_core/protocol/lufa/lufa.c **** 
 667:./tmk_core/protocol/lufa/lufa.c ****         /* Check if write ready for a polling interval around 10ms */
 668:./tmk_core/protocol/lufa/lufa.c ****         while (timeout-- && !Endpoint_IsReadWriteAllowed()) _delay_us(40);
 669:./tmk_core/protocol/lufa/lufa.c ****         if (!Endpoint_IsReadWriteAllowed()) return;
 670:./tmk_core/protocol/lufa/lufa.c **** 
 671:./tmk_core/protocol/lufa/lufa.c ****         /* Write Keyboard Report Data */
 672:./tmk_core/protocol/lufa/lufa.c ****         Endpoint_Write_Stream_LE(report, KEYBOARD_EPSIZE, NULL);
 673:./tmk_core/protocol/lufa/lufa.c ****     }
 674:./tmk_core/protocol/lufa/lufa.c **** 
 675:./tmk_core/protocol/lufa/lufa.c ****     /* Finalize the stream transfer to send the last packet */
 676:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_ClearIN();
 677:./tmk_core/protocol/lufa/lufa.c **** 
 678:./tmk_core/protocol/lufa/lufa.c ****     keyboard_report_sent = *report;
 679:./tmk_core/protocol/lufa/lufa.c **** }
 680:./tmk_core/protocol/lufa/lufa.c **** 
 681:./tmk_core/protocol/lufa/lufa.c **** static void send_mouse(report_mouse_t *report)
 682:./tmk_core/protocol/lufa/lufa.c **** {
 683:./tmk_core/protocol/lufa/lufa.c **** #ifdef MOUSE_ENABLE
 684:./tmk_core/protocol/lufa/lufa.c **** 
 685:./tmk_core/protocol/lufa/lufa.c **** #ifdef BLUETOOTH_ENABLE
 686:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(0xFD);
 687:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(0x00);
 688:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(0x03);
 689:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(report->buttons);
 690:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(report->x);
 691:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(report->y);
 692:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(report->v); // should try sending the wheel v here
 693:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(report->h); // should try sending the wheel h here
 694:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(0x00);
 695:./tmk_core/protocol/lufa/lufa.c **** #endif
 696:./tmk_core/protocol/lufa/lufa.c **** 
 697:./tmk_core/protocol/lufa/lufa.c ****     uint8_t timeout = 255;
 698:./tmk_core/protocol/lufa/lufa.c **** 
 699:./tmk_core/protocol/lufa/lufa.c ****     uint8_t where = where_to_send();
 700:./tmk_core/protocol/lufa/lufa.c **** 
 701:./tmk_core/protocol/lufa/lufa.c **** #ifdef ADAFRUIT_BLE_ENABLE
 702:./tmk_core/protocol/lufa/lufa.c ****     if (where & SendToBLE) {
 703:./tmk_core/protocol/lufa/lufa.c ****       // FIXME: mouse buttons
 704:./tmk_core/protocol/lufa/lufa.c ****       adafruit_ble_send_mouse_move(report->x, report->y, report->v, report->h);
 705:./tmk_core/protocol/lufa/lufa.c ****     }
 706:./tmk_core/protocol/lufa/lufa.c **** #endif
 707:./tmk_core/protocol/lufa/lufa.c ****     if (!(where & SendToUSB)) {
 708:./tmk_core/protocol/lufa/lufa.c ****       return;
 709:./tmk_core/protocol/lufa/lufa.c ****     }
 710:./tmk_core/protocol/lufa/lufa.c **** 
 711:./tmk_core/protocol/lufa/lufa.c ****     /* Select the Mouse Report Endpoint */
 712:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(MOUSE_IN_EPNUM);
 713:./tmk_core/protocol/lufa/lufa.c **** 
 714:./tmk_core/protocol/lufa/lufa.c ****     /* Check if write ready for a polling interval around 10ms */
 715:./tmk_core/protocol/lufa/lufa.c ****     while (timeout-- && !Endpoint_IsReadWriteAllowed()) _delay_us(40);
 716:./tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 717:./tmk_core/protocol/lufa/lufa.c **** 
 718:./tmk_core/protocol/lufa/lufa.c ****     /* Write Mouse Report Data */
 719:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_Write_Stream_LE(report, sizeof(report_mouse_t), NULL);
 720:./tmk_core/protocol/lufa/lufa.c **** 
 721:./tmk_core/protocol/lufa/lufa.c ****     /* Finalize the stream transfer to send the last packet */
 722:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_ClearIN();
 723:./tmk_core/protocol/lufa/lufa.c **** #endif
 724:./tmk_core/protocol/lufa/lufa.c **** }
 725:./tmk_core/protocol/lufa/lufa.c **** 
 726:./tmk_core/protocol/lufa/lufa.c **** static void send_system(uint16_t data)
 727:./tmk_core/protocol/lufa/lufa.c **** {
 728:./tmk_core/protocol/lufa/lufa.c ****     uint8_t timeout = 255;
 729:./tmk_core/protocol/lufa/lufa.c **** 
 730:./tmk_core/protocol/lufa/lufa.c ****     if (USB_DeviceState != DEVICE_STATE_Configured)
 731:./tmk_core/protocol/lufa/lufa.c ****         return;
 732:./tmk_core/protocol/lufa/lufa.c **** 
 733:./tmk_core/protocol/lufa/lufa.c ****     report_extra_t r = {
 734:./tmk_core/protocol/lufa/lufa.c ****         .report_id = REPORT_ID_SYSTEM,
 735:./tmk_core/protocol/lufa/lufa.c ****         .usage = data - SYSTEM_POWER_DOWN + 1
 736:./tmk_core/protocol/lufa/lufa.c ****     };
 737:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(EXTRAKEY_IN_EPNUM);
 738:./tmk_core/protocol/lufa/lufa.c **** 
 739:./tmk_core/protocol/lufa/lufa.c ****     /* Check if write ready for a polling interval around 10ms */
 740:./tmk_core/protocol/lufa/lufa.c ****     while (timeout-- && !Endpoint_IsReadWriteAllowed()) _delay_us(40);
 741:./tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 742:./tmk_core/protocol/lufa/lufa.c **** 
 743:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_Write_Stream_LE(&r, sizeof(report_extra_t), NULL);
 744:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_ClearIN();
 745:./tmk_core/protocol/lufa/lufa.c **** }
 746:./tmk_core/protocol/lufa/lufa.c **** 
 747:./tmk_core/protocol/lufa/lufa.c **** static void send_consumer(uint16_t data)
 748:./tmk_core/protocol/lufa/lufa.c **** {
  34               		.loc 1 748 1 is_stmt 1 view -0
  35               		.cfi_startproc
  36               		.loc 1 748 1 is_stmt 0 view .LVU4
  37 0000 CF93      		push r28
  38               	.LCFI0:
  39               		.cfi_def_cfa_offset 3
  40               		.cfi_offset 28, -2
  41 0002 DF93      		push r29
  42               	.LCFI1:
  43               		.cfi_def_cfa_offset 4
  44               		.cfi_offset 29, -3
  45 0004 00D0      		rcall .
  46 0006 0F92      		push __tmp_reg__
  47               	.LCFI2:
  48               		.cfi_def_cfa_offset 7
  49 0008 CDB7      		in r28,__SP_L__
  50 000a DEB7      		in r29,__SP_H__
  51               	.LCFI3:
  52               		.cfi_def_cfa_register 28
  53               	/* prologue: function */
  54               	/* frame size = 3 */
  55               	/* stack size = 5 */
  56               	.L__stack_usage = 5
 749:./tmk_core/protocol/lufa/lufa.c **** 
 750:./tmk_core/protocol/lufa/lufa.c **** #ifdef BLUETOOTH_ENABLE
 751:./tmk_core/protocol/lufa/lufa.c ****     static uint16_t last_data = 0;
 752:./tmk_core/protocol/lufa/lufa.c ****     if (data == last_data) return;
 753:./tmk_core/protocol/lufa/lufa.c ****     last_data = data;
 754:./tmk_core/protocol/lufa/lufa.c ****     uint16_t bitmap = CONSUMER2BLUEFRUIT(data);
 755:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(0xFD);
 756:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(0x00);
 757:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(0x02);
 758:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send((bitmap>>8)&0xFF);
 759:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(bitmap&0xFF);
 760:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(0x00);
 761:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(0x00);
 762:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(0x00);
 763:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(0x00);
 764:./tmk_core/protocol/lufa/lufa.c **** #endif
 765:./tmk_core/protocol/lufa/lufa.c **** 
 766:./tmk_core/protocol/lufa/lufa.c ****     uint8_t timeout = 255;
  57               		.loc 1 766 5 is_stmt 1 view .LVU5
  58               	.LVL1:
 767:./tmk_core/protocol/lufa/lufa.c ****     uint8_t where = where_to_send();
  59               		.loc 1 767 5 view .LVU6
  60               	.LBB177:
  61               	.LBI177:
 603:./tmk_core/protocol/lufa/lufa.c **** #ifdef ADAFRUIT_BLE_ENABLE
  62               		.loc 1 603 23 view .LVU7
  63               	.LBB178:
 619:./tmk_core/protocol/lufa/lufa.c **** #ifdef BLUETOOTH_ENABLE
  64               		.loc 1 619 3 view .LVU8
 619:./tmk_core/protocol/lufa/lufa.c **** #ifdef BLUETOOTH_ENABLE
  65               		.loc 1 619 68 is_stmt 0 view .LVU9
  66 000c 2091 0000 		lds r18,USB_DeviceState
  67               	.LVL2:
 619:./tmk_core/protocol/lufa/lufa.c **** #ifdef BLUETOOTH_ENABLE
  68               		.loc 1 619 68 view .LVU10
  69               	.LBE178:
  70               	.LBE177:
 768:./tmk_core/protocol/lufa/lufa.c **** 
 769:./tmk_core/protocol/lufa/lufa.c **** #ifdef ADAFRUIT_BLE_ENABLE
 770:./tmk_core/protocol/lufa/lufa.c ****     if (where & SendToBLE) {
 771:./tmk_core/protocol/lufa/lufa.c ****       adafruit_ble_send_consumer_key(data, 0);
 772:./tmk_core/protocol/lufa/lufa.c ****     }
 773:./tmk_core/protocol/lufa/lufa.c **** #endif
 774:./tmk_core/protocol/lufa/lufa.c ****     if (!(where & SendToUSB)) {
  71               		.loc 1 774 5 is_stmt 1 view .LVU11
  72               		.loc 1 774 8 is_stmt 0 view .LVU12
  73 0010 2430      		cpi r18,lo8(4)
  74 0012 01F4      		brne .L2
 775:./tmk_core/protocol/lufa/lufa.c ****       return;
 776:./tmk_core/protocol/lufa/lufa.c ****     }
 777:./tmk_core/protocol/lufa/lufa.c **** 
 778:./tmk_core/protocol/lufa/lufa.c ****     report_extra_t r = {
  75               		.loc 1 778 5 is_stmt 1 view .LVU13
  76               		.loc 1 778 20 is_stmt 0 view .LVU14
  77 0014 23E0      		ldi r18,lo8(3)
  78               	.LVL3:
  79               		.loc 1 778 20 view .LVU15
  80 0016 2983      		std Y+1,r18
  81 0018 8A83      		std Y+2,r24
  82 001a 9B83      		std Y+3,r25
 779:./tmk_core/protocol/lufa/lufa.c ****         .report_id = REPORT_ID_CONSUMER,
 780:./tmk_core/protocol/lufa/lufa.c ****         .usage = data
 781:./tmk_core/protocol/lufa/lufa.c ****     };
 782:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(EXTRAKEY_IN_EPNUM);
  83               		.loc 1 782 5 is_stmt 1 view .LVU16
  84               	.LVL4:
  85               	.LBB179:
  86               	.LBI179:
  87               		.file 2 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h"
   1:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /*
   2:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****              LUFA Library
   3:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****      Copyright (C) Dean Camera, 2014.
   4:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
   5:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****            www.lufa-lib.org
   7:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** */
   8:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
   9:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /*
  10:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   Copyright 2014  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  12:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   all copies and that both that the copyright notice and this
  16:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   documentation, and that the name of the author not be used in
  18:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software without specific, written prior permission.
  20:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  21:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   The author disclaims all warranties with regard to this
  22:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software, including all implied warranties of merchantability
  23:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   special, indirect or consequential damages or any damages
  25:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   arising out of or in connection with the use or performance of
  28:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   this software.
  29:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** */
  30:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  31:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \file
  32:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief USB Endpoint definitions for the AVR8 microcontrollers.
  33:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \copydetails Group_EndpointManagement_AVR8
  34:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  35:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  36:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  37:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  38:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  39:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointRW
  40:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointRW_AVR8 Endpoint Data Reading and Writing (AVR8)
  41:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint data read/write definitions for the Atmel AVR8 architecture.
  42:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  43:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to data reading and writing from and to e
  44:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  45:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  46:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointPrimitiveRW
  47:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointPrimitiveRW_AVR8 Read/Write of Primitive Data Types (AVR8)
  48:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint primitive read/write definitions for the Atmel AVR8 architecture.
  49:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  50:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to data reading and writing of primitive 
  51:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  from and to endpoints.
  52:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  53:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  54:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointPacketManagement
  55:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointPacketManagement_AVR8 Endpoint Packet Management (AVR8)
  56:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint packet management definitions for the Atmel AVR8 architecture.
  57:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  58:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to packet management of endpoints.
  59:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  60:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  61:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointManagement
  62:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointManagement_AVR8 Endpoint Management (AVR8)
  63:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint management definitions for the Atmel AVR8 architecture.
  64:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  65:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros and enums related to endpoint management when in USB Device mode. This
  66:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  module contains the endpoint management macros, as well as endpoint interrupt and data
  67:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  send/receive functions for various data types.
  68:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  69:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  @{
  70:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  71:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  72:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** #ifndef __ENDPOINT_AVR8_H__
  73:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** #define __ENDPOINT_AVR8_H__
  74:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  75:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Includes: */
  76:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../../../../Common/Common.h"
  77:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../USBTask.h"
  78:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../USBInterrupt.h"
  79:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  80:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  81:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#if defined(__cplusplus)
  82:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			extern "C" {
  83:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#endif
  84:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  85:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Preprocessor Checks: */
  86:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  87:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  88:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#endif
  89:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  90:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Private Interface - For use in library only: */
  91:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	#if !defined(__DOXYGEN__)
  92:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Inline Functions: */
  93:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes) ATTR_WARN_UNUSED_RESULT A
  94:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                                                       ATTR_ALWAYS_INLINE;
  95:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes)
  96:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
  97:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint8_t  MaskVal    = 0;
  98:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint16_t CheckBytes = 8;
  99:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 100:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				while (CheckBytes < Bytes)
 101:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 102:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					MaskVal++;
 103:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					CheckBytes <<= 1;
 104:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 105:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 106:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (MaskVal << EPSIZE0);
 107:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 108:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 109:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Function Prototypes: */
 110:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			void Endpoint_ClearEndpoints(void);
 111:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			bool Endpoint_ConfigureEndpoint_Prv(const uint8_t Number,
 112:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                    const uint8_t UECFG0XData,
 113:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                    const uint8_t UECFG1XData);
 114:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 115:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	#endif
 116:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 117:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Public Interface - May be used in end-application: */
 118:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Macros: */
 119:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#if (!defined(FIXED_CONTROL_ENDPOINT_SIZE) || defined(__DOXYGEN__))
 120:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				/** Default size of the default control endpoint's bank, until altered by the control endpoint 
 121:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 *  value in the device descriptor. Not available if the \c FIXED_CONTROL_ENDPOINT_SIZE token i
 122:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 */
 123:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_CONTROLEP_DEFAULT_SIZE     8
 124:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 125:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 126:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#if !defined(CONTROL_ONLY_DEVICE) || defined(__DOXYGEN__)
 127:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR) || defi
 128:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					/** Total number of endpoints (including the default control endpoint at address 0) which may
 129:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					 *  be used in the device. Different USB AVR models support different amounts of endpoints,
 130:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					 *  this value reflects the maximum number of endpoints for the currently selected AVR model.
 131:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					 */
 132:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					#define ENDPOINT_TOTAL_ENDPOINTS        7
 133:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 134:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					#define ENDPOINT_TOTAL_ENDPOINTS        5
 135:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 136:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#else
 137:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_TOTAL_ENDPOINTS            1
 138:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 139:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 140:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Enums: */
 141:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Enum for the possible error return codes of the \ref Endpoint_WaitUntilReady() function.
 142:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 143:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointRW_AVR8
 144:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 145:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			enum Endpoint_WaitUntilReady_ErrorCodes_t
 146:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 147:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_NoError                 = 0, /**< Endpoint is ready for next packet, no erro
 148:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_EndpointStalled         = 1, /**< The endpoint was stalled during the stream
 149:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   transfer by the host or device.
 150:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 151:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_DeviceDisconnected      = 2,	/**< Device was disconnected from the host whil
 152:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   waiting for the endpoint to become ready.
 153:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 154:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_BusSuspended            = 3, /**< The USB bus has been suspended by the host
 155:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   no USB endpoint traffic can occur until th
 156:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   has resumed.
 157:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 158:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_Timeout                 = 4, /**< The host failed to accept or send the next
 159:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   within the software timeout period set by 
 160:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   \ref USB_STREAM_TIMEOUT_MS macro.
 161:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 162:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			};
 163:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 164:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Inline Functions: */
 165:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Configures the specified endpoint address with the given endpoint type, bank size and number
 166:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  banks. Once configured, the endpoint may be read from or written to, depending on its direct
 167:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 168:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address    Endpoint address to configure.
 169:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 170:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Type       Type of endpoint to configure, a \c EP_TYPE_* mask. Not all endpoint t
 171:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        are available on Low Speed USB devices - refer to the USB 2.0 specific
 172:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 173:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Size       Size of the endpoint's bank, where packets are stored before they are 
 174:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        to the USB host, or after they have been received from the USB host (d
 175:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        the endpoint's data direction). The bank size must indicate the maximu
 176:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        that the endpoint can handle.
 177:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 178:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Banks      Number of banks to use for the endpoint being configured.
 179:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 180:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \attention When the \c ORDERED_EP_CONFIG compile time option is used, Endpoints <b>must</b> 
 181:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *             ascending order, or bank corruption will occur.
 182:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 183:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note Different endpoints may have different maximum packet sizes based on the endpoint's in
 184:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        refer to the chosen microcontroller model's datasheet to determine the maximum bank si
 185:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 186:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 187:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note The default control endpoint should not be manually configured by the user application
 188:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        it is automatically configured by the library internally.
 189:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 190:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 191:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This routine will automatically select the specified endpoint upon success. Upon failu
 192:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        which failed to reconfigure correctly will be selected.
 193:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 194:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the configuration succeeded, \c false otherwise.
 195:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 196:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Address,
 197:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 198:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint16_t Size,
 199:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Banks) ATTR_ALWAYS_INLINE;
 200:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Address,
 201:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 202:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint16_t Size,
 203:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Banks)
 204:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 205:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint8_t Number = (Address & ENDPOINT_EPNUM_MASK);
 206:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 207:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				if (Number >= ENDPOINT_TOTAL_ENDPOINTS)
 208:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				  return false;
 209:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 210:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number,
 211:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 212:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((1 << ALLOC) | ((Banks > 1) ? (1 << EPBK0) : 0) | Endpoi
 213:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 214:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 215:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Indicates the number of bytes currently stored in the current endpoint's selected bank.
 216:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 217:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointRW_AVR8
 218:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 219:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Total number of bytes in the currently selected Endpoint's FIFO buffer.
 220:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 221:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE
 222:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void)
 223:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 224:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if (defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
 225:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCX;
 226:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#elif defined(USB_SERIES_4_AVR)
 227:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return (((uint16_t)UEBCHX << 8) | UEBCLX);
 228:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#elif defined(USB_SERIES_2_AVR)
 229:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCLX;
 230:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 231:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 232:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 233:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines the currently selected endpoint's direction.
 234:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 235:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return The currently selected endpoint's direction, as a \c ENDPOINT_DIR_* mask.
 236:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 237:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointDirection(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_IN
 238:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointDirection(void)
 239:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 240:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (UECFG0X & (1 << EPDIR)) ? ENDPOINT_DIR_IN : ENDPOINT_DIR_OUT;
 241:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 242:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 243:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Get the endpoint address of the currently selected endpoint. This is typically used to save
 244:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  the currently selected endpoint so that it can be restored after another endpoint has been
 245:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  manipulated.
 246:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 247:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Index of the currently selected endpoint.
 248:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 249:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLI
 250:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void)
 251:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 252:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 253:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return ((UENUM & ENDPOINT_EPNUM_MASK) | Endpoint_GetEndpointDirection());
 254:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 255:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return ENDPOINT_CONTROLEP;
 256:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 257:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 258:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 259:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Selects the given endpoint address.
 260:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 261:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  Any endpoint operations which do not require the endpoint address to be indicated will opera
 262:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  the currently selected endpoint.
 263:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 264:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address Endpoint address to select.
 265:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 266:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
 267:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t Address)
  88               		.loc 2 267 23 view .LVU17
  89               	.LBB180:
 268:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 269:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = (Address & ENDPOINT_EPNUM_MASK);
  90               		.loc 2 270 6 view .LVU18
  91               		.loc 2 270 12 is_stmt 0 view .LVU19
  92 001c 2093 E900 		sts 233,r18
  93               	.LVL5:
  94               		.loc 2 270 12 view .LVU20
  95               	.LBE180:
  96               	.LBE179:
 783:./tmk_core/protocol/lufa/lufa.c **** 
 784:./tmk_core/protocol/lufa/lufa.c ****     /* Check if write ready for a polling interval around 10ms */
 785:./tmk_core/protocol/lufa/lufa.c ****     while (timeout-- && !Endpoint_IsReadWriteAllowed()) _delay_us(40);
  97               		.loc 1 785 22 is_stmt 1 view .LVU21
  98               	.LBB182:
  99               	.LBB181:
 100               		.loc 2 270 12 is_stmt 0 view .LVU22
 101 0020 8FEF      		ldi r24,lo8(-1)
 102               	.LVL6:
 103               	.L4:
 104               		.loc 2 270 12 view .LVU23
 105               	.LBE181:
 106               	.LBE182:
 107               	.LBB183:
 108               	.LBI183:
 271:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 272:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 273:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 274:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Resets the endpoint bank FIFO. This clears all the endpoint banks and resets the USB control
 275:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  data In and Out pointers to the bank's contents.
 276:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 277:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address  Endpoint address whose FIFO buffers are to be reset.
 278:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 279:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
 280:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetEndpoint(const uint8_t Address)
 281:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 282:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UERST = (1 << (Address & ENDPOINT_EPNUM_MASK));
 283:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UERST = 0;
 284:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 285:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 286:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Enables the currently selected endpoint so that data can be sent and received through it to
 287:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  and from a host.
 288:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 289:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note Endpoints must first be configured properly via \ref Endpoint_ConfigureEndpoint().
 290:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 291:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_EnableEndpoint(void) ATTR_ALWAYS_INLINE;
 292:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_EnableEndpoint(void)
 293:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 294:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << EPEN);
 295:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 296:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 297:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Disables the currently selected endpoint so that data cannot be sent and received through it
 298:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  to and from a host.
 299:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 300:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_DisableEndpoint(void) ATTR_ALWAYS_INLINE;
 301:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_DisableEndpoint(void)
 302:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 303:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX &= ~(1 << EPEN);
 304:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 305:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 306:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is enabled, but not necessarily configured.
 307:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 308:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 * \return Boolean \c true if the currently selected endpoint is enabled, \c false otherwise.
 309:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 310:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsEnabled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 311:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsEnabled(void)
 312:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 313:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UECONX & (1 << EPEN)) ? true : false);
 314:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 315:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 316:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Retrieves the number of busy banks in the currently selected endpoint, which have been queue
 317:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  transmission via the \ref Endpoint_ClearIN() command, or are awaiting acknowledgment via the
 318:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ref Endpoint_ClearOUT() command.
 319:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 320:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 321:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 322:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Total number of busy banks in the selected endpoint.
 323:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 324:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetBusyBanks(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESULT;
 325:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetBusyBanks(void)
 326:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 327:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (UESTA0X & (0x03 << NBUSYBK0));
 328:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 329:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 330:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Aborts all pending IN transactions on the currently selected endpoint, once the bank
 331:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  has been queued for transmission to the host via \ref Endpoint_ClearIN(). This function
 332:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  will terminate all queued transactions, resetting the endpoint banks ready for a new
 333:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  packet.
 334:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 335:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 336:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 337:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_AbortPendingIN(void)
 338:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 339:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				while (Endpoint_GetBusyBanks() != 0)
 340:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 341:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX |= (1 << RXOUTI);
 342:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					while (UEINTX & (1 << RXOUTI));
 343:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 344:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 345:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 346:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint may be read from (if data is waiting in the en
 347:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  bank and the endpoint is an OUT direction, or if the bank is not yet full if the endpoint is
 348:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  direction). This function will return false if an error has occurred in the endpoint, if the
 349:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  is an OUT direction and no packet (or an empty packet) has been received, or if the endpoint
 350:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  direction and the endpoint bank is full.
 351:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 352:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 353:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 354:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint may be read from or written to, d
 355:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *          on its direction.
 356:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 357:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 358:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void)
 109               		.loc 2 358 23 is_stmt 1 view .LVU24
 110               	.LBB184:
 359:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 111               		.loc 2 360 5 view .LVU25
 112               		.loc 2 360 14 is_stmt 0 view .LVU26
 113 0022 9091 E800 		lds r25,232
 114               	.LBE184:
 115               	.LBE183:
 116               		.loc 1 785 22 view .LVU27
 117 0026 95FD      		sbrc r25,5
 118 0028 00C0      		rjmp .L7
 119               		.loc 1 785 57 is_stmt 1 view .LVU28
 120               	.LVL7:
 121               	.LBB185:
 122               	.LBI185:
 123               		.file 3 "/usr/avr/include/util/delay.h"
   1:/usr/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/avr/include/util/delay.h **** 
   6:/usr/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/avr/include/util/delay.h **** 
   9:/usr/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/avr/include/util/delay.h **** 
  12:/usr/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/avr/include/util/delay.h ****      distribution.
  16:/usr/avr/include/util/delay.h **** 
  17:/usr/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/avr/include/util/delay.h **** 
  21:/usr/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/avr/include/util/delay.h **** 
  33:/usr/avr/include/util/delay.h **** /* $Id: delay.h.in 2551 2020-10-10 20:33:35Z joerg_wunsch $ */
  34:/usr/avr/include/util/delay.h **** 
  35:/usr/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/avr/include/util/delay.h **** 
  38:/usr/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/usr/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/usr/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/usr/avr/include/util/delay.h **** #  endif
  42:/usr/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/usr/avr/include/util/delay.h **** 
  44:/usr/avr/include/util/delay.h **** #include <inttypes.h>
  45:/usr/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/usr/avr/include/util/delay.h **** #include <math.h>
  47:/usr/avr/include/util/delay.h **** 
  48:/usr/avr/include/util/delay.h **** /** \file */
  49:/usr/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/usr/avr/include/util/delay.h ****     \code
  51:/usr/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/usr/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/usr/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/usr/avr/include/util/delay.h ****     \endcode
  55:/usr/avr/include/util/delay.h **** 
  56:/usr/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/usr/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/usr/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/usr/avr/include/util/delay.h ****     used.
  60:/usr/avr/include/util/delay.h **** 
  61:/usr/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/usr/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/usr/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/usr/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/usr/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/usr/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/usr/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/usr/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/usr/avr/include/util/delay.h **** 
  70:/usr/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/usr/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/usr/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/usr/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/usr/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/usr/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/usr/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/usr/avr/include/util/delay.h ****     routines linked into the application.
  78:/usr/avr/include/util/delay.h **** 
  79:/usr/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/usr/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/usr/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/usr/avr/include/util/delay.h **** 
  83:/usr/avr/include/util/delay.h **** */
  84:/usr/avr/include/util/delay.h **** 
  85:/usr/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/usr/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/usr/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/usr/avr/include/util/delay.h **** #endif
  89:/usr/avr/include/util/delay.h **** 
  90:/usr/avr/include/util/delay.h **** #ifndef F_CPU
  91:/usr/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/usr/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/usr/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/usr/avr/include/util/delay.h ****     \def F_CPU
  95:/usr/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/usr/avr/include/util/delay.h **** 
  97:/usr/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/usr/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/usr/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/usr/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/usr/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/usr/avr/include/util/delay.h **** 
 103:/usr/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/usr/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/usr/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/usr/avr/include/util/delay.h ****     integer value.
 107:/usr/avr/include/util/delay.h ****  */
 108:/usr/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/usr/avr/include/util/delay.h **** #endif
 110:/usr/avr/include/util/delay.h **** 
 111:/usr/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/usr/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/usr/avr/include/util/delay.h **** #endif
 114:/usr/avr/include/util/delay.h **** 
 115:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/usr/avr/include/util/delay.h **** #  include <math.h>
 119:/usr/avr/include/util/delay.h **** #endif
 120:/usr/avr/include/util/delay.h **** 
 121:/usr/avr/include/util/delay.h **** /**
 122:/usr/avr/include/util/delay.h ****    \ingroup util_delay
 123:/usr/avr/include/util/delay.h **** 
 124:/usr/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/usr/avr/include/util/delay.h **** 
 126:/usr/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/usr/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/usr/avr/include/util/delay.h **** 
 129:/usr/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/usr/avr/include/util/delay.h **** 
 131:/usr/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/usr/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/usr/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/usr/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/usr/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/usr/avr/include/util/delay.h **** 
 137:/usr/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/usr/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/usr/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/usr/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/usr/avr/include/util/delay.h **** 
 142:/usr/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/usr/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/usr/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/usr/avr/include/util/delay.h ****    microseconds of delay.
 146:/usr/avr/include/util/delay.h **** 
 147:/usr/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/usr/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/usr/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/usr/avr/include/util/delay.h ****    respectively.
 151:/usr/avr/include/util/delay.h **** 
 152:/usr/avr/include/util/delay.h ****    \note
 153:/usr/avr/include/util/delay.h **** 
 154:/usr/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/usr/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/usr/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/usr/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/usr/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/usr/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/usr/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/usr/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/usr/avr/include/util/delay.h ****    not available to the compiler then.
 163:/usr/avr/include/util/delay.h **** 
 164:/usr/avr/include/util/delay.h ****  */
 165:/usr/avr/include/util/delay.h **** void
 166:/usr/avr/include/util/delay.h **** _delay_ms(double __ms)
 167:/usr/avr/include/util/delay.h **** {
 168:/usr/avr/include/util/delay.h **** 	double __tmp ;
 169:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/usr/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 173:/usr/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 174:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 175:/usr/avr/include/util/delay.h **** 
 176:/usr/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/usr/avr/include/util/delay.h **** 
 179:/usr/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/usr/avr/include/util/delay.h **** 
 182:/usr/avr/include/util/delay.h **** 	#else
 183:/usr/avr/include/util/delay.h **** 		//round up by default
 184:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 185:/usr/avr/include/util/delay.h **** 	#endif
 186:/usr/avr/include/util/delay.h **** 
 187:/usr/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 188:/usr/avr/include/util/delay.h **** 
 189:/usr/avr/include/util/delay.h **** #else
 190:/usr/avr/include/util/delay.h **** 	uint16_t __ticks;
 191:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 4e3) * __ms;
 192:/usr/avr/include/util/delay.h **** 	if (__tmp < 1.0)
 193:/usr/avr/include/util/delay.h **** 		__ticks = 1;
 194:/usr/avr/include/util/delay.h **** 	else if (__tmp > 65535)
 195:/usr/avr/include/util/delay.h **** 	{
 196:/usr/avr/include/util/delay.h **** 		//	__ticks = requested delay in 1/10 ms
 197:/usr/avr/include/util/delay.h **** 		__ticks = (uint16_t) (__ms * 10.0);
 198:/usr/avr/include/util/delay.h **** 		while(__ticks)
 199:/usr/avr/include/util/delay.h **** 		{
 200:/usr/avr/include/util/delay.h **** 			// wait 1/10 ms
 201:/usr/avr/include/util/delay.h **** 			_delay_loop_2(((F_CPU) / 4e3) / 10);
 202:/usr/avr/include/util/delay.h **** 			__ticks --;
 203:/usr/avr/include/util/delay.h **** 		}
 204:/usr/avr/include/util/delay.h **** 		return;
 205:/usr/avr/include/util/delay.h **** 	}
 206:/usr/avr/include/util/delay.h **** 	else
 207:/usr/avr/include/util/delay.h **** 		__ticks = (uint16_t)__tmp;
 208:/usr/avr/include/util/delay.h **** 	_delay_loop_2(__ticks);
 209:/usr/avr/include/util/delay.h **** #endif
 210:/usr/avr/include/util/delay.h **** }
 211:/usr/avr/include/util/delay.h **** 
 212:/usr/avr/include/util/delay.h **** /**
 213:/usr/avr/include/util/delay.h ****    \ingroup util_delay
 214:/usr/avr/include/util/delay.h **** 
 215:/usr/avr/include/util/delay.h ****    Perform a delay of \c __us microseconds, using _delay_loop_1().
 216:/usr/avr/include/util/delay.h **** 
 217:/usr/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 218:/usr/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 219:/usr/avr/include/util/delay.h **** 
 220:/usr/avr/include/util/delay.h ****    The maximal possible delay is 768 us / F_CPU in MHz.
 221:/usr/avr/include/util/delay.h **** 
 222:/usr/avr/include/util/delay.h ****    If the user requests a delay greater than the maximal possible one,
 223:/usr/avr/include/util/delay.h ****    _delay_us() will automatically call _delay_ms() instead.  The user
 224:/usr/avr/include/util/delay.h ****    will not be informed about this case.
 225:/usr/avr/include/util/delay.h **** 
 226:/usr/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 227:/usr/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 us/ F_CPU in MHz. For
 228:/usr/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflow results in
 229:/usr/avr/include/util/delay.h ****    no delay i.e., 0us.
 230:/usr/avr/include/util/delay.h **** 
 231:/usr/avr/include/util/delay.h ****    Conversion of \c __us into clock cycles may not always result in
 232:/usr/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 233:/usr/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __us
 234:/usr/avr/include/util/delay.h ****    microseconds of delay.
 235:/usr/avr/include/util/delay.h **** 
 236:/usr/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 237:/usr/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 238:/usr/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 239:/usr/avr/include/util/delay.h ****    respectively.
 240:/usr/avr/include/util/delay.h **** 
 241:/usr/avr/include/util/delay.h ****    \note
 242:/usr/avr/include/util/delay.h **** 
 243:/usr/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 244:/usr/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 245:/usr/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 246:/usr/avr/include/util/delay.h ****    with previous versions, the macro \c __DELAY_BACKWARD_COMPATIBLE__
 247:/usr/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 248:/usr/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 249:/usr/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 250:/usr/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 251:/usr/avr/include/util/delay.h ****    not available to the compiler then.
 252:/usr/avr/include/util/delay.h **** 
 253:/usr/avr/include/util/delay.h ****  */
 254:/usr/avr/include/util/delay.h **** void
 255:/usr/avr/include/util/delay.h **** _delay_us(double __us)
 124               		.loc 3 255 1 view .LVU29
 125               	.LBB186:
 256:/usr/avr/include/util/delay.h **** {
 257:/usr/avr/include/util/delay.h **** 	double __tmp ;
 126               		.loc 3 257 2 view .LVU30
 258:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 259:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 260:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 261:/usr/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 127               		.loc 3 261 2 view .LVU31
 262:/usr/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 128               		.loc 3 262 2 view .LVU32
 263:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e6) * __us;
 129               		.loc 3 263 2 view .LVU33
 264:/usr/avr/include/util/delay.h **** 
 265:/usr/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 266:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 267:/usr/avr/include/util/delay.h **** 
 268:/usr/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 269:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 270:/usr/avr/include/util/delay.h **** 
 271:/usr/avr/include/util/delay.h **** 	#else
 272:/usr/avr/include/util/delay.h **** 		//round up by default
 273:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 130               		.loc 3 273 3 view .LVU34
 274:/usr/avr/include/util/delay.h **** 	#endif
 275:/usr/avr/include/util/delay.h **** 
 276:/usr/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 131               		.loc 3 276 2 view .LVU35
 132 002a 95ED      		ldi r25,lo8(-43)
 133 002c 9A95      	1:	dec r25
 134 002e 01F4      		brne 1b
 135 0030 0000      		nop
 136               	.LVL8:
 137               		.loc 3 276 2 is_stmt 0 view .LVU36
 138               	.LBE186:
 139               	.LBE185:
 140               		.loc 1 785 22 is_stmt 1 view .LVU37
 141               		.loc 1 785 22 is_stmt 0 view .LVU38
 142 0032 8150      		subi r24,lo8(-(-1))
 143               	.LVL9:
 144               		.loc 1 785 22 view .LVU39
 145 0034 8111      		cpse r24,__zero_reg__
 146 0036 00C0      		rjmp .L4
 147               	.LVL10:
 148               	.L7:
 786:./tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 149               		.loc 1 786 5 is_stmt 1 view .LVU40
 150               	.LBB187:
 151               	.LBI187:
 358:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 152               		.loc 2 358 23 view .LVU41
 153               	.LBB188:
 154               		.loc 2 360 5 view .LVU42
 155               		.loc 2 360 14 is_stmt 0 view .LVU43
 156 0038 8091 E800 		lds r24,232
 157               	.LBE188:
 158               	.LBE187:
 159               		.loc 1 786 8 view .LVU44
 160 003c 85FF      		sbrs r24,5
 161 003e 00C0      		rjmp .L2
 787:./tmk_core/protocol/lufa/lufa.c **** 
 788:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_Write_Stream_LE(&r, sizeof(report_extra_t), NULL);
 162               		.loc 1 788 5 is_stmt 1 view .LVU45
 163 0040 40E0      		ldi r20,0
 164 0042 50E0      		ldi r21,0
 165 0044 63E0      		ldi r22,lo8(3)
 166 0046 70E0      		ldi r23,0
 167 0048 CE01      		movw r24,r28
 168 004a 0196      		adiw r24,1
 169 004c 0E94 0000 		call Endpoint_Write_Stream_LE
 170               	.LVL11:
 789:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_ClearIN();
 171               		.loc 1 789 5 view .LVU46
 172               	.LBB189:
 173               	.LBI189:
 361:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 362:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 363:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is configured.
 364:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 365:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint has been configured, \c false oth
 366:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 367:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsConfigured(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 368:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsConfigured(void)
 369:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 370:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UESTA0X & (1 << CFGOK)) ? true : false);
 371:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 372:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 373:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Returns a mask indicating which INTERRUPT type endpoints have interrupted - i.e. their
 374:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  interrupt duration has elapsed. Which endpoints have interrupted can be determined by
 375:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  masking the return value against <tt>(1 << <i>{Endpoint Number}</i>)</tt>.
 376:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 377:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Mask whose bits indicate which endpoints have interrupted.
 378:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 379:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_I
 380:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void)
 381:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 382:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return UEINT;
 383:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 384:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 385:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the specified endpoint number has interrupted (valid only for INTERRUPT type
 386:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoints).
 387:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 388:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address  Address of the endpoint whose interrupt flag should be tested.
 389:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 390:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the specified endpoint has interrupted, \c false otherwise.
 391:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 392:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t Address) ATTR_WARN_UNUSED_RESUL
 393:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t Address)
 394:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 395:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((Endpoint_GetEndpointInterrupts() & (1 << (Address & ENDPOINT_EPNUM_MASK))) ? true : fa
 396:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 397:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 398:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the selected IN endpoint is ready for a new packet to be sent to the host.
 399:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 400:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 401:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 402:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the current endpoint is ready for an IN packet, \c false otherwis
 403:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 404:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsINReady(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 405:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsINReady(void)
 406:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 407:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 408:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 409:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 410:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the selected OUT endpoint has received new packet from the host.
 411:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 412:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 413:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 414:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if current endpoint is has received an OUT packet, \c false otherwis
 415:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 416:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsOUTReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 417:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsOUTReceived(void)
 418:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 419:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 420:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 421:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 422:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the current CONTROL type endpoint has received a SETUP packet.
 423:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 424:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 425:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 426:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the selected endpoint has received a SETUP packet, \c false other
 427:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 428:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsSETUPReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 429:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsSETUPReceived(void)
 430:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 431:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXSTPI)) ? true : false);
 432:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 433:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 434:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Clears a received SETUP packet on the currently selected CONTROL type endpoint, freeing up t
 435:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoint for the next packet.
 436:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 437:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 438:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 439:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This is not applicable for non CONTROL type endpoints.
 440:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 441:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
 442:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearSETUP(void)
 443:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 444:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEINTX &= ~(1 << RXSTPI);
 445:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 446:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 447:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Sends an IN packet to the host on the currently selected endpoint, freeing up the endpoint f
 448:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  next packet and switching to the alternative endpoint bank if double banked.
 449:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 450:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 451:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 452:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearIN(void) ATTR_ALWAYS_INLINE;
 453:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearIN(void)
 174               		.loc 2 453 23 view .LVU47
 175               	.LBB190:
 454:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 455:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 456:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 176               		.loc 2 456 6 view .LVU48
 177               		.loc 2 456 13 is_stmt 0 view .LVU49
 178 0050 8091 E800 		lds r24,232
 179 0054 8E77      		andi r24,lo8(126)
 180 0056 8093 E800 		sts 232,r24
 181               	.L2:
 182               	/* epilogue start */
 183               	.LBE190:
 184               	.LBE189:
 790:./tmk_core/protocol/lufa/lufa.c **** }
 185               		.loc 1 790 1 view .LVU50
 186 005a 0F90      		pop __tmp_reg__
 187 005c 0F90      		pop __tmp_reg__
 188 005e 0F90      		pop __tmp_reg__
 189 0060 DF91      		pop r29
 190 0062 CF91      		pop r28
 191 0064 0895      		ret
 192               		.cfi_endproc
 193               	.LFE133:
 195               		.section	.text.send_system,"ax",@progbits
 197               	send_system:
 198               	.LVL12:
 199               	.LFB132:
 727:./tmk_core/protocol/lufa/lufa.c ****     uint8_t timeout = 255;
 200               		.loc 1 727 1 is_stmt 1 view -0
 201               		.cfi_startproc
 727:./tmk_core/protocol/lufa/lufa.c ****     uint8_t timeout = 255;
 202               		.loc 1 727 1 is_stmt 0 view .LVU52
 203 0000 CF93      		push r28
 204               	.LCFI4:
 205               		.cfi_def_cfa_offset 3
 206               		.cfi_offset 28, -2
 207 0002 DF93      		push r29
 208               	.LCFI5:
 209               		.cfi_def_cfa_offset 4
 210               		.cfi_offset 29, -3
 211 0004 00D0      		rcall .
 212 0006 0F92      		push __tmp_reg__
 213               	.LCFI6:
 214               		.cfi_def_cfa_offset 7
 215 0008 CDB7      		in r28,__SP_L__
 216 000a DEB7      		in r29,__SP_H__
 217               	.LCFI7:
 218               		.cfi_def_cfa_register 28
 219               	/* prologue: function */
 220               	/* frame size = 3 */
 221               	/* stack size = 5 */
 222               	.L__stack_usage = 5
 223 000c 9C01      		movw r18,r24
 728:./tmk_core/protocol/lufa/lufa.c **** 
 224               		.loc 1 728 5 is_stmt 1 view .LVU53
 225               	.LVL13:
 730:./tmk_core/protocol/lufa/lufa.c ****         return;
 226               		.loc 1 730 5 view .LVU54
 730:./tmk_core/protocol/lufa/lufa.c ****         return;
 227               		.loc 1 730 25 is_stmt 0 view .LVU55
 228 000e 8091 0000 		lds r24,USB_DeviceState
 229               	.LVL14:
 730:./tmk_core/protocol/lufa/lufa.c ****         return;
 230               		.loc 1 730 8 view .LVU56
 231 0012 8430      		cpi r24,lo8(4)
 232 0014 01F4      		brne .L14
 733:./tmk_core/protocol/lufa/lufa.c ****         .report_id = REPORT_ID_SYSTEM,
 233               		.loc 1 733 5 is_stmt 1 view .LVU57
 733:./tmk_core/protocol/lufa/lufa.c ****         .report_id = REPORT_ID_SYSTEM,
 234               		.loc 1 733 20 is_stmt 0 view .LVU58
 235 0016 82E0      		ldi r24,lo8(2)
 236 0018 8983      		std Y+1,r24
 735:./tmk_core/protocol/lufa/lufa.c ****     };
 237               		.loc 1 735 43 view .LVU59
 238 001a 2058      		subi r18,-128
 239 001c 3109      		sbc r19,__zero_reg__
 240               	.LVL15:
 733:./tmk_core/protocol/lufa/lufa.c ****         .report_id = REPORT_ID_SYSTEM,
 241               		.loc 1 733 20 view .LVU60
 242 001e 3B83      		std Y+3,r19
 243 0020 2A83      		std Y+2,r18
 737:./tmk_core/protocol/lufa/lufa.c **** 
 244               		.loc 1 737 5 is_stmt 1 view .LVU61
 245               	.LVL16:
 246               	.LBB191:
 247               	.LBI191:
 267:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 248               		.loc 2 267 23 view .LVU62
 249               	.LBB192:
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 250               		.loc 2 270 6 view .LVU63
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 251               		.loc 2 270 12 is_stmt 0 view .LVU64
 252 0022 83E0      		ldi r24,lo8(3)
 253 0024 8093 E900 		sts 233,r24
 254               	.LVL17:
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 255               		.loc 2 270 12 view .LVU65
 256               	.LBE192:
 257               	.LBE191:
 740:./tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 258               		.loc 1 740 22 is_stmt 1 view .LVU66
 259               	.LBB194:
 260               	.LBB193:
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 261               		.loc 2 270 12 is_stmt 0 view .LVU67
 262 0028 8FEF      		ldi r24,lo8(-1)
 263               	.LVL18:
 264               	.L16:
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 265               		.loc 2 270 12 view .LVU68
 266               	.LBE193:
 267               	.LBE194:
 268               	.LBB195:
 269               	.LBI195:
 358:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 270               		.loc 2 358 23 is_stmt 1 view .LVU69
 271               	.LBB196:
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 272               		.loc 2 360 5 view .LVU70
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 273               		.loc 2 360 14 is_stmt 0 view .LVU71
 274 002a 9091 E800 		lds r25,232
 275               	.LBE196:
 276               	.LBE195:
 740:./tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 277               		.loc 1 740 22 view .LVU72
 278 002e 95FD      		sbrc r25,5
 279 0030 00C0      		rjmp .L19
 740:./tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 280               		.loc 1 740 57 is_stmt 1 view .LVU73
 281               	.LVL19:
 282               	.LBB197:
 283               	.LBI197:
 255:/usr/avr/include/util/delay.h **** {
 284               		.loc 3 255 1 view .LVU74
 285               	.LBB198:
 257:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 286               		.loc 3 257 2 view .LVU75
 261:/usr/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 287               		.loc 3 261 2 view .LVU76
 262:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e6) * __us;
 288               		.loc 3 262 2 view .LVU77
 263:/usr/avr/include/util/delay.h **** 
 289               		.loc 3 263 2 view .LVU78
 273:/usr/avr/include/util/delay.h **** 	#endif
 290               		.loc 3 273 3 view .LVU79
 291               		.loc 3 276 2 view .LVU80
 292 0032 95ED      		ldi r25,lo8(-43)
 293 0034 9A95      	1:	dec r25
 294 0036 01F4      		brne 1b
 295 0038 0000      		nop
 296               	.LVL20:
 297               		.loc 3 276 2 is_stmt 0 view .LVU81
 298               	.LBE198:
 299               	.LBE197:
 740:./tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 300               		.loc 1 740 22 is_stmt 1 view .LVU82
 740:./tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 301               		.loc 1 740 22 is_stmt 0 view .LVU83
 302 003a 8150      		subi r24,lo8(-(-1))
 303               	.LVL21:
 740:./tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 304               		.loc 1 740 22 view .LVU84
 305 003c 8111      		cpse r24,__zero_reg__
 306 003e 00C0      		rjmp .L16
 307               	.LVL22:
 308               	.L19:
 741:./tmk_core/protocol/lufa/lufa.c **** 
 309               		.loc 1 741 5 is_stmt 1 view .LVU85
 310               	.LBB199:
 311               	.LBI199:
 358:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 312               		.loc 2 358 23 view .LVU86
 313               	.LBB200:
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 314               		.loc 2 360 5 view .LVU87
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 315               		.loc 2 360 14 is_stmt 0 view .LVU88
 316 0040 8091 E800 		lds r24,232
 317               	.LBE200:
 318               	.LBE199:
 741:./tmk_core/protocol/lufa/lufa.c **** 
 319               		.loc 1 741 8 view .LVU89
 320 0044 85FF      		sbrs r24,5
 321 0046 00C0      		rjmp .L14
 743:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_ClearIN();
 322               		.loc 1 743 5 is_stmt 1 view .LVU90
 323 0048 40E0      		ldi r20,0
 324 004a 50E0      		ldi r21,0
 325 004c 63E0      		ldi r22,lo8(3)
 326 004e 70E0      		ldi r23,0
 327 0050 CE01      		movw r24,r28
 328 0052 0196      		adiw r24,1
 329 0054 0E94 0000 		call Endpoint_Write_Stream_LE
 330               	.LVL23:
 744:./tmk_core/protocol/lufa/lufa.c **** }
 331               		.loc 1 744 5 view .LVU91
 332               	.LBB201:
 333               	.LBI201:
 453:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 334               		.loc 2 453 23 view .LVU92
 335               	.LBB202:
 336               		.loc 2 456 6 view .LVU93
 337               		.loc 2 456 13 is_stmt 0 view .LVU94
 338 0058 8091 E800 		lds r24,232
 339 005c 8E77      		andi r24,lo8(126)
 340 005e 8093 E800 		sts 232,r24
 341               	.L14:
 342               	/* epilogue start */
 343               	.LBE202:
 344               	.LBE201:
 745:./tmk_core/protocol/lufa/lufa.c **** 
 345               		.loc 1 745 1 view .LVU95
 346 0062 0F90      		pop __tmp_reg__
 347 0064 0F90      		pop __tmp_reg__
 348 0066 0F90      		pop __tmp_reg__
 349 0068 DF91      		pop r29
 350 006a CF91      		pop r28
 351 006c 0895      		ret
 352               		.cfi_endproc
 353               	.LFE132:
 355               		.section	.text.send_mouse,"ax",@progbits
 357               	send_mouse:
 358               	.LVL24:
 359               	.LFB131:
 682:./tmk_core/protocol/lufa/lufa.c **** #ifdef MOUSE_ENABLE
 360               		.loc 1 682 1 is_stmt 1 view -0
 361               		.cfi_startproc
 362               	/* prologue: function */
 363               	/* frame size = 0 */
 364               	/* stack size = 0 */
 365               	.L__stack_usage = 0
 697:./tmk_core/protocol/lufa/lufa.c **** 
 366               		.loc 1 697 5 view .LVU97
 699:./tmk_core/protocol/lufa/lufa.c **** 
 367               		.loc 1 699 5 view .LVU98
 368               	.LBB203:
 369               	.LBI203:
 603:./tmk_core/protocol/lufa/lufa.c **** #ifdef ADAFRUIT_BLE_ENABLE
 370               		.loc 1 603 23 view .LVU99
 371               	.LBB204:
 619:./tmk_core/protocol/lufa/lufa.c **** #ifdef BLUETOOTH_ENABLE
 372               		.loc 1 619 3 view .LVU100
 619:./tmk_core/protocol/lufa/lufa.c **** #ifdef BLUETOOTH_ENABLE
 373               		.loc 1 619 68 is_stmt 0 view .LVU101
 374 0000 2091 0000 		lds r18,USB_DeviceState
 375               	.LVL25:
 619:./tmk_core/protocol/lufa/lufa.c **** #ifdef BLUETOOTH_ENABLE
 376               		.loc 1 619 68 view .LVU102
 377               	.LBE204:
 378               	.LBE203:
 707:./tmk_core/protocol/lufa/lufa.c ****       return;
 379               		.loc 1 707 5 is_stmt 1 view .LVU103
 707:./tmk_core/protocol/lufa/lufa.c ****       return;
 380               		.loc 1 707 8 is_stmt 0 view .LVU104
 381 0004 2430      		cpi r18,lo8(4)
 382 0006 01F4      		brne .L26
 712:./tmk_core/protocol/lufa/lufa.c **** 
 383               		.loc 1 712 5 is_stmt 1 view .LVU105
 384               	.LVL26:
 385               	.LBB205:
 386               	.LBI205:
 267:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 387               		.loc 2 267 23 view .LVU106
 388               	.LBB206:
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 389               		.loc 2 270 6 view .LVU107
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 390               		.loc 2 270 12 is_stmt 0 view .LVU108
 391 0008 22E0      		ldi r18,lo8(2)
 392               	.LVL27:
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 393               		.loc 2 270 12 view .LVU109
 394 000a 2093 E900 		sts 233,r18
 395               	.LVL28:
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 396               		.loc 2 270 12 view .LVU110
 397               	.LBE206:
 398               	.LBE205:
 715:./tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 399               		.loc 1 715 22 is_stmt 1 view .LVU111
 400               	.LBB208:
 401               	.LBB207:
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 402               		.loc 2 270 12 is_stmt 0 view .LVU112
 403 000e 2FEF      		ldi r18,lo8(-1)
 404               	.LVL29:
 405               	.L29:
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 406               		.loc 2 270 12 view .LVU113
 407               	.LBE207:
 408               	.LBE208:
 409               	.LBB209:
 410               	.LBI209:
 358:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 411               		.loc 2 358 23 is_stmt 1 view .LVU114
 412               	.LBB210:
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 413               		.loc 2 360 5 view .LVU115
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 414               		.loc 2 360 14 is_stmt 0 view .LVU116
 415 0010 3091 E800 		lds r19,232
 416               	.LBE210:
 417               	.LBE209:
 715:./tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 418               		.loc 1 715 22 view .LVU117
 419 0014 35FD      		sbrc r19,5
 420 0016 00C0      		rjmp .L33
 715:./tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 421               		.loc 1 715 57 is_stmt 1 view .LVU118
 422               	.LVL30:
 423               	.LBB211:
 424               	.LBI211:
 255:/usr/avr/include/util/delay.h **** {
 425               		.loc 3 255 1 view .LVU119
 426               	.LBB212:
 257:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 427               		.loc 3 257 2 view .LVU120
 261:/usr/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 428               		.loc 3 261 2 view .LVU121
 262:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e6) * __us;
 429               		.loc 3 262 2 view .LVU122
 263:/usr/avr/include/util/delay.h **** 
 430               		.loc 3 263 2 view .LVU123
 273:/usr/avr/include/util/delay.h **** 	#endif
 431               		.loc 3 273 3 view .LVU124
 432               		.loc 3 276 2 view .LVU125
 433 0018 35ED      		ldi r19,lo8(-43)
 434 001a 3A95      	1:	dec r19
 435 001c 01F4      		brne 1b
 436 001e 0000      		nop
 437               	.LVL31:
 438               		.loc 3 276 2 is_stmt 0 view .LVU126
 439               	.LBE212:
 440               	.LBE211:
 715:./tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 441               		.loc 1 715 22 is_stmt 1 view .LVU127
 715:./tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 442               		.loc 1 715 22 is_stmt 0 view .LVU128
 443 0020 2150      		subi r18,lo8(-(-1))
 444               	.LVL32:
 715:./tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 445               		.loc 1 715 22 view .LVU129
 446 0022 2111      		cpse r18,__zero_reg__
 447 0024 00C0      		rjmp .L29
 448               	.LVL33:
 449               	.L33:
 716:./tmk_core/protocol/lufa/lufa.c **** 
 450               		.loc 1 716 5 is_stmt 1 view .LVU130
 451               	.LBB213:
 452               	.LBI213:
 358:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 453               		.loc 2 358 23 view .LVU131
 454               	.LBB214:
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 455               		.loc 2 360 5 view .LVU132
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 456               		.loc 2 360 14 is_stmt 0 view .LVU133
 457 0026 2091 E800 		lds r18,232
 458               	.LBE214:
 459               	.LBE213:
 716:./tmk_core/protocol/lufa/lufa.c **** 
 460               		.loc 1 716 8 view .LVU134
 461 002a 25FF      		sbrs r18,5
 462 002c 00C0      		rjmp .L26
 719:./tmk_core/protocol/lufa/lufa.c **** 
 463               		.loc 1 719 5 is_stmt 1 view .LVU135
 464 002e 40E0      		ldi r20,0
 465 0030 50E0      		ldi r21,0
 466 0032 65E0      		ldi r22,lo8(5)
 467 0034 70E0      		ldi r23,0
 468 0036 0E94 0000 		call Endpoint_Write_Stream_LE
 469               	.LVL34:
 722:./tmk_core/protocol/lufa/lufa.c **** #endif
 470               		.loc 1 722 5 view .LVU136
 471               	.LBB215:
 472               	.LBI215:
 453:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 473               		.loc 2 453 23 view .LVU137
 474               	.LBB216:
 475               		.loc 2 456 6 view .LVU138
 476               		.loc 2 456 13 is_stmt 0 view .LVU139
 477 003a 8091 E800 		lds r24,232
 478 003e 8E77      		andi r24,lo8(126)
 479 0040 8093 E800 		sts 232,r24
 480               	.L26:
 481               	/* epilogue start */
 482               	.LBE216:
 483               	.LBE215:
 724:./tmk_core/protocol/lufa/lufa.c **** 
 484               		.loc 1 724 1 view .LVU140
 485 0044 0895      		ret
 486               		.cfi_endproc
 487               	.LFE131:
 489               		.section	.text.send_keyboard,"ax",@progbits
 491               	send_keyboard:
 492               	.LVL35:
 493               	.LFB130:
 627:./tmk_core/protocol/lufa/lufa.c **** #ifdef BLUETOOTH_ENABLE
 494               		.loc 1 627 1 is_stmt 1 view -0
 495               		.cfi_startproc
 627:./tmk_core/protocol/lufa/lufa.c **** #ifdef BLUETOOTH_ENABLE
 496               		.loc 1 627 1 is_stmt 0 view .LVU142
 497 0000 CF93      		push r28
 498               	.LCFI8:
 499               		.cfi_def_cfa_offset 3
 500               		.cfi_offset 28, -2
 501 0002 DF93      		push r29
 502               	.LCFI9:
 503               		.cfi_def_cfa_offset 4
 504               		.cfi_offset 29, -3
 505               	/* prologue: function */
 506               	/* frame size = 0 */
 507               	/* stack size = 2 */
 508               	.L__stack_usage = 2
 509 0004 D82F      		mov r29,r24
 510 0006 C92F      		mov r28,r25
 635:./tmk_core/protocol/lufa/lufa.c ****     uint8_t where = where_to_send();
 511               		.loc 1 635 5 is_stmt 1 view .LVU143
 512               	.LVL36:
 636:./tmk_core/protocol/lufa/lufa.c **** 
 513               		.loc 1 636 5 view .LVU144
 514               	.LBB217:
 515               	.LBI217:
 603:./tmk_core/protocol/lufa/lufa.c **** #ifdef ADAFRUIT_BLE_ENABLE
 516               		.loc 1 603 23 view .LVU145
 517               	.LBB218:
 619:./tmk_core/protocol/lufa/lufa.c **** #ifdef BLUETOOTH_ENABLE
 518               		.loc 1 619 3 view .LVU146
 619:./tmk_core/protocol/lufa/lufa.c **** #ifdef BLUETOOTH_ENABLE
 519               		.loc 1 619 68 is_stmt 0 view .LVU147
 520 0008 8091 0000 		lds r24,USB_DeviceState
 521               	.LVL37:
 619:./tmk_core/protocol/lufa/lufa.c **** #ifdef BLUETOOTH_ENABLE
 522               		.loc 1 619 68 view .LVU148
 523               	.LBE218:
 524               	.LBE217:
 644:./tmk_core/protocol/lufa/lufa.c ****       return;
 525               		.loc 1 644 5 is_stmt 1 view .LVU149
 644:./tmk_core/protocol/lufa/lufa.c ****       return;
 526               		.loc 1 644 8 is_stmt 0 view .LVU150
 527 000c 8430      		cpi r24,lo8(4)
 528 000e 01F4      		brne .L39
 650:./tmk_core/protocol/lufa/lufa.c ****         /* Report protocol - NKRO */
 529               		.loc 1 650 5 is_stmt 1 view .LVU151
 650:./tmk_core/protocol/lufa/lufa.c ****         /* Report protocol - NKRO */
 530               		.loc 1 650 8 is_stmt 0 view .LVU152
 531 0010 9091 0000 		lds r25,keyboard_protocol
 532 0014 9923      		tst r25
 533 0016 01F0      		breq .L42
 650:./tmk_core/protocol/lufa/lufa.c ****         /* Report protocol - NKRO */
 534               		.loc 1 650 27 discriminator 1 view .LVU153
 535 0018 9091 0000 		lds r25,keymap_config
 536 001c 97FF      		sbrs r25,7
 537 001e 00C0      		rjmp .L42
 652:./tmk_core/protocol/lufa/lufa.c **** 
 538               		.loc 1 652 9 is_stmt 1 view .LVU154
 539               	.LVL38:
 540               	.LBB219:
 541               	.LBI219:
 267:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 542               		.loc 2 267 23 view .LVU155
 543               	.LBB220:
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 544               		.loc 2 270 6 view .LVU156
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 545               		.loc 2 270 12 is_stmt 0 view .LVU157
 546 0020 8093 E900 		sts 233,r24
 547               	.LVL39:
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 548               		.loc 2 270 12 view .LVU158
 549               	.LBE220:
 550               	.LBE219:
 655:./tmk_core/protocol/lufa/lufa.c ****         if (!Endpoint_IsReadWriteAllowed()) return;
 551               		.loc 1 655 26 is_stmt 1 view .LVU159
 552               	.LBB222:
 553               	.LBB221:
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 554               		.loc 2 270 12 is_stmt 0 view .LVU160
 555 0024 8FEF      		ldi r24,lo8(-1)
 556               	.LVL40:
 557               	.L43:
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 558               		.loc 2 270 12 view .LVU161
 559               	.LBE221:
 560               	.LBE222:
 561               	.LBB223:
 562               	.LBI223:
 358:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 563               		.loc 2 358 23 is_stmt 1 view .LVU162
 564               	.LBB224:
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 565               		.loc 2 360 5 view .LVU163
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 566               		.loc 2 360 14 is_stmt 0 view .LVU164
 567 0026 9091 E800 		lds r25,232
 568               	.LBE224:
 569               	.LBE223:
 655:./tmk_core/protocol/lufa/lufa.c ****         if (!Endpoint_IsReadWriteAllowed()) return;
 570               		.loc 1 655 26 view .LVU165
 571 002a 95FD      		sbrc r25,5
 572 002c 00C0      		rjmp .L47
 655:./tmk_core/protocol/lufa/lufa.c ****         if (!Endpoint_IsReadWriteAllowed()) return;
 573               		.loc 1 655 61 is_stmt 1 view .LVU166
 574               	.LVL41:
 575               	.LBB225:
 576               	.LBI225:
 255:/usr/avr/include/util/delay.h **** {
 577               		.loc 3 255 1 view .LVU167
 578               	.LBB226:
 257:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 579               		.loc 3 257 2 view .LVU168
 261:/usr/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 580               		.loc 3 261 2 view .LVU169
 262:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e6) * __us;
 581               		.loc 3 262 2 view .LVU170
 263:/usr/avr/include/util/delay.h **** 
 582               		.loc 3 263 2 view .LVU171
 273:/usr/avr/include/util/delay.h **** 	#endif
 583               		.loc 3 273 3 view .LVU172
 584               		.loc 3 276 2 view .LVU173
 585 002e 95E1      		ldi r25,lo8(21)
 586 0030 9A95      	1:	dec r25
 587 0032 01F4      		brne 1b
 588 0034 0000      		nop
 589               	.LVL42:
 590               		.loc 3 276 2 is_stmt 0 view .LVU174
 591               	.LBE226:
 592               	.LBE225:
 655:./tmk_core/protocol/lufa/lufa.c ****         if (!Endpoint_IsReadWriteAllowed()) return;
 593               		.loc 1 655 26 is_stmt 1 view .LVU175
 655:./tmk_core/protocol/lufa/lufa.c ****         if (!Endpoint_IsReadWriteAllowed()) return;
 594               		.loc 1 655 26 is_stmt 0 view .LVU176
 595 0036 8150      		subi r24,lo8(-(-1))
 596               	.LVL43:
 655:./tmk_core/protocol/lufa/lufa.c ****         if (!Endpoint_IsReadWriteAllowed()) return;
 597               		.loc 1 655 26 view .LVU177
 598 0038 8111      		cpse r24,__zero_reg__
 599 003a 00C0      		rjmp .L43
 600               	.LVL44:
 601               	.L47:
 656:./tmk_core/protocol/lufa/lufa.c **** 
 602               		.loc 1 656 9 is_stmt 1 view .LVU178
 603               	.LBB227:
 604               	.LBI227:
 358:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 605               		.loc 2 358 23 view .LVU179
 606               	.LBB228:
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 607               		.loc 2 360 5 view .LVU180
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 608               		.loc 2 360 14 is_stmt 0 view .LVU181
 609 003c 8091 E800 		lds r24,232
 610               	.LBE228:
 611               	.LBE227:
 656:./tmk_core/protocol/lufa/lufa.c **** 
 612               		.loc 1 656 12 view .LVU182
 613 0040 85FF      		sbrs r24,5
 614 0042 00C0      		rjmp .L39
 659:./tmk_core/protocol/lufa/lufa.c ****     }
 615               		.loc 1 659 9 is_stmt 1 view .LVU183
 616 0044 40E0      		ldi r20,0
 617 0046 50E0      		ldi r21,0
 618 0048 60E2      		ldi r22,lo8(32)
 619 004a 70E0      		ldi r23,0
 620               	.LVL45:
 621               	.L66:
 672:./tmk_core/protocol/lufa/lufa.c ****     }
 622               		.loc 1 672 9 is_stmt 0 view .LVU184
 623 004c 8D2F      		mov r24,r29
 624 004e 9C2F      		mov r25,r28
 625 0050 0E94 0000 		call Endpoint_Write_Stream_LE
 626               	.LVL46:
 676:./tmk_core/protocol/lufa/lufa.c **** 
 627               		.loc 1 676 5 is_stmt 1 view .LVU185
 628               	.LBB229:
 629               	.LBI229:
 453:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 630               		.loc 2 453 23 view .LVU186
 631               	.LBB230:
 632               		.loc 2 456 6 view .LVU187
 633               		.loc 2 456 13 is_stmt 0 view .LVU188
 634 0054 8091 E800 		lds r24,232
 635 0058 8E77      		andi r24,lo8(126)
 636 005a 8093 E800 		sts 232,r24
 637               	.LBE230:
 638               	.LBE229:
 678:./tmk_core/protocol/lufa/lufa.c **** }
 639               		.loc 1 678 5 is_stmt 1 view .LVU189
 678:./tmk_core/protocol/lufa/lufa.c **** }
 640               		.loc 1 678 26 is_stmt 0 view .LVU190
 641 005e 80E2      		ldi r24,lo8(32)
 642 0060 ED2F      		mov r30,r29
 643 0062 FC2F      		mov r31,r28
 644 0064 A0E0      		ldi r26,lo8(keyboard_report_sent)
 645 0066 B0E0      		ldi r27,hi8(keyboard_report_sent)
 646               		0:
 647 0068 0190      		ld r0,Z+
 648 006a 0D92      		st X+,r0
 649 006c 8A95      		dec r24
 650 006e 01F4      		brne 0b
 651               	.L39:
 652               	/* epilogue start */
 679:./tmk_core/protocol/lufa/lufa.c **** 
 653               		.loc 1 679 1 view .LVU191
 654 0070 DF91      		pop r29
 655 0072 CF91      		pop r28
 656 0074 0895      		ret
 657               	.LVL47:
 658               	.L42:
 665:./tmk_core/protocol/lufa/lufa.c **** 
 659               		.loc 1 665 9 is_stmt 1 view .LVU192
 660               	.LBB231:
 661               	.LBI231:
 267:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 662               		.loc 2 267 23 view .LVU193
 663               	.LBB232:
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 664               		.loc 2 270 6 view .LVU194
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 665               		.loc 2 270 12 is_stmt 0 view .LVU195
 666 0076 81E0      		ldi r24,lo8(1)
 667               	.LVL48:
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 668               		.loc 2 270 12 view .LVU196
 669 0078 8093 E900 		sts 233,r24
 670               	.LVL49:
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 671               		.loc 2 270 12 view .LVU197
 672               	.LBE232:
 673               	.LBE231:
 668:./tmk_core/protocol/lufa/lufa.c ****         if (!Endpoint_IsReadWriteAllowed()) return;
 674               		.loc 1 668 26 is_stmt 1 view .LVU198
 675               	.LBB234:
 676               	.LBB233:
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 677               		.loc 2 270 12 is_stmt 0 view .LVU199
 678 007c 8FEF      		ldi r24,lo8(-1)
 679               	.LVL50:
 680               	.L49:
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 681               		.loc 2 270 12 view .LVU200
 682               	.LBE233:
 683               	.LBE234:
 684               	.LBB235:
 685               	.LBI235:
 358:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 686               		.loc 2 358 23 is_stmt 1 view .LVU201
 687               	.LBB236:
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 688               		.loc 2 360 5 view .LVU202
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 689               		.loc 2 360 14 is_stmt 0 view .LVU203
 690 007e 9091 E800 		lds r25,232
 691               	.LBE236:
 692               	.LBE235:
 668:./tmk_core/protocol/lufa/lufa.c ****         if (!Endpoint_IsReadWriteAllowed()) return;
 693               		.loc 1 668 26 view .LVU204
 694 0082 95FD      		sbrc r25,5
 695 0084 00C0      		rjmp .L52
 668:./tmk_core/protocol/lufa/lufa.c ****         if (!Endpoint_IsReadWriteAllowed()) return;
 696               		.loc 1 668 61 is_stmt 1 view .LVU205
 697               	.LVL51:
 698               	.LBB237:
 699               	.LBI237:
 255:/usr/avr/include/util/delay.h **** {
 700               		.loc 3 255 1 view .LVU206
 701               	.LBB238:
 257:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 702               		.loc 3 257 2 view .LVU207
 261:/usr/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 703               		.loc 3 261 2 view .LVU208
 262:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e6) * __us;
 704               		.loc 3 262 2 view .LVU209
 263:/usr/avr/include/util/delay.h **** 
 705               		.loc 3 263 2 view .LVU210
 273:/usr/avr/include/util/delay.h **** 	#endif
 706               		.loc 3 273 3 view .LVU211
 707               		.loc 3 276 2 view .LVU212
 708 0086 95ED      		ldi r25,lo8(-43)
 709 0088 9A95      	1:	dec r25
 710 008a 01F4      		brne 1b
 711 008c 0000      		nop
 712               	.LVL52:
 713               		.loc 3 276 2 is_stmt 0 view .LVU213
 714               	.LBE238:
 715               	.LBE237:
 668:./tmk_core/protocol/lufa/lufa.c ****         if (!Endpoint_IsReadWriteAllowed()) return;
 716               		.loc 1 668 26 is_stmt 1 view .LVU214
 668:./tmk_core/protocol/lufa/lufa.c ****         if (!Endpoint_IsReadWriteAllowed()) return;
 717               		.loc 1 668 26 is_stmt 0 view .LVU215
 718 008e 8150      		subi r24,lo8(-(-1))
 719               	.LVL53:
 668:./tmk_core/protocol/lufa/lufa.c ****         if (!Endpoint_IsReadWriteAllowed()) return;
 720               		.loc 1 668 26 view .LVU216
 721 0090 8111      		cpse r24,__zero_reg__
 722 0092 00C0      		rjmp .L49
 723               	.LVL54:
 724               	.L52:
 669:./tmk_core/protocol/lufa/lufa.c **** 
 725               		.loc 1 669 9 is_stmt 1 view .LVU217
 726               	.LBB239:
 727               	.LBI239:
 358:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 728               		.loc 2 358 23 view .LVU218
 729               	.LBB240:
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 730               		.loc 2 360 5 view .LVU219
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 731               		.loc 2 360 14 is_stmt 0 view .LVU220
 732 0094 8091 E800 		lds r24,232
 733               	.LBE240:
 734               	.LBE239:
 669:./tmk_core/protocol/lufa/lufa.c **** 
 735               		.loc 1 669 12 view .LVU221
 736 0098 85FF      		sbrs r24,5
 737 009a 00C0      		rjmp .L39
 672:./tmk_core/protocol/lufa/lufa.c ****     }
 738               		.loc 1 672 9 is_stmt 1 view .LVU222
 739 009c 40E0      		ldi r20,0
 740 009e 50E0      		ldi r21,0
 741 00a0 68E0      		ldi r22,lo8(8)
 742 00a2 70E0      		ldi r23,0
 743 00a4 00C0      		rjmp .L66
 744               		.cfi_endproc
 745               	.LFE130:
 747               		.section	.text.EVENT_USB_Device_Connect,"ax",@progbits
 748               	.global	EVENT_USB_Device_Connect
 750               	EVENT_USB_Device_Connect:
 751               	.LFB121:
 330:./tmk_core/protocol/lufa/lufa.c ****     print("[C]");
 752               		.loc 1 330 1 view -0
 753               		.cfi_startproc
 754               	/* prologue: function */
 755               	/* frame size = 0 */
 756               	/* stack size = 0 */
 757               	.L__stack_usage = 0
 331:./tmk_core/protocol/lufa/lufa.c ****     /* For battery powered device */
 758               		.loc 1 331 17 view .LVU224
 333:./tmk_core/protocol/lufa/lufa.c ****         USB_Disable();
 759               		.loc 1 333 5 view .LVU225
 333:./tmk_core/protocol/lufa/lufa.c ****         USB_Disable();
 760               		.loc 1 333 9 is_stmt 0 view .LVU226
 761 0000 8091 0000 		lds r24,USB_IsInitialized
 333:./tmk_core/protocol/lufa/lufa.c ****         USB_Disable();
 762               		.loc 1 333 8 view .LVU227
 763 0004 8111      		cpse r24,__zero_reg__
 764 0006 00C0      		rjmp .L67
 334:./tmk_core/protocol/lufa/lufa.c ****         USB_Init();
 765               		.loc 1 334 9 is_stmt 1 view .LVU228
 766 0008 0E94 0000 		call USB_Disable
 767               	.LVL55:
 335:./tmk_core/protocol/lufa/lufa.c ****         USB_Device_EnableSOFEvents();
 768               		.loc 1 335 9 view .LVU229
 769 000c 0E94 0000 		call USB_Init
 770               	.LVL56:
 336:./tmk_core/protocol/lufa/lufa.c ****     }
 771               		.loc 1 336 9 view .LVU230
 772               	.LBB241:
 773               	.LBI241:
 774               		.file 4 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h"
   1:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** /*
   2:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****              LUFA Library
   3:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****      Copyright (C) Dean Camera, 2014.
   4:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
   5:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****            www.lufa-lib.org
   7:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** */
   8:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
   9:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** /*
  10:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   Copyright 2014  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  12:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   all copies and that both that the copyright notice and this
  16:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   documentation, and that the name of the author not be used in
  18:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   software without specific, written prior permission.
  20:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  21:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   The author disclaims all warranties with regard to this
  22:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   software, including all implied warranties of merchantability
  23:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   special, indirect or consequential damages or any damages
  25:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   arising out of or in connection with the use or performance of
  28:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   this software.
  29:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** */
  30:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  31:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** /** \file
  32:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *  \brief USB Device definitions for the AVR8 microcontrollers.
  33:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *  \copydetails Group_Device_AVR8
  34:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *
  35:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  36:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  37:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  */
  38:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  39:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** /** \ingroup Group_Device
  40:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *  \defgroup Group_Device_AVR8 Device Management (AVR8)
  41:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *  \brief USB Device definitions for the AVR8 microcontrollers.
  42:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *
  43:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *  Architecture specific USB Device definitions for the Atmel 8-bit AVR microcontrollers.
  44:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *
  45:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *  @{
  46:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  */
  47:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  48:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** #ifndef __USBDEVICE_AVR8_H__
  49:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** #define __USBDEVICE_AVR8_H__
  50:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  51:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 	/* Includes: */
  52:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#include "../../../../Common/Common.h"
  53:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#include "../USBController.h"
  54:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#include "../StdDescriptors.h"
  55:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#include "../USBInterrupt.h"
  56:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#include "../Endpoint.h"
  57:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  58:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  59:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#if defined(__cplusplus)
  60:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			extern "C" {
  61:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#endif
  62:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  63:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 	/* Preprocessor Checks: */
  64:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  65:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  66:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#endif
  67:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  68:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#if (defined(USE_RAM_DESCRIPTORS) && defined(USE_EEPROM_DESCRIPTORS))
  69:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#error USE_RAM_DESCRIPTORS and USE_EEPROM_DESCRIPTORS are mutually exclusive.
  70:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#endif
  71:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  72:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#if (defined(USE_FLASH_DESCRIPTORS) && defined(USE_EEPROM_DESCRIPTORS))
  73:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#error USE_FLASH_DESCRIPTORS and USE_EEPROM_DESCRIPTORS are mutually exclusive.
  74:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#endif
  75:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  76:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#if (defined(USE_FLASH_DESCRIPTORS) && defined(USE_RAM_DESCRIPTORS))
  77:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#error USE_FLASH_DESCRIPTORS and USE_RAM_DESCRIPTORS are mutually exclusive.
  78:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#endif
  79:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  80:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 	/* Public Interface - May be used in end-application: */
  81:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		/* Macros: */
  82:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			/** \name USB Device Mode Option Masks */
  83:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			//@{
  84:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR) || defin
  85:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				/** Mask for the Options parameter of the \ref USB_Init() function. This indicates that the
  86:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  USB interface should be initialized in low speed (1.5Mb/s) mode.
  87:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *
  88:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  \note Low Speed mode is not available on all USB AVR models.
  89:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *        \n
  90:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *
  91:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  \note Restrictions apply on the number, size and type of endpoints which can be used
  92:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *        when running in low speed mode - please refer to the USB 2.0 specification.
  93:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 */
  94:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				#define USB_DEVICE_OPT_LOWSPEED            (1 << 0)
  95:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#endif
  96:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  97:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			/** Mask for the Options parameter of the \ref USB_Init() function. This indicates that the
  98:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  USB interface should be initialized in full speed (12Mb/s) mode.
  99:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 */
 100:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#define USB_DEVICE_OPT_FULLSPEED               (0 << 0)
 101:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			//@}
 102:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 103:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#if (!defined(NO_INTERNAL_SERIAL) && \
 104:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			     (defined(USB_SERIES_7_AVR) || defined(USB_SERIES_6_AVR) || \
 105:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			      defined(USB_SERIES_4_AVR) || defined(USB_SERIES_2_AVR) || \
 106:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				  defined(__DOXYGEN__)))
 107:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				/** String descriptor index for the device's unique serial number string descriptor within the 
 108:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  This unique serial number is used by the host to associate resources to the device (such as
 109:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  number allocations) to a device regardless of the port it is plugged in to on the host. Som
 110:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  a unique serial number internally, and setting the device descriptors serial number string 
 111:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  will cause it to use the internal serial number.
 112:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *
 113:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  On unsupported devices, this will evaluate to \ref NO_DESCRIPTOR and so will force the host
 114:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  number for the device.
 115:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 */
 116:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				#define USE_INTERNAL_SERIAL            0xDC
 117:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 118:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				/** Length of the device's unique internal serial number, in bits, if present on the selected m
 119:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  model.
 120:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 */
 121:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				#define INTERNAL_SERIAL_LENGTH_BITS    80
 122:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 123:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				/** Start address of the internal serial number, in the appropriate address space, if present o
 124:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  model.
 125:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 */
 126:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				#define INTERNAL_SERIAL_START_ADDRESS  0x0E
 127:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#else
 128:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				#define USE_INTERNAL_SERIAL            NO_DESCRIPTOR
 129:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 130:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				#define INTERNAL_SERIAL_LENGTH_BITS    0
 131:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				#define INTERNAL_SERIAL_START_ADDRESS  0
 132:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#endif
 133:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 134:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		/* Function Prototypes: */
 135:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			/** Sends a Remote Wakeup request to the host. This signals to the host that the device should
 136:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  be taken out of suspended mode, and communications should resume.
 137:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *
 138:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  Typically, this is implemented so that HID devices (mice, keyboards, etc.) can wake up the
 139:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  host computer when the host has suspended all USB devices to enter a low power state.
 140:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *
 141:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  \attention This function should only be used if the device has indicated to the host that it
 142:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             supports the Remote Wakeup feature in the device descriptors, and should only be
 143:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             issued if the host is currently allowing remote wakeup events from the device (i.
 144:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             the \ref USB_Device_RemoteWakeupEnabled flag is set). When the \c NO_DEVICE_REMOT
 145:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             compile time option is used, this function is unavailable.
 146:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             \n\n
 147:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *
 148:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  \attention The USB clock must be running for this function to operate. If the stack is initi
 149:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             the \ref USB_OPT_MANUAL_PLL option enabled, the user must ensure that the PLL is 
 150:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             before attempting to call this function.
 151:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *
 152:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  \see \ref Group_StdDescriptors for more information on the RMWAKEUP feature and device descr
 153:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 */
 154:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			void USB_Device_SendRemoteWakeup(void);
 155:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 156:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		/* Inline Functions: */
 157:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			/** Returns the current USB frame number, when in device mode. Every millisecond the USB bus is 
 158:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  the frame number is incremented by one.
 159:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *
 160:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  \return Current USB frame number from the USB controller.
 161:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 */
 162:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			static inline uint16_t USB_Device_GetFrameNumber(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESUL
 163:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			static inline uint16_t USB_Device_GetFrameNumber(void)
 164:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			{
 165:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				return UDFNUM;
 166:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			}
 167:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 168:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#if !defined(NO_SOF_EVENTS)
 169:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				/** Enables the device mode Start Of Frame events. When enabled, this causes the
 170:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  \ref EVENT_USB_Device_StartOfFrame() event to fire once per millisecond, synchronized to th
 171:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  at the start of each USB frame when enumerated in device mode.
 172:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *
 173:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  \note This function is not available when the \c NO_SOF_EVENTS compile time token is define
 174:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 */
 175:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				static inline void USB_Device_EnableSOFEvents(void) ATTR_ALWAYS_INLINE;
 176:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				static inline void USB_Device_EnableSOFEvents(void)
 775               		.loc 4 176 24 view .LVU231
 776               	.LBB242:
 177:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				{
 178:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 					USB_INT_Enable(USB_INT_SOFI);
 777               		.loc 4 178 6 view .LVU232
 778               	.LBB243:
 779               	.LBI243:
 780               		.file 5 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h"
   1:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** /*
   2:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****              LUFA Library
   3:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****      Copyright (C) Dean Camera, 2014.
   4:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
   5:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****            www.lufa-lib.org
   7:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** */
   8:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
   9:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** /*
  10:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   Copyright 2014  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  12:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   all copies and that both that the copyright notice and this
  16:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   documentation, and that the name of the author not be used in
  18:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   software without specific, written prior permission.
  20:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  21:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   The author disclaims all warranties with regard to this
  22:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   software, including all implied warranties of merchantability
  23:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   special, indirect or consequential damages or any damages
  25:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   arising out of or in connection with the use or performance of
  28:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   this software.
  29:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** */
  30:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  31:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** /** \file
  32:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *  \brief USB Controller Interrupt definitions for the AVR8 microcontrollers.
  33:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *
  34:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *  This file contains definitions required for the correct handling of low level USB service routi
  35:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *  from the USB controller.
  36:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *
  37:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  38:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  39:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  */
  40:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  41:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** #ifndef __USBINTERRUPT_AVR8_H__
  42:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** #define __USBINTERRUPT_AVR8_H__
  43:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  44:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 	/* Includes: */
  45:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		#include "../../../../Common/Common.h"
  46:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  47:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  48:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		#if defined(__cplusplus)
  49:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			extern "C" {
  50:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		#endif
  51:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  52:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 	/* Preprocessor Checks: */
  53:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  54:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  55:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		#endif
  56:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  57:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 	/* Private Interface - For use in library only: */
  58:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 	#if !defined(__DOXYGEN__)
  59:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		/* Enums: */
  60:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			enum USB_Interrupts_t
  61:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
  62:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#if (defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR) || def
  63:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_VBUSTI  = 0,
  64:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#endif
  65:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#if (defined(USB_CAN_BE_BOTH) || defined(__DOXYGEN__))
  66:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_IDTI    = 1,
  67:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#endif
  68:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#if (defined(USB_CAN_BE_DEVICE) || defined(__DOXYGEN__))
  69:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_WAKEUPI = 2,
  70:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_SUSPI   = 3,
  71:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_EORSTI  = 4,
  72:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_SOFI    = 5,
  73:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_RXSTPI  = 6,
  74:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#endif
  75:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#if (defined(USB_CAN_BE_HOST) || defined(__DOXYGEN__))
  76:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_HSOFI   = 7,
  77:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_DCONNI  = 8,
  78:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_DDISCI  = 9,
  79:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_RSTI    = 10,
  80:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_BCERRI  = 11,
  81:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_VBERRI  = 12,
  82:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_SRPI    = 13,
  83:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#endif
  84:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			};
  85:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  86:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		/* Inline Functions: */
  87:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			static inline void USB_INT_Enable(const uint8_t Interrupt) ATTR_ALWAYS_INLINE;
  88:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			static inline void USB_INT_Enable(const uint8_t Interrupt)
 781               		.loc 5 88 23 view .LVU233
 782               	.LBB244:
  89:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
  90:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				switch (Interrupt)
 783               		.loc 5 90 5 view .LVU234
  91:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				{
  92:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if (defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
  93:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_VBUSTI:
  94:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						USBCON |= (1 << VBUSTE);
  95:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
  96:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
  97:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if defined(USB_CAN_BE_BOTH)
  98:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_IDTI:
  99:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						USBCON |= (1 << IDTE);
 100:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 101:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 102:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if defined(USB_CAN_BE_DEVICE)
 103:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_WAKEUPI:
 104:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  |= (1 << WAKEUPE);
 105:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 106:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SUSPI:
 107:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  |= (1 << SUSPE);
 108:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 109:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_EORSTI:
 110:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  |= (1 << EORSTE);
 111:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 112:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SOFI:
 113:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  |= (1 << SOFE);
 784               		.loc 5 113 7 view .LVU235
 785 0010 8091 E200 		lds r24,226
 786               		.loc 5 113 14 is_stmt 0 view .LVU236
 787 0014 8460      		ori r24,lo8(4)
 788 0016 8093 E200 		sts 226,r24
 114:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 789               		.loc 5 114 7 is_stmt 1 view .LVU237
 790               	.LVL57:
 791               	.L67:
 792               	/* epilogue start */
 793               		.loc 5 114 7 is_stmt 0 view .LVU238
 794               	.LBE244:
 795               	.LBE243:
 796               	.LBE242:
 797               	.LBE241:
 338:./tmk_core/protocol/lufa/lufa.c **** 
 798               		.loc 1 338 1 view .LVU239
 799 001a 0895      		ret
 800               		.cfi_endproc
 801               	.LFE121:
 803               		.section	.text.EVENT_USB_Device_Disconnect,"ax",@progbits
 804               	.global	EVENT_USB_Device_Disconnect
 806               	EVENT_USB_Device_Disconnect:
 807               	.LFB122:
 341:./tmk_core/protocol/lufa/lufa.c ****     print("[D]");
 808               		.loc 1 341 1 is_stmt 1 view -0
 809               		.cfi_startproc
 810               	/* prologue: function */
 811               	/* frame size = 0 */
 812               	/* stack size = 0 */
 813               	.L__stack_usage = 0
 342:./tmk_core/protocol/lufa/lufa.c ****     /* For battery powered device */
 814               		.loc 1 342 17 view .LVU241
 344:./tmk_core/protocol/lufa/lufa.c **** /* TODO: This doesn't work. After several plug in/outs can not be enumerated.
 815               		.loc 1 344 5 view .LVU242
 344:./tmk_core/protocol/lufa/lufa.c **** /* TODO: This doesn't work. After several plug in/outs can not be enumerated.
 816               		.loc 1 344 23 is_stmt 0 view .LVU243
 817 0000 1092 0000 		sts USB_IsInitialized,__zero_reg__
 818               	/* epilogue start */
 352:./tmk_core/protocol/lufa/lufa.c **** 
 819               		.loc 1 352 1 view .LVU244
 820 0004 0895      		ret
 821               		.cfi_endproc
 822               	.LFE122:
 824               		.section	.text.EVENT_USB_Device_Reset,"ax",@progbits
 825               	.global	EVENT_USB_Device_Reset
 827               	EVENT_USB_Device_Reset:
 828               	.LFB139:
 829               		.cfi_startproc
 354:./tmk_core/protocol/lufa/lufa.c **** {
 830               		.loc 1 354 6 is_stmt 1 view -0
 831               	/* prologue: function */
 832               	/* frame size = 0 */
 833               	/* stack size = 0 */
 834               	.L__stack_usage = 0
 835               	/* epilogue start */
 836 0000 0895      		ret
 837               		.cfi_endproc
 838               	.LFE139:
 840               		.section	.text.EVENT_USB_Device_Suspend,"ax",@progbits
 841               	.global	EVENT_USB_Device_Suspend
 843               	EVENT_USB_Device_Suspend:
 844               	.LFB124:
 360:./tmk_core/protocol/lufa/lufa.c ****     print("[S]");
 845               		.loc 1 360 1 view -0
 846               		.cfi_startproc
 847               	/* prologue: function */
 848               	/* frame size = 0 */
 849               	/* stack size = 0 */
 850               	.L__stack_usage = 0
 361:./tmk_core/protocol/lufa/lufa.c **** #ifdef SLEEP_LED_ENABLE
 851               		.loc 1 361 17 view .LVU247
 852               	/* epilogue start */
 365:./tmk_core/protocol/lufa/lufa.c **** 
 853               		.loc 1 365 1 is_stmt 0 view .LVU248
 854 0000 0895      		ret
 855               		.cfi_endproc
 856               	.LFE124:
 858               		.section	.text.EVENT_USB_Device_WakeUp,"ax",@progbits
 859               	.global	EVENT_USB_Device_WakeUp
 861               	EVENT_USB_Device_WakeUp:
 862               	.LFB125:
 368:./tmk_core/protocol/lufa/lufa.c ****     print("[W]");
 863               		.loc 1 368 1 is_stmt 1 view -0
 864               		.cfi_startproc
 865               	/* prologue: function */
 866               	/* frame size = 0 */
 867               	/* stack size = 0 */
 868               	.L__stack_usage = 0
 369:./tmk_core/protocol/lufa/lufa.c ****     suspend_wakeup_init();
 869               		.loc 1 369 17 view .LVU250
 370:./tmk_core/protocol/lufa/lufa.c **** 
 870               		.loc 1 370 5 view .LVU251
 871 0000 0C94 0000 		jmp suspend_wakeup_init
 872               	.LVL58:
 873               		.cfi_endproc
 874               	.LFE125:
 876               		.section	.text.EVENT_USB_Device_ConfigurationChanged,"ax",@progbits
 877               	.global	EVENT_USB_Device_ConfigurationChanged
 879               	EVENT_USB_Device_ConfigurationChanged:
 880               	.LFB126:
 410:./tmk_core/protocol/lufa/lufa.c ****     bool ConfigSuccess = true;
 881               		.loc 1 410 1 view -0
 882               		.cfi_startproc
 883               	/* prologue: function */
 884               	/* frame size = 0 */
 885               	/* stack size = 0 */
 886               	.L__stack_usage = 0
 411:./tmk_core/protocol/lufa/lufa.c **** 
 887               		.loc 1 411 5 view .LVU253
 888               	.LVL59:
 414:./tmk_core/protocol/lufa/lufa.c ****                                      KEYBOARD_EPSIZE, ENDPOINT_BANK_SINGLE);
 889               		.loc 1 414 5 view .LVU254
 890               	.LBB245:
 891               	.LBI245:
 200:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 892               		.loc 2 200 23 view .LVU255
 893               	.LBB246:
 205:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 894               		.loc 2 205 5 view .LVU256
 207:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				  return false;
 895               		.loc 2 207 5 view .LVU257
 210:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 896               		.loc 2 210 5 view .LVU258
 210:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 897               		.loc 2 210 12 is_stmt 0 view .LVU259
 898 0000 42E0      		ldi r20,lo8(2)
 899 0002 61EC      		ldi r22,lo8(-63)
 900 0004 81E0      		ldi r24,lo8(1)
 901 0006 0E94 0000 		call Endpoint_ConfigureEndpoint_Prv
 902               	.LVL60:
 210:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 903               		.loc 2 210 12 view .LVU260
 904               	.LBE246:
 905               	.LBE245:
 419:./tmk_core/protocol/lufa/lufa.c ****                                      MOUSE_EPSIZE, ENDPOINT_BANK_SINGLE);
 906               		.loc 1 419 5 is_stmt 1 view .LVU261
 907               	.LBB247:
 908               	.LBI247:
 200:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 909               		.loc 2 200 23 view .LVU262
 910               	.LBB248:
 205:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 911               		.loc 2 205 5 view .LVU263
 207:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				  return false;
 912               		.loc 2 207 5 view .LVU264
 210:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 913               		.loc 2 210 5 view .LVU265
 210:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 914               		.loc 2 210 12 is_stmt 0 view .LVU266
 915 000a 42E0      		ldi r20,lo8(2)
 916 000c 61EC      		ldi r22,lo8(-63)
 917 000e 82E0      		ldi r24,lo8(2)
 918 0010 0E94 0000 		call Endpoint_ConfigureEndpoint_Prv
 919               	.LVL61:
 210:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 920               		.loc 2 210 12 view .LVU267
 921               	.LBE248:
 922               	.LBE247:
 425:./tmk_core/protocol/lufa/lufa.c ****                                      EXTRAKEY_EPSIZE, ENDPOINT_BANK_SINGLE);
 923               		.loc 1 425 5 is_stmt 1 view .LVU268
 924               	.LBB249:
 925               	.LBI249:
 200:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 926               		.loc 2 200 23 view .LVU269
 927               	.LBB250:
 205:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 928               		.loc 2 205 5 view .LVU270
 207:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				  return false;
 929               		.loc 2 207 5 view .LVU271
 210:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 930               		.loc 2 210 5 view .LVU272
 210:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 931               		.loc 2 210 12 is_stmt 0 view .LVU273
 932 0014 42E0      		ldi r20,lo8(2)
 933 0016 61EC      		ldi r22,lo8(-63)
 934 0018 83E0      		ldi r24,lo8(3)
 935 001a 0E94 0000 		call Endpoint_ConfigureEndpoint_Prv
 936               	.LVL62:
 210:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 937               		.loc 2 210 12 view .LVU274
 938               	.LBE250:
 939               	.LBE249:
 449:./tmk_core/protocol/lufa/lufa.c ****                                      NKRO_EPSIZE, ENDPOINT_BANK_SINGLE);
 940               		.loc 1 449 5 is_stmt 1 view .LVU275
 941               	.LBB251:
 942               	.LBI251:
 200:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 943               		.loc 2 200 23 view .LVU276
 944               	.LBB252:
 205:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 945               		.loc 2 205 5 view .LVU277
 207:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				  return false;
 946               		.loc 2 207 5 view .LVU278
 210:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 947               		.loc 2 210 12 is_stmt 0 view .LVU279
 948 001e 42E2      		ldi r20,lo8(34)
 949 0020 61EC      		ldi r22,lo8(-63)
 950 0022 84E0      		ldi r24,lo8(4)
 951 0024 0C94 0000 		jmp Endpoint_ConfigureEndpoint_Prv
 952               	.LVL63:
 953               	.LBE252:
 954               	.LBE251:
 955               		.cfi_endproc
 956               	.LFE126:
 958               		.section	.text.EVENT_USB_Device_ControlRequest,"ax",@progbits
 959               	.global	EVENT_USB_Device_ControlRequest
 961               	EVENT_USB_Device_ControlRequest:
 962               	.LFB127:
 482:./tmk_core/protocol/lufa/lufa.c ****     uint8_t* ReportData = NULL;
 963               		.loc 1 482 1 is_stmt 1 view -0
 964               		.cfi_startproc
 965               	/* prologue: function */
 966               	/* frame size = 0 */
 967               	/* stack size = 0 */
 968               	.L__stack_usage = 0
 483:./tmk_core/protocol/lufa/lufa.c ****     uint8_t  ReportSize = 0;
 969               		.loc 1 483 5 view .LVU281
 970               	.LVL64:
 484:./tmk_core/protocol/lufa/lufa.c **** 
 971               		.loc 1 484 5 view .LVU282
 487:./tmk_core/protocol/lufa/lufa.c ****     {
 972               		.loc 1 487 5 view .LVU283
 487:./tmk_core/protocol/lufa/lufa.c ****     {
 973               		.loc 1 487 31 is_stmt 0 view .LVU284
 974 0000 8091 0000 		lds r24,USB_ControlRequest+1
 487:./tmk_core/protocol/lufa/lufa.c ****     {
 975               		.loc 1 487 5 view .LVU285
 976 0004 8930      		cpi r24,lo8(9)
 977 0006 01F0      		breq .L75
 978 0008 00F4      		brsh .L76
 979 000a 8230      		cpi r24,lo8(2)
 980 000c 01F4      		brne .+2
 981 000e 00C0      		rjmp .L77
 982 0010 8330      		cpi r24,lo8(3)
 983 0012 01F4      		brne .+2
 984 0014 00C0      		rjmp .L78
 985 0016 8130      		cpi r24,lo8(1)
 986 0018 01F0      		breq .L79
 987 001a 0895      		ret
 988               	.L76:
 989 001c 8A30      		cpi r24,lo8(10)
 990 001e 01F4      		brne .+2
 991 0020 00C0      		rjmp .L81
 992 0022 8B30      		cpi r24,lo8(11)
 993 0024 01F4      		brne .+2
 994 0026 00C0      		rjmp .L82
 995 0028 0895      		ret
 996               	.L79:
 490:./tmk_core/protocol/lufa/lufa.c ****             {
 997               		.loc 1 490 13 is_stmt 1 view .LVU286
 490:./tmk_core/protocol/lufa/lufa.c ****             {
 998               		.loc 1 490 16 is_stmt 0 view .LVU287
 999 002a 8091 0000 		lds r24,USB_ControlRequest
 1000 002e 813A      		cpi r24,lo8(-95)
 1001 0030 01F0      		breq .+2
 1002 0032 00C0      		rjmp .L74
 492:./tmk_core/protocol/lufa/lufa.c **** 
 1003               		.loc 1 492 17 is_stmt 1 view .LVU288
 1004               	.LBB253:
 1005               	.LBI253:
 442:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1006               		.loc 2 442 23 view .LVU289
 1007               	.LBB254:
 444:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1008               		.loc 2 444 5 view .LVU290
 444:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1009               		.loc 2 444 12 is_stmt 0 view .LVU291
 1010 0034 8091 E800 		lds r24,232
 1011 0038 877F      		andi r24,lo8(-9)
 1012 003a 8093 E800 		sts 232,r24
 1013               	.LBE254:
 1014               	.LBE253:
 495:./tmk_core/protocol/lufa/lufa.c ****                 case KEYBOARD_INTERFACE:
 1015               		.loc 1 495 17 is_stmt 1 view .LVU292
 1016 003e 8091 0000 		lds r24,USB_ControlRequest+4
 1017 0042 9091 0000 		lds r25,USB_ControlRequest+4+1
 1018 0046 892B      		or r24,r25
 1019 0048 01F0      		breq .L91
 484:./tmk_core/protocol/lufa/lufa.c **** 
 1020               		.loc 1 484 14 is_stmt 0 view .LVU293
 1021 004a 60E0      		ldi r22,0
 483:./tmk_core/protocol/lufa/lufa.c ****     uint8_t  ReportSize = 0;
 1022               		.loc 1 483 14 view .LVU294
 1023 004c 80E0      		ldi r24,0
 1024 004e 90E0      		ldi r25,0
 1025               	.L84:
 1026               	.LVL65:
 504:./tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearOUT();
 1027               		.loc 1 504 17 is_stmt 1 view .LVU295
 1028 0050 70E0      		ldi r23,0
 1029 0052 0E94 0000 		call Endpoint_Write_Control_Stream_LE
 1030               	.LVL66:
 505:./tmk_core/protocol/lufa/lufa.c ****             }
 1031               		.loc 1 505 17 view .LVU296
 1032               	.LBB255:
 1033               	.LBI255:
 457:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 458:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~(1 << TXINI);
 459:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 460:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 461:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 462:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Acknowledges an OUT packet to the host on the currently selected endpoint, freeing up the en
 463:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  for the next packet and switching to the alternative endpoint bank if double banked.
 464:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 465:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 466:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 467:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearOUT(void) ATTR_ALWAYS_INLINE;
 468:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearOUT(void)
 1034               		.loc 2 468 23 view .LVU297
 1035               	.LBB256:
 469:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 470:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 471:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
 1036               		.loc 2 471 6 view .LVU298
 1037               		.loc 2 471 13 is_stmt 0 view .LVU299
 1038 0056 8091 E800 		lds r24,232
 1039 005a 8B77      		andi r24,lo8(123)
 1040 005c 8093 E800 		sts 232,r24
 472:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 473:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~(1 << RXOUTI);
 474:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 475:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1041               		.loc 2 475 4 view .LVU300
 1042 0060 0895      		ret
 1043               	.LVL67:
 1044               	.L91:
 1045               		.loc 2 475 4 view .LVU301
 1046               	.LBE256:
 1047               	.LBE255:
 499:./tmk_core/protocol/lufa/lufa.c ****                     break;
 1048               		.loc 1 499 32 view .LVU302
 1049 0062 60E2      		ldi r22,lo8(32)
 498:./tmk_core/protocol/lufa/lufa.c ****                     ReportSize = sizeof(keyboard_report_sent);
 1050               		.loc 1 498 32 view .LVU303
 1051 0064 80E0      		ldi r24,lo8(keyboard_report_sent)
 1052 0066 90E0      		ldi r25,hi8(keyboard_report_sent)
 1053 0068 00C0      		rjmp .L84
 1054               	.L75:
 510:./tmk_core/protocol/lufa/lufa.c ****             {
 1055               		.loc 1 510 13 is_stmt 1 view .LVU304
 510:./tmk_core/protocol/lufa/lufa.c ****             {
 1056               		.loc 1 510 16 is_stmt 0 view .LVU305
 1057 006a 8091 0000 		lds r24,USB_ControlRequest
 1058 006e 8132      		cpi r24,lo8(33)
 1059 0070 01F4      		brne .L74
 514:./tmk_core/protocol/lufa/lufa.c ****                 case KEYBOARD_INTERFACE:
 1060               		.loc 1 514 17 is_stmt 1 view .LVU306
 514:./tmk_core/protocol/lufa/lufa.c ****                 case KEYBOARD_INTERFACE:
 1061               		.loc 1 514 43 is_stmt 0 view .LVU307
 1062 0072 8091 0000 		lds r24,USB_ControlRequest+4
 1063 0076 9091 0000 		lds r25,USB_ControlRequest+4+1
 1064 007a 0097      		sbiw r24,0
 1065 007c 01F0      		breq .L86
 1066 007e 0397      		sbiw r24,3
 1067 0080 01F4      		brne .L74
 1068               	.L86:
 519:./tmk_core/protocol/lufa/lufa.c **** 
 1069               		.loc 1 519 21 is_stmt 1 view .LVU308
 1070               	.LBB257:
 1071               	.LBI257:
 442:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1072               		.loc 2 442 23 view .LVU309
 1073               	.LBB258:
 444:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1074               		.loc 2 444 5 view .LVU310
 444:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1075               		.loc 2 444 12 is_stmt 0 view .LVU311
 1076 0082 8091 E800 		lds r24,232
 1077 0086 877F      		andi r24,lo8(-9)
 1078 0088 8093 E800 		sts 232,r24
 1079               	.L87:
 1080               	.LBE258:
 1081               	.LBE257:
 521:./tmk_core/protocol/lufa/lufa.c ****                         if (USB_DeviceState == DEVICE_STATE_Unattached)
 1082               		.loc 1 521 28 is_stmt 1 view .LVU312
 1083               	.LBB259:
 1084               	.LBI259:
 417:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1085               		.loc 2 417 23 view .LVU313
 1086               	.LBB260:
 419:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1087               		.loc 2 419 5 view .LVU314
 419:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1088               		.loc 2 419 14 is_stmt 0 view .LVU315
 1089 008c 8091 E800 		lds r24,232
 1090               	.LBE260:
 1091               	.LBE259:
 521:./tmk_core/protocol/lufa/lufa.c ****                         if (USB_DeviceState == DEVICE_STATE_Unattached)
 1092               		.loc 1 521 28 view .LVU316
 1093 0090 82FF      		sbrs r24,2
 1094 0092 00C0      		rjmp .L88
 525:./tmk_core/protocol/lufa/lufa.c **** 
 1095               		.loc 1 525 21 is_stmt 1 view .LVU317
 1096               	.LBB261:
 1097               	.LBI261:
 476:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 477:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Stalls the current endpoint, indicating to the host that a logical problem occurred with the
 478:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  indicated endpoint and that the current transfer sequence should be aborted. This provides a
 479:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  way for devices to indicate invalid commands to the host so that the current transfer can be
 480:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  aborted and the host can begin its own recovery sequence.
 481:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 482:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  The currently selected endpoint remains stalled until either the \ref Endpoint_ClearStall() 
 483:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  is called, or the host issues a CLEAR FEATURE request to the device for the currently select
 484:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoint.
 485:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 486:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 487:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 488:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_StallTransaction(void) ATTR_ALWAYS_INLINE;
 489:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_StallTransaction(void)
 490:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 491:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << STALLRQ);
 492:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 493:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 494:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Clears the STALL condition on the currently selected endpoint.
 495:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 496:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 497:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 498:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearStall(void) ATTR_ALWAYS_INLINE;
 499:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearStall(void)
 500:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 501:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << STALLRQC);
 502:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 503:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 504:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is stalled, \c false otherwise.
 505:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 506:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 507:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 508:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint is stalled, \c false otherwise.
 509:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 510:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsStalled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 511:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsStalled(void)
 512:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 513:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UECONX & (1 << STALLRQ)) ? true : false);
 514:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 515:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 516:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Resets the data toggle of the currently selected endpoint. */
 517:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetDataToggle(void) ATTR_ALWAYS_INLINE;
 518:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetDataToggle(void)
 519:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 520:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << RSTDT);
 521:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 522:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 523:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Sets the direction of the currently selected endpoint.
 524:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 525:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] DirectionMask  New endpoint direction, as a \c ENDPOINT_DIR_* mask.
 526:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 527:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SetEndpointDirection(const uint8_t DirectionMask) ATTR_ALWAYS_INLINE
 528:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SetEndpointDirection(const uint8_t DirectionMask)
 529:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 530:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECFG0X = ((UECFG0X & ~(1 << EPDIR)) | (DirectionMask ? (1 << EPDIR) : 0));
 531:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 532:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 533:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Reads one byte from the currently selected endpoint's bank, for OUT direction endpoints.
 534:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 535:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPrimitiveRW_AVR8
 536:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 537:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Next byte in the currently selected endpoint's FIFO buffer.
 538:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 539:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_Read_8(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 540:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_Read_8(void)
 1098               		.loc 2 540 26 view .LVU318
 1099               	.LBB262:
 541:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 542:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return UEDATX;
 1100               		.loc 2 542 5 view .LVU319
 1101               		.loc 2 542 12 is_stmt 0 view .LVU320
 1102 0094 8091 F100 		lds r24,241
 1103               	.LBE262:
 1104               	.LBE261:
 525:./tmk_core/protocol/lufa/lufa.c **** 
 1105               		.loc 1 525 40 view .LVU321
 1106 0098 8093 0000 		sts keyboard_led_stats,r24
 527:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearStatusStage();
 1107               		.loc 1 527 21 is_stmt 1 view .LVU322
 1108               	.LBB263:
 1109               	.LBI263:
 468:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1110               		.loc 2 468 23 view .LVU323
 1111               	.LBB264:
 471:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1112               		.loc 2 471 6 view .LVU324
 471:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1113               		.loc 2 471 13 is_stmt 0 view .LVU325
 1114 009c 8091 E800 		lds r24,232
 1115 00a0 8B77      		andi r24,lo8(123)
 1116               	.L102:
 1117               	.LBE264:
 1118               	.LBE263:
 1119               	.LBB265:
 1120               	.LBB266:
 456:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1121               		.loc 2 456 13 view .LVU326
 1122 00a2 8093 E800 		sts 232,r24
 1123               	.LBE266:
 1124               	.LBE265:
 579:./tmk_core/protocol/lufa/lufa.c ****             }
 1125               		.loc 1 579 17 is_stmt 1 view .LVU327
 1126 00a6 0C94 0000 		jmp Endpoint_ClearStatusStage
 1127               	.LVL68:
 1128               	.L88:
 522:./tmk_core/protocol/lufa/lufa.c ****                           return;
 1129               		.loc 1 522 25 view .LVU328
 522:./tmk_core/protocol/lufa/lufa.c ****                           return;
 1130               		.loc 1 522 45 is_stmt 0 view .LVU329
 1131 00aa 8091 0000 		lds r24,USB_DeviceState
 522:./tmk_core/protocol/lufa/lufa.c ****                           return;
 1132               		.loc 1 522 28 view .LVU330
 1133 00ae 8111      		cpse r24,__zero_reg__
 1134 00b0 00C0      		rjmp .L87
 1135               	.L74:
 1136               	/* epilogue start */
 588:./tmk_core/protocol/lufa/lufa.c **** 
 1137               		.loc 1 588 1 view .LVU331
 1138 00b2 0895      		ret
 1139               	.L78:
 537:./tmk_core/protocol/lufa/lufa.c ****             {
 1140               		.loc 1 537 13 is_stmt 1 view .LVU332
 537:./tmk_core/protocol/lufa/lufa.c ****             {
 1141               		.loc 1 537 16 is_stmt 0 view .LVU333
 1142 00b4 8091 0000 		lds r24,USB_ControlRequest
 1143 00b8 813A      		cpi r24,lo8(-95)
 1144 00ba 01F4      		brne .L74
 539:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearSETUP();
 1145               		.loc 1 539 17 is_stmt 1 view .LVU334
 539:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearSETUP();
 1146               		.loc 1 539 20 is_stmt 0 view .LVU335
 1147 00bc 8091 0000 		lds r24,USB_ControlRequest+4
 1148 00c0 9091 0000 		lds r25,USB_ControlRequest+4+1
 1149 00c4 892B      		or r24,r25
 1150 00c6 01F4      		brne .L74
 540:./tmk_core/protocol/lufa/lufa.c ****                     while (!(Endpoint_IsINReady()));
 1151               		.loc 1 540 21 is_stmt 1 view .LVU336
 1152               	.LBB268:
 1153               	.LBI268:
 442:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1154               		.loc 2 442 23 view .LVU337
 1155               	.LBB269:
 444:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1156               		.loc 2 444 5 view .LVU338
 444:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1157               		.loc 2 444 12 is_stmt 0 view .LVU339
 1158 00c8 8091 E800 		lds r24,232
 1159 00cc 877F      		andi r24,lo8(-9)
 1160 00ce 8093 E800 		sts 232,r24
 1161               	.L89:
 1162               	.LBE269:
 1163               	.LBE268:
 541:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_Write_8(keyboard_protocol);
 1164               		.loc 1 541 28 is_stmt 1 discriminator 1 view .LVU340
 1165               	.LBB270:
 1166               	.LBI270:
 405:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1167               		.loc 2 405 23 discriminator 1 view .LVU341
 1168               	.LBB271:
 407:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1169               		.loc 2 407 5 discriminator 1 view .LVU342
 407:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1170               		.loc 2 407 14 is_stmt 0 discriminator 1 view .LVU343
 1171 00d2 8091 E800 		lds r24,232
 1172               	.LBE271:
 1173               	.LBE270:
 541:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_Write_8(keyboard_protocol);
 1174               		.loc 1 541 28 discriminator 1 view .LVU344
 1175 00d6 80FF      		sbrs r24,0
 1176 00d8 00C0      		rjmp .L89
 542:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearIN();
 1177               		.loc 1 542 21 is_stmt 1 view .LVU345
 1178 00da 8091 0000 		lds r24,keyboard_protocol
 1179               	.LVL69:
 1180               	.LBB272:
 1181               	.LBI272:
 543:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 544:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 545:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Writes one byte to the currently selected endpoint's bank, for IN direction endpoints.
 546:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 547:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPrimitiveRW_AVR8
 548:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 549:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Data  Data to write into the the currently selected endpoint's FIFO buffer.
 550:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 551:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_Write_8(const uint8_t Data) ATTR_ALWAYS_INLINE;
 552:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_Write_8(const uint8_t Data)
 1182               		.loc 2 552 23 view .LVU346
 1183               	.LBB273:
 553:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 554:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEDATX = Data;
 1184               		.loc 2 554 5 view .LVU347
 1185               	.L103:
 1186               		.loc 2 554 5 is_stmt 0 view .LVU348
 1187               	.LBE273:
 1188               	.LBE272:
 1189               	.LBB274:
 1190               	.LBI274:
 552:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1191               		.loc 2 552 23 is_stmt 1 view .LVU349
 1192               	.LBB275:
 1193               		.loc 2 554 5 view .LVU350
 1194               		.loc 2 554 12 is_stmt 0 view .LVU351
 1195 00de 8093 F100 		sts 241,r24
 1196               	.LVL70:
 1197               		.loc 2 554 12 view .LVU352
 1198               	.LBE275:
 1199               	.LBE274:
 578:./tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearStatusStage();
 1200               		.loc 1 578 17 is_stmt 1 view .LVU353
 1201               	.LBB276:
 1202               	.LBI265:
 453:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1203               		.loc 2 453 23 view .LVU354
 1204               	.LBB267:
 456:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1205               		.loc 2 456 6 view .LVU355
 456:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1206               		.loc 2 456 13 is_stmt 0 view .LVU356
 1207 00e2 8091 E800 		lds r24,232
 1208 00e6 8E77      		andi r24,lo8(126)
 1209 00e8 00C0      		rjmp .L102
 1210               	.L82:
 1211               	.LBE267:
 1212               	.LBE276:
 550:./tmk_core/protocol/lufa/lufa.c ****             {
 1213               		.loc 1 550 13 is_stmt 1 view .LVU357
 550:./tmk_core/protocol/lufa/lufa.c ****             {
 1214               		.loc 1 550 16 is_stmt 0 view .LVU358
 1215 00ea 8091 0000 		lds r24,USB_ControlRequest
 1216 00ee 8132      		cpi r24,lo8(33)
 1217 00f0 01F4      		brne .L74
 552:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearSETUP();
 1218               		.loc 1 552 17 is_stmt 1 view .LVU359
 552:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearSETUP();
 1219               		.loc 1 552 20 is_stmt 0 view .LVU360
 1220 00f2 8091 0000 		lds r24,USB_ControlRequest+4
 1221 00f6 9091 0000 		lds r25,USB_ControlRequest+4+1
 1222 00fa 892B      		or r24,r25
 1223 00fc 01F4      		brne .L74
 553:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearStatusStage();
 1224               		.loc 1 553 21 is_stmt 1 view .LVU361
 1225               	.LBB277:
 1226               	.LBI277:
 442:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1227               		.loc 2 442 23 view .LVU362
 1228               	.LBB278:
 444:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1229               		.loc 2 444 5 view .LVU363
 444:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1230               		.loc 2 444 12 is_stmt 0 view .LVU364
 1231 00fe 8091 E800 		lds r24,232
 1232 0102 877F      		andi r24,lo8(-9)
 1233 0104 8093 E800 		sts 232,r24
 1234               	.LBE278:
 1235               	.LBE277:
 554:./tmk_core/protocol/lufa/lufa.c **** 
 1236               		.loc 1 554 21 is_stmt 1 view .LVU365
 1237 0108 0E94 0000 		call Endpoint_ClearStatusStage
 1238               	.LVL71:
 556:./tmk_core/protocol/lufa/lufa.c ****                     clear_keyboard();
 1239               		.loc 1 556 21 view .LVU366
 556:./tmk_core/protocol/lufa/lufa.c ****                     clear_keyboard();
 1240               		.loc 1 556 39 is_stmt 0 view .LVU367
 1241 010c 8091 0000 		lds r24,USB_ControlRequest+2
 1242 0110 8093 0000 		sts keyboard_protocol,r24
 557:./tmk_core/protocol/lufa/lufa.c ****                 }
 1243               		.loc 1 557 21 is_stmt 1 view .LVU368
 1244 0114 0C94 0000 		jmp clear_keyboard
 1245               	.LVL72:
 1246               	.L81:
 563:./tmk_core/protocol/lufa/lufa.c ****             {
 1247               		.loc 1 563 13 view .LVU369
 563:./tmk_core/protocol/lufa/lufa.c ****             {
 1248               		.loc 1 563 16 is_stmt 0 view .LVU370
 1249 0118 8091 0000 		lds r24,USB_ControlRequest
 1250 011c 8132      		cpi r24,lo8(33)
 1251 011e 01F4      		brne .L74
 565:./tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearStatusStage();
 1252               		.loc 1 565 17 is_stmt 1 view .LVU371
 1253               	.LBB279:
 1254               	.LBI279:
 442:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1255               		.loc 2 442 23 view .LVU372
 1256               	.LBB280:
 444:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1257               		.loc 2 444 5 view .LVU373
 444:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1258               		.loc 2 444 12 is_stmt 0 view .LVU374
 1259 0120 8091 E800 		lds r24,232
 1260 0124 877F      		andi r24,lo8(-9)
 1261 0126 8093 E800 		sts 232,r24
 1262               	.LBE280:
 1263               	.LBE279:
 566:./tmk_core/protocol/lufa/lufa.c **** 
 1264               		.loc 1 566 17 is_stmt 1 view .LVU375
 1265 012a 0E94 0000 		call Endpoint_ClearStatusStage
 1266               	.LVL73:
 568:./tmk_core/protocol/lufa/lufa.c ****             }
 1267               		.loc 1 568 17 view .LVU376
 568:./tmk_core/protocol/lufa/lufa.c ****             }
 1268               		.loc 1 568 71 is_stmt 0 view .LVU377
 1269 012e 8091 0000 		lds r24,USB_ControlRequest+3
 568:./tmk_core/protocol/lufa/lufa.c ****             }
 1270               		.loc 1 568 31 view .LVU378
 1271 0132 8093 0000 		sts keyboard_idle,r24
 1272 0136 0895      		ret
 1273               	.L77:
 573:./tmk_core/protocol/lufa/lufa.c ****             {
 1274               		.loc 1 573 13 is_stmt 1 view .LVU379
 573:./tmk_core/protocol/lufa/lufa.c ****             {
 1275               		.loc 1 573 16 is_stmt 0 view .LVU380
 1276 0138 8091 0000 		lds r24,USB_ControlRequest
 1277 013c 813A      		cpi r24,lo8(-95)
 1278 013e 01F0      		breq .+2
 1279 0140 00C0      		rjmp .L74
 575:./tmk_core/protocol/lufa/lufa.c ****                 while (!(Endpoint_IsINReady()));
 1280               		.loc 1 575 17 is_stmt 1 view .LVU381
 1281               	.LBB281:
 1282               	.LBI281:
 442:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1283               		.loc 2 442 23 view .LVU382
 1284               	.LBB282:
 444:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1285               		.loc 2 444 5 view .LVU383
 444:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1286               		.loc 2 444 12 is_stmt 0 view .LVU384
 1287 0142 8091 E800 		lds r24,232
 1288 0146 877F      		andi r24,lo8(-9)
 1289 0148 8093 E800 		sts 232,r24
 1290               	.L90:
 1291               	.LBE282:
 1292               	.LBE281:
 576:./tmk_core/protocol/lufa/lufa.c ****                 Endpoint_Write_8(keyboard_idle);
 1293               		.loc 1 576 24 is_stmt 1 discriminator 1 view .LVU385
 1294               	.LBB283:
 1295               	.LBI283:
 405:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1296               		.loc 2 405 23 discriminator 1 view .LVU386
 1297               	.LBB284:
 407:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1298               		.loc 2 407 5 discriminator 1 view .LVU387
 407:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1299               		.loc 2 407 14 is_stmt 0 discriminator 1 view .LVU388
 1300 014c 8091 E800 		lds r24,232
 1301               	.LBE284:
 1302               	.LBE283:
 576:./tmk_core/protocol/lufa/lufa.c ****                 Endpoint_Write_8(keyboard_idle);
 1303               		.loc 1 576 24 discriminator 1 view .LVU389
 1304 0150 80FF      		sbrs r24,0
 1305 0152 00C0      		rjmp .L90
 577:./tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearIN();
 1306               		.loc 1 577 17 is_stmt 1 view .LVU390
 1307 0154 8091 0000 		lds r24,keyboard_idle
 1308 0158 00C0      		rjmp .L103
 1309               		.cfi_endproc
 1310               	.LFE127:
 1312               		.section	.text.sendchar,"ax",@progbits
 1313               	.global	sendchar
 1315               	sendchar:
 1316               	.LVL74:
 1317               	.LFB134:
 791:./tmk_core/protocol/lufa/lufa.c **** 
 792:./tmk_core/protocol/lufa/lufa.c **** 
 793:./tmk_core/protocol/lufa/lufa.c **** /*******************************************************************************
 794:./tmk_core/protocol/lufa/lufa.c ****  * sendchar
 795:./tmk_core/protocol/lufa/lufa.c ****  ******************************************************************************/
 796:./tmk_core/protocol/lufa/lufa.c **** #ifdef CONSOLE_ENABLE
 797:./tmk_core/protocol/lufa/lufa.c **** #define SEND_TIMEOUT 5
 798:./tmk_core/protocol/lufa/lufa.c **** int8_t sendchar(uint8_t c)
 799:./tmk_core/protocol/lufa/lufa.c **** {
 800:./tmk_core/protocol/lufa/lufa.c ****     // Not wait once timeouted.
 801:./tmk_core/protocol/lufa/lufa.c ****     // Because sendchar() is called so many times, waiting each call causes big lag.
 802:./tmk_core/protocol/lufa/lufa.c ****     static bool timeouted = false;
 803:./tmk_core/protocol/lufa/lufa.c **** 
 804:./tmk_core/protocol/lufa/lufa.c ****     // prevents Console_Task() from running during sendchar() runs.
 805:./tmk_core/protocol/lufa/lufa.c ****     // or char will be lost. These two function is mutually exclusive.
 806:./tmk_core/protocol/lufa/lufa.c ****     CONSOLE_FLUSH_SET(false);
 807:./tmk_core/protocol/lufa/lufa.c **** 
 808:./tmk_core/protocol/lufa/lufa.c ****     if (USB_DeviceState != DEVICE_STATE_Configured)
 809:./tmk_core/protocol/lufa/lufa.c ****         return -1;
 810:./tmk_core/protocol/lufa/lufa.c **** 
 811:./tmk_core/protocol/lufa/lufa.c ****     uint8_t ep = Endpoint_GetCurrentEndpoint();
 812:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(CONSOLE_IN_EPNUM);
 813:./tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsEnabled() || !Endpoint_IsConfigured()) {
 814:./tmk_core/protocol/lufa/lufa.c ****         goto ERROR_EXIT;
 815:./tmk_core/protocol/lufa/lufa.c ****     }
 816:./tmk_core/protocol/lufa/lufa.c **** 
 817:./tmk_core/protocol/lufa/lufa.c ****     if (timeouted && !Endpoint_IsReadWriteAllowed()) {
 818:./tmk_core/protocol/lufa/lufa.c ****         goto ERROR_EXIT;
 819:./tmk_core/protocol/lufa/lufa.c ****     }
 820:./tmk_core/protocol/lufa/lufa.c **** 
 821:./tmk_core/protocol/lufa/lufa.c ****     timeouted = false;
 822:./tmk_core/protocol/lufa/lufa.c **** 
 823:./tmk_core/protocol/lufa/lufa.c ****     uint8_t timeout = SEND_TIMEOUT;
 824:./tmk_core/protocol/lufa/lufa.c ****     while (!Endpoint_IsReadWriteAllowed()) {
 825:./tmk_core/protocol/lufa/lufa.c ****         if (USB_DeviceState != DEVICE_STATE_Configured) {
 826:./tmk_core/protocol/lufa/lufa.c ****             goto ERROR_EXIT;
 827:./tmk_core/protocol/lufa/lufa.c ****         }
 828:./tmk_core/protocol/lufa/lufa.c ****         if (Endpoint_IsStalled()) {
 829:./tmk_core/protocol/lufa/lufa.c ****             goto ERROR_EXIT;
 830:./tmk_core/protocol/lufa/lufa.c ****         }
 831:./tmk_core/protocol/lufa/lufa.c ****         if (!(timeout--)) {
 832:./tmk_core/protocol/lufa/lufa.c ****             timeouted = true;
 833:./tmk_core/protocol/lufa/lufa.c ****             goto ERROR_EXIT;
 834:./tmk_core/protocol/lufa/lufa.c ****         }
 835:./tmk_core/protocol/lufa/lufa.c ****         _delay_ms(1);
 836:./tmk_core/protocol/lufa/lufa.c ****     }
 837:./tmk_core/protocol/lufa/lufa.c **** 
 838:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_Write_8(c);
 839:./tmk_core/protocol/lufa/lufa.c **** 
 840:./tmk_core/protocol/lufa/lufa.c ****     // send when bank is full
 841:./tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) {
 842:./tmk_core/protocol/lufa/lufa.c ****         while (!(Endpoint_IsINReady()));
 843:./tmk_core/protocol/lufa/lufa.c ****         Endpoint_ClearIN();
 844:./tmk_core/protocol/lufa/lufa.c ****     } else {
 845:./tmk_core/protocol/lufa/lufa.c ****         CONSOLE_FLUSH_SET(true);
 846:./tmk_core/protocol/lufa/lufa.c ****     }
 847:./tmk_core/protocol/lufa/lufa.c **** 
 848:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(ep);
 849:./tmk_core/protocol/lufa/lufa.c ****     return 0;
 850:./tmk_core/protocol/lufa/lufa.c **** ERROR_EXIT:
 851:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(ep);
 852:./tmk_core/protocol/lufa/lufa.c ****     return -1;
 853:./tmk_core/protocol/lufa/lufa.c **** }
 854:./tmk_core/protocol/lufa/lufa.c **** #else
 855:./tmk_core/protocol/lufa/lufa.c **** int8_t sendchar(uint8_t c)
 856:./tmk_core/protocol/lufa/lufa.c **** {
 1318               		.loc 1 856 1 view -0
 1319               		.cfi_startproc
 1320               	/* prologue: function */
 1321               	/* frame size = 0 */
 1322               	/* stack size = 0 */
 1323               	.L__stack_usage = 0
 857:./tmk_core/protocol/lufa/lufa.c ****     return 0;
 1324               		.loc 1 857 5 view .LVU392
 858:./tmk_core/protocol/lufa/lufa.c **** }
 1325               		.loc 1 858 1 is_stmt 0 view .LVU393
 1326 0000 80E0      		ldi r24,0
 1327               	.LVL75:
 1328               	/* epilogue start */
 1329               		.loc 1 858 1 view .LVU394
 1330 0002 0895      		ret
 1331               		.cfi_endproc
 1332               	.LFE134:
 1334               		.section	.text.startup.main,"ax",@progbits
 1335               		.weak	main
 1337               	main:
 1338               	.LFB137:
 859:./tmk_core/protocol/lufa/lufa.c **** #endif
 860:./tmk_core/protocol/lufa/lufa.c **** 
 861:./tmk_core/protocol/lufa/lufa.c **** /*******************************************************************************
 862:./tmk_core/protocol/lufa/lufa.c ****  * MIDI
 863:./tmk_core/protocol/lufa/lufa.c ****  ******************************************************************************/
 864:./tmk_core/protocol/lufa/lufa.c **** 
 865:./tmk_core/protocol/lufa/lufa.c **** #ifdef MIDI_ENABLE
 866:./tmk_core/protocol/lufa/lufa.c **** static void usb_send_func(MidiDevice * device, uint16_t cnt, uint8_t byte0, uint8_t byte1, uint8_t 
 867:./tmk_core/protocol/lufa/lufa.c ****   MIDI_EventPacket_t event;
 868:./tmk_core/protocol/lufa/lufa.c ****   event.Data1 = byte0;
 869:./tmk_core/protocol/lufa/lufa.c ****   event.Data2 = byte1;
 870:./tmk_core/protocol/lufa/lufa.c ****   event.Data3 = byte2;
 871:./tmk_core/protocol/lufa/lufa.c **** 
 872:./tmk_core/protocol/lufa/lufa.c ****   uint8_t cable = 0;
 873:./tmk_core/protocol/lufa/lufa.c **** 
 874:./tmk_core/protocol/lufa/lufa.c **** // Endpoint_SelectEndpoint(MIDI_STREAM_IN_EPNUM);
 875:./tmk_core/protocol/lufa/lufa.c **** 
 876:./tmk_core/protocol/lufa/lufa.c ****   //if the length is undefined we assume it is a SYSEX message
 877:./tmk_core/protocol/lufa/lufa.c ****   if (midi_packet_length(byte0) == UNDEFINED) {
 878:./tmk_core/protocol/lufa/lufa.c ****     switch(cnt) {
 879:./tmk_core/protocol/lufa/lufa.c ****       case 3:
 880:./tmk_core/protocol/lufa/lufa.c ****         if (byte2 == SYSEX_END)
 881:./tmk_core/protocol/lufa/lufa.c ****           event.Event = MIDI_EVENT(cable, SYSEX_ENDS_IN_3);
 882:./tmk_core/protocol/lufa/lufa.c ****         else
 883:./tmk_core/protocol/lufa/lufa.c ****           event.Event = MIDI_EVENT(cable, SYSEX_START_OR_CONT);
 884:./tmk_core/protocol/lufa/lufa.c ****         break;
 885:./tmk_core/protocol/lufa/lufa.c ****       case 2:
 886:./tmk_core/protocol/lufa/lufa.c ****         if (byte1 == SYSEX_END)
 887:./tmk_core/protocol/lufa/lufa.c ****           event.Event = MIDI_EVENT(cable, SYSEX_ENDS_IN_2);
 888:./tmk_core/protocol/lufa/lufa.c ****         else
 889:./tmk_core/protocol/lufa/lufa.c ****           event.Event = MIDI_EVENT(cable, SYSEX_START_OR_CONT);
 890:./tmk_core/protocol/lufa/lufa.c ****         break;
 891:./tmk_core/protocol/lufa/lufa.c ****       case 1:
 892:./tmk_core/protocol/lufa/lufa.c ****         if (byte0 == SYSEX_END)
 893:./tmk_core/protocol/lufa/lufa.c ****           event.Event = MIDI_EVENT(cable, SYSEX_ENDS_IN_1);
 894:./tmk_core/protocol/lufa/lufa.c ****         else
 895:./tmk_core/protocol/lufa/lufa.c ****           event.Event = MIDI_EVENT(cable, SYSEX_START_OR_CONT);
 896:./tmk_core/protocol/lufa/lufa.c ****         break;
 897:./tmk_core/protocol/lufa/lufa.c ****       default:
 898:./tmk_core/protocol/lufa/lufa.c ****         return; //invalid cnt
 899:./tmk_core/protocol/lufa/lufa.c ****     }
 900:./tmk_core/protocol/lufa/lufa.c ****   } else {
 901:./tmk_core/protocol/lufa/lufa.c ****     //deal with 'system common' messages
 902:./tmk_core/protocol/lufa/lufa.c ****     //TODO are there any more?
 903:./tmk_core/protocol/lufa/lufa.c ****     switch(byte0 & 0xF0){
 904:./tmk_core/protocol/lufa/lufa.c ****       case MIDI_SONGPOSITION:
 905:./tmk_core/protocol/lufa/lufa.c ****         event.Event = MIDI_EVENT(cable, SYS_COMMON_3);
 906:./tmk_core/protocol/lufa/lufa.c ****         break;
 907:./tmk_core/protocol/lufa/lufa.c ****       case MIDI_SONGSELECT:
 908:./tmk_core/protocol/lufa/lufa.c ****       case MIDI_TC_QUARTERFRAME:
 909:./tmk_core/protocol/lufa/lufa.c ****         event.Event = MIDI_EVENT(cable, SYS_COMMON_2);
 910:./tmk_core/protocol/lufa/lufa.c ****         break;
 911:./tmk_core/protocol/lufa/lufa.c ****       default:
 912:./tmk_core/protocol/lufa/lufa.c ****         event.Event = MIDI_EVENT(cable, byte0);
 913:./tmk_core/protocol/lufa/lufa.c ****         break;
 914:./tmk_core/protocol/lufa/lufa.c ****     }
 915:./tmk_core/protocol/lufa/lufa.c ****   }
 916:./tmk_core/protocol/lufa/lufa.c **** 
 917:./tmk_core/protocol/lufa/lufa.c **** // Endpoint_Write_Stream_LE(&event, sizeof(event), NULL);
 918:./tmk_core/protocol/lufa/lufa.c **** // Endpoint_ClearIN();
 919:./tmk_core/protocol/lufa/lufa.c **** 
 920:./tmk_core/protocol/lufa/lufa.c ****   MIDI_Device_SendEventPacket(&USB_MIDI_Interface, &event);
 921:./tmk_core/protocol/lufa/lufa.c ****   MIDI_Device_Flush(&USB_MIDI_Interface);
 922:./tmk_core/protocol/lufa/lufa.c ****   MIDI_Device_USBTask(&USB_MIDI_Interface);
 923:./tmk_core/protocol/lufa/lufa.c ****   USB_USBTask();
 924:./tmk_core/protocol/lufa/lufa.c **** }
 925:./tmk_core/protocol/lufa/lufa.c **** 
 926:./tmk_core/protocol/lufa/lufa.c **** static void usb_get_midi(MidiDevice * device) {
 927:./tmk_core/protocol/lufa/lufa.c ****   MIDI_EventPacket_t event;
 928:./tmk_core/protocol/lufa/lufa.c ****   while (MIDI_Device_ReceiveEventPacket(&USB_MIDI_Interface, &event)) {
 929:./tmk_core/protocol/lufa/lufa.c **** 
 930:./tmk_core/protocol/lufa/lufa.c ****     midi_packet_length_t length = midi_packet_length(event.Data1);
 931:./tmk_core/protocol/lufa/lufa.c ****     uint8_t input[3];
 932:./tmk_core/protocol/lufa/lufa.c ****     input[0] = event.Data1;
 933:./tmk_core/protocol/lufa/lufa.c ****     input[1] = event.Data2;
 934:./tmk_core/protocol/lufa/lufa.c ****     input[2] = event.Data3;
 935:./tmk_core/protocol/lufa/lufa.c ****     if (length == UNDEFINED) {
 936:./tmk_core/protocol/lufa/lufa.c ****       //sysex
 937:./tmk_core/protocol/lufa/lufa.c ****       if (event.Event == MIDI_EVENT(0, SYSEX_START_OR_CONT) || event.Event == MIDI_EVENT(0, SYSEX_E
 938:./tmk_core/protocol/lufa/lufa.c ****         length = 3;
 939:./tmk_core/protocol/lufa/lufa.c ****       } else if (event.Event == MIDI_EVENT(0, SYSEX_ENDS_IN_2)) {
 940:./tmk_core/protocol/lufa/lufa.c ****         length = 2;
 941:./tmk_core/protocol/lufa/lufa.c ****       } else if(event.Event ==  MIDI_EVENT(0, SYSEX_ENDS_IN_1)) {
 942:./tmk_core/protocol/lufa/lufa.c ****         length = 1;
 943:./tmk_core/protocol/lufa/lufa.c ****       } else {
 944:./tmk_core/protocol/lufa/lufa.c ****         //XXX what to do?
 945:./tmk_core/protocol/lufa/lufa.c ****       }
 946:./tmk_core/protocol/lufa/lufa.c ****     }
 947:./tmk_core/protocol/lufa/lufa.c **** 
 948:./tmk_core/protocol/lufa/lufa.c ****     //pass the data to the device input function
 949:./tmk_core/protocol/lufa/lufa.c ****     if (length != UNDEFINED)
 950:./tmk_core/protocol/lufa/lufa.c ****       midi_device_input(device, length, input);
 951:./tmk_core/protocol/lufa/lufa.c ****   }
 952:./tmk_core/protocol/lufa/lufa.c ****   MIDI_Device_USBTask(&USB_MIDI_Interface);
 953:./tmk_core/protocol/lufa/lufa.c ****   USB_USBTask();
 954:./tmk_core/protocol/lufa/lufa.c **** }
 955:./tmk_core/protocol/lufa/lufa.c **** 
 956:./tmk_core/protocol/lufa/lufa.c **** static void midi_usb_init(MidiDevice * device){
 957:./tmk_core/protocol/lufa/lufa.c ****   midi_device_init(device);
 958:./tmk_core/protocol/lufa/lufa.c ****   midi_device_set_send_func(device, usb_send_func);
 959:./tmk_core/protocol/lufa/lufa.c ****   midi_device_set_pre_input_process_func(device, usb_get_midi);
 960:./tmk_core/protocol/lufa/lufa.c **** 
 961:./tmk_core/protocol/lufa/lufa.c ****   // SetupHardware();
 962:./tmk_core/protocol/lufa/lufa.c ****   sei();
 963:./tmk_core/protocol/lufa/lufa.c **** }
 964:./tmk_core/protocol/lufa/lufa.c **** 
 965:./tmk_core/protocol/lufa/lufa.c **** void MIDI_Task(void)
 966:./tmk_core/protocol/lufa/lufa.c **** {
 967:./tmk_core/protocol/lufa/lufa.c **** 
 968:./tmk_core/protocol/lufa/lufa.c ****     /* Device must be connected and configured for the task to run */
 969:./tmk_core/protocol/lufa/lufa.c ****     dprint("in MIDI_TASK\n");
 970:./tmk_core/protocol/lufa/lufa.c ****     if (USB_DeviceState != DEVICE_STATE_Configured)
 971:./tmk_core/protocol/lufa/lufa.c ****       return;
 972:./tmk_core/protocol/lufa/lufa.c ****     dprint("continuing in MIDI_TASK\n");
 973:./tmk_core/protocol/lufa/lufa.c **** 
 974:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(MIDI_STREAM_IN_EPADDR);
 975:./tmk_core/protocol/lufa/lufa.c **** 
 976:./tmk_core/protocol/lufa/lufa.c ****     if (Endpoint_IsINReady())
 977:./tmk_core/protocol/lufa/lufa.c ****     {
 978:./tmk_core/protocol/lufa/lufa.c **** 
 979:./tmk_core/protocol/lufa/lufa.c ****         dprint("Endpoint is ready\n");
 980:./tmk_core/protocol/lufa/lufa.c **** 
 981:./tmk_core/protocol/lufa/lufa.c ****         uint8_t MIDICommand = 0;
 982:./tmk_core/protocol/lufa/lufa.c ****         uint8_t MIDIPitch;
 983:./tmk_core/protocol/lufa/lufa.c **** 
 984:./tmk_core/protocol/lufa/lufa.c ****         /* Get board button status - if pressed use channel 10 (percussion), otherwise use channel 
 985:./tmk_core/protocol/lufa/lufa.c ****         uint8_t Channel = MIDI_CHANNEL(1);
 986:./tmk_core/protocol/lufa/lufa.c **** 
 987:./tmk_core/protocol/lufa/lufa.c ****         MIDICommand = MIDI_COMMAND_NOTE_ON;
 988:./tmk_core/protocol/lufa/lufa.c ****         MIDIPitch   = 0x3E;
 989:./tmk_core/protocol/lufa/lufa.c **** 
 990:./tmk_core/protocol/lufa/lufa.c ****         /* Check if a MIDI command is to be sent */
 991:./tmk_core/protocol/lufa/lufa.c ****         if (MIDICommand)
 992:./tmk_core/protocol/lufa/lufa.c ****         {
 993:./tmk_core/protocol/lufa/lufa.c ****             dprint("Command exists\n");
 994:./tmk_core/protocol/lufa/lufa.c ****             MIDI_EventPacket_t MIDIEvent = (MIDI_EventPacket_t)
 995:./tmk_core/protocol/lufa/lufa.c ****                 {
 996:./tmk_core/protocol/lufa/lufa.c ****                     .Event       = MIDI_EVENT(0, MIDICommand),
 997:./tmk_core/protocol/lufa/lufa.c **** 
 998:./tmk_core/protocol/lufa/lufa.c ****                     .Data1       = MIDICommand | Channel,
 999:./tmk_core/protocol/lufa/lufa.c ****                     .Data2       = MIDIPitch,
1000:./tmk_core/protocol/lufa/lufa.c ****                     .Data3       = MIDI_STANDARD_VELOCITY,
1001:./tmk_core/protocol/lufa/lufa.c ****                 };
1002:./tmk_core/protocol/lufa/lufa.c **** 
1003:./tmk_core/protocol/lufa/lufa.c ****             /* Write the MIDI event packet to the endpoint */
1004:./tmk_core/protocol/lufa/lufa.c ****             Endpoint_Write_Stream_LE(&MIDIEvent, sizeof(MIDIEvent), NULL);
1005:./tmk_core/protocol/lufa/lufa.c **** 
1006:./tmk_core/protocol/lufa/lufa.c ****             /* Send the data in the endpoint to the host */
1007:./tmk_core/protocol/lufa/lufa.c ****             Endpoint_ClearIN();
1008:./tmk_core/protocol/lufa/lufa.c ****         }
1009:./tmk_core/protocol/lufa/lufa.c ****     }
1010:./tmk_core/protocol/lufa/lufa.c **** 
1011:./tmk_core/protocol/lufa/lufa.c **** 
1012:./tmk_core/protocol/lufa/lufa.c ****     /* Select the MIDI OUT stream */
1013:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(MIDI_STREAM_OUT_EPADDR);
1014:./tmk_core/protocol/lufa/lufa.c **** 
1015:./tmk_core/protocol/lufa/lufa.c ****     /* Check if a MIDI command has been received */
1016:./tmk_core/protocol/lufa/lufa.c ****     if (Endpoint_IsOUTReceived())
1017:./tmk_core/protocol/lufa/lufa.c ****     {
1018:./tmk_core/protocol/lufa/lufa.c ****         MIDI_EventPacket_t MIDIEvent;
1019:./tmk_core/protocol/lufa/lufa.c **** 
1020:./tmk_core/protocol/lufa/lufa.c ****         /* Read the MIDI event packet from the endpoint */
1021:./tmk_core/protocol/lufa/lufa.c ****         Endpoint_Read_Stream_LE(&MIDIEvent, sizeof(MIDIEvent), NULL);
1022:./tmk_core/protocol/lufa/lufa.c **** 
1023:./tmk_core/protocol/lufa/lufa.c ****         /* If the endpoint is now empty, clear the bank */
1024:./tmk_core/protocol/lufa/lufa.c ****         if (!(Endpoint_BytesInEndpoint()))
1025:./tmk_core/protocol/lufa/lufa.c ****         {
1026:./tmk_core/protocol/lufa/lufa.c ****             /* Clear the endpoint ready for new packet */
1027:./tmk_core/protocol/lufa/lufa.c ****             Endpoint_ClearOUT();
1028:./tmk_core/protocol/lufa/lufa.c ****         }
1029:./tmk_core/protocol/lufa/lufa.c ****     }
1030:./tmk_core/protocol/lufa/lufa.c **** }
1031:./tmk_core/protocol/lufa/lufa.c **** 
1032:./tmk_core/protocol/lufa/lufa.c **** #endif
1033:./tmk_core/protocol/lufa/lufa.c **** 
1034:./tmk_core/protocol/lufa/lufa.c **** /*******************************************************************************
1035:./tmk_core/protocol/lufa/lufa.c ****  * VIRTUAL SERIAL
1036:./tmk_core/protocol/lufa/lufa.c ****  ******************************************************************************/
1037:./tmk_core/protocol/lufa/lufa.c **** 
1038:./tmk_core/protocol/lufa/lufa.c **** #ifdef VIRTSER_ENABLE
1039:./tmk_core/protocol/lufa/lufa.c **** void virtser_init(void)
1040:./tmk_core/protocol/lufa/lufa.c **** {
1041:./tmk_core/protocol/lufa/lufa.c ****   cdc_device.State.ControlLineStates.DeviceToHost = CDC_CONTROL_LINE_IN_DSR ;
1042:./tmk_core/protocol/lufa/lufa.c ****   CDC_Device_SendControlLineStateChange(&cdc_device);
1043:./tmk_core/protocol/lufa/lufa.c **** }
1044:./tmk_core/protocol/lufa/lufa.c **** 
1045:./tmk_core/protocol/lufa/lufa.c **** void virtser_recv(uint8_t c) __attribute__ ((weak));
1046:./tmk_core/protocol/lufa/lufa.c **** void virtser_recv(uint8_t c)
1047:./tmk_core/protocol/lufa/lufa.c **** {
1048:./tmk_core/protocol/lufa/lufa.c ****   // Ignore by default
1049:./tmk_core/protocol/lufa/lufa.c **** }
1050:./tmk_core/protocol/lufa/lufa.c **** 
1051:./tmk_core/protocol/lufa/lufa.c **** void virtser_task(void)
1052:./tmk_core/protocol/lufa/lufa.c **** {
1053:./tmk_core/protocol/lufa/lufa.c ****   uint16_t count = CDC_Device_BytesReceived(&cdc_device);
1054:./tmk_core/protocol/lufa/lufa.c ****   uint8_t ch;
1055:./tmk_core/protocol/lufa/lufa.c ****   if (count)
1056:./tmk_core/protocol/lufa/lufa.c ****   {
1057:./tmk_core/protocol/lufa/lufa.c ****     ch = CDC_Device_ReceiveByte(&cdc_device);
1058:./tmk_core/protocol/lufa/lufa.c ****     virtser_recv(ch);
1059:./tmk_core/protocol/lufa/lufa.c ****   }
1060:./tmk_core/protocol/lufa/lufa.c **** }
1061:./tmk_core/protocol/lufa/lufa.c **** void virtser_send(const uint8_t byte)
1062:./tmk_core/protocol/lufa/lufa.c **** {
1063:./tmk_core/protocol/lufa/lufa.c ****   uint8_t timeout = 255;
1064:./tmk_core/protocol/lufa/lufa.c ****   uint8_t ep = Endpoint_GetCurrentEndpoint();
1065:./tmk_core/protocol/lufa/lufa.c **** 
1066:./tmk_core/protocol/lufa/lufa.c ****   if (cdc_device.State.ControlLineStates.HostToDevice & CDC_CONTROL_LINE_OUT_DTR)
1067:./tmk_core/protocol/lufa/lufa.c ****   {
1068:./tmk_core/protocol/lufa/lufa.c ****     /* IN packet */
1069:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(cdc_device.Config.DataINEndpoint.Address);
1070:./tmk_core/protocol/lufa/lufa.c **** 
1071:./tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsEnabled() || !Endpoint_IsConfigured()) {
1072:./tmk_core/protocol/lufa/lufa.c ****         Endpoint_SelectEndpoint(ep);
1073:./tmk_core/protocol/lufa/lufa.c ****         return;
1074:./tmk_core/protocol/lufa/lufa.c ****     }
1075:./tmk_core/protocol/lufa/lufa.c **** 
1076:./tmk_core/protocol/lufa/lufa.c ****     while (timeout-- && !Endpoint_IsReadWriteAllowed()) _delay_us(40);
1077:./tmk_core/protocol/lufa/lufa.c **** 
1078:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_Write_8(byte);
1079:./tmk_core/protocol/lufa/lufa.c ****     CDC_Device_Flush(&cdc_device);
1080:./tmk_core/protocol/lufa/lufa.c **** 
1081:./tmk_core/protocol/lufa/lufa.c ****     if (Endpoint_IsINReady()) {
1082:./tmk_core/protocol/lufa/lufa.c ****       Endpoint_ClearIN();
1083:./tmk_core/protocol/lufa/lufa.c ****     }
1084:./tmk_core/protocol/lufa/lufa.c **** 
1085:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(ep);
1086:./tmk_core/protocol/lufa/lufa.c ****   }
1087:./tmk_core/protocol/lufa/lufa.c **** }
1088:./tmk_core/protocol/lufa/lufa.c **** #endif
1089:./tmk_core/protocol/lufa/lufa.c **** 
1090:./tmk_core/protocol/lufa/lufa.c **** /*******************************************************************************
1091:./tmk_core/protocol/lufa/lufa.c ****  * main
1092:./tmk_core/protocol/lufa/lufa.c ****  ******************************************************************************/
1093:./tmk_core/protocol/lufa/lufa.c **** static void setup_mcu(void)
1094:./tmk_core/protocol/lufa/lufa.c **** {
1095:./tmk_core/protocol/lufa/lufa.c ****     /* Disable watchdog if enabled by bootloader/fuses */
1096:./tmk_core/protocol/lufa/lufa.c ****     MCUSR &= ~(1 << WDRF);
1097:./tmk_core/protocol/lufa/lufa.c ****     wdt_disable();
1098:./tmk_core/protocol/lufa/lufa.c **** 
1099:./tmk_core/protocol/lufa/lufa.c ****     /* Disable clock division */
1100:./tmk_core/protocol/lufa/lufa.c ****     // clock_prescale_set(clock_div_1);
1101:./tmk_core/protocol/lufa/lufa.c **** 
1102:./tmk_core/protocol/lufa/lufa.c ****     CLKPR = (1 << CLKPCE);
1103:./tmk_core/protocol/lufa/lufa.c ****     CLKPR = (0 << CLKPS3) | (0 << CLKPS2) | (0 << CLKPS1) | (0 << CLKPS0);
1104:./tmk_core/protocol/lufa/lufa.c **** }
1105:./tmk_core/protocol/lufa/lufa.c **** 
1106:./tmk_core/protocol/lufa/lufa.c **** static void setup_usb(void)
1107:./tmk_core/protocol/lufa/lufa.c **** {
1108:./tmk_core/protocol/lufa/lufa.c ****     // Leonardo needs. Without this USB device is not recognized.
1109:./tmk_core/protocol/lufa/lufa.c ****     USB_Disable();
1110:./tmk_core/protocol/lufa/lufa.c **** 
1111:./tmk_core/protocol/lufa/lufa.c ****     USB_Init();
1112:./tmk_core/protocol/lufa/lufa.c **** 
1113:./tmk_core/protocol/lufa/lufa.c ****     // for Console_Task
1114:./tmk_core/protocol/lufa/lufa.c ****     USB_Device_EnableSOFEvents();
1115:./tmk_core/protocol/lufa/lufa.c ****     print_set_sendchar(sendchar);
1116:./tmk_core/protocol/lufa/lufa.c **** }
1117:./tmk_core/protocol/lufa/lufa.c **** 
1118:./tmk_core/protocol/lufa/lufa.c **** 
1119:./tmk_core/protocol/lufa/lufa.c **** #ifdef MIDI_ENABLE
1120:./tmk_core/protocol/lufa/lufa.c **** void fallthrough_callback(MidiDevice * device,
1121:./tmk_core/protocol/lufa/lufa.c ****     uint16_t cnt, uint8_t byte0, uint8_t byte1, uint8_t byte2);
1122:./tmk_core/protocol/lufa/lufa.c **** void cc_callback(MidiDevice * device,
1123:./tmk_core/protocol/lufa/lufa.c ****     uint8_t chan, uint8_t num, uint8_t val);
1124:./tmk_core/protocol/lufa/lufa.c **** void sysex_callback(MidiDevice * device,
1125:./tmk_core/protocol/lufa/lufa.c ****     uint16_t start, uint8_t length, uint8_t * data);
1126:./tmk_core/protocol/lufa/lufa.c **** #endif
1127:./tmk_core/protocol/lufa/lufa.c **** 
1128:./tmk_core/protocol/lufa/lufa.c **** int main(void)  __attribute__ ((weak));
1129:./tmk_core/protocol/lufa/lufa.c **** int main(void)
1130:./tmk_core/protocol/lufa/lufa.c **** {
 1339               		.loc 1 1130 1 is_stmt 1 view -0
 1340               		.cfi_startproc
 1341               	/* prologue: function */
 1342               	/* frame size = 0 */
 1343               	/* stack size = 0 */
 1344               	.L__stack_usage = 0
1131:./tmk_core/protocol/lufa/lufa.c **** 
1132:./tmk_core/protocol/lufa/lufa.c **** #ifdef MIDI_ENABLE
1133:./tmk_core/protocol/lufa/lufa.c ****     midi_device_init(&midi_device);
1134:./tmk_core/protocol/lufa/lufa.c ****     midi_device_set_send_func(&midi_device, usb_send_func);
1135:./tmk_core/protocol/lufa/lufa.c ****     midi_device_set_pre_input_process_func(&midi_device, usb_get_midi);
1136:./tmk_core/protocol/lufa/lufa.c **** #endif
1137:./tmk_core/protocol/lufa/lufa.c **** 
1138:./tmk_core/protocol/lufa/lufa.c ****     setup_mcu();
 1345               		.loc 1 1138 5 view .LVU396
 1346               	.LBB294:
 1347               	.LBI294:
1093:./tmk_core/protocol/lufa/lufa.c **** {
 1348               		.loc 1 1093 13 view .LVU397
 1349               	.LBB295:
1096:./tmk_core/protocol/lufa/lufa.c ****     wdt_disable();
 1350               		.loc 1 1096 5 view .LVU398
1096:./tmk_core/protocol/lufa/lufa.c ****     wdt_disable();
 1351               		.loc 1 1096 11 is_stmt 0 view .LVU399
 1352 0000 84B7      		in r24,0x34
 1353 0002 877F      		andi r24,lo8(-9)
 1354 0004 84BF      		out 0x34,r24
1097:./tmk_core/protocol/lufa/lufa.c **** 
 1355               		.loc 1 1097 5 is_stmt 1 view .LVU400
 1356               	.LBB296:
 1357               	.LBI296:
 1358               		.file 6 "/usr/avr/include/avr/wdt.h"
   1:/usr/avr/include/avr/wdt.h **** /* Copyright (c) 2002, 2004 Marek Michalkiewicz
   2:/usr/avr/include/avr/wdt.h ****    Copyright (c) 2005, 2006, 2007 Eric B. Weddington
   3:/usr/avr/include/avr/wdt.h ****    All rights reserved.
   4:/usr/avr/include/avr/wdt.h **** 
   5:/usr/avr/include/avr/wdt.h ****    Redistribution and use in source and binary forms, with or without
   6:/usr/avr/include/avr/wdt.h ****    modification, are permitted provided that the following conditions are met:
   7:/usr/avr/include/avr/wdt.h **** 
   8:/usr/avr/include/avr/wdt.h ****    * Redistributions of source code must retain the above copyright
   9:/usr/avr/include/avr/wdt.h ****      notice, this list of conditions and the following disclaimer.
  10:/usr/avr/include/avr/wdt.h **** 
  11:/usr/avr/include/avr/wdt.h ****    * Redistributions in binary form must reproduce the above copyright
  12:/usr/avr/include/avr/wdt.h ****      notice, this list of conditions and the following disclaimer in
  13:/usr/avr/include/avr/wdt.h ****      the documentation and/or other materials provided with the
  14:/usr/avr/include/avr/wdt.h ****      distribution.
  15:/usr/avr/include/avr/wdt.h **** 
  16:/usr/avr/include/avr/wdt.h ****    * Neither the name of the copyright holders nor the names of
  17:/usr/avr/include/avr/wdt.h ****      contributors may be used to endorse or promote products derived
  18:/usr/avr/include/avr/wdt.h ****      from this software without specific prior written permission.
  19:/usr/avr/include/avr/wdt.h **** 
  20:/usr/avr/include/avr/wdt.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:/usr/avr/include/avr/wdt.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:/usr/avr/include/avr/wdt.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  23:/usr/avr/include/avr/wdt.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  24:/usr/avr/include/avr/wdt.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  25:/usr/avr/include/avr/wdt.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  26:/usr/avr/include/avr/wdt.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  27:/usr/avr/include/avr/wdt.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  28:/usr/avr/include/avr/wdt.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  29:/usr/avr/include/avr/wdt.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  30:/usr/avr/include/avr/wdt.h ****   POSSIBILITY OF SUCH DAMAGE. */
  31:/usr/avr/include/avr/wdt.h **** 
  32:/usr/avr/include/avr/wdt.h **** /* $Id: wdt.h 2522 2016-04-20 05:43:23Z joerg_wunsch $ */
  33:/usr/avr/include/avr/wdt.h **** 
  34:/usr/avr/include/avr/wdt.h **** /*
  35:/usr/avr/include/avr/wdt.h ****    avr/wdt.h - macros for AVR watchdog timer
  36:/usr/avr/include/avr/wdt.h ****  */
  37:/usr/avr/include/avr/wdt.h **** 
  38:/usr/avr/include/avr/wdt.h **** #ifndef _AVR_WDT_H_
  39:/usr/avr/include/avr/wdt.h **** #define _AVR_WDT_H_
  40:/usr/avr/include/avr/wdt.h **** 
  41:/usr/avr/include/avr/wdt.h **** #include <avr/io.h>
  42:/usr/avr/include/avr/wdt.h **** #include <stdint.h>
  43:/usr/avr/include/avr/wdt.h **** 
  44:/usr/avr/include/avr/wdt.h **** /** \file */
  45:/usr/avr/include/avr/wdt.h **** /** \defgroup avr_watchdog <avr/wdt.h>: Watchdog timer handling
  46:/usr/avr/include/avr/wdt.h ****     \code #include <avr/wdt.h> \endcode
  47:/usr/avr/include/avr/wdt.h **** 
  48:/usr/avr/include/avr/wdt.h ****     This header file declares the interface to some inline macros
  49:/usr/avr/include/avr/wdt.h ****     handling the watchdog timer present in many AVR devices.  In order
  50:/usr/avr/include/avr/wdt.h ****     to prevent the watchdog timer configuration from being
  51:/usr/avr/include/avr/wdt.h ****     accidentally altered by a crashing application, a special timed
  52:/usr/avr/include/avr/wdt.h ****     sequence is required in order to change it.  The macros within
  53:/usr/avr/include/avr/wdt.h ****     this header file handle the required sequence automatically
  54:/usr/avr/include/avr/wdt.h ****     before changing any value.  Interrupts will be disabled during
  55:/usr/avr/include/avr/wdt.h ****     the manipulation.
  56:/usr/avr/include/avr/wdt.h **** 
  57:/usr/avr/include/avr/wdt.h ****     \note Depending on the fuse configuration of the particular
  58:/usr/avr/include/avr/wdt.h ****     device, further restrictions might apply, in particular it might
  59:/usr/avr/include/avr/wdt.h ****     be disallowed to turn off the watchdog timer.
  60:/usr/avr/include/avr/wdt.h **** 
  61:/usr/avr/include/avr/wdt.h ****     Note that for newer devices (ATmega88 and newer, effectively any
  62:/usr/avr/include/avr/wdt.h ****     AVR that has the option to also generate interrupts), the watchdog
  63:/usr/avr/include/avr/wdt.h ****     timer remains active even after a system reset (except a power-on
  64:/usr/avr/include/avr/wdt.h ****     condition), using the fastest prescaler value (approximately 15
  65:/usr/avr/include/avr/wdt.h ****     ms).  It is therefore required to turn off the watchdog early
  66:/usr/avr/include/avr/wdt.h ****     during program startup, the datasheet recommends a sequence like
  67:/usr/avr/include/avr/wdt.h ****     the following:
  68:/usr/avr/include/avr/wdt.h **** 
  69:/usr/avr/include/avr/wdt.h ****     \code
  70:/usr/avr/include/avr/wdt.h ****     #include <stdint.h>
  71:/usr/avr/include/avr/wdt.h ****     #include <avr/wdt.h>
  72:/usr/avr/include/avr/wdt.h **** 
  73:/usr/avr/include/avr/wdt.h ****     uint8_t mcusr_mirror __attribute__ ((section (".noinit")));
  74:/usr/avr/include/avr/wdt.h **** 
  75:/usr/avr/include/avr/wdt.h ****     void get_mcusr(void) \
  76:/usr/avr/include/avr/wdt.h ****       __attribute__((naked)) \
  77:/usr/avr/include/avr/wdt.h ****       __attribute__((section(".init3")));
  78:/usr/avr/include/avr/wdt.h ****     void get_mcusr(void)
  79:/usr/avr/include/avr/wdt.h ****     {
  80:/usr/avr/include/avr/wdt.h ****       mcusr_mirror = MCUSR;
  81:/usr/avr/include/avr/wdt.h ****       MCUSR = 0;
  82:/usr/avr/include/avr/wdt.h ****       wdt_disable();
  83:/usr/avr/include/avr/wdt.h ****     }
  84:/usr/avr/include/avr/wdt.h ****     \endcode
  85:/usr/avr/include/avr/wdt.h **** 
  86:/usr/avr/include/avr/wdt.h ****     Saving the value of MCUSR in \c mcusr_mirror is only needed if the
  87:/usr/avr/include/avr/wdt.h ****     application later wants to examine the reset source, but in particular, 
  88:/usr/avr/include/avr/wdt.h ****     clearing the watchdog reset flag before disabling the
  89:/usr/avr/include/avr/wdt.h ****     watchdog is required, according to the datasheet.
  90:/usr/avr/include/avr/wdt.h **** */
  91:/usr/avr/include/avr/wdt.h **** 
  92:/usr/avr/include/avr/wdt.h **** /**
  93:/usr/avr/include/avr/wdt.h ****    \ingroup avr_watchdog
  94:/usr/avr/include/avr/wdt.h ****    Reset the watchdog timer.  When the watchdog timer is enabled,
  95:/usr/avr/include/avr/wdt.h ****    a call to this instruction is required before the timer expires,
  96:/usr/avr/include/avr/wdt.h ****    otherwise a watchdog-initiated device reset will occur. 
  97:/usr/avr/include/avr/wdt.h **** */
  98:/usr/avr/include/avr/wdt.h **** 
  99:/usr/avr/include/avr/wdt.h **** #define wdt_reset() __asm__ __volatile__ ("wdr")
 100:/usr/avr/include/avr/wdt.h **** 
 101:/usr/avr/include/avr/wdt.h **** #ifndef __DOXYGEN__
 102:/usr/avr/include/avr/wdt.h **** 
 103:/usr/avr/include/avr/wdt.h **** #if defined(WDP3)
 104:/usr/avr/include/avr/wdt.h **** # define _WD_PS3_MASK       _BV(WDP3)
 105:/usr/avr/include/avr/wdt.h **** #else
 106:/usr/avr/include/avr/wdt.h **** # define _WD_PS3_MASK       0x00
 107:/usr/avr/include/avr/wdt.h **** #endif
 108:/usr/avr/include/avr/wdt.h **** 
 109:/usr/avr/include/avr/wdt.h **** #if defined(WDTCSR)
 110:/usr/avr/include/avr/wdt.h **** #  define _WD_CONTROL_REG     WDTCSR
 111:/usr/avr/include/avr/wdt.h **** #elif defined(WDTCR)
 112:/usr/avr/include/avr/wdt.h **** #  define _WD_CONTROL_REG     WDTCR
 113:/usr/avr/include/avr/wdt.h **** #else
 114:/usr/avr/include/avr/wdt.h **** #  define _WD_CONTROL_REG     WDT
 115:/usr/avr/include/avr/wdt.h **** #endif
 116:/usr/avr/include/avr/wdt.h **** 
 117:/usr/avr/include/avr/wdt.h **** #if defined(WDTOE)
 118:/usr/avr/include/avr/wdt.h **** #define _WD_CHANGE_BIT      WDTOE
 119:/usr/avr/include/avr/wdt.h **** #else
 120:/usr/avr/include/avr/wdt.h **** #define _WD_CHANGE_BIT      WDCE
 121:/usr/avr/include/avr/wdt.h **** #endif
 122:/usr/avr/include/avr/wdt.h **** 
 123:/usr/avr/include/avr/wdt.h **** #endif	/* !__DOXYGEN__ */
 124:/usr/avr/include/avr/wdt.h **** 
 125:/usr/avr/include/avr/wdt.h **** 
 126:/usr/avr/include/avr/wdt.h **** /**
 127:/usr/avr/include/avr/wdt.h ****    \ingroup avr_watchdog
 128:/usr/avr/include/avr/wdt.h ****    Enable the watchdog timer, configuring it for expiry after
 129:/usr/avr/include/avr/wdt.h ****    \c timeout (which is a combination of the \c WDP0 through
 130:/usr/avr/include/avr/wdt.h ****    \c WDP2 bits to write into the \c WDTCR register; For those devices 
 131:/usr/avr/include/avr/wdt.h ****    that have a \c WDTCSR register, it uses the combination of the \c WDP0 
 132:/usr/avr/include/avr/wdt.h ****    through \c WDP3 bits).
 133:/usr/avr/include/avr/wdt.h **** 
 134:/usr/avr/include/avr/wdt.h ****    See also the symbolic constants \c WDTO_15MS et al.
 135:/usr/avr/include/avr/wdt.h **** */
 136:/usr/avr/include/avr/wdt.h **** 
 137:/usr/avr/include/avr/wdt.h **** 
 138:/usr/avr/include/avr/wdt.h **** #if defined(__AVR_XMEGA__)
 139:/usr/avr/include/avr/wdt.h **** 
 140:/usr/avr/include/avr/wdt.h **** /*
 141:/usr/avr/include/avr/wdt.h ****    wdt_enable(timeout) for xmega devices
 142:/usr/avr/include/avr/wdt.h **** ** write signature (CCP_IOREG_gc) that enables change of protected I/O
 143:/usr/avr/include/avr/wdt.h ****    registers to the CCP register
 144:/usr/avr/include/avr/wdt.h **** ** At the same time,
 145:/usr/avr/include/avr/wdt.h ****    1) set WDT change enable (WDT_CEN_bm)
 146:/usr/avr/include/avr/wdt.h ****    2) enable WDT (WDT_ENABLE_bm)
 147:/usr/avr/include/avr/wdt.h ****    3) set timeout (timeout)
 148:/usr/avr/include/avr/wdt.h **** ** Synchronization starts when ENABLE bit of WDT is set. So, wait till it
 149:/usr/avr/include/avr/wdt.h ****    finishes (SYNCBUSY of STATUS register is automatically cleared after the
 150:/usr/avr/include/avr/wdt.h ****    sync is finished).
 151:/usr/avr/include/avr/wdt.h **** */
 152:/usr/avr/include/avr/wdt.h **** #define wdt_enable(timeout) \
 153:/usr/avr/include/avr/wdt.h **** do { \
 154:/usr/avr/include/avr/wdt.h **** uint8_t temp; \
 155:/usr/avr/include/avr/wdt.h **** __asm__ __volatile__ (         \
 156:/usr/avr/include/avr/wdt.h ****     "in __tmp_reg__, %[rampd]"              "\n\t" \
 157:/usr/avr/include/avr/wdt.h ****     "out %[rampd], __zero_reg__"            "\n\t" \
 158:/usr/avr/include/avr/wdt.h ****     "out %[ccp_reg], %[ioreg_cen_mask]"     "\n\t" \
 159:/usr/avr/include/avr/wdt.h ****     "sts %[wdt_reg], %[wdt_enable_timeout]" "\n\t" \
 160:/usr/avr/include/avr/wdt.h ****     "1:lds %[tmp], %[wdt_status_reg]"       "\n\t" \
 161:/usr/avr/include/avr/wdt.h ****     "sbrc %[tmp], %[wdt_syncbusy_bit]"      "\n\t" \
 162:/usr/avr/include/avr/wdt.h ****     "rjmp 1b"                               "\n\t" \
 163:/usr/avr/include/avr/wdt.h ****     "out %[rampd], __tmp_reg__"             "\n\t" \
 164:/usr/avr/include/avr/wdt.h ****     : [tmp]                "=r" (temp) \
 165:/usr/avr/include/avr/wdt.h ****     : [rampd]              "I" (_SFR_IO_ADDR(RAMPD)),      \
 166:/usr/avr/include/avr/wdt.h ****       [ccp_reg]            "I" (_SFR_IO_ADDR(CCP)),        \
 167:/usr/avr/include/avr/wdt.h ****       [ioreg_cen_mask]     "r" ((uint8_t)CCP_IOREG_gc),     \
 168:/usr/avr/include/avr/wdt.h ****       [wdt_reg]            "n" (_SFR_MEM_ADDR(WDT_CTRL)),   \
 169:/usr/avr/include/avr/wdt.h ****       [wdt_enable_timeout] "r" ((uint8_t)(WDT_CEN_bm | WDT_ENABLE_bm | timeout)), \
 170:/usr/avr/include/avr/wdt.h ****       [wdt_status_reg]     "n" (_SFR_MEM_ADDR(WDT_STATUS)), \
 171:/usr/avr/include/avr/wdt.h ****       [wdt_syncbusy_bit]   "I" (WDT_SYNCBUSY_bm)            \
 172:/usr/avr/include/avr/wdt.h ****     : "r0" \
 173:/usr/avr/include/avr/wdt.h **** ); \
 174:/usr/avr/include/avr/wdt.h **** } while(0)
 175:/usr/avr/include/avr/wdt.h **** 
 176:/usr/avr/include/avr/wdt.h **** #define wdt_disable() \
 177:/usr/avr/include/avr/wdt.h **** __asm__ __volatile__ (  \
 178:/usr/avr/include/avr/wdt.h ****     "in __tmp_reg__, %[rampd]"          "\n\t" \
 179:/usr/avr/include/avr/wdt.h ****     "out %[rampd], __zero_reg__"        "\n\t" \
 180:/usr/avr/include/avr/wdt.h ****     "out %[ccp_reg], %[ioreg_cen_mask]" "\n\t" \
 181:/usr/avr/include/avr/wdt.h ****     "sts %[wdt_reg], %[disable_mask]"   "\n\t" \
 182:/usr/avr/include/avr/wdt.h ****     "out %[rampd], __tmp_reg__"         "\n\t" \
 183:/usr/avr/include/avr/wdt.h ****     : \
 184:/usr/avr/include/avr/wdt.h ****     : [rampd]             "I" (_SFR_IO_ADDR(RAMPD)),    \
 185:/usr/avr/include/avr/wdt.h ****       [ccp_reg]           "I" (_SFR_IO_ADDR(CCP)),      \
 186:/usr/avr/include/avr/wdt.h ****       [ioreg_cen_mask]    "r" ((uint8_t)CCP_IOREG_gc),   \
 187:/usr/avr/include/avr/wdt.h ****       [wdt_reg]           "n" (_SFR_MEM_ADDR(WDT_CTRL)), \
 188:/usr/avr/include/avr/wdt.h ****       [disable_mask]      "r" ((uint8_t)((~WDT_ENABLE_bm) | WDT_CEN_bm)) \
 189:/usr/avr/include/avr/wdt.h ****     : "r0" \
 190:/usr/avr/include/avr/wdt.h **** );
 191:/usr/avr/include/avr/wdt.h **** 
 192:/usr/avr/include/avr/wdt.h **** #elif defined(__AVR_TINY__)
 193:/usr/avr/include/avr/wdt.h **** 
 194:/usr/avr/include/avr/wdt.h **** #define wdt_enable(value) \
 195:/usr/avr/include/avr/wdt.h **** __asm__ __volatile__ ( \
 196:/usr/avr/include/avr/wdt.h ****     "in __tmp_reg__,__SREG__" "\n\t"  \
 197:/usr/avr/include/avr/wdt.h ****     "cli" "\n\t"  \
 198:/usr/avr/include/avr/wdt.h ****     "wdr" "\n\t"  \
 199:/usr/avr/include/avr/wdt.h ****     "out %[CCPADDRESS],%[SIGNATURE]" "\n\t"  \
 200:/usr/avr/include/avr/wdt.h ****     "out %[WDTREG],%[WDVALUE]" "\n\t"  \
 201:/usr/avr/include/avr/wdt.h ****     "out __SREG__,__tmp_reg__" "\n\t"  \
 202:/usr/avr/include/avr/wdt.h ****     : /* no outputs */  \
 203:/usr/avr/include/avr/wdt.h ****     : [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)),  \
 204:/usr/avr/include/avr/wdt.h ****       [SIGNATURE] "r" ((uint8_t)0xD8), \
 205:/usr/avr/include/avr/wdt.h ****       [WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)), \
 206:/usr/avr/include/avr/wdt.h ****       [WDVALUE] "r" ((uint8_t)((value & 0x08 ? _WD_PS3_MASK : 0x00) \
 207:/usr/avr/include/avr/wdt.h ****       | _BV(WDE) | (value & 0x07) )) \
 208:/usr/avr/include/avr/wdt.h ****     : "r16" \
 209:/usr/avr/include/avr/wdt.h **** )
 210:/usr/avr/include/avr/wdt.h **** 
 211:/usr/avr/include/avr/wdt.h **** #define wdt_disable() \
 212:/usr/avr/include/avr/wdt.h **** do { \
 213:/usr/avr/include/avr/wdt.h **** uint8_t temp_wd; \
 214:/usr/avr/include/avr/wdt.h **** __asm__ __volatile__ ( \
 215:/usr/avr/include/avr/wdt.h ****     "in __tmp_reg__,__SREG__" "\n\t"  \
 216:/usr/avr/include/avr/wdt.h ****     "cli" "\n\t"  \
 217:/usr/avr/include/avr/wdt.h ****     "wdr" "\n\t"  \
 218:/usr/avr/include/avr/wdt.h ****     "out %[CCPADDRESS],%[SIGNATURE]" "\n\t"  \
 219:/usr/avr/include/avr/wdt.h ****     "in  %[TEMP_WD],%[WDTREG]" "\n\t" \
 220:/usr/avr/include/avr/wdt.h ****     "cbr %[TEMP_WD],%[WDVALUE]" "\n\t" \
 221:/usr/avr/include/avr/wdt.h ****     "out %[WDTREG],%[TEMP_WD]" "\n\t" \
 222:/usr/avr/include/avr/wdt.h ****     "out __SREG__,__tmp_reg__" "\n\t" \
 223:/usr/avr/include/avr/wdt.h ****     : /*no output */ \
 224:/usr/avr/include/avr/wdt.h ****     : [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)), \
 225:/usr/avr/include/avr/wdt.h ****       [SIGNATURE] "r" ((uint8_t)0xD8), \
 226:/usr/avr/include/avr/wdt.h ****       [WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)), \
 227:/usr/avr/include/avr/wdt.h ****       [TEMP_WD] "d" (temp_wd), \
 228:/usr/avr/include/avr/wdt.h ****       [WDVALUE] "n" (1 << WDE) \
 229:/usr/avr/include/avr/wdt.h ****     : "r16" \
 230:/usr/avr/include/avr/wdt.h **** ); \
 231:/usr/avr/include/avr/wdt.h **** }while(0)
 232:/usr/avr/include/avr/wdt.h **** 
 233:/usr/avr/include/avr/wdt.h **** #elif defined(CCP)
 234:/usr/avr/include/avr/wdt.h **** 
 235:/usr/avr/include/avr/wdt.h **** static __inline__
 236:/usr/avr/include/avr/wdt.h **** __attribute__ ((__always_inline__))
 237:/usr/avr/include/avr/wdt.h **** void wdt_enable (const uint8_t value)
 238:/usr/avr/include/avr/wdt.h **** {
 239:/usr/avr/include/avr/wdt.h **** 	if (!_SFR_IO_REG_P (CCP) && !_SFR_IO_REG_P (_WD_CONTROL_REG))
 240:/usr/avr/include/avr/wdt.h **** 	{
 241:/usr/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 242:/usr/avr/include/avr/wdt.h **** 			"in __tmp_reg__,__SREG__" "\n\t"
 243:/usr/avr/include/avr/wdt.h **** 			"cli" "\n\t"
 244:/usr/avr/include/avr/wdt.h **** 			"wdr" "\n\t"
 245:/usr/avr/include/avr/wdt.h **** 			"sts %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 246:/usr/avr/include/avr/wdt.h **** 			"sts %[WDTREG],%[WDVALUE]" "\n\t"
 247:/usr/avr/include/avr/wdt.h **** 			"out __SREG__,__tmp_reg__" "\n\t"
 248:/usr/avr/include/avr/wdt.h **** 			: /* no outputs */
 249:/usr/avr/include/avr/wdt.h **** 			: [CCPADDRESS] "n" (_SFR_MEM_ADDR(CCP)),
 250:/usr/avr/include/avr/wdt.h **** 			[SIGNATURE] "r" ((uint8_t)0xD8),
 251:/usr/avr/include/avr/wdt.h **** 			[WDTREG] "n" (_SFR_MEM_ADDR(_WD_CONTROL_REG)),
 252:/usr/avr/include/avr/wdt.h **** 			[WDVALUE] "r" ((uint8_t)((value & 0x08 ? _WD_PS3_MASK : 0x00)
 253:/usr/avr/include/avr/wdt.h **** 				| _BV(WDE) | (value & 0x07) ))
 254:/usr/avr/include/avr/wdt.h **** 			: "r0"
 255:/usr/avr/include/avr/wdt.h **** 			);
 256:/usr/avr/include/avr/wdt.h **** 	}
 257:/usr/avr/include/avr/wdt.h **** 	else if (!_SFR_IO_REG_P (CCP) && _SFR_IO_REG_P (_WD_CONTROL_REG))
 258:/usr/avr/include/avr/wdt.h **** 	{
 259:/usr/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 260:/usr/avr/include/avr/wdt.h **** 			"in __tmp_reg__,__SREG__" "\n\t"
 261:/usr/avr/include/avr/wdt.h **** 			"cli" "\n\t"
 262:/usr/avr/include/avr/wdt.h **** 			"wdr" "\n\t"
 263:/usr/avr/include/avr/wdt.h **** 			"sts %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 264:/usr/avr/include/avr/wdt.h **** 			"out %[WDTREG],%[WDVALUE]" "\n\t"
 265:/usr/avr/include/avr/wdt.h **** 			"out __SREG__,__tmp_reg__" "\n\t"
 266:/usr/avr/include/avr/wdt.h **** 			: /* no outputs */
 267:/usr/avr/include/avr/wdt.h **** 			: [CCPADDRESS] "n" (_SFR_MEM_ADDR(CCP)),
 268:/usr/avr/include/avr/wdt.h **** 			[SIGNATURE] "r" ((uint8_t)0xD8),
 269:/usr/avr/include/avr/wdt.h **** 			[WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 270:/usr/avr/include/avr/wdt.h **** 			[WDVALUE] "r" ((uint8_t)((value & 0x08 ? _WD_PS3_MASK : 0x00)
 271:/usr/avr/include/avr/wdt.h **** 				| _BV(WDE) | (value & 0x07) ))
 272:/usr/avr/include/avr/wdt.h **** 			: "r0"
 273:/usr/avr/include/avr/wdt.h **** 			);
 274:/usr/avr/include/avr/wdt.h **** 	}
 275:/usr/avr/include/avr/wdt.h **** 	else if (_SFR_IO_REG_P (CCP) && !_SFR_IO_REG_P (_WD_CONTROL_REG))
 276:/usr/avr/include/avr/wdt.h **** 	{
 277:/usr/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 278:/usr/avr/include/avr/wdt.h **** 			"in __tmp_reg__,__SREG__" "\n\t"
 279:/usr/avr/include/avr/wdt.h **** 			"cli" "\n\t"
 280:/usr/avr/include/avr/wdt.h **** 			"wdr" "\n\t"
 281:/usr/avr/include/avr/wdt.h **** 			"out %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 282:/usr/avr/include/avr/wdt.h **** 			"sts %[WDTREG],%[WDVALUE]" "\n\t"
 283:/usr/avr/include/avr/wdt.h **** 			"out __SREG__,__tmp_reg__" "\n\t"
 284:/usr/avr/include/avr/wdt.h **** 			: /* no outputs */
 285:/usr/avr/include/avr/wdt.h **** 			: [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)),
 286:/usr/avr/include/avr/wdt.h **** 			[SIGNATURE] "r" ((uint8_t)0xD8),
 287:/usr/avr/include/avr/wdt.h **** 			[WDTREG] "n" (_SFR_MEM_ADDR(_WD_CONTROL_REG)),
 288:/usr/avr/include/avr/wdt.h **** 			[WDVALUE] "r" ((uint8_t)((value & 0x08 ? _WD_PS3_MASK : 0x00)
 289:/usr/avr/include/avr/wdt.h **** 				| _BV(WDE) | (value & 0x07) ))
 290:/usr/avr/include/avr/wdt.h **** 			: "r0"
 291:/usr/avr/include/avr/wdt.h **** 			);
 292:/usr/avr/include/avr/wdt.h **** 	}
 293:/usr/avr/include/avr/wdt.h **** 	else
 294:/usr/avr/include/avr/wdt.h ****  	{
 295:/usr/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 296:/usr/avr/include/avr/wdt.h **** 			"in __tmp_reg__,__SREG__" "\n\t"
 297:/usr/avr/include/avr/wdt.h **** 			"cli" "\n\t"
 298:/usr/avr/include/avr/wdt.h **** 			"wdr" "\n\t"
 299:/usr/avr/include/avr/wdt.h **** 			"out %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 300:/usr/avr/include/avr/wdt.h **** 			"out %[WDTREG],%[WDVALUE]" "\n\t"
 301:/usr/avr/include/avr/wdt.h **** 			"out __SREG__,__tmp_reg__" "\n\t"
 302:/usr/avr/include/avr/wdt.h **** 			: /* no outputs */
 303:/usr/avr/include/avr/wdt.h **** 			: [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)),
 304:/usr/avr/include/avr/wdt.h **** 			[SIGNATURE] "r" ((uint8_t)0xD8),
 305:/usr/avr/include/avr/wdt.h **** 			[WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 306:/usr/avr/include/avr/wdt.h **** 			[WDVALUE] "r" ((uint8_t)((value & 0x08 ? _WD_PS3_MASK : 0x00)
 307:/usr/avr/include/avr/wdt.h **** 				| _BV(WDE) | (value & 0x07) ))
 308:/usr/avr/include/avr/wdt.h **** 			: "r0"
 309:/usr/avr/include/avr/wdt.h **** 			);
 310:/usr/avr/include/avr/wdt.h **** 	}
 311:/usr/avr/include/avr/wdt.h **** }
 312:/usr/avr/include/avr/wdt.h **** 
 313:/usr/avr/include/avr/wdt.h **** static __inline__
 314:/usr/avr/include/avr/wdt.h **** __attribute__ ((__always_inline__))
 315:/usr/avr/include/avr/wdt.h **** void wdt_disable (void)
 316:/usr/avr/include/avr/wdt.h **** {
 317:/usr/avr/include/avr/wdt.h **** 	if (!_SFR_IO_REG_P (CCP) && !_SFR_IO_REG_P(_WD_CONTROL_REG))
 318:/usr/avr/include/avr/wdt.h **** 	{
 319:/usr/avr/include/avr/wdt.h ****         uint8_t temp_wd;
 320:/usr/avr/include/avr/wdt.h ****         __asm__ __volatile__ (
 321:/usr/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 322:/usr/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 323:/usr/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 324:/usr/avr/include/avr/wdt.h **** 				"sts %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 325:/usr/avr/include/avr/wdt.h **** 				"lds %[TEMP_WD],%[WDTREG]" "\n\t"
 326:/usr/avr/include/avr/wdt.h **** 				"cbr %[TEMP_WD],%[WDVALUE]" "\n\t"
 327:/usr/avr/include/avr/wdt.h **** 				"sts %[WDTREG],%[TEMP_WD]" "\n\t"
 328:/usr/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 329:/usr/avr/include/avr/wdt.h **** 				: /*no output */
 330:/usr/avr/include/avr/wdt.h **** 				: [CCPADDRESS] "n" (_SFR_MEM_ADDR(CCP)),
 331:/usr/avr/include/avr/wdt.h **** 				[SIGNATURE] "r" ((uint8_t)0xD8),
 332:/usr/avr/include/avr/wdt.h **** 				[WDTREG] "n" (_SFR_MEM_ADDR(_WD_CONTROL_REG)),
 333:/usr/avr/include/avr/wdt.h **** 				[TEMP_WD] "d" (temp_wd),
 334:/usr/avr/include/avr/wdt.h **** 				[WDVALUE] "n" (1 << WDE)
 335:/usr/avr/include/avr/wdt.h **** 				: "r0"
 336:/usr/avr/include/avr/wdt.h **** 				);
 337:/usr/avr/include/avr/wdt.h **** 	}
 338:/usr/avr/include/avr/wdt.h **** 	else if (!_SFR_IO_REG_P (CCP) && _SFR_IO_REG_P(_WD_CONTROL_REG))
 339:/usr/avr/include/avr/wdt.h **** 	{
 340:/usr/avr/include/avr/wdt.h ****         uint8_t temp_wd;
 341:/usr/avr/include/avr/wdt.h ****         __asm__ __volatile__ (
 342:/usr/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 343:/usr/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 344:/usr/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 345:/usr/avr/include/avr/wdt.h **** 				"sts %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 346:/usr/avr/include/avr/wdt.h **** 				"in %[TEMP_WD],%[WDTREG]" "\n\t"
 347:/usr/avr/include/avr/wdt.h **** 				"cbr %[TEMP_WD],%[WDVALUE]" "\n\t"
 348:/usr/avr/include/avr/wdt.h **** 				"out %[WDTREG],%[TEMP_WD]" "\n\t"
 349:/usr/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 350:/usr/avr/include/avr/wdt.h **** 				: /*no output */
 351:/usr/avr/include/avr/wdt.h **** 				: [CCPADDRESS] "n" (_SFR_MEM_ADDR(CCP)),
 352:/usr/avr/include/avr/wdt.h **** 				[SIGNATURE] "r" ((uint8_t)0xD8),
 353:/usr/avr/include/avr/wdt.h **** 				[WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 354:/usr/avr/include/avr/wdt.h **** 				[TEMP_WD] "d" (temp_wd),
 355:/usr/avr/include/avr/wdt.h **** 				[WDVALUE] "n" (1 << WDE)
 356:/usr/avr/include/avr/wdt.h **** 				: "r0"
 357:/usr/avr/include/avr/wdt.h **** 				);
 358:/usr/avr/include/avr/wdt.h **** 	}
 359:/usr/avr/include/avr/wdt.h **** 	else if (_SFR_IO_REG_P (CCP) && !_SFR_IO_REG_P(_WD_CONTROL_REG))
 360:/usr/avr/include/avr/wdt.h **** 	{
 361:/usr/avr/include/avr/wdt.h ****         uint8_t temp_wd;
 362:/usr/avr/include/avr/wdt.h ****         __asm__ __volatile__ (
 363:/usr/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 364:/usr/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 365:/usr/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 366:/usr/avr/include/avr/wdt.h **** 				"out %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 367:/usr/avr/include/avr/wdt.h **** 				"lds %[TEMP_WD],%[WDTREG]" "\n\t"
 368:/usr/avr/include/avr/wdt.h **** 				"cbr %[TEMP_WD],%[WDVALUE]" "\n\t"
 369:/usr/avr/include/avr/wdt.h **** 				"sts %[WDTREG],%[TEMP_WD]" "\n\t"
 370:/usr/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 371:/usr/avr/include/avr/wdt.h **** 				: /*no output */
 372:/usr/avr/include/avr/wdt.h **** 				: [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)),
 373:/usr/avr/include/avr/wdt.h **** 				[SIGNATURE] "r" ((uint8_t)0xD8),
 374:/usr/avr/include/avr/wdt.h **** 				[WDTREG] "n" (_SFR_MEM_ADDR(_WD_CONTROL_REG)),
 375:/usr/avr/include/avr/wdt.h **** 				[TEMP_WD] "d" (temp_wd),
 376:/usr/avr/include/avr/wdt.h **** 				[WDVALUE] "n" (1 << WDE)
 377:/usr/avr/include/avr/wdt.h **** 				: "r0"
 378:/usr/avr/include/avr/wdt.h **** 				);
 379:/usr/avr/include/avr/wdt.h **** 	}
 380:/usr/avr/include/avr/wdt.h **** 	else
 381:/usr/avr/include/avr/wdt.h **** 	{
 382:/usr/avr/include/avr/wdt.h ****         uint8_t temp_wd;
 383:/usr/avr/include/avr/wdt.h ****         __asm__ __volatile__ (
 384:/usr/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 385:/usr/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 386:/usr/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 387:/usr/avr/include/avr/wdt.h **** 				"out %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 388:/usr/avr/include/avr/wdt.h **** 				"in %[TEMP_WD],%[WDTREG]" "\n\t"
 389:/usr/avr/include/avr/wdt.h **** 				"cbr %[TEMP_WD],%[WDVALUE]" "\n\t"
 390:/usr/avr/include/avr/wdt.h **** 				"out %[WDTREG],%[TEMP_WD]" "\n\t"
 391:/usr/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 392:/usr/avr/include/avr/wdt.h **** 				: /*no output */
 393:/usr/avr/include/avr/wdt.h **** 				: [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)),
 394:/usr/avr/include/avr/wdt.h **** 				[SIGNATURE] "r" ((uint8_t)0xD8),
 395:/usr/avr/include/avr/wdt.h **** 				[WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 396:/usr/avr/include/avr/wdt.h **** 				[TEMP_WD] "d" (temp_wd),
 397:/usr/avr/include/avr/wdt.h **** 				[WDVALUE] "n" (1 << WDE)
 398:/usr/avr/include/avr/wdt.h **** 				: "r0"
 399:/usr/avr/include/avr/wdt.h **** 				);
 400:/usr/avr/include/avr/wdt.h **** 	}
 401:/usr/avr/include/avr/wdt.h **** }
 402:/usr/avr/include/avr/wdt.h **** 
 403:/usr/avr/include/avr/wdt.h **** #else
 404:/usr/avr/include/avr/wdt.h **** 
 405:/usr/avr/include/avr/wdt.h **** static __inline__
 406:/usr/avr/include/avr/wdt.h **** __attribute__ ((__always_inline__))
 407:/usr/avr/include/avr/wdt.h **** void wdt_enable (const uint8_t value)
 408:/usr/avr/include/avr/wdt.h **** {
 409:/usr/avr/include/avr/wdt.h **** 	if (_SFR_IO_REG_P (_WD_CONTROL_REG))
 410:/usr/avr/include/avr/wdt.h **** 	{
 411:/usr/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 412:/usr/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 413:/usr/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 414:/usr/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 415:/usr/avr/include/avr/wdt.h **** 				"out %0, %1" "\n\t"
 416:/usr/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 417:/usr/avr/include/avr/wdt.h **** 				"out %0, %2" "\n \t"
 418:/usr/avr/include/avr/wdt.h **** 				: /* no outputs */
 419:/usr/avr/include/avr/wdt.h **** 				: "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 420:/usr/avr/include/avr/wdt.h **** 				"r" ((uint8_t)(_BV(_WD_CHANGE_BIT) | _BV(WDE))),
 421:/usr/avr/include/avr/wdt.h **** 				"r" ((uint8_t) ((value & 0x08 ? _WD_PS3_MASK : 0x00) |
 422:/usr/avr/include/avr/wdt.h **** 						_BV(WDE) | (value & 0x07)) )
 423:/usr/avr/include/avr/wdt.h **** 				: "r0"
 424:/usr/avr/include/avr/wdt.h **** 		);
 425:/usr/avr/include/avr/wdt.h **** 	}
 426:/usr/avr/include/avr/wdt.h **** 	else
 427:/usr/avr/include/avr/wdt.h **** 	{
 428:/usr/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 429:/usr/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 430:/usr/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 431:/usr/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 432:/usr/avr/include/avr/wdt.h **** 				"sts %0, %1" "\n\t"
 433:/usr/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 434:/usr/avr/include/avr/wdt.h **** 				"sts %0, %2" "\n \t"
 435:/usr/avr/include/avr/wdt.h **** 				: /* no outputs */
 436:/usr/avr/include/avr/wdt.h **** 				: "n" (_SFR_MEM_ADDR(_WD_CONTROL_REG)),
 437:/usr/avr/include/avr/wdt.h **** 				"r" ((uint8_t)(_BV(_WD_CHANGE_BIT) | _BV(WDE))),
 438:/usr/avr/include/avr/wdt.h **** 				"r" ((uint8_t) ((value & 0x08 ? _WD_PS3_MASK : 0x00) |
 439:/usr/avr/include/avr/wdt.h **** 						_BV(WDE) | (value & 0x07)) )
 440:/usr/avr/include/avr/wdt.h **** 				: "r0"
 441:/usr/avr/include/avr/wdt.h **** 		);
 442:/usr/avr/include/avr/wdt.h **** 	}
 443:/usr/avr/include/avr/wdt.h **** }
 444:/usr/avr/include/avr/wdt.h **** 
 445:/usr/avr/include/avr/wdt.h **** static __inline__
 446:/usr/avr/include/avr/wdt.h **** __attribute__ ((__always_inline__))
 447:/usr/avr/include/avr/wdt.h **** void wdt_disable (void)
 1359               		.loc 6 447 6 view .LVU401
 448:/usr/avr/include/avr/wdt.h **** {
 449:/usr/avr/include/avr/wdt.h **** 	if (_SFR_IO_REG_P (_WD_CONTROL_REG))
 1360               		.loc 6 449 2 view .LVU402
 1361               	.LBB297:
 450:/usr/avr/include/avr/wdt.h **** 	{
 451:/usr/avr/include/avr/wdt.h ****         uint8_t register temp_reg;
 452:/usr/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 453:/usr/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__"    "\n\t"
 454:/usr/avr/include/avr/wdt.h **** 				"cli"                        "\n\t"
 455:/usr/avr/include/avr/wdt.h **** 				"wdr"                        "\n\t"
 456:/usr/avr/include/avr/wdt.h **** 				"in  %[TEMPREG],%[WDTREG]"   "\n\t"
 457:/usr/avr/include/avr/wdt.h **** 				"ori %[TEMPREG],%[WDCE_WDE]" "\n\t"
 458:/usr/avr/include/avr/wdt.h **** 				"out %[WDTREG],%[TEMPREG]"   "\n\t"
 459:/usr/avr/include/avr/wdt.h **** 				"out %[WDTREG],__zero_reg__" "\n\t"
 460:/usr/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__"   "\n\t"
 461:/usr/avr/include/avr/wdt.h **** 				: [TEMPREG] "=d" (temp_reg)
 462:/usr/avr/include/avr/wdt.h **** 				: [WDTREG]  "I"  (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 463:/usr/avr/include/avr/wdt.h **** 				[WDCE_WDE]  "n"  ((uint8_t)(_BV(_WD_CHANGE_BIT) | _BV(WDE)))
 464:/usr/avr/include/avr/wdt.h **** 				: "r0"
 465:/usr/avr/include/avr/wdt.h **** 		);
 466:/usr/avr/include/avr/wdt.h **** 	}
 467:/usr/avr/include/avr/wdt.h **** 	else
 468:/usr/avr/include/avr/wdt.h **** 	{
 469:/usr/avr/include/avr/wdt.h ****         uint8_t register temp_reg;
 1362               		.loc 6 469 9 view .LVU403
 470:/usr/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 1363               		.loc 6 470 3 view .LVU404
 1364               	/* #APP */
 1365               	 ;  470 "/usr/avr/include/avr/wdt.h" 1
 1366 0006 0FB6      		in __tmp_reg__,__SREG__
 1367 0008 F894      		cli
 1368 000a A895      		wdr
 1369 000c 8091 6000 		lds r24,96
 1370 0010 8861      		ori r24,24
 1371 0012 8093 6000 		sts 96,r24
 1372 0016 1092 6000 		sts 96,__zero_reg__
 1373 001a 0FBE      		out __SREG__,__tmp_reg__
 1374               		
 1375               	 ;  0 "" 2
 1376               	/* #NOAPP */
 1377               	.LBE297:
 1378               	.LBE296:
1102:./tmk_core/protocol/lufa/lufa.c ****     CLKPR = (0 << CLKPS3) | (0 << CLKPS2) | (0 << CLKPS1) | (0 << CLKPS0);
 1379               		.loc 1 1102 5 view .LVU405
1102:./tmk_core/protocol/lufa/lufa.c ****     CLKPR = (0 << CLKPS3) | (0 << CLKPS2) | (0 << CLKPS1) | (0 << CLKPS0);
 1380               		.loc 1 1102 11 is_stmt 0 view .LVU406
 1381 001c 80E8      		ldi r24,lo8(-128)
 1382 001e 8093 6100 		sts 97,r24
1103:./tmk_core/protocol/lufa/lufa.c **** }
 1383               		.loc 1 1103 5 is_stmt 1 view .LVU407
1103:./tmk_core/protocol/lufa/lufa.c **** }
 1384               		.loc 1 1103 11 is_stmt 0 view .LVU408
 1385 0022 1092 6100 		sts 97,__zero_reg__
 1386               	.LBE295:
 1387               	.LBE294:
1139:./tmk_core/protocol/lufa/lufa.c ****     keyboard_setup();
 1388               		.loc 1 1139 5 is_stmt 1 view .LVU409
 1389 0026 0E94 0000 		call keyboard_setup
 1390               	.LVL76:
1140:./tmk_core/protocol/lufa/lufa.c ****     setup_usb();
 1391               		.loc 1 1140 5 view .LVU410
 1392               	.LBB298:
 1393               	.LBI298:
1106:./tmk_core/protocol/lufa/lufa.c **** {
 1394               		.loc 1 1106 13 view .LVU411
 1395               	.LBB299:
1109:./tmk_core/protocol/lufa/lufa.c **** 
 1396               		.loc 1 1109 5 view .LVU412
 1397 002a 0E94 0000 		call USB_Disable
 1398               	.LVL77:
1111:./tmk_core/protocol/lufa/lufa.c **** 
 1399               		.loc 1 1111 5 view .LVU413
 1400 002e 0E94 0000 		call USB_Init
 1401               	.LVL78:
1114:./tmk_core/protocol/lufa/lufa.c ****     print_set_sendchar(sendchar);
 1402               		.loc 1 1114 5 view .LVU414
 1403               	.LBB300:
 1404               	.LBI300:
 176:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				{
 1405               		.loc 4 176 24 view .LVU415
 1406               		.loc 4 178 6 view .LVU416
 1407               	.LBB301:
 1408               	.LBI301:
  88:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
 1409               		.loc 5 88 23 view .LVU417
 1410               	.LBB302:
  90:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				{
 1411               		.loc 5 90 5 view .LVU418
 113:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 1412               		.loc 5 113 7 view .LVU419
 1413 0032 8091 E200 		lds r24,226
 113:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 1414               		.loc 5 113 14 is_stmt 0 view .LVU420
 1415 0036 8460      		ori r24,lo8(4)
 1416 0038 8093 E200 		sts 226,r24
 1417               		.loc 5 114 7 is_stmt 1 view .LVU421
 1418               	.LVL79:
 1419               		.loc 5 114 7 is_stmt 0 view .LVU422
 1420               	.LBE302:
 1421               	.LBE301:
 1422               	.LBE300:
1115:./tmk_core/protocol/lufa/lufa.c **** }
 1423               		.loc 1 1115 33 is_stmt 1 view .LVU423
 1424               	.LBE299:
 1425               	.LBE298:
1141:./tmk_core/protocol/lufa/lufa.c ****     sei();
 1426               		.loc 1 1141 5 view .LVU424
 1427               	/* #APP */
 1428               	 ;  1141 "./tmk_core/protocol/lufa/lufa.c" 1
 1429 003c 7894      		sei
 1430               	 ;  0 "" 2
1142:./tmk_core/protocol/lufa/lufa.c **** 
1143:./tmk_core/protocol/lufa/lufa.c **** #ifdef MIDI_ENABLE
1144:./tmk_core/protocol/lufa/lufa.c ****     midi_register_fallthrough_callback(&midi_device, fallthrough_callback);
1145:./tmk_core/protocol/lufa/lufa.c ****     midi_register_cc_callback(&midi_device, cc_callback);
1146:./tmk_core/protocol/lufa/lufa.c ****     midi_register_sysex_callback(&midi_device, sysex_callback);
1147:./tmk_core/protocol/lufa/lufa.c **** 
1148:./tmk_core/protocol/lufa/lufa.c ****     // init_notes();
1149:./tmk_core/protocol/lufa/lufa.c ****     // midi_send_cc(&midi_device, 0, 1, 2);
1150:./tmk_core/protocol/lufa/lufa.c ****     // midi_send_cc(&midi_device, 15, 1, 0);
1151:./tmk_core/protocol/lufa/lufa.c ****     // midi_send_noteon(&midi_device, 0, 64, 127);
1152:./tmk_core/protocol/lufa/lufa.c ****     // midi_send_noteoff(&midi_device, 0, 64, 127);
1153:./tmk_core/protocol/lufa/lufa.c **** #endif
1154:./tmk_core/protocol/lufa/lufa.c **** 
1155:./tmk_core/protocol/lufa/lufa.c **** #ifdef BLUETOOTH_ENABLE
1156:./tmk_core/protocol/lufa/lufa.c ****     serial_init();
1157:./tmk_core/protocol/lufa/lufa.c **** #endif
1158:./tmk_core/protocol/lufa/lufa.c **** 
1159:./tmk_core/protocol/lufa/lufa.c ****     /* wait for USB startup & debug output */
1160:./tmk_core/protocol/lufa/lufa.c **** 
1161:./tmk_core/protocol/lufa/lufa.c **** #ifdef WAIT_FOR_USB
1162:./tmk_core/protocol/lufa/lufa.c ****     while (USB_DeviceState != DEVICE_STATE_Configured) {
1163:./tmk_core/protocol/lufa/lufa.c ****     #if defined(INTERRUPT_CONTROL_ENDPOINT)
1164:./tmk_core/protocol/lufa/lufa.c ****             ;
1165:./tmk_core/protocol/lufa/lufa.c ****     #else
1166:./tmk_core/protocol/lufa/lufa.c ****             USB_USBTask();
1167:./tmk_core/protocol/lufa/lufa.c ****     #endif
1168:./tmk_core/protocol/lufa/lufa.c ****     }
1169:./tmk_core/protocol/lufa/lufa.c ****     print("USB configured.\n");
1170:./tmk_core/protocol/lufa/lufa.c **** #else
1171:./tmk_core/protocol/lufa/lufa.c ****     USB_USBTask();
 1431               		.loc 1 1171 5 view .LVU425
 1432               	/* #NOAPP */
 1433 003e 0E94 0000 		call USB_USBTask
 1434               	.LVL80:
1172:./tmk_core/protocol/lufa/lufa.c **** #endif
1173:./tmk_core/protocol/lufa/lufa.c ****     /* init modules */
1174:./tmk_core/protocol/lufa/lufa.c ****     keyboard_init();
 1435               		.loc 1 1174 5 view .LVU426
 1436 0042 0E94 0000 		call keyboard_init
 1437               	.LVL81:
1175:./tmk_core/protocol/lufa/lufa.c ****     host_set_driver(&lufa_driver);
 1438               		.loc 1 1175 5 view .LVU427
 1439 0046 80E0      		ldi r24,lo8(lufa_driver)
 1440 0048 90E0      		ldi r25,hi8(lufa_driver)
 1441 004a 0E94 0000 		call host_set_driver
 1442               	.LVL82:
 1443               	.L106:
1176:./tmk_core/protocol/lufa/lufa.c **** #ifdef SLEEP_LED_ENABLE
1177:./tmk_core/protocol/lufa/lufa.c ****     sleep_led_init();
1178:./tmk_core/protocol/lufa/lufa.c **** #endif
1179:./tmk_core/protocol/lufa/lufa.c **** 
1180:./tmk_core/protocol/lufa/lufa.c **** #ifdef VIRTSER_ENABLE
1181:./tmk_core/protocol/lufa/lufa.c ****     virtser_init();
1182:./tmk_core/protocol/lufa/lufa.c **** #endif
1183:./tmk_core/protocol/lufa/lufa.c **** 
1184:./tmk_core/protocol/lufa/lufa.c ****     print("Keyboard start.\n");
1185:./tmk_core/protocol/lufa/lufa.c ****     while (1) {
1186:./tmk_core/protocol/lufa/lufa.c ****         #if !defined(BLUETOOTH_ENABLE) && !defined(ADAFRUIT_BLE_ENABLE)
1187:./tmk_core/protocol/lufa/lufa.c ****         while (USB_DeviceState == DEVICE_STATE_Suspended) {
 1444               		.loc 1 1187 32 view .LVU428
 1445 004e 8091 0000 		lds r24,USB_DeviceState
 1446 0052 8530      		cpi r24,lo8(5)
 1447 0054 01F0      		breq .L110
1188:./tmk_core/protocol/lufa/lufa.c ****             print("[s]");
1189:./tmk_core/protocol/lufa/lufa.c ****             suspend_power_down();
1190:./tmk_core/protocol/lufa/lufa.c ****             if (USB_Device_RemoteWakeupEnabled && suspend_wakeup_condition()) {
1191:./tmk_core/protocol/lufa/lufa.c ****                     USB_Device_SendRemoteWakeup();
1192:./tmk_core/protocol/lufa/lufa.c ****             }
1193:./tmk_core/protocol/lufa/lufa.c ****         }
1194:./tmk_core/protocol/lufa/lufa.c ****         #endif
1195:./tmk_core/protocol/lufa/lufa.c **** 
1196:./tmk_core/protocol/lufa/lufa.c ****         keyboard_task();
 1448               		.loc 1 1196 9 view .LVU429
 1449 0056 0E94 0000 		call keyboard_task
 1450               	.LVL83:
1185:./tmk_core/protocol/lufa/lufa.c ****         #if !defined(BLUETOOTH_ENABLE) && !defined(ADAFRUIT_BLE_ENABLE)
 1451               		.loc 1 1185 11 view .LVU430
1187:./tmk_core/protocol/lufa/lufa.c ****             print("[s]");
 1452               		.loc 1 1187 15 is_stmt 0 view .LVU431
 1453 005a 00C0      		rjmp .L106
 1454               	.L110:
1188:./tmk_core/protocol/lufa/lufa.c ****             print("[s]");
 1455               		.loc 1 1188 25 is_stmt 1 view .LVU432
1189:./tmk_core/protocol/lufa/lufa.c ****             if (USB_Device_RemoteWakeupEnabled && suspend_wakeup_condition()) {
 1456               		.loc 1 1189 13 view .LVU433
 1457 005c 0E94 0000 		call suspend_power_down
 1458               	.LVL84:
1190:./tmk_core/protocol/lufa/lufa.c ****                     USB_Device_SendRemoteWakeup();
 1459               		.loc 1 1190 13 view .LVU434
1190:./tmk_core/protocol/lufa/lufa.c ****                     USB_Device_SendRemoteWakeup();
 1460               		.loc 1 1190 16 is_stmt 0 view .LVU435
 1461 0060 8091 0000 		lds r24,USB_Device_RemoteWakeupEnabled
 1462 0064 8823      		tst r24
 1463 0066 01F0      		breq .L106
1190:./tmk_core/protocol/lufa/lufa.c ****                     USB_Device_SendRemoteWakeup();
 1464               		.loc 1 1190 51 discriminator 1 view .LVU436
 1465 0068 0E94 0000 		call suspend_wakeup_condition
 1466               	.LVL85:
1190:./tmk_core/protocol/lufa/lufa.c ****                     USB_Device_SendRemoteWakeup();
 1467               		.loc 1 1190 48 discriminator 1 view .LVU437
 1468 006c 8823      		tst r24
 1469 006e 01F0      		breq .L106
1191:./tmk_core/protocol/lufa/lufa.c ****             }
 1470               		.loc 1 1191 21 is_stmt 1 view .LVU438
 1471 0070 0E94 0000 		call USB_Device_SendRemoteWakeup
 1472               	.LVL86:
 1473 0074 00C0      		rjmp .L106
 1474               		.cfi_endproc
 1475               	.LFE137:
 1477               	.global	lufa_driver
 1478               		.section	.data.lufa_driver,"aw"
 1481               	lufa_driver:
 1482 0000 0000      		.word	gs(keyboard_leds)
 1483 0002 0000      		.word	gs(send_keyboard)
 1484 0004 0000      		.word	gs(send_mouse)
 1485 0006 0000      		.word	gs(send_system)
 1486 0008 0000      		.word	gs(send_consumer)
 1487               		.section	.bss.keyboard_report_sent,"aw",@nobits
 1490               	keyboard_report_sent:
 1491 0000 0000 0000 		.zero	32
 1491      0000 0000 
 1491      0000 0000 
 1491      0000 0000 
 1491      0000 0000 
 1492               		.section	.bss.keyboard_led_stats,"aw",@nobits
 1495               	keyboard_led_stats:
 1496 0000 00        		.zero	1
 1497               	.global	keyboard_protocol
 1498               		.section	.data.keyboard_protocol,"aw"
 1501               	keyboard_protocol:
 1502 0000 01        		.byte	1
 1503               	.global	keyboard_idle
 1504               		.section	.bss.keyboard_idle,"aw",@nobits
 1507               	keyboard_idle:
 1508 0000 00        		.zero	1
 1509               		.text
 1510               	.Letext0:
 1511               		.file 7 "/usr/avr/include/stdint.h"
 1512               		.file 8 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../Device.h"
 1513               		.file 9 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../StdRequestType.h"
 1514               		.file 10 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../DeviceStandardReq.h"
 1515               		.file 11 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/USBTask.h"
 1516               		.file 12 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../Common/HIDClassCommon
 1517               		.file 13 "./tmk_core/common/report.h"
 1518               		.file 14 "./tmk_core/common/host_driver.h"
 1519               		.file 15 "./tmk_core/common/host.h"
 1520               		.file 16 "./tmk_core/protocol/lufa/lufa.h"
 1521               		.file 17 "./quantum/keycode_config.h"
 1522               		.file 18 "./tmk_core/common/keyboard.h"
 1523               		.file 19 "./tmk_core/common/suspend.h"
 1524               		.file 20 "./tmk_core/common/action.h"
 1525               		.file 21 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/EndpointStream_AVR8
 1526               		.file 22 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h"
 1527               		.file 23 "/usr/avr/include/math.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 lufa.c
     /tmp/ccI2VDty.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccI2VDty.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccI2VDty.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccI2VDty.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccI2VDty.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccI2VDty.s:13     .text.keyboard_leds:0000000000000000 keyboard_leds
     /tmp/ccI2VDty.s:15     .text.keyboard_leds:0000000000000000 .Loc.0
     /tmp/ccI2VDty.s:16     .text.keyboard_leds:0000000000000000 L0
     /tmp/ccI2VDty.s:21     .text.keyboard_leds:0000000000000000 .Loc.1
     /tmp/ccI2VDty.s:22     .text.keyboard_leds:0000000000000000 .Loc.2
     /tmp/ccI2VDty.s:1495   .bss.keyboard_led_stats:0000000000000000 keyboard_led_stats
     /tmp/ccI2VDty.s:26     .text.keyboard_leds:0000000000000006 L0
     /tmp/ccI2VDty.s:31     .text.send_consumer:0000000000000000 send_consumer
     /tmp/ccI2VDty.s:34     .text.send_consumer:0000000000000000 .Loc.3
     /tmp/ccI2VDty.s:35     .text.send_consumer:0000000000000000 L0
     /tmp/ccI2VDty.s:36     .text.send_consumer:0000000000000000 .Loc.4
     /tmp/ccI2VDty.s:45     .text.send_consumer:0000000000000006 L0
     /tmp/ccI2VDty.s:57     .text.send_consumer:000000000000000c .Loc.5
     /tmp/ccI2VDty.s:59     .text.send_consumer:000000000000000c .Loc.6
     /tmp/ccI2VDty.s:62     .text.send_consumer:000000000000000c .Loc.7
     /tmp/ccI2VDty.s:64     .text.send_consumer:000000000000000c .Loc.8
     /tmp/ccI2VDty.s:65     .text.send_consumer:000000000000000c .Loc.9
     /tmp/ccI2VDty.s:68     .text.send_consumer:0000000000000010 .Loc.10
     /tmp/ccI2VDty.s:71     .text.send_consumer:0000000000000010 .Loc.11
     /tmp/ccI2VDty.s:72     .text.send_consumer:0000000000000010 .Loc.12
     /tmp/ccI2VDty.s:75     .text.send_consumer:0000000000000014 .Loc.13
     /tmp/ccI2VDty.s:76     .text.send_consumer:0000000000000014 .Loc.14
     /tmp/ccI2VDty.s:79     .text.send_consumer:0000000000000016 .Loc.15
     /tmp/ccI2VDty.s:83     .text.send_consumer:000000000000001c .Loc.16
     /tmp/ccI2VDty.s:88     .text.send_consumer:000000000000001c .Loc.17
     /tmp/ccI2VDty.s:90     .text.send_consumer:000000000000001c .Loc.18
     /tmp/ccI2VDty.s:91     .text.send_consumer:000000000000001c .Loc.19
     /tmp/ccI2VDty.s:94     .text.send_consumer:0000000000000020 .Loc.20
     /tmp/ccI2VDty.s:97     .text.send_consumer:0000000000000020 .Loc.21
     /tmp/ccI2VDty.s:100    .text.send_consumer:0000000000000020 .Loc.22
     /tmp/ccI2VDty.s:104    .text.send_consumer:0000000000000022 .Loc.23
     /tmp/ccI2VDty.s:109    .text.send_consumer:0000000000000022 .Loc.24
     /tmp/ccI2VDty.s:111    .text.send_consumer:0000000000000022 .Loc.25
     /tmp/ccI2VDty.s:112    .text.send_consumer:0000000000000022 .Loc.26
     /tmp/ccI2VDty.s:116    .text.send_consumer:0000000000000026 .Loc.27
     /tmp/ccI2VDty.s:119    .text.send_consumer:000000000000002a .Loc.28
     /tmp/ccI2VDty.s:124    .text.send_consumer:000000000000002a .Loc.29
     /tmp/ccI2VDty.s:126    .text.send_consumer:000000000000002a .Loc.30
     /tmp/ccI2VDty.s:127    .text.send_consumer:000000000000002a .Loc.31
     /tmp/ccI2VDty.s:128    .text.send_consumer:000000000000002a .Loc.32
     /tmp/ccI2VDty.s:129    .text.send_consumer:000000000000002a .Loc.33
     /tmp/ccI2VDty.s:130    .text.send_consumer:000000000000002a .Loc.34
     /tmp/ccI2VDty.s:131    .text.send_consumer:000000000000002a .Loc.35
     /tmp/ccI2VDty.s:137    .text.send_consumer:0000000000000032 .Loc.36
     /tmp/ccI2VDty.s:140    .text.send_consumer:0000000000000032 .Loc.37
     /tmp/ccI2VDty.s:141    .text.send_consumer:0000000000000032 .Loc.38
     /tmp/ccI2VDty.s:144    .text.send_consumer:0000000000000034 .Loc.39
     /tmp/ccI2VDty.s:149    .text.send_consumer:0000000000000038 .Loc.40
     /tmp/ccI2VDty.s:152    .text.send_consumer:0000000000000038 .Loc.41
     /tmp/ccI2VDty.s:154    .text.send_consumer:0000000000000038 .Loc.42
     /tmp/ccI2VDty.s:155    .text.send_consumer:0000000000000038 .Loc.43
     /tmp/ccI2VDty.s:159    .text.send_consumer:000000000000003c .Loc.44
     /tmp/ccI2VDty.s:162    .text.send_consumer:0000000000000040 .Loc.45
     /tmp/ccI2VDty.s:171    .text.send_consumer:0000000000000050 .Loc.46
     /tmp/ccI2VDty.s:174    .text.send_consumer:0000000000000050 .Loc.47
     /tmp/ccI2VDty.s:176    .text.send_consumer:0000000000000050 .Loc.48
     /tmp/ccI2VDty.s:177    .text.send_consumer:0000000000000050 .Loc.49
     /tmp/ccI2VDty.s:185    .text.send_consumer:000000000000005a .Loc.50
     /tmp/ccI2VDty.s:192    .text.send_consumer:0000000000000066 L0
     /tmp/ccI2VDty.s:197    .text.send_system:0000000000000000 send_system
     /tmp/ccI2VDty.s:200    .text.send_system:0000000000000000 .Loc.51
     /tmp/ccI2VDty.s:201    .text.send_system:0000000000000000 L0
     /tmp/ccI2VDty.s:202    .text.send_system:0000000000000000 .Loc.52
     /tmp/ccI2VDty.s:211    .text.send_system:0000000000000006 L0
     /tmp/ccI2VDty.s:224    .text.send_system:000000000000000e .Loc.53
     /tmp/ccI2VDty.s:226    .text.send_system:000000000000000e .Loc.54
     /tmp/ccI2VDty.s:227    .text.send_system:000000000000000e .Loc.55
     /tmp/ccI2VDty.s:230    .text.send_system:0000000000000012 .Loc.56
     /tmp/ccI2VDty.s:233    .text.send_system:0000000000000016 .Loc.57
     /tmp/ccI2VDty.s:234    .text.send_system:0000000000000016 .Loc.58
     /tmp/ccI2VDty.s:237    .text.send_system:000000000000001a .Loc.59
     /tmp/ccI2VDty.s:241    .text.send_system:000000000000001e .Loc.60
     /tmp/ccI2VDty.s:244    .text.send_system:0000000000000022 .Loc.61
     /tmp/ccI2VDty.s:248    .text.send_system:0000000000000022 .Loc.62
     /tmp/ccI2VDty.s:250    .text.send_system:0000000000000022 .Loc.63
     /tmp/ccI2VDty.s:251    .text.send_system:0000000000000022 .Loc.64
     /tmp/ccI2VDty.s:255    .text.send_system:0000000000000028 .Loc.65
     /tmp/ccI2VDty.s:258    .text.send_system:0000000000000028 .Loc.66
     /tmp/ccI2VDty.s:261    .text.send_system:0000000000000028 .Loc.67
     /tmp/ccI2VDty.s:265    .text.send_system:000000000000002a .Loc.68
     /tmp/ccI2VDty.s:270    .text.send_system:000000000000002a .Loc.69
     /tmp/ccI2VDty.s:272    .text.send_system:000000000000002a .Loc.70
     /tmp/ccI2VDty.s:273    .text.send_system:000000000000002a .Loc.71
     /tmp/ccI2VDty.s:277    .text.send_system:000000000000002e .Loc.72
     /tmp/ccI2VDty.s:280    .text.send_system:0000000000000032 .Loc.73
     /tmp/ccI2VDty.s:284    .text.send_system:0000000000000032 .Loc.74
     /tmp/ccI2VDty.s:286    .text.send_system:0000000000000032 .Loc.75
     /tmp/ccI2VDty.s:287    .text.send_system:0000000000000032 .Loc.76
     /tmp/ccI2VDty.s:288    .text.send_system:0000000000000032 .Loc.77
     /tmp/ccI2VDty.s:289    .text.send_system:0000000000000032 .Loc.78
     /tmp/ccI2VDty.s:290    .text.send_system:0000000000000032 .Loc.79
     /tmp/ccI2VDty.s:291    .text.send_system:0000000000000032 .Loc.80
     /tmp/ccI2VDty.s:297    .text.send_system:000000000000003a .Loc.81
     /tmp/ccI2VDty.s:300    .text.send_system:000000000000003a .Loc.82
     /tmp/ccI2VDty.s:301    .text.send_system:000000000000003a .Loc.83
     /tmp/ccI2VDty.s:304    .text.send_system:000000000000003c .Loc.84
     /tmp/ccI2VDty.s:309    .text.send_system:0000000000000040 .Loc.85
     /tmp/ccI2VDty.s:312    .text.send_system:0000000000000040 .Loc.86
     /tmp/ccI2VDty.s:314    .text.send_system:0000000000000040 .Loc.87
     /tmp/ccI2VDty.s:315    .text.send_system:0000000000000040 .Loc.88
     /tmp/ccI2VDty.s:319    .text.send_system:0000000000000044 .Loc.89
     /tmp/ccI2VDty.s:322    .text.send_system:0000000000000048 .Loc.90
     /tmp/ccI2VDty.s:331    .text.send_system:0000000000000058 .Loc.91
     /tmp/ccI2VDty.s:334    .text.send_system:0000000000000058 .Loc.92
     /tmp/ccI2VDty.s:336    .text.send_system:0000000000000058 .Loc.93
     /tmp/ccI2VDty.s:337    .text.send_system:0000000000000058 .Loc.94
     /tmp/ccI2VDty.s:345    .text.send_system:0000000000000062 .Loc.95
     /tmp/ccI2VDty.s:352    .text.send_system:000000000000006e L0
     /tmp/ccI2VDty.s:357    .text.send_mouse:0000000000000000 send_mouse
     /tmp/ccI2VDty.s:360    .text.send_mouse:0000000000000000 .Loc.96
     /tmp/ccI2VDty.s:361    .text.send_mouse:0000000000000000 L0
     /tmp/ccI2VDty.s:366    .text.send_mouse:0000000000000000 .Loc.97
     /tmp/ccI2VDty.s:367    .text.send_mouse:0000000000000000 .Loc.98
     /tmp/ccI2VDty.s:370    .text.send_mouse:0000000000000000 .Loc.99
     /tmp/ccI2VDty.s:372    .text.send_mouse:0000000000000000 .Loc.100
     /tmp/ccI2VDty.s:373    .text.send_mouse:0000000000000000 .Loc.101
     /tmp/ccI2VDty.s:376    .text.send_mouse:0000000000000004 .Loc.102
     /tmp/ccI2VDty.s:379    .text.send_mouse:0000000000000004 .Loc.103
     /tmp/ccI2VDty.s:380    .text.send_mouse:0000000000000004 .Loc.104
     /tmp/ccI2VDty.s:383    .text.send_mouse:0000000000000008 .Loc.105
     /tmp/ccI2VDty.s:387    .text.send_mouse:0000000000000008 .Loc.106
     /tmp/ccI2VDty.s:389    .text.send_mouse:0000000000000008 .Loc.107
     /tmp/ccI2VDty.s:390    .text.send_mouse:0000000000000008 .Loc.108
     /tmp/ccI2VDty.s:393    .text.send_mouse:000000000000000a .Loc.109
     /tmp/ccI2VDty.s:396    .text.send_mouse:000000000000000e .Loc.110
     /tmp/ccI2VDty.s:399    .text.send_mouse:000000000000000e .Loc.111
     /tmp/ccI2VDty.s:402    .text.send_mouse:000000000000000e .Loc.112
     /tmp/ccI2VDty.s:406    .text.send_mouse:0000000000000010 .Loc.113
     /tmp/ccI2VDty.s:411    .text.send_mouse:0000000000000010 .Loc.114
     /tmp/ccI2VDty.s:413    .text.send_mouse:0000000000000010 .Loc.115
     /tmp/ccI2VDty.s:414    .text.send_mouse:0000000000000010 .Loc.116
     /tmp/ccI2VDty.s:418    .text.send_mouse:0000000000000014 .Loc.117
     /tmp/ccI2VDty.s:421    .text.send_mouse:0000000000000018 .Loc.118
     /tmp/ccI2VDty.s:425    .text.send_mouse:0000000000000018 .Loc.119
     /tmp/ccI2VDty.s:427    .text.send_mouse:0000000000000018 .Loc.120
     /tmp/ccI2VDty.s:428    .text.send_mouse:0000000000000018 .Loc.121
     /tmp/ccI2VDty.s:429    .text.send_mouse:0000000000000018 .Loc.122
     /tmp/ccI2VDty.s:430    .text.send_mouse:0000000000000018 .Loc.123
     /tmp/ccI2VDty.s:431    .text.send_mouse:0000000000000018 .Loc.124
     /tmp/ccI2VDty.s:432    .text.send_mouse:0000000000000018 .Loc.125
     /tmp/ccI2VDty.s:438    .text.send_mouse:0000000000000020 .Loc.126
     /tmp/ccI2VDty.s:441    .text.send_mouse:0000000000000020 .Loc.127
     /tmp/ccI2VDty.s:442    .text.send_mouse:0000000000000020 .Loc.128
     /tmp/ccI2VDty.s:445    .text.send_mouse:0000000000000022 .Loc.129
     /tmp/ccI2VDty.s:450    .text.send_mouse:0000000000000026 .Loc.130
     /tmp/ccI2VDty.s:453    .text.send_mouse:0000000000000026 .Loc.131
     /tmp/ccI2VDty.s:455    .text.send_mouse:0000000000000026 .Loc.132
     /tmp/ccI2VDty.s:456    .text.send_mouse:0000000000000026 .Loc.133
     /tmp/ccI2VDty.s:460    .text.send_mouse:000000000000002a .Loc.134
     /tmp/ccI2VDty.s:463    .text.send_mouse:000000000000002e .Loc.135
     /tmp/ccI2VDty.s:470    .text.send_mouse:000000000000003a .Loc.136
     /tmp/ccI2VDty.s:473    .text.send_mouse:000000000000003a .Loc.137
     /tmp/ccI2VDty.s:475    .text.send_mouse:000000000000003a .Loc.138
     /tmp/ccI2VDty.s:476    .text.send_mouse:000000000000003a .Loc.139
     /tmp/ccI2VDty.s:484    .text.send_mouse:0000000000000044 .Loc.140
     /tmp/ccI2VDty.s:486    .text.send_mouse:0000000000000046 L0
     /tmp/ccI2VDty.s:491    .text.send_keyboard:0000000000000000 send_keyboard
     /tmp/ccI2VDty.s:494    .text.send_keyboard:0000000000000000 .Loc.141
     /tmp/ccI2VDty.s:495    .text.send_keyboard:0000000000000000 L0
     /tmp/ccI2VDty.s:496    .text.send_keyboard:0000000000000000 .Loc.142
     /tmp/ccI2VDty.s:511    .text.send_keyboard:0000000000000008 .Loc.143
     /tmp/ccI2VDty.s:513    .text.send_keyboard:0000000000000008 .Loc.144
     /tmp/ccI2VDty.s:516    .text.send_keyboard:0000000000000008 .Loc.145
     /tmp/ccI2VDty.s:518    .text.send_keyboard:0000000000000008 .Loc.146
     /tmp/ccI2VDty.s:519    .text.send_keyboard:0000000000000008 .Loc.147
     /tmp/ccI2VDty.s:522    .text.send_keyboard:000000000000000c .Loc.148
     /tmp/ccI2VDty.s:525    .text.send_keyboard:000000000000000c .Loc.149
     /tmp/ccI2VDty.s:526    .text.send_keyboard:000000000000000c .Loc.150
     /tmp/ccI2VDty.s:529    .text.send_keyboard:0000000000000010 .Loc.151
     /tmp/ccI2VDty.s:530    .text.send_keyboard:0000000000000010 .Loc.152
     /tmp/ccI2VDty.s:1501   .data.keyboard_protocol:0000000000000000 keyboard_protocol
     /tmp/ccI2VDty.s:534    .text.send_keyboard:0000000000000018 .Loc.153
     /tmp/ccI2VDty.s:538    .text.send_keyboard:0000000000000020 .Loc.154
     /tmp/ccI2VDty.s:542    .text.send_keyboard:0000000000000020 .Loc.155
     /tmp/ccI2VDty.s:544    .text.send_keyboard:0000000000000020 .Loc.156
     /tmp/ccI2VDty.s:545    .text.send_keyboard:0000000000000020 .Loc.157
     /tmp/ccI2VDty.s:548    .text.send_keyboard:0000000000000024 .Loc.158
     /tmp/ccI2VDty.s:551    .text.send_keyboard:0000000000000024 .Loc.159
     /tmp/ccI2VDty.s:554    .text.send_keyboard:0000000000000024 .Loc.160
     /tmp/ccI2VDty.s:558    .text.send_keyboard:0000000000000026 .Loc.161
     /tmp/ccI2VDty.s:563    .text.send_keyboard:0000000000000026 .Loc.162
     /tmp/ccI2VDty.s:565    .text.send_keyboard:0000000000000026 .Loc.163
     /tmp/ccI2VDty.s:566    .text.send_keyboard:0000000000000026 .Loc.164
     /tmp/ccI2VDty.s:570    .text.send_keyboard:000000000000002a .Loc.165
     /tmp/ccI2VDty.s:573    .text.send_keyboard:000000000000002e .Loc.166
     /tmp/ccI2VDty.s:577    .text.send_keyboard:000000000000002e .Loc.167
     /tmp/ccI2VDty.s:579    .text.send_keyboard:000000000000002e .Loc.168
     /tmp/ccI2VDty.s:580    .text.send_keyboard:000000000000002e .Loc.169
     /tmp/ccI2VDty.s:581    .text.send_keyboard:000000000000002e .Loc.170
     /tmp/ccI2VDty.s:582    .text.send_keyboard:000000000000002e .Loc.171
     /tmp/ccI2VDty.s:583    .text.send_keyboard:000000000000002e .Loc.172
     /tmp/ccI2VDty.s:584    .text.send_keyboard:000000000000002e .Loc.173
     /tmp/ccI2VDty.s:590    .text.send_keyboard:0000000000000036 .Loc.174
     /tmp/ccI2VDty.s:593    .text.send_keyboard:0000000000000036 .Loc.175
     /tmp/ccI2VDty.s:594    .text.send_keyboard:0000000000000036 .Loc.176
     /tmp/ccI2VDty.s:597    .text.send_keyboard:0000000000000038 .Loc.177
     /tmp/ccI2VDty.s:602    .text.send_keyboard:000000000000003c .Loc.178
     /tmp/ccI2VDty.s:605    .text.send_keyboard:000000000000003c .Loc.179
     /tmp/ccI2VDty.s:607    .text.send_keyboard:000000000000003c .Loc.180
     /tmp/ccI2VDty.s:608    .text.send_keyboard:000000000000003c .Loc.181
     /tmp/ccI2VDty.s:612    .text.send_keyboard:0000000000000040 .Loc.182
     /tmp/ccI2VDty.s:615    .text.send_keyboard:0000000000000044 .Loc.183
     /tmp/ccI2VDty.s:622    .text.send_keyboard:000000000000004c .Loc.184
     /tmp/ccI2VDty.s:627    .text.send_keyboard:0000000000000054 .Loc.185
     /tmp/ccI2VDty.s:630    .text.send_keyboard:0000000000000054 .Loc.186
     /tmp/ccI2VDty.s:632    .text.send_keyboard:0000000000000054 .Loc.187
     /tmp/ccI2VDty.s:633    .text.send_keyboard:0000000000000054 .Loc.188
     /tmp/ccI2VDty.s:639    .text.send_keyboard:000000000000005e .Loc.189
     /tmp/ccI2VDty.s:640    .text.send_keyboard:000000000000005e .Loc.190
     /tmp/ccI2VDty.s:1490   .bss.keyboard_report_sent:0000000000000000 keyboard_report_sent
     /tmp/ccI2VDty.s:653    .text.send_keyboard:0000000000000070 .Loc.191
     /tmp/ccI2VDty.s:659    .text.send_keyboard:0000000000000076 .Loc.192
     /tmp/ccI2VDty.s:662    .text.send_keyboard:0000000000000076 .Loc.193
     /tmp/ccI2VDty.s:664    .text.send_keyboard:0000000000000076 .Loc.194
     /tmp/ccI2VDty.s:665    .text.send_keyboard:0000000000000076 .Loc.195
     /tmp/ccI2VDty.s:668    .text.send_keyboard:0000000000000078 .Loc.196
     /tmp/ccI2VDty.s:671    .text.send_keyboard:000000000000007c .Loc.197
     /tmp/ccI2VDty.s:674    .text.send_keyboard:000000000000007c .Loc.198
     /tmp/ccI2VDty.s:677    .text.send_keyboard:000000000000007c .Loc.199
     /tmp/ccI2VDty.s:681    .text.send_keyboard:000000000000007e .Loc.200
     /tmp/ccI2VDty.s:686    .text.send_keyboard:000000000000007e .Loc.201
     /tmp/ccI2VDty.s:688    .text.send_keyboard:000000000000007e .Loc.202
     /tmp/ccI2VDty.s:689    .text.send_keyboard:000000000000007e .Loc.203
     /tmp/ccI2VDty.s:693    .text.send_keyboard:0000000000000082 .Loc.204
     /tmp/ccI2VDty.s:696    .text.send_keyboard:0000000000000086 .Loc.205
     /tmp/ccI2VDty.s:700    .text.send_keyboard:0000000000000086 .Loc.206
     /tmp/ccI2VDty.s:702    .text.send_keyboard:0000000000000086 .Loc.207
     /tmp/ccI2VDty.s:703    .text.send_keyboard:0000000000000086 .Loc.208
     /tmp/ccI2VDty.s:704    .text.send_keyboard:0000000000000086 .Loc.209
     /tmp/ccI2VDty.s:705    .text.send_keyboard:0000000000000086 .Loc.210
     /tmp/ccI2VDty.s:706    .text.send_keyboard:0000000000000086 .Loc.211
     /tmp/ccI2VDty.s:707    .text.send_keyboard:0000000000000086 .Loc.212
     /tmp/ccI2VDty.s:713    .text.send_keyboard:000000000000008e .Loc.213
     /tmp/ccI2VDty.s:716    .text.send_keyboard:000000000000008e .Loc.214
     /tmp/ccI2VDty.s:717    .text.send_keyboard:000000000000008e .Loc.215
     /tmp/ccI2VDty.s:720    .text.send_keyboard:0000000000000090 .Loc.216
     /tmp/ccI2VDty.s:725    .text.send_keyboard:0000000000000094 .Loc.217
     /tmp/ccI2VDty.s:728    .text.send_keyboard:0000000000000094 .Loc.218
     /tmp/ccI2VDty.s:730    .text.send_keyboard:0000000000000094 .Loc.219
     /tmp/ccI2VDty.s:731    .text.send_keyboard:0000000000000094 .Loc.220
     /tmp/ccI2VDty.s:735    .text.send_keyboard:0000000000000098 .Loc.221
     /tmp/ccI2VDty.s:738    .text.send_keyboard:000000000000009c .Loc.222
     /tmp/ccI2VDty.s:744    .text.send_keyboard:00000000000000a6 L0
     /tmp/ccI2VDty.s:750    .text.EVENT_USB_Device_Connect:0000000000000000 EVENT_USB_Device_Connect
     /tmp/ccI2VDty.s:752    .text.EVENT_USB_Device_Connect:0000000000000000 .Loc.223
     /tmp/ccI2VDty.s:753    .text.EVENT_USB_Device_Connect:0000000000000000 L0
     /tmp/ccI2VDty.s:758    .text.EVENT_USB_Device_Connect:0000000000000000 .Loc.224
     /tmp/ccI2VDty.s:759    .text.EVENT_USB_Device_Connect:0000000000000000 .Loc.225
     /tmp/ccI2VDty.s:760    .text.EVENT_USB_Device_Connect:0000000000000000 .Loc.226
     /tmp/ccI2VDty.s:762    .text.EVENT_USB_Device_Connect:0000000000000004 .Loc.227
     /tmp/ccI2VDty.s:765    .text.EVENT_USB_Device_Connect:0000000000000008 .Loc.228
     /tmp/ccI2VDty.s:768    .text.EVENT_USB_Device_Connect:000000000000000c .Loc.229
     /tmp/ccI2VDty.s:771    .text.EVENT_USB_Device_Connect:0000000000000010 .Loc.230
     /tmp/ccI2VDty.s:775    .text.EVENT_USB_Device_Connect:0000000000000010 .Loc.231
     /tmp/ccI2VDty.s:777    .text.EVENT_USB_Device_Connect:0000000000000010 .Loc.232
     /tmp/ccI2VDty.s:781    .text.EVENT_USB_Device_Connect:0000000000000010 .Loc.233
     /tmp/ccI2VDty.s:783    .text.EVENT_USB_Device_Connect:0000000000000010 .Loc.234
     /tmp/ccI2VDty.s:784    .text.EVENT_USB_Device_Connect:0000000000000010 .Loc.235
     /tmp/ccI2VDty.s:786    .text.EVENT_USB_Device_Connect:0000000000000014 .Loc.236
     /tmp/ccI2VDty.s:789    .text.EVENT_USB_Device_Connect:000000000000001a .Loc.237
     /tmp/ccI2VDty.s:793    .text.EVENT_USB_Device_Connect:000000000000001a .Loc.238
     /tmp/ccI2VDty.s:798    .text.EVENT_USB_Device_Connect:000000000000001a .Loc.239
     /tmp/ccI2VDty.s:800    .text.EVENT_USB_Device_Connect:000000000000001c L0
     /tmp/ccI2VDty.s:806    .text.EVENT_USB_Device_Disconnect:0000000000000000 EVENT_USB_Device_Disconnect
     /tmp/ccI2VDty.s:808    .text.EVENT_USB_Device_Disconnect:0000000000000000 .Loc.240
     /tmp/ccI2VDty.s:809    .text.EVENT_USB_Device_Disconnect:0000000000000000 L0
     /tmp/ccI2VDty.s:814    .text.EVENT_USB_Device_Disconnect:0000000000000000 .Loc.241
     /tmp/ccI2VDty.s:815    .text.EVENT_USB_Device_Disconnect:0000000000000000 .Loc.242
     /tmp/ccI2VDty.s:816    .text.EVENT_USB_Device_Disconnect:0000000000000000 .Loc.243
     /tmp/ccI2VDty.s:819    .text.EVENT_USB_Device_Disconnect:0000000000000004 .Loc.244
     /tmp/ccI2VDty.s:821    .text.EVENT_USB_Device_Disconnect:0000000000000006 L0
     /tmp/ccI2VDty.s:827    .text.EVENT_USB_Device_Reset:0000000000000000 EVENT_USB_Device_Reset
     /tmp/ccI2VDty.s:829    .text.EVENT_USB_Device_Reset:0000000000000000 L0
     /tmp/ccI2VDty.s:830    .text.EVENT_USB_Device_Reset:0000000000000000 .Loc.245
     /tmp/ccI2VDty.s:837    .text.EVENT_USB_Device_Reset:0000000000000002 L0
     /tmp/ccI2VDty.s:843    .text.EVENT_USB_Device_Suspend:0000000000000000 EVENT_USB_Device_Suspend
     /tmp/ccI2VDty.s:845    .text.EVENT_USB_Device_Suspend:0000000000000000 .Loc.246
     /tmp/ccI2VDty.s:846    .text.EVENT_USB_Device_Suspend:0000000000000000 L0
     /tmp/ccI2VDty.s:851    .text.EVENT_USB_Device_Suspend:0000000000000000 .Loc.247
     /tmp/ccI2VDty.s:853    .text.EVENT_USB_Device_Suspend:0000000000000000 .Loc.248
     /tmp/ccI2VDty.s:855    .text.EVENT_USB_Device_Suspend:0000000000000002 L0
     /tmp/ccI2VDty.s:861    .text.EVENT_USB_Device_WakeUp:0000000000000000 EVENT_USB_Device_WakeUp
     /tmp/ccI2VDty.s:863    .text.EVENT_USB_Device_WakeUp:0000000000000000 .Loc.249
     /tmp/ccI2VDty.s:864    .text.EVENT_USB_Device_WakeUp:0000000000000000 L0
     /tmp/ccI2VDty.s:869    .text.EVENT_USB_Device_WakeUp:0000000000000000 .Loc.250
     /tmp/ccI2VDty.s:870    .text.EVENT_USB_Device_WakeUp:0000000000000000 .Loc.251
     /tmp/ccI2VDty.s:873    .text.EVENT_USB_Device_WakeUp:0000000000000004 L0
     /tmp/ccI2VDty.s:879    .text.EVENT_USB_Device_ConfigurationChanged:0000000000000000 EVENT_USB_Device_ConfigurationChanged
     /tmp/ccI2VDty.s:881    .text.EVENT_USB_Device_ConfigurationChanged:0000000000000000 .Loc.252
     /tmp/ccI2VDty.s:882    .text.EVENT_USB_Device_ConfigurationChanged:0000000000000000 L0
     /tmp/ccI2VDty.s:887    .text.EVENT_USB_Device_ConfigurationChanged:0000000000000000 .Loc.253
     /tmp/ccI2VDty.s:889    .text.EVENT_USB_Device_ConfigurationChanged:0000000000000000 .Loc.254
     /tmp/ccI2VDty.s:892    .text.EVENT_USB_Device_ConfigurationChanged:0000000000000000 .Loc.255
     /tmp/ccI2VDty.s:894    .text.EVENT_USB_Device_ConfigurationChanged:0000000000000000 .Loc.256
     /tmp/ccI2VDty.s:895    .text.EVENT_USB_Device_ConfigurationChanged:0000000000000000 .Loc.257
     /tmp/ccI2VDty.s:896    .text.EVENT_USB_Device_ConfigurationChanged:0000000000000000 .Loc.258
     /tmp/ccI2VDty.s:897    .text.EVENT_USB_Device_ConfigurationChanged:0000000000000000 .Loc.259
     /tmp/ccI2VDty.s:903    .text.EVENT_USB_Device_ConfigurationChanged:000000000000000a .Loc.260
     /tmp/ccI2VDty.s:906    .text.EVENT_USB_Device_ConfigurationChanged:000000000000000a .Loc.261
     /tmp/ccI2VDty.s:909    .text.EVENT_USB_Device_ConfigurationChanged:000000000000000a .Loc.262
     /tmp/ccI2VDty.s:911    .text.EVENT_USB_Device_ConfigurationChanged:000000000000000a .Loc.263
     /tmp/ccI2VDty.s:912    .text.EVENT_USB_Device_ConfigurationChanged:000000000000000a .Loc.264
     /tmp/ccI2VDty.s:913    .text.EVENT_USB_Device_ConfigurationChanged:000000000000000a .Loc.265
     /tmp/ccI2VDty.s:914    .text.EVENT_USB_Device_ConfigurationChanged:000000000000000a .Loc.266
     /tmp/ccI2VDty.s:920    .text.EVENT_USB_Device_ConfigurationChanged:0000000000000014 .Loc.267
     /tmp/ccI2VDty.s:923    .text.EVENT_USB_Device_ConfigurationChanged:0000000000000014 .Loc.268
     /tmp/ccI2VDty.s:926    .text.EVENT_USB_Device_ConfigurationChanged:0000000000000014 .Loc.269
     /tmp/ccI2VDty.s:928    .text.EVENT_USB_Device_ConfigurationChanged:0000000000000014 .Loc.270
     /tmp/ccI2VDty.s:929    .text.EVENT_USB_Device_ConfigurationChanged:0000000000000014 .Loc.271
     /tmp/ccI2VDty.s:930    .text.EVENT_USB_Device_ConfigurationChanged:0000000000000014 .Loc.272
     /tmp/ccI2VDty.s:931    .text.EVENT_USB_Device_ConfigurationChanged:0000000000000014 .Loc.273
     /tmp/ccI2VDty.s:937    .text.EVENT_USB_Device_ConfigurationChanged:000000000000001e .Loc.274
     /tmp/ccI2VDty.s:940    .text.EVENT_USB_Device_ConfigurationChanged:000000000000001e .Loc.275
     /tmp/ccI2VDty.s:943    .text.EVENT_USB_Device_ConfigurationChanged:000000000000001e .Loc.276
     /tmp/ccI2VDty.s:945    .text.EVENT_USB_Device_ConfigurationChanged:000000000000001e .Loc.277
     /tmp/ccI2VDty.s:946    .text.EVENT_USB_Device_ConfigurationChanged:000000000000001e .Loc.278
     /tmp/ccI2VDty.s:947    .text.EVENT_USB_Device_ConfigurationChanged:000000000000001e .Loc.279
     /tmp/ccI2VDty.s:955    .text.EVENT_USB_Device_ConfigurationChanged:0000000000000028 L0
     /tmp/ccI2VDty.s:961    .text.EVENT_USB_Device_ControlRequest:0000000000000000 EVENT_USB_Device_ControlRequest
     /tmp/ccI2VDty.s:963    .text.EVENT_USB_Device_ControlRequest:0000000000000000 .Loc.280
     /tmp/ccI2VDty.s:964    .text.EVENT_USB_Device_ControlRequest:0000000000000000 L0
     /tmp/ccI2VDty.s:969    .text.EVENT_USB_Device_ControlRequest:0000000000000000 .Loc.281
     /tmp/ccI2VDty.s:971    .text.EVENT_USB_Device_ControlRequest:0000000000000000 .Loc.282
     /tmp/ccI2VDty.s:972    .text.EVENT_USB_Device_ControlRequest:0000000000000000 .Loc.283
     /tmp/ccI2VDty.s:973    .text.EVENT_USB_Device_ControlRequest:0000000000000000 .Loc.284
     /tmp/ccI2VDty.s:975    .text.EVENT_USB_Device_ControlRequest:0000000000000004 .Loc.285
     /tmp/ccI2VDty.s:980    .text.EVENT_USB_Device_ControlRequest:000000000000000e L0
     /tmp/ccI2VDty.s:983    .text.EVENT_USB_Device_ControlRequest:0000000000000014 L0
     /tmp/ccI2VDty.s:990    .text.EVENT_USB_Device_ControlRequest:0000000000000020 L0
     /tmp/ccI2VDty.s:993    .text.EVENT_USB_Device_ControlRequest:0000000000000026 L0
     /tmp/ccI2VDty.s:997    .text.EVENT_USB_Device_ControlRequest:000000000000002a .Loc.286
     /tmp/ccI2VDty.s:998    .text.EVENT_USB_Device_ControlRequest:000000000000002a .Loc.287
     /tmp/ccI2VDty.s:1001   .text.EVENT_USB_Device_ControlRequest:0000000000000032 L0
     /tmp/ccI2VDty.s:1003   .text.EVENT_USB_Device_ControlRequest:0000000000000034 .Loc.288
     /tmp/ccI2VDty.s:1006   .text.EVENT_USB_Device_ControlRequest:0000000000000034 .Loc.289
     /tmp/ccI2VDty.s:1008   .text.EVENT_USB_Device_ControlRequest:0000000000000034 .Loc.290
     /tmp/ccI2VDty.s:1009   .text.EVENT_USB_Device_ControlRequest:0000000000000034 .Loc.291
     /tmp/ccI2VDty.s:1015   .text.EVENT_USB_Device_ControlRequest:000000000000003e .Loc.292
     /tmp/ccI2VDty.s:1020   .text.EVENT_USB_Device_ControlRequest:000000000000004a .Loc.293
     /tmp/ccI2VDty.s:1022   .text.EVENT_USB_Device_ControlRequest:000000000000004c .Loc.294
     /tmp/ccI2VDty.s:1027   .text.EVENT_USB_Device_ControlRequest:0000000000000050 .Loc.295
     /tmp/ccI2VDty.s:1031   .text.EVENT_USB_Device_ControlRequest:0000000000000056 .Loc.296
     /tmp/ccI2VDty.s:1034   .text.EVENT_USB_Device_ControlRequest:0000000000000056 .Loc.297
     /tmp/ccI2VDty.s:1036   .text.EVENT_USB_Device_ControlRequest:0000000000000056 .Loc.298
     /tmp/ccI2VDty.s:1037   .text.EVENT_USB_Device_ControlRequest:0000000000000056 .Loc.299
     /tmp/ccI2VDty.s:1041   .text.EVENT_USB_Device_ControlRequest:0000000000000060 .Loc.300
     /tmp/ccI2VDty.s:1045   .text.EVENT_USB_Device_ControlRequest:0000000000000062 .Loc.301
     /tmp/ccI2VDty.s:1048   .text.EVENT_USB_Device_ControlRequest:0000000000000062 .Loc.302
     /tmp/ccI2VDty.s:1050   .text.EVENT_USB_Device_ControlRequest:0000000000000064 .Loc.303
     /tmp/ccI2VDty.s:1055   .text.EVENT_USB_Device_ControlRequest:000000000000006a .Loc.304
     /tmp/ccI2VDty.s:1056   .text.EVENT_USB_Device_ControlRequest:000000000000006a .Loc.305
     /tmp/ccI2VDty.s:1060   .text.EVENT_USB_Device_ControlRequest:0000000000000072 .Loc.306
     /tmp/ccI2VDty.s:1061   .text.EVENT_USB_Device_ControlRequest:0000000000000072 .Loc.307
     /tmp/ccI2VDty.s:1069   .text.EVENT_USB_Device_ControlRequest:0000000000000082 .Loc.308
     /tmp/ccI2VDty.s:1072   .text.EVENT_USB_Device_ControlRequest:0000000000000082 .Loc.309
     /tmp/ccI2VDty.s:1074   .text.EVENT_USB_Device_ControlRequest:0000000000000082 .Loc.310
     /tmp/ccI2VDty.s:1075   .text.EVENT_USB_Device_ControlRequest:0000000000000082 .Loc.311
     /tmp/ccI2VDty.s:1082   .text.EVENT_USB_Device_ControlRequest:000000000000008c .Loc.312
     /tmp/ccI2VDty.s:1085   .text.EVENT_USB_Device_ControlRequest:000000000000008c .Loc.313
     /tmp/ccI2VDty.s:1087   .text.EVENT_USB_Device_ControlRequest:000000000000008c .Loc.314
     /tmp/ccI2VDty.s:1088   .text.EVENT_USB_Device_ControlRequest:000000000000008c .Loc.315
     /tmp/ccI2VDty.s:1092   .text.EVENT_USB_Device_ControlRequest:0000000000000090 .Loc.316
     /tmp/ccI2VDty.s:1095   .text.EVENT_USB_Device_ControlRequest:0000000000000094 .Loc.317
     /tmp/ccI2VDty.s:1098   .text.EVENT_USB_Device_ControlRequest:0000000000000094 .Loc.318
     /tmp/ccI2VDty.s:1100   .text.EVENT_USB_Device_ControlRequest:0000000000000094 .Loc.319
     /tmp/ccI2VDty.s:1101   .text.EVENT_USB_Device_ControlRequest:0000000000000094 .Loc.320
     /tmp/ccI2VDty.s:1105   .text.EVENT_USB_Device_ControlRequest:0000000000000098 .Loc.321
     /tmp/ccI2VDty.s:1107   .text.EVENT_USB_Device_ControlRequest:000000000000009c .Loc.322
     /tmp/ccI2VDty.s:1110   .text.EVENT_USB_Device_ControlRequest:000000000000009c .Loc.323
     /tmp/ccI2VDty.s:1112   .text.EVENT_USB_Device_ControlRequest:000000000000009c .Loc.324
     /tmp/ccI2VDty.s:1113   .text.EVENT_USB_Device_ControlRequest:000000000000009c .Loc.325
     /tmp/ccI2VDty.s:1121   .text.EVENT_USB_Device_ControlRequest:00000000000000a2 .Loc.326
     /tmp/ccI2VDty.s:1125   .text.EVENT_USB_Device_ControlRequest:00000000000000a6 .Loc.327
     /tmp/ccI2VDty.s:1129   .text.EVENT_USB_Device_ControlRequest:00000000000000aa .Loc.328
     /tmp/ccI2VDty.s:1130   .text.EVENT_USB_Device_ControlRequest:00000000000000aa .Loc.329
     /tmp/ccI2VDty.s:1132   .text.EVENT_USB_Device_ControlRequest:00000000000000ae .Loc.330
     /tmp/ccI2VDty.s:1137   .text.EVENT_USB_Device_ControlRequest:00000000000000b2 .Loc.331
     /tmp/ccI2VDty.s:1140   .text.EVENT_USB_Device_ControlRequest:00000000000000b4 .Loc.332
     /tmp/ccI2VDty.s:1141   .text.EVENT_USB_Device_ControlRequest:00000000000000b4 .Loc.333
     /tmp/ccI2VDty.s:1145   .text.EVENT_USB_Device_ControlRequest:00000000000000bc .Loc.334
     /tmp/ccI2VDty.s:1146   .text.EVENT_USB_Device_ControlRequest:00000000000000bc .Loc.335
     /tmp/ccI2VDty.s:1151   .text.EVENT_USB_Device_ControlRequest:00000000000000c8 .Loc.336
     /tmp/ccI2VDty.s:1154   .text.EVENT_USB_Device_ControlRequest:00000000000000c8 .Loc.337
     /tmp/ccI2VDty.s:1156   .text.EVENT_USB_Device_ControlRequest:00000000000000c8 .Loc.338
     /tmp/ccI2VDty.s:1157   .text.EVENT_USB_Device_ControlRequest:00000000000000c8 .Loc.339
     /tmp/ccI2VDty.s:1164   .text.EVENT_USB_Device_ControlRequest:00000000000000d2 .Loc.340
     /tmp/ccI2VDty.s:1167   .text.EVENT_USB_Device_ControlRequest:00000000000000d2 .Loc.341
     /tmp/ccI2VDty.s:1169   .text.EVENT_USB_Device_ControlRequest:00000000000000d2 .Loc.342
     /tmp/ccI2VDty.s:1170   .text.EVENT_USB_Device_ControlRequest:00000000000000d2 .Loc.343
     /tmp/ccI2VDty.s:1174   .text.EVENT_USB_Device_ControlRequest:00000000000000d6 .Loc.344
     /tmp/ccI2VDty.s:1177   .text.EVENT_USB_Device_ControlRequest:00000000000000da .Loc.345
     /tmp/ccI2VDty.s:1182   .text.EVENT_USB_Device_ControlRequest:00000000000000de .Loc.346
     /tmp/ccI2VDty.s:1184   .text.EVENT_USB_Device_ControlRequest:00000000000000de .Loc.347
     /tmp/ccI2VDty.s:1186   .text.EVENT_USB_Device_ControlRequest:00000000000000de .Loc.348
     /tmp/ccI2VDty.s:1191   .text.EVENT_USB_Device_ControlRequest:00000000000000de .Loc.349
     /tmp/ccI2VDty.s:1193   .text.EVENT_USB_Device_ControlRequest:00000000000000de .Loc.350
     /tmp/ccI2VDty.s:1194   .text.EVENT_USB_Device_ControlRequest:00000000000000de .Loc.351
     /tmp/ccI2VDty.s:1197   .text.EVENT_USB_Device_ControlRequest:00000000000000e2 .Loc.352
     /tmp/ccI2VDty.s:1200   .text.EVENT_USB_Device_ControlRequest:00000000000000e2 .Loc.353
     /tmp/ccI2VDty.s:1203   .text.EVENT_USB_Device_ControlRequest:00000000000000e2 .Loc.354
     /tmp/ccI2VDty.s:1205   .text.EVENT_USB_Device_ControlRequest:00000000000000e2 .Loc.355
     /tmp/ccI2VDty.s:1206   .text.EVENT_USB_Device_ControlRequest:00000000000000e2 .Loc.356
     /tmp/ccI2VDty.s:1213   .text.EVENT_USB_Device_ControlRequest:00000000000000ea .Loc.357
     /tmp/ccI2VDty.s:1214   .text.EVENT_USB_Device_ControlRequest:00000000000000ea .Loc.358
     /tmp/ccI2VDty.s:1218   .text.EVENT_USB_Device_ControlRequest:00000000000000f2 .Loc.359
     /tmp/ccI2VDty.s:1219   .text.EVENT_USB_Device_ControlRequest:00000000000000f2 .Loc.360
     /tmp/ccI2VDty.s:1224   .text.EVENT_USB_Device_ControlRequest:00000000000000fe .Loc.361
     /tmp/ccI2VDty.s:1227   .text.EVENT_USB_Device_ControlRequest:00000000000000fe .Loc.362
     /tmp/ccI2VDty.s:1229   .text.EVENT_USB_Device_ControlRequest:00000000000000fe .Loc.363
     /tmp/ccI2VDty.s:1230   .text.EVENT_USB_Device_ControlRequest:00000000000000fe .Loc.364
     /tmp/ccI2VDty.s:1236   .text.EVENT_USB_Device_ControlRequest:0000000000000108 .Loc.365
     /tmp/ccI2VDty.s:1239   .text.EVENT_USB_Device_ControlRequest:000000000000010c .Loc.366
     /tmp/ccI2VDty.s:1240   .text.EVENT_USB_Device_ControlRequest:000000000000010c .Loc.367
     /tmp/ccI2VDty.s:1243   .text.EVENT_USB_Device_ControlRequest:0000000000000114 .Loc.368
     /tmp/ccI2VDty.s:1247   .text.EVENT_USB_Device_ControlRequest:0000000000000118 .Loc.369
     /tmp/ccI2VDty.s:1248   .text.EVENT_USB_Device_ControlRequest:0000000000000118 .Loc.370
     /tmp/ccI2VDty.s:1252   .text.EVENT_USB_Device_ControlRequest:0000000000000120 .Loc.371
     /tmp/ccI2VDty.s:1255   .text.EVENT_USB_Device_ControlRequest:0000000000000120 .Loc.372
     /tmp/ccI2VDty.s:1257   .text.EVENT_USB_Device_ControlRequest:0000000000000120 .Loc.373
     /tmp/ccI2VDty.s:1258   .text.EVENT_USB_Device_ControlRequest:0000000000000120 .Loc.374
     /tmp/ccI2VDty.s:1264   .text.EVENT_USB_Device_ControlRequest:000000000000012a .Loc.375
     /tmp/ccI2VDty.s:1267   .text.EVENT_USB_Device_ControlRequest:000000000000012e .Loc.376
     /tmp/ccI2VDty.s:1268   .text.EVENT_USB_Device_ControlRequest:000000000000012e .Loc.377
     /tmp/ccI2VDty.s:1270   .text.EVENT_USB_Device_ControlRequest:0000000000000132 .Loc.378
     /tmp/ccI2VDty.s:1507   .bss.keyboard_idle:0000000000000000 keyboard_idle
     /tmp/ccI2VDty.s:1274   .text.EVENT_USB_Device_ControlRequest:0000000000000138 .Loc.379
     /tmp/ccI2VDty.s:1275   .text.EVENT_USB_Device_ControlRequest:0000000000000138 .Loc.380
     /tmp/ccI2VDty.s:1278   .text.EVENT_USB_Device_ControlRequest:0000000000000140 L0
     /tmp/ccI2VDty.s:1280   .text.EVENT_USB_Device_ControlRequest:0000000000000142 .Loc.381
     /tmp/ccI2VDty.s:1283   .text.EVENT_USB_Device_ControlRequest:0000000000000142 .Loc.382
     /tmp/ccI2VDty.s:1285   .text.EVENT_USB_Device_ControlRequest:0000000000000142 .Loc.383
     /tmp/ccI2VDty.s:1286   .text.EVENT_USB_Device_ControlRequest:0000000000000142 .Loc.384
     /tmp/ccI2VDty.s:1293   .text.EVENT_USB_Device_ControlRequest:000000000000014c .Loc.385
     /tmp/ccI2VDty.s:1296   .text.EVENT_USB_Device_ControlRequest:000000000000014c .Loc.386
     /tmp/ccI2VDty.s:1298   .text.EVENT_USB_Device_ControlRequest:000000000000014c .Loc.387
     /tmp/ccI2VDty.s:1299   .text.EVENT_USB_Device_ControlRequest:000000000000014c .Loc.388
     /tmp/ccI2VDty.s:1303   .text.EVENT_USB_Device_ControlRequest:0000000000000150 .Loc.389
     /tmp/ccI2VDty.s:1306   .text.EVENT_USB_Device_ControlRequest:0000000000000154 .Loc.390
     /tmp/ccI2VDty.s:1309   .text.EVENT_USB_Device_ControlRequest:000000000000015a L0
     /tmp/ccI2VDty.s:1315   .text.sendchar:0000000000000000 sendchar
     /tmp/ccI2VDty.s:1318   .text.sendchar:0000000000000000 .Loc.391
     /tmp/ccI2VDty.s:1319   .text.sendchar:0000000000000000 L0
     /tmp/ccI2VDty.s:1324   .text.sendchar:0000000000000000 .Loc.392
     /tmp/ccI2VDty.s:1325   .text.sendchar:0000000000000000 .Loc.393
     /tmp/ccI2VDty.s:1329   .text.sendchar:0000000000000002 .Loc.394
     /tmp/ccI2VDty.s:1331   .text.sendchar:0000000000000004 L0
     /tmp/ccI2VDty.s:1337   .text.startup.main:0000000000000000 main
     /tmp/ccI2VDty.s:1339   .text.startup.main:0000000000000000 .Loc.395
     /tmp/ccI2VDty.s:1340   .text.startup.main:0000000000000000 L0
     /tmp/ccI2VDty.s:1345   .text.startup.main:0000000000000000 .Loc.396
     /tmp/ccI2VDty.s:1348   .text.startup.main:0000000000000000 .Loc.397
     /tmp/ccI2VDty.s:1350   .text.startup.main:0000000000000000 .Loc.398
     /tmp/ccI2VDty.s:1351   .text.startup.main:0000000000000000 .Loc.399
     /tmp/ccI2VDty.s:1355   .text.startup.main:0000000000000006 .Loc.400
     /tmp/ccI2VDty.s:1359   .text.startup.main:0000000000000006 .Loc.401
     /tmp/ccI2VDty.s:1360   .text.startup.main:0000000000000006 .Loc.402
     /tmp/ccI2VDty.s:1362   .text.startup.main:0000000000000006 .Loc.403
     /tmp/ccI2VDty.s:1363   .text.startup.main:0000000000000006 .Loc.404
     /tmp/ccI2VDty.s:1379   .text.startup.main:000000000000001c .Loc.405
     /tmp/ccI2VDty.s:1380   .text.startup.main:000000000000001c .Loc.406
     /tmp/ccI2VDty.s:1383   .text.startup.main:0000000000000022 .Loc.407
     /tmp/ccI2VDty.s:1384   .text.startup.main:0000000000000022 .Loc.408
     /tmp/ccI2VDty.s:1388   .text.startup.main:0000000000000026 .Loc.409
     /tmp/ccI2VDty.s:1391   .text.startup.main:000000000000002a .Loc.410
     /tmp/ccI2VDty.s:1394   .text.startup.main:000000000000002a .Loc.411
     /tmp/ccI2VDty.s:1396   .text.startup.main:000000000000002a .Loc.412
     /tmp/ccI2VDty.s:1399   .text.startup.main:000000000000002e .Loc.413
     /tmp/ccI2VDty.s:1402   .text.startup.main:0000000000000032 .Loc.414
     /tmp/ccI2VDty.s:1405   .text.startup.main:0000000000000032 .Loc.415
     /tmp/ccI2VDty.s:1406   .text.startup.main:0000000000000032 .Loc.416
     /tmp/ccI2VDty.s:1409   .text.startup.main:0000000000000032 .Loc.417
     /tmp/ccI2VDty.s:1411   .text.startup.main:0000000000000032 .Loc.418
     /tmp/ccI2VDty.s:1412   .text.startup.main:0000000000000032 .Loc.419
     /tmp/ccI2VDty.s:1414   .text.startup.main:0000000000000036 .Loc.420
     /tmp/ccI2VDty.s:1417   .text.startup.main:000000000000003c .Loc.421
     /tmp/ccI2VDty.s:1419   .text.startup.main:000000000000003c .Loc.422
     /tmp/ccI2VDty.s:1423   .text.startup.main:000000000000003c .Loc.423
     /tmp/ccI2VDty.s:1426   .text.startup.main:000000000000003c .Loc.424
     /tmp/ccI2VDty.s:1431   .text.startup.main:000000000000003e .Loc.425
     /tmp/ccI2VDty.s:1435   .text.startup.main:0000000000000042 .Loc.426
     /tmp/ccI2VDty.s:1438   .text.startup.main:0000000000000046 .Loc.427
     /tmp/ccI2VDty.s:1481   .data.lufa_driver:0000000000000000 lufa_driver
     /tmp/ccI2VDty.s:1444   .text.startup.main:000000000000004e .Loc.428
     /tmp/ccI2VDty.s:1448   .text.startup.main:0000000000000056 .Loc.429
     /tmp/ccI2VDty.s:1451   .text.startup.main:000000000000005a .Loc.430
     /tmp/ccI2VDty.s:1452   .text.startup.main:000000000000005a .Loc.431
     /tmp/ccI2VDty.s:1455   .text.startup.main:000000000000005c .Loc.432
     /tmp/ccI2VDty.s:1456   .text.startup.main:000000000000005c .Loc.433
     /tmp/ccI2VDty.s:1459   .text.startup.main:0000000000000060 .Loc.434
     /tmp/ccI2VDty.s:1460   .text.startup.main:0000000000000060 .Loc.435
     /tmp/ccI2VDty.s:1464   .text.startup.main:0000000000000068 .Loc.436
     /tmp/ccI2VDty.s:1467   .text.startup.main:000000000000006c .Loc.437
     /tmp/ccI2VDty.s:1470   .text.startup.main:0000000000000070 .Loc.438
     /tmp/ccI2VDty.s:1474   .text.startup.main:0000000000000076 L0
     /tmp/ccI2VDty.s:29     .text.keyboard_leds:0000000000000006 L0
     /tmp/ccI2VDty.s:195    .text.send_consumer:0000000000000066 L0
     /tmp/ccI2VDty.s:355    .text.send_system:000000000000006e L0
     /tmp/ccI2VDty.s:489    .text.send_mouse:0000000000000046 L0
     /tmp/ccI2VDty.s:747    .text.send_keyboard:00000000000000a6 L0
     /tmp/ccI2VDty.s:803    .text.EVENT_USB_Device_Connect:000000000000001c L0
     /tmp/ccI2VDty.s:824    .text.EVENT_USB_Device_Disconnect:0000000000000006 L0
     /tmp/ccI2VDty.s:840    .text.EVENT_USB_Device_Reset:0000000000000002 L0
     /tmp/ccI2VDty.s:858    .text.EVENT_USB_Device_Suspend:0000000000000002 L0
     /tmp/ccI2VDty.s:876    .text.EVENT_USB_Device_WakeUp:0000000000000004 L0
     /tmp/ccI2VDty.s:958    .text.EVENT_USB_Device_ConfigurationChanged:0000000000000028 L0
     /tmp/ccI2VDty.s:1312   .text.EVENT_USB_Device_ControlRequest:000000000000015a L0
     /tmp/ccI2VDty.s:1334   .text.sendchar:0000000000000004 L0
     /tmp/ccI2VDty.s:1478   .text.startup.main:0000000000000076 L0
                     .debug_frame:0000000000000000 L0
     /tmp/ccI2VDty.s:181    .text.send_consumer:000000000000005a .L2
     /tmp/ccI2VDty.s:148    .text.send_consumer:0000000000000038 .L7
     /tmp/ccI2VDty.s:133    .text.send_consumer:000000000000002c .L11
     /tmp/ccI2VDty.s:103    .text.send_consumer:0000000000000022 .L4
     /tmp/ccI2VDty.s:341    .text.send_system:0000000000000062 .L14
     /tmp/ccI2VDty.s:308    .text.send_system:0000000000000040 .L19
     /tmp/ccI2VDty.s:293    .text.send_system:0000000000000034 .L12
     /tmp/ccI2VDty.s:264    .text.send_system:000000000000002a .L16
     /tmp/ccI2VDty.s:480    .text.send_mouse:0000000000000044 .L26
     /tmp/ccI2VDty.s:449    .text.send_mouse:0000000000000026 .L33
     /tmp/ccI2VDty.s:434    .text.send_mouse:000000000000001a .L13
     /tmp/ccI2VDty.s:405    .text.send_mouse:0000000000000010 .L29
     /tmp/ccI2VDty.s:651    .text.send_keyboard:0000000000000070 .L39
     /tmp/ccI2VDty.s:658    .text.send_keyboard:0000000000000076 .L42
     /tmp/ccI2VDty.s:601    .text.send_keyboard:000000000000003c .L47
     /tmp/ccI2VDty.s:586    .text.send_keyboard:0000000000000030 .L14
     /tmp/ccI2VDty.s:557    .text.send_keyboard:0000000000000026 .L43
     /tmp/ccI2VDty.s:646    .text.send_keyboard:0000000000000068 .L1
     /tmp/ccI2VDty.s:724    .text.send_keyboard:0000000000000094 .L52
     /tmp/ccI2VDty.s:709    .text.send_keyboard:0000000000000088 .L15
     /tmp/ccI2VDty.s:680    .text.send_keyboard:000000000000007e .L49
     /tmp/ccI2VDty.s:621    .text.send_keyboard:000000000000004c .L66
     /tmp/ccI2VDty.s:791    .text.EVENT_USB_Device_Connect:000000000000001a .L67
     /tmp/ccI2VDty.s:1054   .text.EVENT_USB_Device_ControlRequest:000000000000006a .L75
     /tmp/ccI2VDty.s:988    .text.EVENT_USB_Device_ControlRequest:000000000000001c .L76
     /tmp/ccI2VDty.s:1273   .text.EVENT_USB_Device_ControlRequest:0000000000000138 .L77
     /tmp/ccI2VDty.s:1139   .text.EVENT_USB_Device_ControlRequest:00000000000000b4 .L78
     /tmp/ccI2VDty.s:996    .text.EVENT_USB_Device_ControlRequest:000000000000002a .L79
     /tmp/ccI2VDty.s:1246   .text.EVENT_USB_Device_ControlRequest:0000000000000118 .L81
     /tmp/ccI2VDty.s:1210   .text.EVENT_USB_Device_ControlRequest:00000000000000ea .L82
     /tmp/ccI2VDty.s:1135   .text.EVENT_USB_Device_ControlRequest:00000000000000b2 .L74
     /tmp/ccI2VDty.s:1044   .text.EVENT_USB_Device_ControlRequest:0000000000000062 .L91
     /tmp/ccI2VDty.s:1025   .text.EVENT_USB_Device_ControlRequest:0000000000000050 .L84
     /tmp/ccI2VDty.s:1068   .text.EVENT_USB_Device_ControlRequest:0000000000000082 .L86
     /tmp/ccI2VDty.s:1128   .text.EVENT_USB_Device_ControlRequest:00000000000000aa .L88
     /tmp/ccI2VDty.s:1079   .text.EVENT_USB_Device_ControlRequest:000000000000008c .L87
     /tmp/ccI2VDty.s:1161   .text.EVENT_USB_Device_ControlRequest:00000000000000d2 .L89
     /tmp/ccI2VDty.s:1116   .text.EVENT_USB_Device_ControlRequest:00000000000000a2 .L102
     /tmp/ccI2VDty.s:1290   .text.EVENT_USB_Device_ControlRequest:000000000000014c .L90
     /tmp/ccI2VDty.s:1185   .text.EVENT_USB_Device_ControlRequest:00000000000000de .L103
     /tmp/ccI2VDty.s:1454   .text.startup.main:000000000000005c .L110
     /tmp/ccI2VDty.s:1443   .text.startup.main:000000000000004e .L106
     /tmp/ccI2VDty.s:4015   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccI2VDty.s:6342   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccI2VDty.s:6410   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccI2VDty.s:1338   .text.startup.main:0000000000000000 .LFB137
     /tmp/ccI2VDty.s:1475   .text.startup.main:0000000000000076 .LFE137
     /tmp/ccI2VDty.s:1347   .text.startup.main:0000000000000000 .LBI294
     /tmp/ccI2VDty.s:1346   .text.startup.main:0000000000000000 .LBB294
     /tmp/ccI2VDty.s:1387   .text.startup.main:0000000000000026 .LBE294
     /tmp/ccI2VDty.s:1357   .text.startup.main:0000000000000006 .LBI296
     /tmp/ccI2VDty.s:1356   .text.startup.main:0000000000000006 .LBB296
     /tmp/ccI2VDty.s:1378   .text.startup.main:000000000000001c .LBE296
     /tmp/ccI2VDty.s:1361   .text.startup.main:0000000000000006 .LBB297
     /tmp/ccI2VDty.s:1377   .text.startup.main:000000000000001c .LBE297
     /tmp/ccI2VDty.s:1393   .text.startup.main:000000000000002a .LBI298
     /tmp/ccI2VDty.s:1392   .text.startup.main:000000000000002a .LBB298
     /tmp/ccI2VDty.s:1425   .text.startup.main:000000000000003c .LBE298
     /tmp/ccI2VDty.s:1404   .text.startup.main:0000000000000032 .LBI300
     /tmp/ccI2VDty.s:1403   .text.startup.main:0000000000000032 .LBB300
     /tmp/ccI2VDty.s:1422   .text.startup.main:000000000000003c .LBE300
     /tmp/ccI2VDty.s:1408   .text.startup.main:0000000000000032 .LBI301
     /tmp/ccI2VDty.s:1407   .text.startup.main:0000000000000032 .LBB301
     /tmp/ccI2VDty.s:1421   .text.startup.main:000000000000003c .LBE301
     /tmp/ccI2VDty.s:5286   .debug_loc:0000000000000002 .LLST56
     /tmp/ccI2VDty.s:5283   .debug_loc:0000000000000000 .LVUS56
     /tmp/ccI2VDty.s:1398   .text.startup.main:000000000000002e .LVL77
     /tmp/ccI2VDty.s:1401   .text.startup.main:0000000000000032 .LVL78
     /tmp/ccI2VDty.s:1390   .text.startup.main:000000000000002a .LVL76
     /tmp/ccI2VDty.s:1434   .text.startup.main:0000000000000042 .LVL80
     /tmp/ccI2VDty.s:1437   .text.startup.main:0000000000000046 .LVL81
     /tmp/ccI2VDty.s:1442   .text.startup.main:000000000000004e .LVL82
     /tmp/ccI2VDty.s:1450   .text.startup.main:000000000000005a .LVL83
     /tmp/ccI2VDty.s:1458   .text.startup.main:0000000000000060 .LVL84
     /tmp/ccI2VDty.s:1466   .text.startup.main:000000000000006c .LVL85
     /tmp/ccI2VDty.s:1472   .text.startup.main:0000000000000074 .LVL86
     /tmp/ccI2VDty.s:1317   .text.sendchar:0000000000000000 .LFB134
     /tmp/ccI2VDty.s:1332   .text.sendchar:0000000000000004 .LFE134
     /tmp/ccI2VDty.s:5299   .debug_loc:000000000000001a .LLST55
     /tmp/ccI2VDty.s:5294   .debug_loc:0000000000000016 .LVUS55
     /tmp/ccI2VDty.s:33     .text.send_consumer:0000000000000000 .LFB133
     /tmp/ccI2VDty.s:193    .text.send_consumer:0000000000000066 .LFE133
     /tmp/ccI2VDty.s:5313   .debug_loc:000000000000003b .LLST0
     /tmp/ccI2VDty.s:5350   .debug_loc:0000000000000087 .LLST1
     /tmp/ccI2VDty.s:5345   .debug_loc:0000000000000083 .LVUS1
     /tmp/ccI2VDty.s:5380   .debug_loc:00000000000000b7 .LLST2
     /tmp/ccI2VDty.s:5369   .debug_loc:00000000000000ad .LVUS2
     /tmp/ccI2VDty.s:5416   .debug_loc:0000000000000102 .LLST3
     /tmp/ccI2VDty.s:5413   .debug_loc:0000000000000100 .LVUS3
     /tmp/ccI2VDty.s:61     .text.send_consumer:000000000000000c .LBI177
     /tmp/ccI2VDty.s:60     .text.send_consumer:000000000000000c .LBB177
     /tmp/ccI2VDty.s:70     .text.send_consumer:0000000000000010 .LBE177
     /tmp/ccI2VDty.s:86     .text.send_consumer:000000000000001c .LBI179
     /tmp/ccI2VDty.s:5433   .debug_loc:000000000000011e .LLST4
     /tmp/ccI2VDty.s:5430   .debug_loc:000000000000011c .LVUS4
     /tmp/ccI2VDty.s:108    .text.send_consumer:0000000000000022 .LBI183
     /tmp/ccI2VDty.s:107    .text.send_consumer:0000000000000022 .LBB183
     /tmp/ccI2VDty.s:115    .text.send_consumer:0000000000000026 .LBE183
     /tmp/ccI2VDty.s:122    .text.send_consumer:000000000000002a .LBI185
     /tmp/ccI2VDty.s:121    .text.send_consumer:000000000000002a .LBB185
     /tmp/ccI2VDty.s:139    .text.send_consumer:0000000000000032 .LBE185
     /tmp/ccI2VDty.s:5444   .debug_loc:0000000000000134 .LLST5
     /tmp/ccI2VDty.s:5441   .debug_loc:0000000000000132 .LVUS5
     /tmp/ccI2VDty.s:5456   .debug_loc:000000000000014e .LLST6
     /tmp/ccI2VDty.s:5453   .debug_loc:000000000000014c .LVUS6
     /tmp/ccI2VDty.s:5468   .debug_loc:0000000000000168 .LLST7
     /tmp/ccI2VDty.s:5465   .debug_loc:0000000000000166 .LVUS7
     /tmp/ccI2VDty.s:151    .text.send_consumer:0000000000000038 .LBI187
     /tmp/ccI2VDty.s:150    .text.send_consumer:0000000000000038 .LBB187
     /tmp/ccI2VDty.s:158    .text.send_consumer:000000000000003c .LBE187
     /tmp/ccI2VDty.s:173    .text.send_consumer:0000000000000050 .LBI189
     /tmp/ccI2VDty.s:172    .text.send_consumer:0000000000000050 .LBB189
     /tmp/ccI2VDty.s:184    .text.send_consumer:000000000000005a .LBE189
     /tmp/ccI2VDty.s:170    .text.send_consumer:0000000000000050 .LVL11
     /tmp/ccI2VDty.s:199    .text.send_system:0000000000000000 .LFB132
     /tmp/ccI2VDty.s:353    .text.send_system:000000000000006e .LFE132
     /tmp/ccI2VDty.s:5477   .debug_loc:000000000000017e .LLST8
     /tmp/ccI2VDty.s:5518   .debug_loc:00000000000001ce .LLST9
     /tmp/ccI2VDty.s:5509   .debug_loc:00000000000001c6 .LVUS9
     /tmp/ccI2VDty.s:5563   .debug_loc:000000000000021c .LLST10
     /tmp/ccI2VDty.s:5552   .debug_loc:0000000000000212 .LVUS10
     /tmp/ccI2VDty.s:247    .text.send_system:0000000000000022 .LBI191
     /tmp/ccI2VDty.s:5599   .debug_loc:0000000000000267 .LLST11
     /tmp/ccI2VDty.s:5596   .debug_loc:0000000000000265 .LVUS11
     /tmp/ccI2VDty.s:269    .text.send_system:000000000000002a .LBI195
     /tmp/ccI2VDty.s:268    .text.send_system:000000000000002a .LBB195
     /tmp/ccI2VDty.s:276    .text.send_system:000000000000002e .LBE195
     /tmp/ccI2VDty.s:283    .text.send_system:0000000000000032 .LBI197
     /tmp/ccI2VDty.s:282    .text.send_system:0000000000000032 .LBB197
     /tmp/ccI2VDty.s:299    .text.send_system:000000000000003a .LBE197
     /tmp/ccI2VDty.s:5610   .debug_loc:000000000000027d .LLST12
     /tmp/ccI2VDty.s:5607   .debug_loc:000000000000027b .LVUS12
     /tmp/ccI2VDty.s:5622   .debug_loc:0000000000000297 .LLST13
     /tmp/ccI2VDty.s:5619   .debug_loc:0000000000000295 .LVUS13
     /tmp/ccI2VDty.s:5634   .debug_loc:00000000000002b1 .LLST14
     /tmp/ccI2VDty.s:5631   .debug_loc:00000000000002af .LVUS14
     /tmp/ccI2VDty.s:311    .text.send_system:0000000000000040 .LBI199
     /tmp/ccI2VDty.s:310    .text.send_system:0000000000000040 .LBB199
     /tmp/ccI2VDty.s:318    .text.send_system:0000000000000044 .LBE199
     /tmp/ccI2VDty.s:333    .text.send_system:0000000000000058 .LBI201
     /tmp/ccI2VDty.s:332    .text.send_system:0000000000000058 .LBB201
     /tmp/ccI2VDty.s:344    .text.send_system:0000000000000062 .LBE201
     /tmp/ccI2VDty.s:330    .text.send_system:0000000000000058 .LVL23
     /tmp/ccI2VDty.s:359    .text.send_mouse:0000000000000000 .LFB131
     /tmp/ccI2VDty.s:487    .text.send_mouse:0000000000000046 .LFE131
     /tmp/ccI2VDty.s:5648   .debug_loc:00000000000002cb .LLST15
     /tmp/ccI2VDty.s:5643   .debug_loc:00000000000002c7 .LVUS15
     /tmp/ccI2VDty.s:5678   .debug_loc:00000000000002fb .LLST16
     /tmp/ccI2VDty.s:5667   .debug_loc:00000000000002f1 .LVUS16
     /tmp/ccI2VDty.s:5714   .debug_loc:0000000000000346 .LLST17
     /tmp/ccI2VDty.s:5711   .debug_loc:0000000000000344 .LVUS17
     /tmp/ccI2VDty.s:369    .text.send_mouse:0000000000000000 .LBI203
     /tmp/ccI2VDty.s:368    .text.send_mouse:0000000000000000 .LBB203
     /tmp/ccI2VDty.s:378    .text.send_mouse:0000000000000004 .LBE203
     /tmp/ccI2VDty.s:386    .text.send_mouse:0000000000000008 .LBI205
     /tmp/ccI2VDty.s:5731   .debug_loc:0000000000000362 .LLST18
     /tmp/ccI2VDty.s:5728   .debug_loc:0000000000000360 .LVUS18
     /tmp/ccI2VDty.s:410    .text.send_mouse:0000000000000010 .LBI209
     /tmp/ccI2VDty.s:409    .text.send_mouse:0000000000000010 .LBB209
     /tmp/ccI2VDty.s:417    .text.send_mouse:0000000000000014 .LBE209
     /tmp/ccI2VDty.s:424    .text.send_mouse:0000000000000018 .LBI211
     /tmp/ccI2VDty.s:423    .text.send_mouse:0000000000000018 .LBB211
     /tmp/ccI2VDty.s:440    .text.send_mouse:0000000000000020 .LBE211
     /tmp/ccI2VDty.s:5742   .debug_loc:0000000000000378 .LLST19
     /tmp/ccI2VDty.s:5739   .debug_loc:0000000000000376 .LVUS19
     /tmp/ccI2VDty.s:5754   .debug_loc:0000000000000392 .LLST20
     /tmp/ccI2VDty.s:5751   .debug_loc:0000000000000390 .LVUS20
     /tmp/ccI2VDty.s:5766   .debug_loc:00000000000003ac .LLST21
     /tmp/ccI2VDty.s:5763   .debug_loc:00000000000003aa .LVUS21
     /tmp/ccI2VDty.s:452    .text.send_mouse:0000000000000026 .LBI213
     /tmp/ccI2VDty.s:451    .text.send_mouse:0000000000000026 .LBB213
     /tmp/ccI2VDty.s:459    .text.send_mouse:000000000000002a .LBE213
     /tmp/ccI2VDty.s:472    .text.send_mouse:000000000000003a .LBI215
     /tmp/ccI2VDty.s:471    .text.send_mouse:000000000000003a .LBB215
     /tmp/ccI2VDty.s:483    .text.send_mouse:0000000000000044 .LBE215
     /tmp/ccI2VDty.s:469    .text.send_mouse:000000000000003a .LVL34
     /tmp/ccI2VDty.s:493    .text.send_keyboard:0000000000000000 .LFB130
     /tmp/ccI2VDty.s:745    .text.send_keyboard:00000000000000a6 .LFE130
     /tmp/ccI2VDty.s:5775   .debug_loc:00000000000003c2 .LLST22
     /tmp/ccI2VDty.s:5801   .debug_loc:00000000000003f5 .LLST23
     /tmp/ccI2VDty.s:5796   .debug_loc:00000000000003f1 .LVUS23
     /tmp/ccI2VDty.s:5841   .debug_loc:000000000000042f .LLST24
     /tmp/ccI2VDty.s:5820   .debug_loc:000000000000041b .LVUS24
     /tmp/ccI2VDty.s:5911   .debug_loc:00000000000004bf .LLST25
     /tmp/ccI2VDty.s:5904   .debug_loc:00000000000004b9 .LVUS25
     /tmp/ccI2VDty.s:515    .text.send_keyboard:0000000000000008 .LBI217
     /tmp/ccI2VDty.s:514    .text.send_keyboard:0000000000000008 .LBB217
     /tmp/ccI2VDty.s:524    .text.send_keyboard:000000000000000c .LBE217
     /tmp/ccI2VDty.s:541    .text.send_keyboard:0000000000000020 .LBI219
     /tmp/ccI2VDty.s:5949   .debug_loc:00000000000004fe .LLST26
     /tmp/ccI2VDty.s:5946   .debug_loc:00000000000004fc .LVUS26
     /tmp/ccI2VDty.s:562    .text.send_keyboard:0000000000000026 .LBI223
     /tmp/ccI2VDty.s:561    .text.send_keyboard:0000000000000026 .LBB223
     /tmp/ccI2VDty.s:569    .text.send_keyboard:000000000000002a .LBE223
     /tmp/ccI2VDty.s:576    .text.send_keyboard:000000000000002e .LBI225
     /tmp/ccI2VDty.s:575    .text.send_keyboard:000000000000002e .LBB225
     /tmp/ccI2VDty.s:592    .text.send_keyboard:0000000000000036 .LBE225
     /tmp/ccI2VDty.s:5960   .debug_loc:0000000000000514 .LLST27
     /tmp/ccI2VDty.s:5957   .debug_loc:0000000000000512 .LVUS27
     /tmp/ccI2VDty.s:5972   .debug_loc:000000000000052e .LLST28
     /tmp/ccI2VDty.s:5969   .debug_loc:000000000000052c .LVUS28
     /tmp/ccI2VDty.s:5984   .debug_loc:0000000000000548 .LLST29
     /tmp/ccI2VDty.s:5981   .debug_loc:0000000000000546 .LVUS29
     /tmp/ccI2VDty.s:604    .text.send_keyboard:000000000000003c .LBI227
     /tmp/ccI2VDty.s:603    .text.send_keyboard:000000000000003c .LBB227
     /tmp/ccI2VDty.s:611    .text.send_keyboard:0000000000000040 .LBE227
     /tmp/ccI2VDty.s:629    .text.send_keyboard:0000000000000054 .LBI229
     /tmp/ccI2VDty.s:628    .text.send_keyboard:0000000000000054 .LBB229
     /tmp/ccI2VDty.s:638    .text.send_keyboard:000000000000005e .LBE229
     /tmp/ccI2VDty.s:661    .text.send_keyboard:0000000000000076 .LBI231
     /tmp/ccI2VDty.s:5996   .debug_loc:000000000000055f .LLST30
     /tmp/ccI2VDty.s:5993   .debug_loc:000000000000055d .LVUS30
     /tmp/ccI2VDty.s:685    .text.send_keyboard:000000000000007e .LBI235
     /tmp/ccI2VDty.s:684    .text.send_keyboard:000000000000007e .LBB235
     /tmp/ccI2VDty.s:692    .text.send_keyboard:0000000000000082 .LBE235
     /tmp/ccI2VDty.s:699    .text.send_keyboard:0000000000000086 .LBI237
     /tmp/ccI2VDty.s:698    .text.send_keyboard:0000000000000086 .LBB237
     /tmp/ccI2VDty.s:715    .text.send_keyboard:000000000000008e .LBE237
     /tmp/ccI2VDty.s:6007   .debug_loc:0000000000000575 .LLST31
     /tmp/ccI2VDty.s:6004   .debug_loc:0000000000000573 .LVUS31
     /tmp/ccI2VDty.s:6019   .debug_loc:000000000000058f .LLST32
     /tmp/ccI2VDty.s:6016   .debug_loc:000000000000058d .LVUS32
     /tmp/ccI2VDty.s:6031   .debug_loc:00000000000005a9 .LLST33
     /tmp/ccI2VDty.s:6028   .debug_loc:00000000000005a7 .LVUS33
     /tmp/ccI2VDty.s:727    .text.send_keyboard:0000000000000094 .LBI239
     /tmp/ccI2VDty.s:726    .text.send_keyboard:0000000000000094 .LBB239
     /tmp/ccI2VDty.s:734    .text.send_keyboard:0000000000000098 .LBE239
     /tmp/ccI2VDty.s:626    .text.send_keyboard:0000000000000054 .LVL46
     /tmp/ccI2VDty.s:14     .text.keyboard_leds:0000000000000000 .LFB128
     /tmp/ccI2VDty.s:27     .text.keyboard_leds:0000000000000006 .LFE128
     /tmp/ccI2VDty.s:962    .text.EVENT_USB_Device_ControlRequest:0000000000000000 .LFB127
     /tmp/ccI2VDty.s:1310   .text.EVENT_USB_Device_ControlRequest:000000000000015a .LFE127
     /tmp/ccI2VDty.s:6047   .debug_loc:00000000000005c5 .LLST51
     /tmp/ccI2VDty.s:6040   .debug_loc:00000000000005bf .LVUS51
     /tmp/ccI2VDty.s:6076   .debug_loc:00000000000005fb .LLST52
     /tmp/ccI2VDty.s:6069   .debug_loc:00000000000005f5 .LVUS52
     /tmp/ccI2VDty.s:1005   .text.EVENT_USB_Device_ControlRequest:0000000000000034 .LBI253
     /tmp/ccI2VDty.s:1004   .text.EVENT_USB_Device_ControlRequest:0000000000000034 .LBB253
     /tmp/ccI2VDty.s:1014   .text.EVENT_USB_Device_ControlRequest:000000000000003e .LBE253
     /tmp/ccI2VDty.s:1033   .text.EVENT_USB_Device_ControlRequest:0000000000000056 .LBI255
     /tmp/ccI2VDty.s:1032   .text.EVENT_USB_Device_ControlRequest:0000000000000056 .LBB255
     /tmp/ccI2VDty.s:1047   .text.EVENT_USB_Device_ControlRequest:0000000000000062 .LBE255
     /tmp/ccI2VDty.s:1071   .text.EVENT_USB_Device_ControlRequest:0000000000000082 .LBI257
     /tmp/ccI2VDty.s:1070   .text.EVENT_USB_Device_ControlRequest:0000000000000082 .LBB257
     /tmp/ccI2VDty.s:1081   .text.EVENT_USB_Device_ControlRequest:000000000000008c .LBE257
     /tmp/ccI2VDty.s:1084   .text.EVENT_USB_Device_ControlRequest:000000000000008c .LBI259
     /tmp/ccI2VDty.s:1083   .text.EVENT_USB_Device_ControlRequest:000000000000008c .LBB259
     /tmp/ccI2VDty.s:1091   .text.EVENT_USB_Device_ControlRequest:0000000000000090 .LBE259
     /tmp/ccI2VDty.s:1097   .text.EVENT_USB_Device_ControlRequest:0000000000000094 .LBI261
     /tmp/ccI2VDty.s:1096   .text.EVENT_USB_Device_ControlRequest:0000000000000094 .LBB261
     /tmp/ccI2VDty.s:1104   .text.EVENT_USB_Device_ControlRequest:0000000000000098 .LBE261
     /tmp/ccI2VDty.s:1109   .text.EVENT_USB_Device_ControlRequest:000000000000009c .LBI263
     /tmp/ccI2VDty.s:1108   .text.EVENT_USB_Device_ControlRequest:000000000000009c .LBB263
     /tmp/ccI2VDty.s:1118   .text.EVENT_USB_Device_ControlRequest:00000000000000a2 .LBE263
     /tmp/ccI2VDty.s:1202   .text.EVENT_USB_Device_ControlRequest:00000000000000e2 .LBI265
     /tmp/ccI2VDty.s:1153   .text.EVENT_USB_Device_ControlRequest:00000000000000c8 .LBI268
     /tmp/ccI2VDty.s:1152   .text.EVENT_USB_Device_ControlRequest:00000000000000c8 .LBB268
     /tmp/ccI2VDty.s:1163   .text.EVENT_USB_Device_ControlRequest:00000000000000d2 .LBE268
     /tmp/ccI2VDty.s:1166   .text.EVENT_USB_Device_ControlRequest:00000000000000d2 .LBI270
     /tmp/ccI2VDty.s:1165   .text.EVENT_USB_Device_ControlRequest:00000000000000d2 .LBB270
     /tmp/ccI2VDty.s:1173   .text.EVENT_USB_Device_ControlRequest:00000000000000d6 .LBE270
     /tmp/ccI2VDty.s:1181   .text.EVENT_USB_Device_ControlRequest:00000000000000de .LBI272
     /tmp/ccI2VDty.s:1180   .text.EVENT_USB_Device_ControlRequest:00000000000000de .LBB272
     /tmp/ccI2VDty.s:1188   .text.EVENT_USB_Device_ControlRequest:00000000000000de .LBE272
     /tmp/ccI2VDty.s:6096   .debug_loc:0000000000000628 .LLST53
     /tmp/ccI2VDty.s:6093   .debug_loc:0000000000000626 .LVUS53
     /tmp/ccI2VDty.s:1190   .text.EVENT_USB_Device_ControlRequest:00000000000000de .LBI274
     /tmp/ccI2VDty.s:1189   .text.EVENT_USB_Device_ControlRequest:00000000000000de .LBB274
     /tmp/ccI2VDty.s:1199   .text.EVENT_USB_Device_ControlRequest:00000000000000e2 .LBE274
     /tmp/ccI2VDty.s:6106   .debug_loc:000000000000063d .LLST54
     /tmp/ccI2VDty.s:6103   .debug_loc:000000000000063b .LVUS54
     /tmp/ccI2VDty.s:1226   .text.EVENT_USB_Device_ControlRequest:00000000000000fe .LBI277
     /tmp/ccI2VDty.s:1225   .text.EVENT_USB_Device_ControlRequest:00000000000000fe .LBB277
     /tmp/ccI2VDty.s:1235   .text.EVENT_USB_Device_ControlRequest:0000000000000108 .LBE277
     /tmp/ccI2VDty.s:1254   .text.EVENT_USB_Device_ControlRequest:0000000000000120 .LBI279
     /tmp/ccI2VDty.s:1253   .text.EVENT_USB_Device_ControlRequest:0000000000000120 .LBB279
     /tmp/ccI2VDty.s:1263   .text.EVENT_USB_Device_ControlRequest:000000000000012a .LBE279
     /tmp/ccI2VDty.s:1282   .text.EVENT_USB_Device_ControlRequest:0000000000000142 .LBI281
     /tmp/ccI2VDty.s:1281   .text.EVENT_USB_Device_ControlRequest:0000000000000142 .LBB281
     /tmp/ccI2VDty.s:1292   .text.EVENT_USB_Device_ControlRequest:000000000000014c .LBE281
     /tmp/ccI2VDty.s:1295   .text.EVENT_USB_Device_ControlRequest:000000000000014c .LBI283
     /tmp/ccI2VDty.s:1294   .text.EVENT_USB_Device_ControlRequest:000000000000014c .LBB283
     /tmp/ccI2VDty.s:1302   .text.EVENT_USB_Device_ControlRequest:0000000000000150 .LBE283
     /tmp/ccI2VDty.s:1030   .text.EVENT_USB_Device_ControlRequest:0000000000000056 .LVL66
     /tmp/ccI2VDty.s:1127   .text.EVENT_USB_Device_ControlRequest:00000000000000aa .LVL68
     /tmp/ccI2VDty.s:1238   .text.EVENT_USB_Device_ControlRequest:000000000000010c .LVL71
     /tmp/ccI2VDty.s:1245   .text.EVENT_USB_Device_ControlRequest:0000000000000118 .LVL72
     /tmp/ccI2VDty.s:1266   .text.EVENT_USB_Device_ControlRequest:000000000000012e .LVL73
     /tmp/ccI2VDty.s:880    .text.EVENT_USB_Device_ConfigurationChanged:0000000000000000 .LFB126
     /tmp/ccI2VDty.s:956    .text.EVENT_USB_Device_ConfigurationChanged:0000000000000028 .LFE126
     /tmp/ccI2VDty.s:6116   .debug_loc:0000000000000652 .LLST35
     /tmp/ccI2VDty.s:6113   .debug_loc:0000000000000650 .LVUS35
     /tmp/ccI2VDty.s:891    .text.EVENT_USB_Device_ConfigurationChanged:0000000000000000 .LBI245
     /tmp/ccI2VDty.s:890    .text.EVENT_USB_Device_ConfigurationChanged:0000000000000000 .LBB245
     /tmp/ccI2VDty.s:905    .text.EVENT_USB_Device_ConfigurationChanged:000000000000000a .LBE245
     /tmp/ccI2VDty.s:6127   .debug_loc:0000000000000668 .LLST36
     /tmp/ccI2VDty.s:6124   .debug_loc:0000000000000666 .LVUS36
     /tmp/ccI2VDty.s:6138   .debug_loc:000000000000067e .LLST37
     /tmp/ccI2VDty.s:6135   .debug_loc:000000000000067c .LVUS37
     /tmp/ccI2VDty.s:6149   .debug_loc:0000000000000694 .LLST38
     /tmp/ccI2VDty.s:6146   .debug_loc:0000000000000692 .LVUS38
     /tmp/ccI2VDty.s:6160   .debug_loc:00000000000006aa .LLST39
     /tmp/ccI2VDty.s:6157   .debug_loc:00000000000006a8 .LVUS39
     /tmp/ccI2VDty.s:6172   .debug_loc:00000000000006c1 .LLST40
     /tmp/ccI2VDty.s:6169   .debug_loc:00000000000006bf .LVUS40
     /tmp/ccI2VDty.s:902    .text.EVENT_USB_Device_ConfigurationChanged:000000000000000a .LVL60
     /tmp/ccI2VDty.s:908    .text.EVENT_USB_Device_ConfigurationChanged:000000000000000a .LBI247
     /tmp/ccI2VDty.s:907    .text.EVENT_USB_Device_ConfigurationChanged:000000000000000a .LBB247
     /tmp/ccI2VDty.s:922    .text.EVENT_USB_Device_ConfigurationChanged:0000000000000014 .LBE247
     /tmp/ccI2VDty.s:6183   .debug_loc:00000000000006d7 .LLST41
     /tmp/ccI2VDty.s:6180   .debug_loc:00000000000006d5 .LVUS41
     /tmp/ccI2VDty.s:6194   .debug_loc:00000000000006ed .LLST42
     /tmp/ccI2VDty.s:6191   .debug_loc:00000000000006eb .LVUS42
     /tmp/ccI2VDty.s:6205   .debug_loc:0000000000000703 .LLST43
     /tmp/ccI2VDty.s:6202   .debug_loc:0000000000000701 .LVUS43
     /tmp/ccI2VDty.s:6216   .debug_loc:0000000000000719 .LLST44
     /tmp/ccI2VDty.s:6213   .debug_loc:0000000000000717 .LVUS44
     /tmp/ccI2VDty.s:6228   .debug_loc:0000000000000730 .LLST45
     /tmp/ccI2VDty.s:6225   .debug_loc:000000000000072e .LVUS45
     /tmp/ccI2VDty.s:919    .text.EVENT_USB_Device_ConfigurationChanged:0000000000000014 .LVL61
     /tmp/ccI2VDty.s:925    .text.EVENT_USB_Device_ConfigurationChanged:0000000000000014 .LBI249
     /tmp/ccI2VDty.s:924    .text.EVENT_USB_Device_ConfigurationChanged:0000000000000014 .LBB249
     /tmp/ccI2VDty.s:939    .text.EVENT_USB_Device_ConfigurationChanged:000000000000001e .LBE249
     /tmp/ccI2VDty.s:6239   .debug_loc:0000000000000746 .LLST46
     /tmp/ccI2VDty.s:6236   .debug_loc:0000000000000744 .LVUS46
     /tmp/ccI2VDty.s:6250   .debug_loc:000000000000075c .LLST47
     /tmp/ccI2VDty.s:6247   .debug_loc:000000000000075a .LVUS47
     /tmp/ccI2VDty.s:6261   .debug_loc:0000000000000772 .LLST48
     /tmp/ccI2VDty.s:6258   .debug_loc:0000000000000770 .LVUS48
     /tmp/ccI2VDty.s:6272   .debug_loc:0000000000000788 .LLST49
     /tmp/ccI2VDty.s:6269   .debug_loc:0000000000000786 .LVUS49
     /tmp/ccI2VDty.s:6284   .debug_loc:000000000000079f .LLST50
     /tmp/ccI2VDty.s:6281   .debug_loc:000000000000079d .LVUS50
     /tmp/ccI2VDty.s:936    .text.EVENT_USB_Device_ConfigurationChanged:000000000000001e .LVL62
     /tmp/ccI2VDty.s:942    .text.EVENT_USB_Device_ConfigurationChanged:000000000000001e .LBI251
     /tmp/ccI2VDty.s:941    .text.EVENT_USB_Device_ConfigurationChanged:000000000000001e .LBB251
     /tmp/ccI2VDty.s:954    .text.EVENT_USB_Device_ConfigurationChanged:0000000000000028 .LBE251
     /tmp/ccI2VDty.s:952    .text.EVENT_USB_Device_ConfigurationChanged:0000000000000028 .LVL63
     /tmp/ccI2VDty.s:862    .text.EVENT_USB_Device_WakeUp:0000000000000000 .LFB125
     /tmp/ccI2VDty.s:874    .text.EVENT_USB_Device_WakeUp:0000000000000004 .LFE125
     /tmp/ccI2VDty.s:872    .text.EVENT_USB_Device_WakeUp:0000000000000004 .LVL58
     /tmp/ccI2VDty.s:844    .text.EVENT_USB_Device_Suspend:0000000000000000 .LFB124
     /tmp/ccI2VDty.s:856    .text.EVENT_USB_Device_Suspend:0000000000000002 .LFE124
     /tmp/ccI2VDty.s:807    .text.EVENT_USB_Device_Disconnect:0000000000000000 .LFB122
     /tmp/ccI2VDty.s:822    .text.EVENT_USB_Device_Disconnect:0000000000000006 .LFE122
     /tmp/ccI2VDty.s:751    .text.EVENT_USB_Device_Connect:0000000000000000 .LFB121
     /tmp/ccI2VDty.s:801    .text.EVENT_USB_Device_Connect:000000000000001c .LFE121
     /tmp/ccI2VDty.s:773    .text.EVENT_USB_Device_Connect:0000000000000010 .LBI241
     /tmp/ccI2VDty.s:772    .text.EVENT_USB_Device_Connect:0000000000000010 .LBB241
     /tmp/ccI2VDty.s:797    .text.EVENT_USB_Device_Connect:000000000000001a .LBE241
     /tmp/ccI2VDty.s:779    .text.EVENT_USB_Device_Connect:0000000000000010 .LBI243
     /tmp/ccI2VDty.s:778    .text.EVENT_USB_Device_Connect:0000000000000010 .LBB243
     /tmp/ccI2VDty.s:795    .text.EVENT_USB_Device_Connect:000000000000001a .LBE243
     /tmp/ccI2VDty.s:6295   .debug_loc:00000000000007b5 .LLST34
     /tmp/ccI2VDty.s:6292   .debug_loc:00000000000007b3 .LVUS34
     /tmp/ccI2VDty.s:767    .text.EVENT_USB_Device_Connect:000000000000000c .LVL55
     /tmp/ccI2VDty.s:770    .text.EVENT_USB_Device_Connect:0000000000000010 .LVL56
     /tmp/ccI2VDty.s:1418   .text.startup.main:000000000000003c .LVL79
     /tmp/ccI2VDty.s:1316   .text.sendchar:0000000000000000 .LVL74
     /tmp/ccI2VDty.s:1327   .text.sendchar:0000000000000002 .LVL75
     /tmp/ccI2VDty.s:38     .text.send_consumer:0000000000000002 .LCFI0
     /tmp/ccI2VDty.s:42     .text.send_consumer:0000000000000004 .LCFI1
     /tmp/ccI2VDty.s:47     .text.send_consumer:0000000000000008 .LCFI2
     /tmp/ccI2VDty.s:51     .text.send_consumer:000000000000000c .LCFI3
     /tmp/ccI2VDty.s:32     .text.send_consumer:0000000000000000 .LVL0
     /tmp/ccI2VDty.s:102    .text.send_consumer:0000000000000022 .LVL6
     /tmp/ccI2VDty.s:58     .text.send_consumer:000000000000000c .LVL1
     /tmp/ccI2VDty.s:93     .text.send_consumer:0000000000000020 .LVL5
     /tmp/ccI2VDty.s:136    .text.send_consumer:0000000000000032 .LVL8
     /tmp/ccI2VDty.s:143    .text.send_consumer:0000000000000034 .LVL9
     /tmp/ccI2VDty.s:147    .text.send_consumer:0000000000000038 .LVL10
     /tmp/ccI2VDty.s:67     .text.send_consumer:0000000000000010 .LVL2
     /tmp/ccI2VDty.s:78     .text.send_consumer:0000000000000016 .LVL3
     /tmp/ccI2VDty.s:84     .text.send_consumer:000000000000001c .LVL4
     /tmp/ccI2VDty.s:120    .text.send_consumer:000000000000002a .LVL7
     /tmp/ccI2VDty.s:204    .text.send_system:0000000000000002 .LCFI4
     /tmp/ccI2VDty.s:208    .text.send_system:0000000000000004 .LCFI5
     /tmp/ccI2VDty.s:213    .text.send_system:0000000000000008 .LCFI6
     /tmp/ccI2VDty.s:217    .text.send_system:000000000000000c .LCFI7
     /tmp/ccI2VDty.s:198    .text.send_system:0000000000000000 .LVL12
     /tmp/ccI2VDty.s:229    .text.send_system:0000000000000012 .LVL14
     /tmp/ccI2VDty.s:240    .text.send_system:000000000000001e .LVL15
     /tmp/ccI2VDty.s:225    .text.send_system:000000000000000e .LVL13
     /tmp/ccI2VDty.s:254    .text.send_system:0000000000000028 .LVL17
     /tmp/ccI2VDty.s:263    .text.send_system:000000000000002a .LVL18
     /tmp/ccI2VDty.s:296    .text.send_system:000000000000003a .LVL20
     /tmp/ccI2VDty.s:303    .text.send_system:000000000000003c .LVL21
     /tmp/ccI2VDty.s:307    .text.send_system:0000000000000040 .LVL22
     /tmp/ccI2VDty.s:245    .text.send_system:0000000000000022 .LVL16
     /tmp/ccI2VDty.s:281    .text.send_system:0000000000000032 .LVL19
     /tmp/ccI2VDty.s:358    .text.send_mouse:0000000000000000 .LVL24
     /tmp/ccI2VDty.s:395    .text.send_mouse:000000000000000e .LVL28
     /tmp/ccI2VDty.s:404    .text.send_mouse:0000000000000010 .LVL29
     /tmp/ccI2VDty.s:437    .text.send_mouse:0000000000000020 .LVL31
     /tmp/ccI2VDty.s:444    .text.send_mouse:0000000000000022 .LVL32
     /tmp/ccI2VDty.s:448    .text.send_mouse:0000000000000026 .LVL33
     /tmp/ccI2VDty.s:375    .text.send_mouse:0000000000000004 .LVL25
     /tmp/ccI2VDty.s:392    .text.send_mouse:000000000000000a .LVL27
     /tmp/ccI2VDty.s:384    .text.send_mouse:0000000000000008 .LVL26
     /tmp/ccI2VDty.s:422    .text.send_mouse:0000000000000018 .LVL30
     /tmp/ccI2VDty.s:498    .text.send_keyboard:0000000000000002 .LCFI8
     /tmp/ccI2VDty.s:502    .text.send_keyboard:0000000000000004 .LCFI9
     /tmp/ccI2VDty.s:492    .text.send_keyboard:0000000000000000 .LVL35
     /tmp/ccI2VDty.s:521    .text.send_keyboard:000000000000000c .LVL37
     /tmp/ccI2VDty.s:512    .text.send_keyboard:0000000000000008 .LVL36
     /tmp/ccI2VDty.s:547    .text.send_keyboard:0000000000000024 .LVL39
     /tmp/ccI2VDty.s:556    .text.send_keyboard:0000000000000026 .LVL40
     /tmp/ccI2VDty.s:589    .text.send_keyboard:0000000000000036 .LVL42
     /tmp/ccI2VDty.s:596    .text.send_keyboard:0000000000000038 .LVL43
     /tmp/ccI2VDty.s:600    .text.send_keyboard:000000000000003c .LVL44
     /tmp/ccI2VDty.s:657    .text.send_keyboard:0000000000000076 .LVL47
     /tmp/ccI2VDty.s:670    .text.send_keyboard:000000000000007c .LVL49
     /tmp/ccI2VDty.s:679    .text.send_keyboard:000000000000007e .LVL50
     /tmp/ccI2VDty.s:712    .text.send_keyboard:000000000000008e .LVL52
     /tmp/ccI2VDty.s:719    .text.send_keyboard:0000000000000090 .LVL53
     /tmp/ccI2VDty.s:723    .text.send_keyboard:0000000000000094 .LVL54
     /tmp/ccI2VDty.s:620    .text.send_keyboard:000000000000004c .LVL45
     /tmp/ccI2VDty.s:667    .text.send_keyboard:0000000000000078 .LVL48
     /tmp/ccI2VDty.s:539    .text.send_keyboard:0000000000000020 .LVL38
     /tmp/ccI2VDty.s:574    .text.send_keyboard:000000000000002e .LVL41
     /tmp/ccI2VDty.s:697    .text.send_keyboard:0000000000000086 .LVL51
     /tmp/ccI2VDty.s:970    .text.EVENT_USB_Device_ControlRequest:0000000000000000 .LVL64
     /tmp/ccI2VDty.s:1026   .text.EVENT_USB_Device_ControlRequest:0000000000000050 .LVL65
     /tmp/ccI2VDty.s:1043   .text.EVENT_USB_Device_ControlRequest:0000000000000062 .LVL67
     /tmp/ccI2VDty.s:1179   .text.EVENT_USB_Device_ControlRequest:00000000000000de .LVL69
     /tmp/ccI2VDty.s:1196   .text.EVENT_USB_Device_ControlRequest:00000000000000e2 .LVL70
     /tmp/ccI2VDty.s:888    .text.EVENT_USB_Device_ConfigurationChanged:0000000000000000 .LVL59
     /tmp/ccI2VDty.s:790    .text.EVENT_USB_Device_Connect:000000000000001a .LVL57
     /tmp/ccI2VDty.s:1529   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccI2VDty.s:828    .text.EVENT_USB_Device_Reset:0000000000000000 .LFB139
     /tmp/ccI2VDty.s:838    .text.EVENT_USB_Device_Reset:0000000000000002 .LFE139
     /tmp/ccI2VDty.s:85     .text.send_consumer:000000000000001c .LBB179
     /tmp/ccI2VDty.s:96     .text.send_consumer:0000000000000020 .LBE179
     /tmp/ccI2VDty.s:98     .text.send_consumer:0000000000000020 .LBB182
     /tmp/ccI2VDty.s:106    .text.send_consumer:0000000000000022 .LBE182
     /tmp/ccI2VDty.s:246    .text.send_system:0000000000000022 .LBB191
     /tmp/ccI2VDty.s:257    .text.send_system:0000000000000028 .LBE191
     /tmp/ccI2VDty.s:259    .text.send_system:0000000000000028 .LBB194
     /tmp/ccI2VDty.s:267    .text.send_system:000000000000002a .LBE194
     /tmp/ccI2VDty.s:385    .text.send_mouse:0000000000000008 .LBB205
     /tmp/ccI2VDty.s:398    .text.send_mouse:000000000000000e .LBE205
     /tmp/ccI2VDty.s:400    .text.send_mouse:000000000000000e .LBB208
     /tmp/ccI2VDty.s:408    .text.send_mouse:0000000000000010 .LBE208
     /tmp/ccI2VDty.s:540    .text.send_keyboard:0000000000000020 .LBB219
     /tmp/ccI2VDty.s:550    .text.send_keyboard:0000000000000024 .LBE219
     /tmp/ccI2VDty.s:552    .text.send_keyboard:0000000000000024 .LBB222
     /tmp/ccI2VDty.s:560    .text.send_keyboard:0000000000000026 .LBE222
     /tmp/ccI2VDty.s:660    .text.send_keyboard:0000000000000076 .LBB231
     /tmp/ccI2VDty.s:673    .text.send_keyboard:000000000000007c .LBE231
     /tmp/ccI2VDty.s:675    .text.send_keyboard:000000000000007c .LBB234
     /tmp/ccI2VDty.s:683    .text.send_keyboard:000000000000007e .LBE234
     /tmp/ccI2VDty.s:1119   .text.EVENT_USB_Device_ControlRequest:00000000000000a2 .LBB265
     /tmp/ccI2VDty.s:1124   .text.EVENT_USB_Device_ControlRequest:00000000000000a6 .LBE265
     /tmp/ccI2VDty.s:1201   .text.EVENT_USB_Device_ControlRequest:00000000000000e2 .LBB276
     /tmp/ccI2VDty.s:1212   .text.EVENT_USB_Device_ControlRequest:00000000000000ea .LBE276

UNDEFINED SYMBOLS
USB_DeviceState
Endpoint_Write_Stream_LE
keymap_config
USB_IsInitialized
USB_Disable
USB_Init
suspend_wakeup_init
Endpoint_ConfigureEndpoint_Prv
USB_ControlRequest
Endpoint_Write_Control_Stream_LE
Endpoint_ClearStatusStage
clear_keyboard
keyboard_setup
USB_USBTask
keyboard_init
host_set_driver
keyboard_task
suspend_power_down
USB_Device_RemoteWakeupEnabled
suspend_wakeup_condition
USB_Device_SendRemoteWakeup
__do_copy_data
__do_clear_bss
