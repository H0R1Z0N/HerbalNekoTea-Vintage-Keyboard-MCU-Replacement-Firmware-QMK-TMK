   1               		.file	"descriptor.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.file 1 "./tmk_core/protocol/lufa/descriptor.c"
  11               		.section	.text.CALLBACK_USB_GetDescriptor,"ax",@progbits
  12               	.global	CALLBACK_USB_GetDescriptor
  14               	CALLBACK_USB_GetDescriptor:
  15               	.LVL0:
  16               	.LFB104:
   1:./tmk_core/protocol/lufa/descriptor.c **** /* 
   2:./tmk_core/protocol/lufa/descriptor.c ****  * Copyright 2012 Jun Wako <wakojun@gmail.com>
   3:./tmk_core/protocol/lufa/descriptor.c ****  * This file is based on:
   4:./tmk_core/protocol/lufa/descriptor.c ****  *     LUFA-120219/Demos/Device/Lowlevel/KeyboardMouse
   5:./tmk_core/protocol/lufa/descriptor.c ****  *     LUFA-120219/Demos/Device/Lowlevel/GenericHID
   6:./tmk_core/protocol/lufa/descriptor.c ****  */
   7:./tmk_core/protocol/lufa/descriptor.c **** 
   8:./tmk_core/protocol/lufa/descriptor.c **** /*
   9:./tmk_core/protocol/lufa/descriptor.c ****              LUFA Library
  10:./tmk_core/protocol/lufa/descriptor.c ****      Copyright (C) Dean Camera, 2012.
  11:./tmk_core/protocol/lufa/descriptor.c **** 
  12:./tmk_core/protocol/lufa/descriptor.c ****   dean [at] fourwalledcubicle [dot] com
  13:./tmk_core/protocol/lufa/descriptor.c ****            www.lufa-lib.org
  14:./tmk_core/protocol/lufa/descriptor.c **** */
  15:./tmk_core/protocol/lufa/descriptor.c **** 
  16:./tmk_core/protocol/lufa/descriptor.c **** /*
  17:./tmk_core/protocol/lufa/descriptor.c ****   Copyright 2012  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  18:./tmk_core/protocol/lufa/descriptor.c ****   Copyright 2010  Denver Gingerich (denver [at] ossguy [dot] com)
  19:./tmk_core/protocol/lufa/descriptor.c **** 
  20:./tmk_core/protocol/lufa/descriptor.c ****   Permission to use, copy, modify, distribute, and sell this
  21:./tmk_core/protocol/lufa/descriptor.c ****   software and its documentation for any purpose is hereby granted
  22:./tmk_core/protocol/lufa/descriptor.c ****   without fee, provided that the above copyright notice appear in
  23:./tmk_core/protocol/lufa/descriptor.c ****   all copies and that both that the copyright notice and this
  24:./tmk_core/protocol/lufa/descriptor.c ****   permission notice and warranty disclaimer appear in supporting
  25:./tmk_core/protocol/lufa/descriptor.c ****   documentation, and that the name of the author not be used in
  26:./tmk_core/protocol/lufa/descriptor.c ****   advertising or publicity pertaining to distribution of the
  27:./tmk_core/protocol/lufa/descriptor.c ****   software without specific, written prior permission.
  28:./tmk_core/protocol/lufa/descriptor.c **** 
  29:./tmk_core/protocol/lufa/descriptor.c ****   The author disclaim all warranties with regard to this
  30:./tmk_core/protocol/lufa/descriptor.c ****   software, including all implied warranties of merchantability
  31:./tmk_core/protocol/lufa/descriptor.c ****   and fitness.  In no event shall the author be liable for any
  32:./tmk_core/protocol/lufa/descriptor.c ****   special, indirect or consequential damages or any damages
  33:./tmk_core/protocol/lufa/descriptor.c ****   whatsoever resulting from loss of use, data or profits, whether
  34:./tmk_core/protocol/lufa/descriptor.c ****   in an action of contract, negligence or other tortious action,
  35:./tmk_core/protocol/lufa/descriptor.c ****   arising out of or in connection with the use or performance of
  36:./tmk_core/protocol/lufa/descriptor.c ****   this software.
  37:./tmk_core/protocol/lufa/descriptor.c **** */
  38:./tmk_core/protocol/lufa/descriptor.c **** 
  39:./tmk_core/protocol/lufa/descriptor.c **** #include "util.h"
  40:./tmk_core/protocol/lufa/descriptor.c **** #include "report.h"
  41:./tmk_core/protocol/lufa/descriptor.c **** #include "descriptor.h"
  42:./tmk_core/protocol/lufa/descriptor.c **** 
  43:./tmk_core/protocol/lufa/descriptor.c **** #ifndef USB_MAX_POWER_CONSUMPTION
  44:./tmk_core/protocol/lufa/descriptor.c **** #define USB_MAX_POWER_CONSUMPTION 500
  45:./tmk_core/protocol/lufa/descriptor.c **** #endif
  46:./tmk_core/protocol/lufa/descriptor.c **** 
  47:./tmk_core/protocol/lufa/descriptor.c **** /*******************************************************************************
  48:./tmk_core/protocol/lufa/descriptor.c ****  * HID Report Descriptors
  49:./tmk_core/protocol/lufa/descriptor.c ****  ******************************************************************************/
  50:./tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM KeyboardReport[] =
  51:./tmk_core/protocol/lufa/descriptor.c **** {
  52:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
  53:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x06), /* Keyboard */
  54:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
  55:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x07), /* Key Codes */
  56:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0xE0), /* Keyboard Left Control */
  57:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0xE7), /* Keyboard Right GUI */
  58:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
  59:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(8, 0x01),
  60:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x08),
  61:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
  62:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
  63:./tmk_core/protocol/lufa/descriptor.c **** 
  64:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x01),
  65:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x08),
  66:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_CONSTANT),  /* reserved */
  67:./tmk_core/protocol/lufa/descriptor.c **** 
  68:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x08), /* LEDs */
  69:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0x01), /* Num Lock */
  70:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0x05), /* Kana */
  71:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x05),
  72:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
  73:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE | HID_IOF_NON_VOLATILE)
  74:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x01),
  75:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x03),
  76:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_CONSTANT),
  77:./tmk_core/protocol/lufa/descriptor.c **** 
  78:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x07), /* Keyboard */
  79:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0x00), /* Reserved (no event indicated) */
  80:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0xFF), /* Keyboard Application */
  81:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
  82:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(16, 0x00FF),
  83:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x06),
  84:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x08),
  85:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_ARRAY | HID_IOF_ABSOLUTE),
  86:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
  87:./tmk_core/protocol/lufa/descriptor.c **** };
  88:./tmk_core/protocol/lufa/descriptor.c **** 
  89:./tmk_core/protocol/lufa/descriptor.c **** #ifdef MOUSE_ENABLE
  90:./tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM MouseReport[] =
  91:./tmk_core/protocol/lufa/descriptor.c **** {
  92:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
  93:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x02), /* Mouse */
  94:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
  95:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE(8, 0x01), /* Pointer */
  96:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_COLLECTION(8, 0x00), /* Physical */
  97:./tmk_core/protocol/lufa/descriptor.c **** 
  98:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE_PAGE(8, 0x09), /* Button */
  99:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE_MINIMUM(8, 0x01),  /* Button 1 */
 100:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE_MAXIMUM(8, 0x05),  /* Button 5 */
 101:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MINIMUM(8, 0x00),
 102:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MAXIMUM(8, 0x01),
 103:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x05),
 104:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x01),
 105:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
 106:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x01),
 107:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x03),
 108:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_CONSTANT),
 109:./tmk_core/protocol/lufa/descriptor.c **** 
 110:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
 111:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE(8, 0x30), /* Usage X */
 112:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE(8, 0x31), /* Usage Y */
 113:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MINIMUM(8, -127),
 114:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MAXIMUM(8, 127),
 115:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x02),
 116:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x08),
 117:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_RELATIVE),
 118:./tmk_core/protocol/lufa/descriptor.c **** 
 119:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE(8, 0x38), /* Wheel */
 120:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MINIMUM(8, -127),
 121:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MAXIMUM(8, 127),
 122:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x01),
 123:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x08),
 124:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_RELATIVE),
 125:./tmk_core/protocol/lufa/descriptor.c **** 
 126:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE_PAGE(8, 0x0C), /* Consumer */
 127:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE(16, 0x0238), /* AC Pan (Horizontal wheel) */
 128:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MINIMUM(8, -127),
 129:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MAXIMUM(8, 127),
 130:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x01),
 131:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x08),
 132:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_RELATIVE),
 133:./tmk_core/protocol/lufa/descriptor.c **** 
 134:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_END_COLLECTION(0),
 135:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 136:./tmk_core/protocol/lufa/descriptor.c **** };
 137:./tmk_core/protocol/lufa/descriptor.c **** #endif
 138:./tmk_core/protocol/lufa/descriptor.c **** 
 139:./tmk_core/protocol/lufa/descriptor.c **** #ifdef EXTRAKEY_ENABLE
 140:./tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM ExtrakeyReport[] =
 141:./tmk_core/protocol/lufa/descriptor.c **** {
 142:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
 143:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x80), /* System Control */
 144:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
 145:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_ID(8, REPORT_ID_SYSTEM),
 146:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(16, 0x0001),
 147:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(16, 0x0003),
 148:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(16, 0x0081), /* System Power Down */
 149:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(16, 0x0083), /* System Wake Up */
 150:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 16),
 151:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 1),
 152:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_ARRAY | HID_IOF_ABSOLUTE),
 153:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 154:./tmk_core/protocol/lufa/descriptor.c **** 
 155:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x0C), /* Consumer */
 156:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x01), /* Consumer Control */
 157:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
 158:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_ID(8, REPORT_ID_CONSUMER),
 159:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(16, 0x0001),
 160:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(16, 0x029C),
 161:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(16, 0x0001), /* +10 */
 162:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(16, 0x029C), /* AC Distribute Vertically */
 163:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 16),
 164:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 1),
 165:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_ARRAY | HID_IOF_ABSOLUTE),
 166:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 167:./tmk_core/protocol/lufa/descriptor.c **** };
 168:./tmk_core/protocol/lufa/descriptor.c **** #endif
 169:./tmk_core/protocol/lufa/descriptor.c **** 
 170:./tmk_core/protocol/lufa/descriptor.c **** #ifdef RAW_ENABLE
 171:./tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM RawReport[] =
 172:./tmk_core/protocol/lufa/descriptor.c **** {
 173:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(16, 0xFF60), /* Vendor Page 0xFF60 */
 174:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x61), /* Vendor Usage 0x61 */
 175:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
 176:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE(8, 0x62), /* Vendor Usage 0x62 */
 177:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
 178:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(16, 0x00FF),
 179:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, RAW_EPSIZE),
 180:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x08),
 181:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
 182:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE(8, 0x63), /* Vendor Usage 0x63 */
 183:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
 184:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(16, 0x00FF),
 185:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, RAW_EPSIZE),
 186:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x08),
 187:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE | HID_IOF_NON_VOLATILE)
 188:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 189:./tmk_core/protocol/lufa/descriptor.c **** };
 190:./tmk_core/protocol/lufa/descriptor.c **** #endif
 191:./tmk_core/protocol/lufa/descriptor.c **** 
 192:./tmk_core/protocol/lufa/descriptor.c **** #ifdef CONSOLE_ENABLE
 193:./tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM ConsoleReport[] =
 194:./tmk_core/protocol/lufa/descriptor.c **** {
 195:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(16, 0xFF31), /* Vendor Page(PJRC Teensy compatible) */
 196:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x74), /* Vendor Usage(PJRC Teensy compatible) */
 197:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
 198:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE(8, 0x75), /* Vendor Usage 0x75 */
 199:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
 200:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(16, 0x00FF),
 201:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, CONSOLE_EPSIZE),
 202:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x08),
 203:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
 204:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE(8, 0x76), /* Vendor Usage 0x76 */
 205:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
 206:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(16, 0x00FF),
 207:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, CONSOLE_EPSIZE),
 208:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x08),
 209:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE | HID_IOF_NON_VOLATILE)
 210:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 211:./tmk_core/protocol/lufa/descriptor.c **** };
 212:./tmk_core/protocol/lufa/descriptor.c **** #endif
 213:./tmk_core/protocol/lufa/descriptor.c **** 
 214:./tmk_core/protocol/lufa/descriptor.c **** #ifdef NKRO_ENABLE
 215:./tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM NKROReport[] =
 216:./tmk_core/protocol/lufa/descriptor.c **** {
 217:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
 218:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x06), /* Keyboard */
 219:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
 220:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x07), /* Key Codes */
 221:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0xE0), /* Keyboard Left Control */
 222:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0xE7), /* Keyboard Right GUI */
 223:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
 224:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(8, 0x01),
 225:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x08),
 226:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
 227:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
 228:./tmk_core/protocol/lufa/descriptor.c **** 
 229:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x08), /* LEDs */
 230:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0x01), /* Num Lock */
 231:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0x05), /* Kana */
 232:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x05),
 233:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
 234:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE | HID_IOF_NON_VOLATILE)
 235:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x01),
 236:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x03),
 237:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_CONSTANT),
 238:./tmk_core/protocol/lufa/descriptor.c **** 
 239:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x07), /* Key Codes */
 240:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0x00), /* Keyboard 0 */
 241:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, (NKRO_EPSIZE-1)*8-1), /* Keyboard Right GUI */
 242:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
 243:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(8, 0x01),
 244:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, (NKRO_EPSIZE-1)*8),
 245:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
 246:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
 247:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 248:./tmk_core/protocol/lufa/descriptor.c **** };
 249:./tmk_core/protocol/lufa/descriptor.c **** #endif
 250:./tmk_core/protocol/lufa/descriptor.c **** 
 251:./tmk_core/protocol/lufa/descriptor.c **** /*******************************************************************************
 252:./tmk_core/protocol/lufa/descriptor.c ****  * Device Descriptors
 253:./tmk_core/protocol/lufa/descriptor.c ****  ******************************************************************************/
 254:./tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_Device_t PROGMEM DeviceDescriptor =
 255:./tmk_core/protocol/lufa/descriptor.c **** {
 256:./tmk_core/protocol/lufa/descriptor.c ****     .Header                 = {.Size = sizeof(USB_Descriptor_Device_t), .Type = DTYPE_Device},
 257:./tmk_core/protocol/lufa/descriptor.c **** 
 258:./tmk_core/protocol/lufa/descriptor.c ****     .USBSpecification       = VERSION_BCD(1,1,0),
 259:./tmk_core/protocol/lufa/descriptor.c **** #if VIRTSER_ENABLE
 260:./tmk_core/protocol/lufa/descriptor.c ****     .Class                  = USB_CSCP_IADDeviceClass,
 261:./tmk_core/protocol/lufa/descriptor.c ****     .SubClass               = USB_CSCP_IADDeviceSubclass,
 262:./tmk_core/protocol/lufa/descriptor.c ****     .Protocol               = USB_CSCP_IADDeviceProtocol,
 263:./tmk_core/protocol/lufa/descriptor.c **** #else
 264:./tmk_core/protocol/lufa/descriptor.c ****     .Class                  = USB_CSCP_NoDeviceClass,
 265:./tmk_core/protocol/lufa/descriptor.c ****     .SubClass               = USB_CSCP_NoDeviceSubclass,
 266:./tmk_core/protocol/lufa/descriptor.c ****     .Protocol               = USB_CSCP_NoDeviceProtocol,
 267:./tmk_core/protocol/lufa/descriptor.c **** #endif
 268:./tmk_core/protocol/lufa/descriptor.c **** 
 269:./tmk_core/protocol/lufa/descriptor.c ****     .Endpoint0Size          = FIXED_CONTROL_ENDPOINT_SIZE,
 270:./tmk_core/protocol/lufa/descriptor.c **** 
 271:./tmk_core/protocol/lufa/descriptor.c ****     /* specified in config.h */
 272:./tmk_core/protocol/lufa/descriptor.c ****     .VendorID               = VENDOR_ID,
 273:./tmk_core/protocol/lufa/descriptor.c ****     .ProductID              = PRODUCT_ID,
 274:./tmk_core/protocol/lufa/descriptor.c ****     .ReleaseNumber          = DEVICE_VER,
 275:./tmk_core/protocol/lufa/descriptor.c **** 
 276:./tmk_core/protocol/lufa/descriptor.c ****     .ManufacturerStrIndex   = 0x01,
 277:./tmk_core/protocol/lufa/descriptor.c ****     .ProductStrIndex        = 0x02,
 278:./tmk_core/protocol/lufa/descriptor.c ****     .SerialNumStrIndex      = NO_DESCRIPTOR,
 279:./tmk_core/protocol/lufa/descriptor.c **** 
 280:./tmk_core/protocol/lufa/descriptor.c ****     .NumberOfConfigurations = FIXED_NUM_CONFIGURATIONS
 281:./tmk_core/protocol/lufa/descriptor.c **** };
 282:./tmk_core/protocol/lufa/descriptor.c **** 
 283:./tmk_core/protocol/lufa/descriptor.c **** /*******************************************************************************
 284:./tmk_core/protocol/lufa/descriptor.c ****  * Configuration Descriptors
 285:./tmk_core/protocol/lufa/descriptor.c ****  ******************************************************************************/
 286:./tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_Configuration_t PROGMEM ConfigurationDescriptor =
 287:./tmk_core/protocol/lufa/descriptor.c **** {
 288:./tmk_core/protocol/lufa/descriptor.c ****     .Config =
 289:./tmk_core/protocol/lufa/descriptor.c ****         {
 290:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Configuration_Header_t), .Type
 291:./tmk_core/protocol/lufa/descriptor.c **** 
 292:./tmk_core/protocol/lufa/descriptor.c ****             .TotalConfigurationSize = sizeof(USB_Descriptor_Configuration_t),
 293:./tmk_core/protocol/lufa/descriptor.c ****             .TotalInterfaces        = TOTAL_INTERFACES,
 294:./tmk_core/protocol/lufa/descriptor.c **** 
 295:./tmk_core/protocol/lufa/descriptor.c ****             .ConfigurationNumber    = 1,
 296:./tmk_core/protocol/lufa/descriptor.c ****             .ConfigurationStrIndex  = NO_DESCRIPTOR,
 297:./tmk_core/protocol/lufa/descriptor.c **** 
 298:./tmk_core/protocol/lufa/descriptor.c ****             .ConfigAttributes       = (USB_CONFIG_ATTR_RESERVED | USB_CONFIG_ATTR_REMOTEWAKEUP),
 299:./tmk_core/protocol/lufa/descriptor.c **** 
 300:./tmk_core/protocol/lufa/descriptor.c ****             .MaxPowerConsumption    = USB_CONFIG_POWER_MA(USB_MAX_POWER_CONSUMPTION)
 301:./tmk_core/protocol/lufa/descriptor.c ****         },
 302:./tmk_core/protocol/lufa/descriptor.c **** 
 303:./tmk_core/protocol/lufa/descriptor.c ****     /*
 304:./tmk_core/protocol/lufa/descriptor.c ****      * Keyboard
 305:./tmk_core/protocol/lufa/descriptor.c ****      */
 306:./tmk_core/protocol/lufa/descriptor.c ****     .Keyboard_Interface =
 307:./tmk_core/protocol/lufa/descriptor.c ****         {
 308:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 309:./tmk_core/protocol/lufa/descriptor.c **** 
 310:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber        = KEYBOARD_INTERFACE,
 311:./tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 312:./tmk_core/protocol/lufa/descriptor.c **** 
 313:./tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 1,
 314:./tmk_core/protocol/lufa/descriptor.c **** 
 315:./tmk_core/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 316:./tmk_core/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_BootSubclass,
 317:./tmk_core/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_KeyboardBootProtocol,
 318:./tmk_core/protocol/lufa/descriptor.c **** 
 319:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 320:./tmk_core/protocol/lufa/descriptor.c ****         },
 321:./tmk_core/protocol/lufa/descriptor.c **** 
 322:./tmk_core/protocol/lufa/descriptor.c ****     .Keyboard_HID =
 323:./tmk_core/protocol/lufa/descriptor.c ****         {
 324:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 325:./tmk_core/protocol/lufa/descriptor.c **** 
 326:./tmk_core/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 327:./tmk_core/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 328:./tmk_core/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 329:./tmk_core/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 330:./tmk_core/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(KeyboardReport)
 331:./tmk_core/protocol/lufa/descriptor.c ****         },
 332:./tmk_core/protocol/lufa/descriptor.c **** 
 333:./tmk_core/protocol/lufa/descriptor.c ****     .Keyboard_INEndpoint =
 334:./tmk_core/protocol/lufa/descriptor.c ****         {
 335:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 336:./tmk_core/protocol/lufa/descriptor.c **** 
 337:./tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | KEYBOARD_IN_EPNUM),
 338:./tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 339:./tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = KEYBOARD_EPSIZE,
 340:./tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x0A
 341:./tmk_core/protocol/lufa/descriptor.c ****         },
 342:./tmk_core/protocol/lufa/descriptor.c **** 
 343:./tmk_core/protocol/lufa/descriptor.c ****     /*
 344:./tmk_core/protocol/lufa/descriptor.c ****      * Mouse
 345:./tmk_core/protocol/lufa/descriptor.c ****      */
 346:./tmk_core/protocol/lufa/descriptor.c **** #ifdef MOUSE_ENABLE
 347:./tmk_core/protocol/lufa/descriptor.c ****     .Mouse_Interface =
 348:./tmk_core/protocol/lufa/descriptor.c ****         {
 349:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 350:./tmk_core/protocol/lufa/descriptor.c **** 
 351:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber        = MOUSE_INTERFACE,
 352:./tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 353:./tmk_core/protocol/lufa/descriptor.c **** 
 354:./tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 1,
 355:./tmk_core/protocol/lufa/descriptor.c **** 
 356:./tmk_core/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 357:./tmk_core/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_BootSubclass,
 358:./tmk_core/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_MouseBootProtocol,
 359:./tmk_core/protocol/lufa/descriptor.c **** 
 360:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 361:./tmk_core/protocol/lufa/descriptor.c ****         },
 362:./tmk_core/protocol/lufa/descriptor.c **** 
 363:./tmk_core/protocol/lufa/descriptor.c ****     .Mouse_HID =
 364:./tmk_core/protocol/lufa/descriptor.c ****         {
 365:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 366:./tmk_core/protocol/lufa/descriptor.c **** 
 367:./tmk_core/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 368:./tmk_core/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 369:./tmk_core/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 370:./tmk_core/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 371:./tmk_core/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(MouseReport)
 372:./tmk_core/protocol/lufa/descriptor.c ****         },
 373:./tmk_core/protocol/lufa/descriptor.c **** 
 374:./tmk_core/protocol/lufa/descriptor.c ****     .Mouse_INEndpoint =
 375:./tmk_core/protocol/lufa/descriptor.c ****         {
 376:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 377:./tmk_core/protocol/lufa/descriptor.c **** 
 378:./tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | MOUSE_IN_EPNUM),
 379:./tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 380:./tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = MOUSE_EPSIZE,
 381:./tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x0A
 382:./tmk_core/protocol/lufa/descriptor.c ****         },
 383:./tmk_core/protocol/lufa/descriptor.c **** #endif
 384:./tmk_core/protocol/lufa/descriptor.c **** 
 385:./tmk_core/protocol/lufa/descriptor.c ****     /*
 386:./tmk_core/protocol/lufa/descriptor.c ****      * Extra
 387:./tmk_core/protocol/lufa/descriptor.c ****      */
 388:./tmk_core/protocol/lufa/descriptor.c **** #ifdef EXTRAKEY_ENABLE
 389:./tmk_core/protocol/lufa/descriptor.c ****     .Extrakey_Interface =
 390:./tmk_core/protocol/lufa/descriptor.c ****         {
 391:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 392:./tmk_core/protocol/lufa/descriptor.c **** 
 393:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber        = EXTRAKEY_INTERFACE,
 394:./tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 395:./tmk_core/protocol/lufa/descriptor.c **** 
 396:./tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 1,
 397:./tmk_core/protocol/lufa/descriptor.c **** 
 398:./tmk_core/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 399:./tmk_core/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_NonBootSubclass,
 400:./tmk_core/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_NonBootProtocol,
 401:./tmk_core/protocol/lufa/descriptor.c **** 
 402:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 403:./tmk_core/protocol/lufa/descriptor.c ****         },
 404:./tmk_core/protocol/lufa/descriptor.c **** 
 405:./tmk_core/protocol/lufa/descriptor.c ****     .Extrakey_HID =
 406:./tmk_core/protocol/lufa/descriptor.c ****         {
 407:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 408:./tmk_core/protocol/lufa/descriptor.c **** 
 409:./tmk_core/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 410:./tmk_core/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 411:./tmk_core/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 412:./tmk_core/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 413:./tmk_core/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(ExtrakeyReport)
 414:./tmk_core/protocol/lufa/descriptor.c ****         },
 415:./tmk_core/protocol/lufa/descriptor.c **** 
 416:./tmk_core/protocol/lufa/descriptor.c ****     .Extrakey_INEndpoint =
 417:./tmk_core/protocol/lufa/descriptor.c ****         {
 418:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 419:./tmk_core/protocol/lufa/descriptor.c **** 
 420:./tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | EXTRAKEY_IN_EPNUM),
 421:./tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 422:./tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = EXTRAKEY_EPSIZE,
 423:./tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x0A
 424:./tmk_core/protocol/lufa/descriptor.c ****         },
 425:./tmk_core/protocol/lufa/descriptor.c **** #endif
 426:./tmk_core/protocol/lufa/descriptor.c **** 
 427:./tmk_core/protocol/lufa/descriptor.c **** 		/*
 428:./tmk_core/protocol/lufa/descriptor.c **** 	     * Raw
 429:./tmk_core/protocol/lufa/descriptor.c **** 	     */
 430:./tmk_core/protocol/lufa/descriptor.c **** 	#ifdef RAW_ENABLE
 431:./tmk_core/protocol/lufa/descriptor.c **** 	    .Raw_Interface =
 432:./tmk_core/protocol/lufa/descriptor.c **** 	        {
 433:./tmk_core/protocol/lufa/descriptor.c **** 	            .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_I
 434:./tmk_core/protocol/lufa/descriptor.c **** 
 435:./tmk_core/protocol/lufa/descriptor.c **** 	            .InterfaceNumber        = RAW_INTERFACE,
 436:./tmk_core/protocol/lufa/descriptor.c **** 	            .AlternateSetting       = 0x00,
 437:./tmk_core/protocol/lufa/descriptor.c **** 
 438:./tmk_core/protocol/lufa/descriptor.c **** 	            .TotalEndpoints         = 2,
 439:./tmk_core/protocol/lufa/descriptor.c **** 
 440:./tmk_core/protocol/lufa/descriptor.c **** 	            .Class                  = HID_CSCP_HIDClass,
 441:./tmk_core/protocol/lufa/descriptor.c **** 	            .SubClass               = HID_CSCP_NonBootSubclass,
 442:./tmk_core/protocol/lufa/descriptor.c **** 	            .Protocol               = HID_CSCP_NonBootProtocol,
 443:./tmk_core/protocol/lufa/descriptor.c **** 
 444:./tmk_core/protocol/lufa/descriptor.c **** 	            .InterfaceStrIndex      = NO_DESCRIPTOR
 445:./tmk_core/protocol/lufa/descriptor.c **** 	        },
 446:./tmk_core/protocol/lufa/descriptor.c **** 
 447:./tmk_core/protocol/lufa/descriptor.c **** 	    .Raw_HID =
 448:./tmk_core/protocol/lufa/descriptor.c **** 	        {
 449:./tmk_core/protocol/lufa/descriptor.c **** 	            .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE
 450:./tmk_core/protocol/lufa/descriptor.c **** 
 451:./tmk_core/protocol/lufa/descriptor.c **** 	            .HIDSpec                = VERSION_BCD(1,1,1),
 452:./tmk_core/protocol/lufa/descriptor.c **** 	            .CountryCode            = 0x00,
 453:./tmk_core/protocol/lufa/descriptor.c **** 	            .TotalReportDescriptors = 1,
 454:./tmk_core/protocol/lufa/descriptor.c **** 	            .HIDReportType          = HID_DTYPE_Report,
 455:./tmk_core/protocol/lufa/descriptor.c **** 	            .HIDReportLength        = sizeof(RawReport)
 456:./tmk_core/protocol/lufa/descriptor.c **** 	        },
 457:./tmk_core/protocol/lufa/descriptor.c **** 
 458:./tmk_core/protocol/lufa/descriptor.c **** 	    .Raw_INEndpoint =
 459:./tmk_core/protocol/lufa/descriptor.c **** 	        {
 460:./tmk_core/protocol/lufa/descriptor.c **** 	            .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_En
 461:./tmk_core/protocol/lufa/descriptor.c **** 
 462:./tmk_core/protocol/lufa/descriptor.c **** 	            .EndpointAddress        = (ENDPOINT_DIR_IN | RAW_IN_EPNUM),
 463:./tmk_core/protocol/lufa/descriptor.c **** 	            .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_
 464:./tmk_core/protocol/lufa/descriptor.c **** 	            .EndpointSize           = RAW_EPSIZE,
 465:./tmk_core/protocol/lufa/descriptor.c **** 	            .PollingIntervalMS      = 0x01
 466:./tmk_core/protocol/lufa/descriptor.c **** 	        },
 467:./tmk_core/protocol/lufa/descriptor.c **** 
 468:./tmk_core/protocol/lufa/descriptor.c **** 	    .Raw_OUTEndpoint =
 469:./tmk_core/protocol/lufa/descriptor.c **** 	        {
 470:./tmk_core/protocol/lufa/descriptor.c **** 	            .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_En
 471:./tmk_core/protocol/lufa/descriptor.c **** 
 472:./tmk_core/protocol/lufa/descriptor.c **** 	            .EndpointAddress        = (ENDPOINT_DIR_OUT | RAW_OUT_EPNUM),
 473:./tmk_core/protocol/lufa/descriptor.c **** 	            .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_
 474:./tmk_core/protocol/lufa/descriptor.c **** 	            .EndpointSize           = RAW_EPSIZE,
 475:./tmk_core/protocol/lufa/descriptor.c **** 	            .PollingIntervalMS      = 0x01
 476:./tmk_core/protocol/lufa/descriptor.c **** 	        },
 477:./tmk_core/protocol/lufa/descriptor.c **** 	#endif
 478:./tmk_core/protocol/lufa/descriptor.c **** 
 479:./tmk_core/protocol/lufa/descriptor.c ****     /*
 480:./tmk_core/protocol/lufa/descriptor.c ****      * Console
 481:./tmk_core/protocol/lufa/descriptor.c ****      */
 482:./tmk_core/protocol/lufa/descriptor.c **** #ifdef CONSOLE_ENABLE
 483:./tmk_core/protocol/lufa/descriptor.c ****     .Console_Interface =
 484:./tmk_core/protocol/lufa/descriptor.c ****         {
 485:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 486:./tmk_core/protocol/lufa/descriptor.c **** 
 487:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber        = CONSOLE_INTERFACE,
 488:./tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 489:./tmk_core/protocol/lufa/descriptor.c **** 
 490:./tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 2,
 491:./tmk_core/protocol/lufa/descriptor.c **** 
 492:./tmk_core/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 493:./tmk_core/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_NonBootSubclass,
 494:./tmk_core/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_NonBootProtocol,
 495:./tmk_core/protocol/lufa/descriptor.c **** 
 496:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 497:./tmk_core/protocol/lufa/descriptor.c ****         },
 498:./tmk_core/protocol/lufa/descriptor.c **** 
 499:./tmk_core/protocol/lufa/descriptor.c ****     .Console_HID =
 500:./tmk_core/protocol/lufa/descriptor.c ****         {
 501:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 502:./tmk_core/protocol/lufa/descriptor.c **** 
 503:./tmk_core/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 504:./tmk_core/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 505:./tmk_core/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 506:./tmk_core/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 507:./tmk_core/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(ConsoleReport)
 508:./tmk_core/protocol/lufa/descriptor.c ****         },
 509:./tmk_core/protocol/lufa/descriptor.c **** 
 510:./tmk_core/protocol/lufa/descriptor.c ****     .Console_INEndpoint =
 511:./tmk_core/protocol/lufa/descriptor.c ****         {
 512:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 513:./tmk_core/protocol/lufa/descriptor.c **** 
 514:./tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | CONSOLE_IN_EPNUM),
 515:./tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 516:./tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = CONSOLE_EPSIZE,
 517:./tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x01
 518:./tmk_core/protocol/lufa/descriptor.c ****         },
 519:./tmk_core/protocol/lufa/descriptor.c **** 
 520:./tmk_core/protocol/lufa/descriptor.c ****     .Console_OUTEndpoint =
 521:./tmk_core/protocol/lufa/descriptor.c ****         {
 522:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 523:./tmk_core/protocol/lufa/descriptor.c **** 
 524:./tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_OUT | CONSOLE_OUT_EPNUM),
 525:./tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 526:./tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = CONSOLE_EPSIZE,
 527:./tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x01
 528:./tmk_core/protocol/lufa/descriptor.c ****         },
 529:./tmk_core/protocol/lufa/descriptor.c **** #endif
 530:./tmk_core/protocol/lufa/descriptor.c **** 
 531:./tmk_core/protocol/lufa/descriptor.c ****     /*
 532:./tmk_core/protocol/lufa/descriptor.c ****      * NKRO
 533:./tmk_core/protocol/lufa/descriptor.c ****      */
 534:./tmk_core/protocol/lufa/descriptor.c **** #ifdef NKRO_ENABLE
 535:./tmk_core/protocol/lufa/descriptor.c ****     .NKRO_Interface =
 536:./tmk_core/protocol/lufa/descriptor.c ****         {
 537:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 538:./tmk_core/protocol/lufa/descriptor.c **** 
 539:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber        = NKRO_INTERFACE,
 540:./tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 541:./tmk_core/protocol/lufa/descriptor.c **** 
 542:./tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 1,
 543:./tmk_core/protocol/lufa/descriptor.c **** 
 544:./tmk_core/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 545:./tmk_core/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_NonBootSubclass,
 546:./tmk_core/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_NonBootProtocol,
 547:./tmk_core/protocol/lufa/descriptor.c **** 
 548:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 549:./tmk_core/protocol/lufa/descriptor.c ****         },
 550:./tmk_core/protocol/lufa/descriptor.c **** 
 551:./tmk_core/protocol/lufa/descriptor.c ****     .NKRO_HID =
 552:./tmk_core/protocol/lufa/descriptor.c ****         {
 553:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 554:./tmk_core/protocol/lufa/descriptor.c **** 
 555:./tmk_core/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 556:./tmk_core/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 557:./tmk_core/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 558:./tmk_core/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 559:./tmk_core/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(NKROReport)
 560:./tmk_core/protocol/lufa/descriptor.c ****         },
 561:./tmk_core/protocol/lufa/descriptor.c **** 
 562:./tmk_core/protocol/lufa/descriptor.c ****     .NKRO_INEndpoint =
 563:./tmk_core/protocol/lufa/descriptor.c ****         {
 564:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 565:./tmk_core/protocol/lufa/descriptor.c **** 
 566:./tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | NKRO_IN_EPNUM),
 567:./tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 568:./tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = NKRO_EPSIZE,
 569:./tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x01
 570:./tmk_core/protocol/lufa/descriptor.c ****         },
 571:./tmk_core/protocol/lufa/descriptor.c **** #endif
 572:./tmk_core/protocol/lufa/descriptor.c **** 
 573:./tmk_core/protocol/lufa/descriptor.c **** #ifdef MIDI_ENABLE
 574:./tmk_core/protocol/lufa/descriptor.c ****     .Audio_ControlInterface =
 575:./tmk_core/protocol/lufa/descriptor.c ****         {
 576:./tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_
 577:./tmk_core/protocol/lufa/descriptor.c **** 
 578:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber          = AC_INTERFACE,
 579:./tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting         = 0,
 580:./tmk_core/protocol/lufa/descriptor.c **** 
 581:./tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints           = 0,
 582:./tmk_core/protocol/lufa/descriptor.c **** 
 583:./tmk_core/protocol/lufa/descriptor.c ****             .Class                    = AUDIO_CSCP_AudioClass,
 584:./tmk_core/protocol/lufa/descriptor.c ****             .SubClass                 = AUDIO_CSCP_ControlSubclass,
 585:./tmk_core/protocol/lufa/descriptor.c ****             .Protocol                 = AUDIO_CSCP_ControlProtocol,
 586:./tmk_core/protocol/lufa/descriptor.c **** 
 587:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex        = NO_DESCRIPTOR
 588:./tmk_core/protocol/lufa/descriptor.c ****         },
 589:./tmk_core/protocol/lufa/descriptor.c **** 
 590:./tmk_core/protocol/lufa/descriptor.c ****     .Audio_ControlInterface_SPC =
 591:./tmk_core/protocol/lufa/descriptor.c ****         {
 592:./tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_Audio_Descriptor_Interface_AC_t), .Type
 593:./tmk_core/protocol/lufa/descriptor.c ****             .Subtype                  = AUDIO_DSUBTYPE_CSInterface_Header,
 594:./tmk_core/protocol/lufa/descriptor.c **** 
 595:./tmk_core/protocol/lufa/descriptor.c ****             .ACSpecification          = VERSION_BCD(1,0,0),
 596:./tmk_core/protocol/lufa/descriptor.c ****             .TotalLength              = sizeof(USB_Audio_Descriptor_Interface_AC_t),
 597:./tmk_core/protocol/lufa/descriptor.c **** 
 598:./tmk_core/protocol/lufa/descriptor.c ****             .InCollection             = 1,
 599:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber          = AS_INTERFACE,
 600:./tmk_core/protocol/lufa/descriptor.c ****         },
 601:./tmk_core/protocol/lufa/descriptor.c **** 
 602:./tmk_core/protocol/lufa/descriptor.c ****     .Audio_StreamInterface =
 603:./tmk_core/protocol/lufa/descriptor.c ****         {
 604:./tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_
 605:./tmk_core/protocol/lufa/descriptor.c **** 
 606:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber          = AS_INTERFACE,
 607:./tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting         = 0,
 608:./tmk_core/protocol/lufa/descriptor.c **** 
 609:./tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints           = 2,
 610:./tmk_core/protocol/lufa/descriptor.c **** 
 611:./tmk_core/protocol/lufa/descriptor.c ****             .Class                    = AUDIO_CSCP_AudioClass,
 612:./tmk_core/protocol/lufa/descriptor.c ****             .SubClass                 = AUDIO_CSCP_MIDIStreamingSubclass,
 613:./tmk_core/protocol/lufa/descriptor.c ****             .Protocol                 = AUDIO_CSCP_StreamingProtocol,
 614:./tmk_core/protocol/lufa/descriptor.c **** 
 615:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex        = NO_DESCRIPTOR
 616:./tmk_core/protocol/lufa/descriptor.c ****         },
 617:./tmk_core/protocol/lufa/descriptor.c **** 
 618:./tmk_core/protocol/lufa/descriptor.c ****     .Audio_StreamInterface_SPC =
 619:./tmk_core/protocol/lufa/descriptor.c ****         {
 620:./tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_MIDI_Descriptor_AudioInterface_AS_t), .
 621:./tmk_core/protocol/lufa/descriptor.c ****             .Subtype                  = AUDIO_DSUBTYPE_CSInterface_General,
 622:./tmk_core/protocol/lufa/descriptor.c **** 
 623:./tmk_core/protocol/lufa/descriptor.c ****             .AudioSpecification       = VERSION_BCD(1,0,0),
 624:./tmk_core/protocol/lufa/descriptor.c **** 
 625:./tmk_core/protocol/lufa/descriptor.c ****             .TotalLength              = (sizeof(USB_Descriptor_Configuration_t) -
 626:./tmk_core/protocol/lufa/descriptor.c ****                                          offsetof(USB_Descriptor_Configuration_t, Audio_StreamInter
 627:./tmk_core/protocol/lufa/descriptor.c ****         },
 628:./tmk_core/protocol/lufa/descriptor.c **** 
 629:./tmk_core/protocol/lufa/descriptor.c ****     .MIDI_In_Jack_Emb =
 630:./tmk_core/protocol/lufa/descriptor.c ****         {
 631:./tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_MIDI_Descriptor_InputJack_t), .Type = D
 632:./tmk_core/protocol/lufa/descriptor.c ****             .Subtype                  = AUDIO_DSUBTYPE_CSInterface_InputTerminal,
 633:./tmk_core/protocol/lufa/descriptor.c **** 
 634:./tmk_core/protocol/lufa/descriptor.c ****             .JackType                 = MIDI_JACKTYPE_Embedded,
 635:./tmk_core/protocol/lufa/descriptor.c ****             .JackID                   = 0x01,
 636:./tmk_core/protocol/lufa/descriptor.c **** 
 637:./tmk_core/protocol/lufa/descriptor.c ****             .JackStrIndex             = NO_DESCRIPTOR
 638:./tmk_core/protocol/lufa/descriptor.c ****         },
 639:./tmk_core/protocol/lufa/descriptor.c **** 
 640:./tmk_core/protocol/lufa/descriptor.c ****     .MIDI_In_Jack_Ext =
 641:./tmk_core/protocol/lufa/descriptor.c ****         {
 642:./tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_MIDI_Descriptor_InputJack_t), .Type = D
 643:./tmk_core/protocol/lufa/descriptor.c ****             .Subtype                  = AUDIO_DSUBTYPE_CSInterface_InputTerminal,
 644:./tmk_core/protocol/lufa/descriptor.c **** 
 645:./tmk_core/protocol/lufa/descriptor.c ****             .JackType                 = MIDI_JACKTYPE_External,
 646:./tmk_core/protocol/lufa/descriptor.c ****             .JackID                   = 0x02,
 647:./tmk_core/protocol/lufa/descriptor.c **** 
 648:./tmk_core/protocol/lufa/descriptor.c ****             .JackStrIndex             = NO_DESCRIPTOR
 649:./tmk_core/protocol/lufa/descriptor.c ****         },
 650:./tmk_core/protocol/lufa/descriptor.c **** 
 651:./tmk_core/protocol/lufa/descriptor.c ****     .MIDI_Out_Jack_Emb =
 652:./tmk_core/protocol/lufa/descriptor.c ****         {
 653:./tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_MIDI_Descriptor_OutputJack_t), .Type = 
 654:./tmk_core/protocol/lufa/descriptor.c ****             .Subtype                  = AUDIO_DSUBTYPE_CSInterface_OutputTerminal,
 655:./tmk_core/protocol/lufa/descriptor.c **** 
 656:./tmk_core/protocol/lufa/descriptor.c ****             .JackType                 = MIDI_JACKTYPE_Embedded,
 657:./tmk_core/protocol/lufa/descriptor.c ****             .JackID                   = 0x03,
 658:./tmk_core/protocol/lufa/descriptor.c **** 
 659:./tmk_core/protocol/lufa/descriptor.c ****             .NumberOfPins             = 1,
 660:./tmk_core/protocol/lufa/descriptor.c ****             .SourceJackID             = {0x02},
 661:./tmk_core/protocol/lufa/descriptor.c ****             .SourcePinID              = {0x01},
 662:./tmk_core/protocol/lufa/descriptor.c **** 
 663:./tmk_core/protocol/lufa/descriptor.c ****             .JackStrIndex             = NO_DESCRIPTOR
 664:./tmk_core/protocol/lufa/descriptor.c ****         },
 665:./tmk_core/protocol/lufa/descriptor.c **** 
 666:./tmk_core/protocol/lufa/descriptor.c ****     .MIDI_Out_Jack_Ext =
 667:./tmk_core/protocol/lufa/descriptor.c ****         {
 668:./tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_MIDI_Descriptor_OutputJack_t), .Type = 
 669:./tmk_core/protocol/lufa/descriptor.c ****             .Subtype                  = AUDIO_DSUBTYPE_CSInterface_OutputTerminal,
 670:./tmk_core/protocol/lufa/descriptor.c **** 
 671:./tmk_core/protocol/lufa/descriptor.c ****             .JackType                 = MIDI_JACKTYPE_External,
 672:./tmk_core/protocol/lufa/descriptor.c ****             .JackID                   = 0x04,
 673:./tmk_core/protocol/lufa/descriptor.c **** 
 674:./tmk_core/protocol/lufa/descriptor.c ****             .NumberOfPins             = 1,
 675:./tmk_core/protocol/lufa/descriptor.c ****             .SourceJackID             = {0x01},
 676:./tmk_core/protocol/lufa/descriptor.c ****             .SourcePinID              = {0x01},
 677:./tmk_core/protocol/lufa/descriptor.c **** 
 678:./tmk_core/protocol/lufa/descriptor.c ****             .JackStrIndex             = NO_DESCRIPTOR
 679:./tmk_core/protocol/lufa/descriptor.c ****         },
 680:./tmk_core/protocol/lufa/descriptor.c **** 
 681:./tmk_core/protocol/lufa/descriptor.c ****     .MIDI_In_Jack_Endpoint =
 682:./tmk_core/protocol/lufa/descriptor.c ****         {
 683:./tmk_core/protocol/lufa/descriptor.c ****             .Endpoint =
 684:./tmk_core/protocol/lufa/descriptor.c ****                 {
 685:./tmk_core/protocol/lufa/descriptor.c ****                     .Header              = {.Size = sizeof(USB_Audio_Descriptor_StreamEndpoint_Std_
 686:./tmk_core/protocol/lufa/descriptor.c **** 
 687:./tmk_core/protocol/lufa/descriptor.c ****                     .EndpointAddress     = MIDI_STREAM_OUT_EPADDR,
 688:./tmk_core/protocol/lufa/descriptor.c ****                     .Attributes          = (EP_TYPE_BULK | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 689:./tmk_core/protocol/lufa/descriptor.c ****                     .EndpointSize        = MIDI_STREAM_EPSIZE,
 690:./tmk_core/protocol/lufa/descriptor.c ****                     .PollingIntervalMS   = 0x05
 691:./tmk_core/protocol/lufa/descriptor.c ****                 },
 692:./tmk_core/protocol/lufa/descriptor.c **** 
 693:./tmk_core/protocol/lufa/descriptor.c ****             .Refresh                  = 0,
 694:./tmk_core/protocol/lufa/descriptor.c ****             .SyncEndpointNumber       = 0
 695:./tmk_core/protocol/lufa/descriptor.c ****         },
 696:./tmk_core/protocol/lufa/descriptor.c **** 
 697:./tmk_core/protocol/lufa/descriptor.c ****     .MIDI_In_Jack_Endpoint_SPC =
 698:./tmk_core/protocol/lufa/descriptor.c ****         {
 699:./tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_MIDI_Descriptor_Jack_Endpoint_t), .Type
 700:./tmk_core/protocol/lufa/descriptor.c ****             .Subtype                  = AUDIO_DSUBTYPE_CSEndpoint_General,
 701:./tmk_core/protocol/lufa/descriptor.c **** 
 702:./tmk_core/protocol/lufa/descriptor.c ****             .TotalEmbeddedJacks       = 0x01,
 703:./tmk_core/protocol/lufa/descriptor.c ****             .AssociatedJackID         = {0x01}
 704:./tmk_core/protocol/lufa/descriptor.c ****         },
 705:./tmk_core/protocol/lufa/descriptor.c **** 
 706:./tmk_core/protocol/lufa/descriptor.c ****     .MIDI_Out_Jack_Endpoint =
 707:./tmk_core/protocol/lufa/descriptor.c ****         {
 708:./tmk_core/protocol/lufa/descriptor.c ****             .Endpoint =
 709:./tmk_core/protocol/lufa/descriptor.c ****                 {
 710:./tmk_core/protocol/lufa/descriptor.c ****                     .Header              = {.Size = sizeof(USB_Audio_Descriptor_StreamEndpoint_Std_
 711:./tmk_core/protocol/lufa/descriptor.c **** 
 712:./tmk_core/protocol/lufa/descriptor.c ****                     .EndpointAddress     = MIDI_STREAM_IN_EPADDR,
 713:./tmk_core/protocol/lufa/descriptor.c ****                     .Attributes          = (EP_TYPE_BULK | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 714:./tmk_core/protocol/lufa/descriptor.c ****                     .EndpointSize        = MIDI_STREAM_EPSIZE,
 715:./tmk_core/protocol/lufa/descriptor.c ****                     .PollingIntervalMS   = 0x05
 716:./tmk_core/protocol/lufa/descriptor.c ****                 },
 717:./tmk_core/protocol/lufa/descriptor.c **** 
 718:./tmk_core/protocol/lufa/descriptor.c ****             .Refresh                  = 0,
 719:./tmk_core/protocol/lufa/descriptor.c ****             .SyncEndpointNumber       = 0
 720:./tmk_core/protocol/lufa/descriptor.c ****         },
 721:./tmk_core/protocol/lufa/descriptor.c **** 
 722:./tmk_core/protocol/lufa/descriptor.c ****     .MIDI_Out_Jack_Endpoint_SPC =
 723:./tmk_core/protocol/lufa/descriptor.c ****         {
 724:./tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_MIDI_Descriptor_Jack_Endpoint_t), .Type
 725:./tmk_core/protocol/lufa/descriptor.c ****             .Subtype                  = AUDIO_DSUBTYPE_CSEndpoint_General,
 726:./tmk_core/protocol/lufa/descriptor.c **** 
 727:./tmk_core/protocol/lufa/descriptor.c ****             .TotalEmbeddedJacks       = 0x01,
 728:./tmk_core/protocol/lufa/descriptor.c ****             .AssociatedJackID         = {0x03}
 729:./tmk_core/protocol/lufa/descriptor.c ****         },
 730:./tmk_core/protocol/lufa/descriptor.c **** #endif
 731:./tmk_core/protocol/lufa/descriptor.c **** 
 732:./tmk_core/protocol/lufa/descriptor.c **** #ifdef VIRTSER_ENABLE
 733:./tmk_core/protocol/lufa/descriptor.c ****     .CDC_Interface_Association =
 734:./tmk_core/protocol/lufa/descriptor.c ****             {
 735:./tmk_core/protocol/lufa/descriptor.c ****                     .Header                 = {.Size = sizeof(USB_Descriptor_Interface_Association_
 736:./tmk_core/protocol/lufa/descriptor.c **** 
 737:./tmk_core/protocol/lufa/descriptor.c ****                     .FirstInterfaceIndex    = CCI_INTERFACE,
 738:./tmk_core/protocol/lufa/descriptor.c ****                     .TotalInterfaces        = 2,
 739:./tmk_core/protocol/lufa/descriptor.c **** 
 740:./tmk_core/protocol/lufa/descriptor.c ****                     .Class                  = CDC_CSCP_CDCClass,
 741:./tmk_core/protocol/lufa/descriptor.c ****                     .SubClass               = CDC_CSCP_ACMSubclass,
 742:./tmk_core/protocol/lufa/descriptor.c ****                     .Protocol               = CDC_CSCP_ATCommandProtocol,
 743:./tmk_core/protocol/lufa/descriptor.c **** 
 744:./tmk_core/protocol/lufa/descriptor.c ****                     .IADStrIndex            = NO_DESCRIPTOR,
 745:./tmk_core/protocol/lufa/descriptor.c ****             },
 746:./tmk_core/protocol/lufa/descriptor.c **** 
 747:./tmk_core/protocol/lufa/descriptor.c ****     .CDC_CCI_Interface =
 748:./tmk_core/protocol/lufa/descriptor.c ****             {
 749:./tmk_core/protocol/lufa/descriptor.c ****                     .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = 
 750:./tmk_core/protocol/lufa/descriptor.c **** 
 751:./tmk_core/protocol/lufa/descriptor.c ****                     .InterfaceNumber        = CCI_INTERFACE,
 752:./tmk_core/protocol/lufa/descriptor.c ****                     .AlternateSetting       = 0,
 753:./tmk_core/protocol/lufa/descriptor.c **** 
 754:./tmk_core/protocol/lufa/descriptor.c ****                     .TotalEndpoints         = 1,
 755:./tmk_core/protocol/lufa/descriptor.c **** 
 756:./tmk_core/protocol/lufa/descriptor.c ****                     .Class                  = CDC_CSCP_CDCClass,
 757:./tmk_core/protocol/lufa/descriptor.c ****                     .SubClass               = CDC_CSCP_ACMSubclass,
 758:./tmk_core/protocol/lufa/descriptor.c ****                     .Protocol               = CDC_CSCP_ATCommandProtocol,
 759:./tmk_core/protocol/lufa/descriptor.c **** 
 760:./tmk_core/protocol/lufa/descriptor.c ****                     .InterfaceStrIndex      = NO_DESCRIPTOR
 761:./tmk_core/protocol/lufa/descriptor.c ****             },
 762:./tmk_core/protocol/lufa/descriptor.c **** 
 763:./tmk_core/protocol/lufa/descriptor.c ****     .CDC_Functional_Header =
 764:./tmk_core/protocol/lufa/descriptor.c ****             {
 765:./tmk_core/protocol/lufa/descriptor.c ****                     .Header                 = {.Size = sizeof(USB_CDC_Descriptor_FunctionalHeader_t
 766:./tmk_core/protocol/lufa/descriptor.c ****                     .Subtype                = 0x00,
 767:./tmk_core/protocol/lufa/descriptor.c **** 
 768:./tmk_core/protocol/lufa/descriptor.c ****                     .CDCSpecification       = VERSION_BCD(1,1,0),
 769:./tmk_core/protocol/lufa/descriptor.c ****             },
 770:./tmk_core/protocol/lufa/descriptor.c **** 
 771:./tmk_core/protocol/lufa/descriptor.c ****     .CDC_Functional_ACM =
 772:./tmk_core/protocol/lufa/descriptor.c ****             {
 773:./tmk_core/protocol/lufa/descriptor.c ****                     .Header                 = {.Size = sizeof(USB_CDC_Descriptor_FunctionalACM_t), 
 774:./tmk_core/protocol/lufa/descriptor.c ****                     .Subtype                = 0x02,
 775:./tmk_core/protocol/lufa/descriptor.c **** 
 776:./tmk_core/protocol/lufa/descriptor.c ****                     .Capabilities           = 0x02,
 777:./tmk_core/protocol/lufa/descriptor.c ****             },
 778:./tmk_core/protocol/lufa/descriptor.c **** 
 779:./tmk_core/protocol/lufa/descriptor.c ****     .CDC_Functional_Union =
 780:./tmk_core/protocol/lufa/descriptor.c ****             {
 781:./tmk_core/protocol/lufa/descriptor.c ****                     .Header                 = {.Size = sizeof(USB_CDC_Descriptor_FunctionalUnion_t)
 782:./tmk_core/protocol/lufa/descriptor.c ****                     .Subtype                = 0x06,
 783:./tmk_core/protocol/lufa/descriptor.c **** 
 784:./tmk_core/protocol/lufa/descriptor.c ****                     .MasterInterfaceNumber  = CCI_INTERFACE,
 785:./tmk_core/protocol/lufa/descriptor.c ****                     .SlaveInterfaceNumber   = CDI_INTERFACE,
 786:./tmk_core/protocol/lufa/descriptor.c ****             },
 787:./tmk_core/protocol/lufa/descriptor.c **** 
 788:./tmk_core/protocol/lufa/descriptor.c ****     .CDC_NotificationEndpoint =
 789:./tmk_core/protocol/lufa/descriptor.c ****             {
 790:./tmk_core/protocol/lufa/descriptor.c ****                     .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = D
 791:./tmk_core/protocol/lufa/descriptor.c **** 
 792:./tmk_core/protocol/lufa/descriptor.c ****                     .EndpointAddress        = CDC_NOTIFICATION_EPADDR,
 793:./tmk_core/protocol/lufa/descriptor.c ****                     .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT
 794:./tmk_core/protocol/lufa/descriptor.c ****                     .EndpointSize           = CDC_NOTIFICATION_EPSIZE,
 795:./tmk_core/protocol/lufa/descriptor.c ****                     .PollingIntervalMS      = 0xFF
 796:./tmk_core/protocol/lufa/descriptor.c ****             },
 797:./tmk_core/protocol/lufa/descriptor.c **** 
 798:./tmk_core/protocol/lufa/descriptor.c ****     .CDC_DCI_Interface =
 799:./tmk_core/protocol/lufa/descriptor.c ****             {
 800:./tmk_core/protocol/lufa/descriptor.c ****                     .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = 
 801:./tmk_core/protocol/lufa/descriptor.c **** 
 802:./tmk_core/protocol/lufa/descriptor.c ****                     .InterfaceNumber        = CDI_INTERFACE,
 803:./tmk_core/protocol/lufa/descriptor.c ****                     .AlternateSetting       = 0,
 804:./tmk_core/protocol/lufa/descriptor.c **** 
 805:./tmk_core/protocol/lufa/descriptor.c ****                     .TotalEndpoints         = 2,
 806:./tmk_core/protocol/lufa/descriptor.c **** 
 807:./tmk_core/protocol/lufa/descriptor.c ****                     .Class                  = CDC_CSCP_CDCDataClass,
 808:./tmk_core/protocol/lufa/descriptor.c ****                     .SubClass               = CDC_CSCP_NoDataSubclass,
 809:./tmk_core/protocol/lufa/descriptor.c ****                     .Protocol               = CDC_CSCP_NoDataProtocol,
 810:./tmk_core/protocol/lufa/descriptor.c **** 
 811:./tmk_core/protocol/lufa/descriptor.c ****                     .InterfaceStrIndex      = NO_DESCRIPTOR
 812:./tmk_core/protocol/lufa/descriptor.c ****             },
 813:./tmk_core/protocol/lufa/descriptor.c **** 
 814:./tmk_core/protocol/lufa/descriptor.c ****     .CDC_DataOutEndpoint =
 815:./tmk_core/protocol/lufa/descriptor.c ****             {
 816:./tmk_core/protocol/lufa/descriptor.c ****                     .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = D
 817:./tmk_core/protocol/lufa/descriptor.c **** 
 818:./tmk_core/protocol/lufa/descriptor.c ****                     .EndpointAddress        = CDC_OUT_EPADDR,
 819:./tmk_core/protocol/lufa/descriptor.c ****                     .Attributes             = (EP_TYPE_BULK | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAG
 820:./tmk_core/protocol/lufa/descriptor.c ****                     .EndpointSize           = CDC_EPSIZE,
 821:./tmk_core/protocol/lufa/descriptor.c ****                     .PollingIntervalMS      = 0x05
 822:./tmk_core/protocol/lufa/descriptor.c ****             },
 823:./tmk_core/protocol/lufa/descriptor.c **** 
 824:./tmk_core/protocol/lufa/descriptor.c ****     .CDC_DataInEndpoint =
 825:./tmk_core/protocol/lufa/descriptor.c ****             {
 826:./tmk_core/protocol/lufa/descriptor.c ****                     .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = D
 827:./tmk_core/protocol/lufa/descriptor.c **** 
 828:./tmk_core/protocol/lufa/descriptor.c ****                     .EndpointAddress        = CDC_IN_EPADDR,
 829:./tmk_core/protocol/lufa/descriptor.c ****                     .Attributes             = (EP_TYPE_BULK | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAG
 830:./tmk_core/protocol/lufa/descriptor.c ****                     .EndpointSize           = CDC_EPSIZE,
 831:./tmk_core/protocol/lufa/descriptor.c ****                     .PollingIntervalMS      = 0x05
 832:./tmk_core/protocol/lufa/descriptor.c ****             },
 833:./tmk_core/protocol/lufa/descriptor.c **** #endif
 834:./tmk_core/protocol/lufa/descriptor.c **** };
 835:./tmk_core/protocol/lufa/descriptor.c **** 
 836:./tmk_core/protocol/lufa/descriptor.c **** 
 837:./tmk_core/protocol/lufa/descriptor.c **** /*******************************************************************************
 838:./tmk_core/protocol/lufa/descriptor.c ****  * String Descriptors
 839:./tmk_core/protocol/lufa/descriptor.c ****  ******************************************************************************/
 840:./tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_String_t PROGMEM LanguageString =
 841:./tmk_core/protocol/lufa/descriptor.c **** {
 842:./tmk_core/protocol/lufa/descriptor.c ****     .Header                 = {.Size = USB_STRING_LEN(1), .Type = DTYPE_String},
 843:./tmk_core/protocol/lufa/descriptor.c **** 
 844:./tmk_core/protocol/lufa/descriptor.c ****     .UnicodeString          = {LANGUAGE_ID_ENG}
 845:./tmk_core/protocol/lufa/descriptor.c **** };
 846:./tmk_core/protocol/lufa/descriptor.c **** 
 847:./tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_String_t PROGMEM ManufacturerString =
 848:./tmk_core/protocol/lufa/descriptor.c **** {
 849:./tmk_core/protocol/lufa/descriptor.c ****     /* subtract 1 for null terminator */
 850:./tmk_core/protocol/lufa/descriptor.c ****     .Header                 = {.Size = USB_STRING_LEN(sizeof(STR(MANUFACTURER))-1), .Type = DTYPE_S
 851:./tmk_core/protocol/lufa/descriptor.c **** 
 852:./tmk_core/protocol/lufa/descriptor.c ****     .UnicodeString          = LSTR(MANUFACTURER)
 853:./tmk_core/protocol/lufa/descriptor.c **** };
 854:./tmk_core/protocol/lufa/descriptor.c **** 
 855:./tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_String_t PROGMEM ProductString =
 856:./tmk_core/protocol/lufa/descriptor.c **** {
 857:./tmk_core/protocol/lufa/descriptor.c ****     /* subtract 1 for null terminator */
 858:./tmk_core/protocol/lufa/descriptor.c ****     .Header                 = {.Size = USB_STRING_LEN(sizeof(STR(PRODUCT))-1), .Type = DTYPE_String
 859:./tmk_core/protocol/lufa/descriptor.c **** 
 860:./tmk_core/protocol/lufa/descriptor.c ****     .UnicodeString          = LSTR(PRODUCT)
 861:./tmk_core/protocol/lufa/descriptor.c **** };
 862:./tmk_core/protocol/lufa/descriptor.c **** 
 863:./tmk_core/protocol/lufa/descriptor.c **** 
 864:./tmk_core/protocol/lufa/descriptor.c **** /** This function is called by the library when in device mode, and must be overridden (see library
 865:./tmk_core/protocol/lufa/descriptor.c ****  *  documentation) by the application code so that the address and size of a requested descriptor c
 866:./tmk_core/protocol/lufa/descriptor.c ****  *  to the USB library. When the device receives a Get Descriptor request on the control endpoint, 
 867:./tmk_core/protocol/lufa/descriptor.c ****  *  is called so that the descriptor details can be passed back and the appropriate descriptor sent
 868:./tmk_core/protocol/lufa/descriptor.c ****  *  USB host.
 869:./tmk_core/protocol/lufa/descriptor.c ****  */
 870:./tmk_core/protocol/lufa/descriptor.c **** uint16_t CALLBACK_USB_GetDescriptor(const uint16_t wValue,
 871:./tmk_core/protocol/lufa/descriptor.c ****                                     const uint8_t wIndex,
 872:./tmk_core/protocol/lufa/descriptor.c ****                                     const void** const DescriptorAddress)
 873:./tmk_core/protocol/lufa/descriptor.c **** {
  17               		.loc 1 873 1 view -0
  18               		.cfi_startproc
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  23               		.loc 1 873 1 is_stmt 0 view .LVU1
  24 0000 9C01      		movw r18,r24
  25 0002 DA01      		movw r26,r20
 874:./tmk_core/protocol/lufa/descriptor.c ****     const uint8_t  DescriptorType   = (wValue >> 8);
  26               		.loc 1 874 5 is_stmt 1 view .LVU2
  27               		.loc 1 874 47 is_stmt 0 view .LVU3
  28 0004 892F      		mov r24,r25
  29 0006 9927      		clr r25
  30               	.LVL1:
 875:./tmk_core/protocol/lufa/descriptor.c ****     const uint8_t  DescriptorIndex  = (wValue & 0xFF);
  31               		.loc 1 875 5 is_stmt 1 view .LVU4
 876:./tmk_core/protocol/lufa/descriptor.c **** 
 877:./tmk_core/protocol/lufa/descriptor.c ****     const void* Address = NULL;
  32               		.loc 1 877 5 view .LVU5
 878:./tmk_core/protocol/lufa/descriptor.c ****     uint16_t    Size    = NO_DESCRIPTOR;
  33               		.loc 1 878 5 view .LVU6
 879:./tmk_core/protocol/lufa/descriptor.c **** 
 880:./tmk_core/protocol/lufa/descriptor.c ****     switch (DescriptorType)
  34               		.loc 1 880 5 view .LVU7
  35 0008 8330      		cpi r24,3
  36 000a 9105      		cpc r25,__zero_reg__
  37 000c 01F0      		breq .L2
  38 000e 00F4      		brsh .L3
  39 0010 8130      		cpi r24,1
  40 0012 9105      		cpc r25,__zero_reg__
  41 0014 01F4      		brne .+2
  42 0016 00C0      		rjmp .L9
  43 0018 0297      		sbiw r24,2
  44 001a 01F4      		brne .+2
  45 001c 00C0      		rjmp .L10
  46               	.LVL2:
  47               	.L13:
 878:./tmk_core/protocol/lufa/descriptor.c ****     uint16_t    Size    = NO_DESCRIPTOR;
  48               		.loc 1 878 17 is_stmt 0 view .LVU8
  49 001e 80E0      		ldi r24,0
  50 0020 90E0      		ldi r25,0
 877:./tmk_core/protocol/lufa/descriptor.c ****     uint16_t    Size    = NO_DESCRIPTOR;
  51               		.loc 1 877 17 view .LVU9
  52 0022 20E0      		ldi r18,0
  53 0024 30E0      		ldi r19,0
  54               	.LVL3:
 877:./tmk_core/protocol/lufa/descriptor.c ****     uint16_t    Size    = NO_DESCRIPTOR;
  55               		.loc 1 877 17 view .LVU10
  56 0026 00C0      		rjmp .L4
  57               	.LVL4:
  58               	.L3:
  59               		.loc 1 880 5 view .LVU11
  60 0028 8132      		cpi r24,33
  61 002a 9105      		cpc r25,__zero_reg__
  62 002c 01F0      		breq .L5
  63 002e 8297      		sbiw r24,34
  64 0030 01F4      		brne .L13
 881:./tmk_core/protocol/lufa/descriptor.c ****     {
 882:./tmk_core/protocol/lufa/descriptor.c ****         case DTYPE_Device:
 883:./tmk_core/protocol/lufa/descriptor.c ****             Address = &DeviceDescriptor;
 884:./tmk_core/protocol/lufa/descriptor.c ****             Size    = sizeof(USB_Descriptor_Device_t);
 885:./tmk_core/protocol/lufa/descriptor.c ****             break;
 886:./tmk_core/protocol/lufa/descriptor.c ****         case DTYPE_Configuration:
 887:./tmk_core/protocol/lufa/descriptor.c ****             Address = &ConfigurationDescriptor;
 888:./tmk_core/protocol/lufa/descriptor.c ****             Size    = sizeof(USB_Descriptor_Configuration_t);
 889:./tmk_core/protocol/lufa/descriptor.c ****             break;
 890:./tmk_core/protocol/lufa/descriptor.c ****         case DTYPE_String:
 891:./tmk_core/protocol/lufa/descriptor.c ****             switch (DescriptorIndex )
 892:./tmk_core/protocol/lufa/descriptor.c ****             {
 893:./tmk_core/protocol/lufa/descriptor.c ****                 case 0x00:
 894:./tmk_core/protocol/lufa/descriptor.c ****                     Address = &LanguageString;
 895:./tmk_core/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&LanguageString.Header.Size);
 896:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 897:./tmk_core/protocol/lufa/descriptor.c ****                 case 0x01:
 898:./tmk_core/protocol/lufa/descriptor.c ****                     Address = &ManufacturerString;
 899:./tmk_core/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&ManufacturerString.Header.Size);
 900:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 901:./tmk_core/protocol/lufa/descriptor.c ****                 case 0x02:
 902:./tmk_core/protocol/lufa/descriptor.c ****                     Address = &ProductString;
 903:./tmk_core/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&ProductString.Header.Size);
 904:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 905:./tmk_core/protocol/lufa/descriptor.c ****             }
 906:./tmk_core/protocol/lufa/descriptor.c ****             break;
 907:./tmk_core/protocol/lufa/descriptor.c ****         case HID_DTYPE_HID:
 908:./tmk_core/protocol/lufa/descriptor.c ****             switch (wIndex) {
 909:./tmk_core/protocol/lufa/descriptor.c ****             case KEYBOARD_INTERFACE:
 910:./tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.Keyboard_HID;
 911:./tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 912:./tmk_core/protocol/lufa/descriptor.c ****                 break;
 913:./tmk_core/protocol/lufa/descriptor.c **** #ifdef MOUSE_ENABLE
 914:./tmk_core/protocol/lufa/descriptor.c ****             case MOUSE_INTERFACE:
 915:./tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.Mouse_HID;
 916:./tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 917:./tmk_core/protocol/lufa/descriptor.c ****                 break;
 918:./tmk_core/protocol/lufa/descriptor.c **** #endif
 919:./tmk_core/protocol/lufa/descriptor.c **** #ifdef EXTRAKEY_ENABLE
 920:./tmk_core/protocol/lufa/descriptor.c ****             case EXTRAKEY_INTERFACE:
 921:./tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.Extrakey_HID;
 922:./tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 923:./tmk_core/protocol/lufa/descriptor.c ****                 break;
 924:./tmk_core/protocol/lufa/descriptor.c **** #endif
 925:./tmk_core/protocol/lufa/descriptor.c **** #ifdef RAW_ENABLE
 926:./tmk_core/protocol/lufa/descriptor.c ****             case RAW_INTERFACE:
 927:./tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.Raw_HID;
 928:./tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 929:./tmk_core/protocol/lufa/descriptor.c ****                 break;
 930:./tmk_core/protocol/lufa/descriptor.c **** #endif
 931:./tmk_core/protocol/lufa/descriptor.c **** #ifdef CONSOLE_ENABLE
 932:./tmk_core/protocol/lufa/descriptor.c ****             case CONSOLE_INTERFACE:
 933:./tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.Console_HID;
 934:./tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 935:./tmk_core/protocol/lufa/descriptor.c ****                 break;
 936:./tmk_core/protocol/lufa/descriptor.c **** #endif
 937:./tmk_core/protocol/lufa/descriptor.c **** #ifdef NKRO_ENABLE
 938:./tmk_core/protocol/lufa/descriptor.c ****             case NKRO_INTERFACE:
 939:./tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.NKRO_HID;
 940:./tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 941:./tmk_core/protocol/lufa/descriptor.c ****                 break;
 942:./tmk_core/protocol/lufa/descriptor.c **** #endif
 943:./tmk_core/protocol/lufa/descriptor.c ****             }
 944:./tmk_core/protocol/lufa/descriptor.c ****             break;
 945:./tmk_core/protocol/lufa/descriptor.c ****         case HID_DTYPE_Report:
 946:./tmk_core/protocol/lufa/descriptor.c ****             switch (wIndex) {
  65               		.loc 1 946 13 is_stmt 1 view .LVU12
  66 0032 6430      		cpi r22,lo8(4)
  67 0034 00F4      		brsh .L13
  68 0036 70E0      		ldi r23,0
  69 0038 FB01      		movw r30,r22
  70 003a EE0F      		lsl r30
  71 003c FF1F      		rol r31
  72               	.LVL5:
  73               		.loc 1 946 13 is_stmt 0 view .LVU13
  74 003e E050      		subi r30,lo8(-(CSWTCH.2))
  75 0040 F040      		sbci r31,hi8(-(CSWTCH.2))
  76 0042 2081      		ld r18,Z
  77 0044 3181      		ldd r19,Z+1
  78               	.LVL6:
  79               		.loc 1 946 13 view .LVU14
  80 0046 6050      		subi r22,lo8(-(CSWTCH.3))
  81 0048 7040      		sbci r23,hi8(-(CSWTCH.3))
  82               	.LVL7:
  83               		.loc 1 946 13 view .LVU15
  84 004a FB01      		movw r30,r22
  85 004c 8081      		ld r24,Z
  86 004e 90E0      		ldi r25,0
  87 0050 00C0      		rjmp .L4
  88               	.LVL8:
  89               	.L2:
 891:./tmk_core/protocol/lufa/descriptor.c ****             {
  90               		.loc 1 891 13 is_stmt 1 view .LVU16
  91 0052 C901      		movw r24,r18
  92               	.LVL9:
 891:./tmk_core/protocol/lufa/descriptor.c ****             {
  93               		.loc 1 891 13 is_stmt 0 view .LVU17
  94 0054 9927      		clr r25
  95 0056 2130      		cpi r18,lo8(1)
  96 0058 01F0      		breq .L7
  97 005a 8230      		cpi r24,2
  98 005c 9105      		cpc r25,__zero_reg__
  99 005e 01F0      		breq .L8
 100               	.LBB2:
 895:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 101               		.loc 1 895 31 view .LVU18
 102 0060 E0E0      		ldi r30,lo8(LanguageString)
 103 0062 F0E0      		ldi r31,hi8(LanguageString)
 104               	.LBE2:
 105 0064 892B      		or r24,r25
 106 0066 01F4      		brne .L13
 107               	.LVL10:
 108               	.L14:
 109               	.LBB3:
 903:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 110               		.loc 1 903 31 view .LVU19
 111               	/* #APP */
 112               	 ;  903 "./tmk_core/protocol/lufa/descriptor.c" 1
 113 0068 8491      		lpm r24, Z
 114               		
 115               	 ;  0 "" 2
 116               	.LVL11:
 903:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 117               		.loc 1 903 31 is_stmt 1 view .LVU20
 118               	/* #NOAPP */
 119               	.LBE3:
 903:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 120               		.loc 1 903 29 is_stmt 0 view .LVU21
 121 006a 90E0      		ldi r25,0
 122               	.LVL12:
 904:./tmk_core/protocol/lufa/descriptor.c ****             }
 123               		.loc 1 904 21 is_stmt 1 view .LVU22
 902:./tmk_core/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&ProductString.Header.Size);
 124               		.loc 1 902 29 is_stmt 0 view .LVU23
 125 006c 9F01      		movw r18,r30
 126               	.LVL13:
 127               	.L4:
 947:./tmk_core/protocol/lufa/descriptor.c ****             case KEYBOARD_INTERFACE:
 948:./tmk_core/protocol/lufa/descriptor.c ****                 Address = &KeyboardReport;
 949:./tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(KeyboardReport);
 950:./tmk_core/protocol/lufa/descriptor.c ****                 break;
 951:./tmk_core/protocol/lufa/descriptor.c **** #ifdef MOUSE_ENABLE
 952:./tmk_core/protocol/lufa/descriptor.c ****             case MOUSE_INTERFACE:
 953:./tmk_core/protocol/lufa/descriptor.c ****                 Address = &MouseReport;
 954:./tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(MouseReport);
 955:./tmk_core/protocol/lufa/descriptor.c ****                 break;
 956:./tmk_core/protocol/lufa/descriptor.c **** #endif
 957:./tmk_core/protocol/lufa/descriptor.c **** #ifdef EXTRAKEY_ENABLE
 958:./tmk_core/protocol/lufa/descriptor.c ****             case EXTRAKEY_INTERFACE:
 959:./tmk_core/protocol/lufa/descriptor.c ****                 Address = &ExtrakeyReport;
 960:./tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(ExtrakeyReport);
 961:./tmk_core/protocol/lufa/descriptor.c ****                 break;
 962:./tmk_core/protocol/lufa/descriptor.c **** #endif
 963:./tmk_core/protocol/lufa/descriptor.c **** #ifdef RAW_ENABLE
 964:./tmk_core/protocol/lufa/descriptor.c ****             case RAW_INTERFACE:
 965:./tmk_core/protocol/lufa/descriptor.c ****                 Address = &RawReport;
 966:./tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(RawReport);
 967:./tmk_core/protocol/lufa/descriptor.c ****                 break;
 968:./tmk_core/protocol/lufa/descriptor.c **** #endif
 969:./tmk_core/protocol/lufa/descriptor.c **** #ifdef CONSOLE_ENABLE
 970:./tmk_core/protocol/lufa/descriptor.c ****             case CONSOLE_INTERFACE:
 971:./tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConsoleReport;
 972:./tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(ConsoleReport);
 973:./tmk_core/protocol/lufa/descriptor.c ****                 break;
 974:./tmk_core/protocol/lufa/descriptor.c **** #endif
 975:./tmk_core/protocol/lufa/descriptor.c **** #ifdef NKRO_ENABLE
 976:./tmk_core/protocol/lufa/descriptor.c ****             case NKRO_INTERFACE:
 977:./tmk_core/protocol/lufa/descriptor.c ****                 Address = &NKROReport;
 978:./tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(NKROReport);
 979:./tmk_core/protocol/lufa/descriptor.c ****                 break;
 980:./tmk_core/protocol/lufa/descriptor.c **** #endif
 981:./tmk_core/protocol/lufa/descriptor.c ****             }
 982:./tmk_core/protocol/lufa/descriptor.c ****             break;
 983:./tmk_core/protocol/lufa/descriptor.c ****     }
 984:./tmk_core/protocol/lufa/descriptor.c **** 
 985:./tmk_core/protocol/lufa/descriptor.c ****     *DescriptorAddress = Address;
 128               		.loc 1 985 5 is_stmt 1 view .LVU24
 129               		.loc 1 985 24 is_stmt 0 view .LVU25
 130 006e 2D93      		st X+,r18
 131 0070 3C93      		st X,r19
 986:./tmk_core/protocol/lufa/descriptor.c ****     return Size;
 132               		.loc 1 986 5 is_stmt 1 view .LVU26
 133               	/* epilogue start */
 987:./tmk_core/protocol/lufa/descriptor.c **** }
 134               		.loc 1 987 1 is_stmt 0 view .LVU27
 135 0072 0895      		ret
 136               	.LVL14:
 137               	.L7:
 898:./tmk_core/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&ManufacturerString.Header.Size);
 138               		.loc 1 898 21 is_stmt 1 view .LVU28
 899:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 139               		.loc 1 899 21 view .LVU29
 140               	.LBB4:
 899:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 141               		.loc 1 899 31 view .LVU30
 899:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 142               		.loc 1 899 31 view .LVU31
 899:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 143               		.loc 1 899 31 view .LVU32
 144 0074 E0E0      		ldi r30,lo8(ManufacturerString)
 145 0076 F0E0      		ldi r31,hi8(ManufacturerString)
 146 0078 00C0      		rjmp .L14
 147               	.LVL15:
 148               	.L8:
 899:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 149               		.loc 1 899 31 is_stmt 0 view .LVU33
 150               	.LBE4:
 902:./tmk_core/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&ProductString.Header.Size);
 151               		.loc 1 902 21 is_stmt 1 view .LVU34
 903:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 152               		.loc 1 903 21 view .LVU35
 153               	.LBB5:
 903:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 154               		.loc 1 903 31 view .LVU36
 903:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 155               		.loc 1 903 31 view .LVU37
 903:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 156               		.loc 1 903 31 view .LVU38
 157 007a E0E0      		ldi r30,lo8(ProductString)
 158 007c F0E0      		ldi r31,hi8(ProductString)
 159 007e 00C0      		rjmp .L14
 160               	.LVL16:
 161               	.L5:
 903:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 162               		.loc 1 903 31 is_stmt 0 view .LVU39
 163               	.LBE5:
 908:./tmk_core/protocol/lufa/descriptor.c ****             case KEYBOARD_INTERFACE:
 164               		.loc 1 908 13 is_stmt 1 view .LVU40
 165 0080 6430      		cpi r22,lo8(4)
 166 0082 00F4      		brsh .L13
 167 0084 E62F      		mov r30,r22
 168 0086 F0E0      		ldi r31,0
 169 0088 EE0F      		lsl r30
 170 008a FF1F      		rol r31
 171 008c E050      		subi r30,lo8(-(CSWTCH.1))
 172 008e F040      		sbci r31,hi8(-(CSWTCH.1))
 173 0090 2081      		ld r18,Z
 174 0092 3181      		ldd r19,Z+1
 175               	.LVL17:
 880:./tmk_core/protocol/lufa/descriptor.c ****     {
 176               		.loc 1 880 5 is_stmt 0 view .LVU41
 177 0094 89E0      		ldi r24,lo8(9)
 178 0096 90E0      		ldi r25,0
 179               	.LVL18:
 880:./tmk_core/protocol/lufa/descriptor.c ****     {
 180               		.loc 1 880 5 view .LVU42
 181 0098 00C0      		rjmp .L4
 182               	.LVL19:
 183               	.L9:
 884:./tmk_core/protocol/lufa/descriptor.c ****             break;
 184               		.loc 1 884 21 view .LVU43
 185 009a 82E1      		ldi r24,lo8(18)
 186 009c 90E0      		ldi r25,0
 187               	.LVL20:
 883:./tmk_core/protocol/lufa/descriptor.c ****             Size    = sizeof(USB_Descriptor_Device_t);
 188               		.loc 1 883 21 view .LVU44
 189 009e 20E0      		ldi r18,lo8(DeviceDescriptor)
 190 00a0 30E0      		ldi r19,hi8(DeviceDescriptor)
 191               	.LVL21:
 883:./tmk_core/protocol/lufa/descriptor.c ****             Size    = sizeof(USB_Descriptor_Device_t);
 192               		.loc 1 883 21 view .LVU45
 193 00a2 00C0      		rjmp .L4
 194               	.LVL22:
 195               	.L10:
 880:./tmk_core/protocol/lufa/descriptor.c ****     {
 196               		.loc 1 880 5 view .LVU46
 197 00a4 8DE6      		ldi r24,lo8(109)
 198 00a6 90E0      		ldi r25,0
 199               	.LVL23:
 880:./tmk_core/protocol/lufa/descriptor.c ****     {
 200               		.loc 1 880 5 view .LVU47
 201 00a8 20E0      		ldi r18,lo8(ConfigurationDescriptor)
 202 00aa 30E0      		ldi r19,hi8(ConfigurationDescriptor)
 203               	.LVL24:
 880:./tmk_core/protocol/lufa/descriptor.c ****     {
 204               		.loc 1 880 5 view .LVU48
 205 00ac 00C0      		rjmp .L4
 206               		.cfi_endproc
 207               	.LFE104:
 209               		.section	.rodata.CSWTCH.3,"a"
 212               	CSWTCH.3:
 213 0000 40        		.byte	64
 214 0001 4D        		.byte	77
 215 0002 36        		.byte	54
 216 0003 39        		.byte	57
 217               		.section	.rodata.CSWTCH.2,"a"
 220               	CSWTCH.2:
 221 0000 0000      		.word	KeyboardReport
 222 0002 0000      		.word	MouseReport
 223 0004 0000      		.word	ExtrakeyReport
 224 0006 0000      		.word	NKROReport
 225               		.section	.rodata.CSWTCH.1,"a"
 228               	CSWTCH.1:
 229 0000 0000      		.word	ConfigurationDescriptor+18
 230 0002 0000      		.word	ConfigurationDescriptor+43
 231 0004 0000      		.word	ConfigurationDescriptor+68
 232 0006 0000      		.word	ConfigurationDescriptor+93
 233               	.global	ProductString
 234               		.section	.progmem.data.ProductString,"a"
 237               	ProductString:
 238 0000 0E        		.byte	14
 239 0001 03        		.byte	3
 240 0002 5600      		.string	"V"
 241 0004 6500      		.string	"e"
 242 0006 6300      		.string	"c"
 243 0008 7400      		.string	"t"
 244 000a 7200      		.string	"r"
 245 000c 6100      		.string	"a"
 246 000e 00        		.string	""
 247 000f 00        		.string	""
 248               	.global	ManufacturerString
 249               		.section	.progmem.data.ManufacturerString,"a"
 252               	ManufacturerString:
 253 0000 06        		.byte	6
 254 0001 03        		.byte	3
 255 0002 4800      		.string	"H"
 256 0004 5000      		.string	"P"
 257 0006 00        		.string	""
 258 0007 00        		.string	""
 259               	.global	LanguageString
 260               		.section	.progmem.data.LanguageString,"a"
 263               	LanguageString:
 264 0000 04        		.byte	4
 265 0001 03        		.byte	3
 266 0002 0904      		.word	1033
 267               	.global	ConfigurationDescriptor
 268               		.section	.progmem.data.ConfigurationDescriptor,"a"
 271               	ConfigurationDescriptor:
 272 0000 09        		.byte	9
 273 0001 02        		.byte	2
 274 0002 6D00      		.word	109
 275 0004 04        		.byte	4
 276 0005 01        		.byte	1
 277 0006 00        		.byte	0
 278 0007 A0        		.byte	-96
 279 0008 FA        		.byte	-6
 280 0009 09        		.byte	9
 281 000a 04        		.byte	4
 282 000b 00        		.byte	0
 283 000c 00        		.byte	0
 284 000d 01        		.byte	1
 285 000e 03        		.byte	3
 286 000f 01        		.byte	1
 287 0010 01        		.byte	1
 288 0011 00        		.byte	0
 289 0012 09        		.byte	9
 290 0013 21        		.byte	33
 291 0014 1101      		.word	273
 292 0016 00        		.byte	0
 293 0017 01        		.byte	1
 294 0018 22        		.byte	34
 295 0019 4000      		.word	64
 296 001b 07        		.byte	7
 297 001c 05        		.byte	5
 298 001d 81        		.byte	-127
 299 001e 03        		.byte	3
 300 001f 0800      		.word	8
 301 0021 0A        		.byte	10
 302 0022 09        		.byte	9
 303 0023 04        		.byte	4
 304 0024 01        		.byte	1
 305 0025 00        		.byte	0
 306 0026 01        		.byte	1
 307 0027 03        		.byte	3
 308 0028 01        		.byte	1
 309 0029 02        		.byte	2
 310 002a 00        		.byte	0
 311 002b 09        		.byte	9
 312 002c 21        		.byte	33
 313 002d 1101      		.word	273
 314 002f 00        		.byte	0
 315 0030 01        		.byte	1
 316 0031 22        		.byte	34
 317 0032 4D00      		.word	77
 318 0034 07        		.byte	7
 319 0035 05        		.byte	5
 320 0036 82        		.byte	-126
 321 0037 03        		.byte	3
 322 0038 0800      		.word	8
 323 003a 0A        		.byte	10
 324 003b 09        		.byte	9
 325 003c 04        		.byte	4
 326 003d 02        		.byte	2
 327 003e 00        		.byte	0
 328 003f 01        		.byte	1
 329 0040 03        		.byte	3
 330 0041 00        		.byte	0
 331 0042 00        		.byte	0
 332 0043 00        		.byte	0
 333 0044 09        		.byte	9
 334 0045 21        		.byte	33
 335 0046 1101      		.word	273
 336 0048 00        		.byte	0
 337 0049 01        		.byte	1
 338 004a 22        		.byte	34
 339 004b 3600      		.word	54
 340 004d 07        		.byte	7
 341 004e 05        		.byte	5
 342 004f 83        		.byte	-125
 343 0050 03        		.byte	3
 344 0051 0800      		.word	8
 345 0053 0A        		.byte	10
 346 0054 09        		.byte	9
 347 0055 04        		.byte	4
 348 0056 03        		.byte	3
 349 0057 00        		.byte	0
 350 0058 01        		.byte	1
 351 0059 03        		.byte	3
 352 005a 00        		.byte	0
 353 005b 00        		.byte	0
 354 005c 00        		.byte	0
 355 005d 09        		.byte	9
 356 005e 21        		.byte	33
 357 005f 1101      		.word	273
 358 0061 00        		.byte	0
 359 0062 01        		.byte	1
 360 0063 22        		.byte	34
 361 0064 3900      		.word	57
 362 0066 07        		.byte	7
 363 0067 05        		.byte	5
 364 0068 84        		.byte	-124
 365 0069 03        		.byte	3
 366 006a 2000      		.word	32
 367 006c 01        		.byte	1
 368               	.global	DeviceDescriptor
 369               		.section	.progmem.data.DeviceDescriptor,"a"
 372               	DeviceDescriptor:
 373 0000 12        		.byte	18
 374 0001 01        		.byte	1
 375 0002 1001      		.word	272
 376 0004 00        		.byte	0
 377 0005 00        		.byte	0
 378 0006 00        		.byte	0
 379 0007 08        		.byte	8
 380 0008 EDFE      		.word	-275
 381 000a 6060      		.word	24672
 382 000c 0100      		.word	1
 383 000e 01        		.byte	1
 384 000f 02        		.byte	2
 385 0010 00        		.byte	0
 386 0011 01        		.byte	1
 387               	.global	NKROReport
 388               		.section	.progmem.data.NKROReport,"a"
 391               	NKROReport:
 392 0000 0501 0906 		.string	"\005\001\t\006\241\001\005\007\031\340)\347\025"
 392      A101 0507 
 392      19E0 29E7 
 392      1500 
 393 000e 2501 9508 		.string	"%\001\225\bu\001\201\002\005\b\031\001)\005\225\005u\001\221\002\225\001u\003\221\001\005
 393      7501 8102 
 393      0508 1901 
 393      2905 9505 
 393      7501 9102 
 394 002c 29F7 1500 		.string	")\367\025"
 395 0030 2501 95F8 		.ascii	"%\001\225\370u\001\201\002\300"
 395      7501 8102 
 395      C0
 396               	.global	ExtrakeyReport
 397               		.section	.progmem.data.ExtrakeyReport,"a"
 400               	ExtrakeyReport:
 401 0000 0501 0980 		.string	"\005\001\t\200\241\001\205\002\026\001"
 401      A101 8502 
 401      1601 00
 402 000b 2603 00   		.string	"&\003"
 403 000e 1A81 00   		.string	"\032\201"
 404 0011 2A83 00   		.string	"*\203"
 405 0014 7510 9501 		.string	"u\020\225\001\201"
 405      8100 
 406 001a C005 0C09 		.string	"\300\005\f\t\001\241\001\205\003\026\001"
 406      01A1 0185 
 406      0316 0100 
 407 0026 269C 021A 		.string	"&\234\002\032\001"
 407      0100 
 408 002c 2A9C 0275 		.string	"*\234\002u\020\225\001\201"
 408      1095 0181 
 408      00
 409 0035 C0        		.ascii	"\300"
 410               	.global	MouseReport
 411               		.section	.progmem.data.MouseReport,"a"
 414               	MouseReport:
 415 0000 0501 0902 		.string	"\005\001\t\002\241\001\t\001\241"
 415      A101 0901 
 415      A100 
 416 000a 0509 1901 		.string	"\005\t\031\001)\005\025"
 416      2905 1500 
 417 0012 2501 9505 		.ascii	"%\001\225\005u\001\201\002\225\001u\003\201\001\005\001\t0\t"
 417      7501 8102 
 417      9501 7503 
 417      8101 0501 
 417      0930 09
 418 0025 3115 8125 		.ascii	"1\025\201%\177\225\002u\b\201\006\t8\025\201%\177\225\001u\b"
 418      7F95 0275 
 418      0881 0609 
 418      3815 8125 
 418      7F95 0175 
 419 003a 8106 050C 		.ascii	"\201\006\005\f\n8\002\025\201%\177\225\001u\b\201\006\300\300"
 419      0A38 0215 
 419      8125 7F95 
 419      0175 0881 
 419      06C0 C0
 420               	.global	KeyboardReport
 421               		.section	.progmem.data.KeyboardReport,"a"
 424               	KeyboardReport:
 425 0000 0501 0906 		.string	"\005\001\t\006\241\001\005\007\031\340)\347\025"
 425      A101 0507 
 425      19E0 29E7 
 425      1500 
 426 000e 2501 9508 		.string	"%\001\225\bu\001\201\002\225\001u\b\201\001\005\b\031\001)\005\225\005u\001\221\002\225\0
 426      7501 8102 
 426      9501 7508 
 426      8101 0508 
 426      1901 2905 
 427 0032 29FF 1500 		.string	")\377\025"
 428 0036 26FF 00   		.string	"&\377"
 429 0039 9506 7508 		.string	"\225\006u\b\201"
 429      8100 
 430 003f C0        		.ascii	"\300"
 431               		.text
 432               	.Letext0:
 433               		.file 2 "/usr/avr/include/stdint.h"
 434               		.file 3 "/usr/lib/gcc/avr/12.1.0/include/stddef.h"
 435               		.file 4 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../StdDescriptors.h"
 436               		.file 5 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../Common/HIDClassCommon.
 437               		.file 6 "./tmk_core/protocol/lufa/descriptor.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 descriptor.c
     /tmp/ccAJYWl7.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccAJYWl7.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccAJYWl7.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccAJYWl7.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccAJYWl7.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccAJYWl7.s:14     .text.CALLBACK_USB_GetDescriptor:0000000000000000 CALLBACK_USB_GetDescriptor
     /tmp/ccAJYWl7.s:17     .text.CALLBACK_USB_GetDescriptor:0000000000000000 .Loc.0
     /tmp/ccAJYWl7.s:18     .text.CALLBACK_USB_GetDescriptor:0000000000000000 L0
     /tmp/ccAJYWl7.s:23     .text.CALLBACK_USB_GetDescriptor:0000000000000000 .Loc.1
     /tmp/ccAJYWl7.s:26     .text.CALLBACK_USB_GetDescriptor:0000000000000004 .Loc.2
     /tmp/ccAJYWl7.s:27     .text.CALLBACK_USB_GetDescriptor:0000000000000004 .Loc.3
     /tmp/ccAJYWl7.s:31     .text.CALLBACK_USB_GetDescriptor:0000000000000008 .Loc.4
     /tmp/ccAJYWl7.s:32     .text.CALLBACK_USB_GetDescriptor:0000000000000008 .Loc.5
     /tmp/ccAJYWl7.s:33     .text.CALLBACK_USB_GetDescriptor:0000000000000008 .Loc.6
     /tmp/ccAJYWl7.s:34     .text.CALLBACK_USB_GetDescriptor:0000000000000008 .Loc.7
     /tmp/ccAJYWl7.s:41     .text.CALLBACK_USB_GetDescriptor:0000000000000016 L0
     /tmp/ccAJYWl7.s:44     .text.CALLBACK_USB_GetDescriptor:000000000000001c L0
     /tmp/ccAJYWl7.s:48     .text.CALLBACK_USB_GetDescriptor:000000000000001e .Loc.8
     /tmp/ccAJYWl7.s:51     .text.CALLBACK_USB_GetDescriptor:0000000000000022 .Loc.9
     /tmp/ccAJYWl7.s:55     .text.CALLBACK_USB_GetDescriptor:0000000000000026 .Loc.10
     /tmp/ccAJYWl7.s:59     .text.CALLBACK_USB_GetDescriptor:0000000000000028 .Loc.11
     /tmp/ccAJYWl7.s:65     .text.CALLBACK_USB_GetDescriptor:0000000000000032 .Loc.12
     /tmp/ccAJYWl7.s:73     .text.CALLBACK_USB_GetDescriptor:000000000000003e .Loc.13
     /tmp/ccAJYWl7.s:220    .rodata.CSWTCH.2:0000000000000000 CSWTCH.2
     /tmp/ccAJYWl7.s:79     .text.CALLBACK_USB_GetDescriptor:0000000000000046 .Loc.14
     /tmp/ccAJYWl7.s:212    .rodata.CSWTCH.3:0000000000000000 CSWTCH.3
     /tmp/ccAJYWl7.s:83     .text.CALLBACK_USB_GetDescriptor:000000000000004a .Loc.15
     /tmp/ccAJYWl7.s:90     .text.CALLBACK_USB_GetDescriptor:0000000000000052 .Loc.16
     /tmp/ccAJYWl7.s:93     .text.CALLBACK_USB_GetDescriptor:0000000000000054 .Loc.17
     /tmp/ccAJYWl7.s:101    .text.CALLBACK_USB_GetDescriptor:0000000000000060 .Loc.18
     /tmp/ccAJYWl7.s:263    .progmem.data.LanguageString:0000000000000000 LanguageString
     /tmp/ccAJYWl7.s:110    .text.CALLBACK_USB_GetDescriptor:0000000000000068 .Loc.19
     /tmp/ccAJYWl7.s:117    .text.CALLBACK_USB_GetDescriptor:000000000000006a .Loc.20
     /tmp/ccAJYWl7.s:120    .text.CALLBACK_USB_GetDescriptor:000000000000006a .Loc.21
     /tmp/ccAJYWl7.s:123    .text.CALLBACK_USB_GetDescriptor:000000000000006c .Loc.22
     /tmp/ccAJYWl7.s:124    .text.CALLBACK_USB_GetDescriptor:000000000000006c .Loc.23
     /tmp/ccAJYWl7.s:128    .text.CALLBACK_USB_GetDescriptor:000000000000006e .Loc.24
     /tmp/ccAJYWl7.s:129    .text.CALLBACK_USB_GetDescriptor:000000000000006e .Loc.25
     /tmp/ccAJYWl7.s:132    .text.CALLBACK_USB_GetDescriptor:0000000000000072 .Loc.26
     /tmp/ccAJYWl7.s:134    .text.CALLBACK_USB_GetDescriptor:0000000000000072 .Loc.27
     /tmp/ccAJYWl7.s:138    .text.CALLBACK_USB_GetDescriptor:0000000000000074 .Loc.28
     /tmp/ccAJYWl7.s:139    .text.CALLBACK_USB_GetDescriptor:0000000000000074 .Loc.29
     /tmp/ccAJYWl7.s:141    .text.CALLBACK_USB_GetDescriptor:0000000000000074 .Loc.30
     /tmp/ccAJYWl7.s:142    .text.CALLBACK_USB_GetDescriptor:0000000000000074 .Loc.31
     /tmp/ccAJYWl7.s:143    .text.CALLBACK_USB_GetDescriptor:0000000000000074 .Loc.32
     /tmp/ccAJYWl7.s:252    .progmem.data.ManufacturerString:0000000000000000 ManufacturerString
     /tmp/ccAJYWl7.s:149    .text.CALLBACK_USB_GetDescriptor:000000000000007a .Loc.33
     /tmp/ccAJYWl7.s:151    .text.CALLBACK_USB_GetDescriptor:000000000000007a .Loc.34
     /tmp/ccAJYWl7.s:152    .text.CALLBACK_USB_GetDescriptor:000000000000007a .Loc.35
     /tmp/ccAJYWl7.s:154    .text.CALLBACK_USB_GetDescriptor:000000000000007a .Loc.36
     /tmp/ccAJYWl7.s:155    .text.CALLBACK_USB_GetDescriptor:000000000000007a .Loc.37
     /tmp/ccAJYWl7.s:156    .text.CALLBACK_USB_GetDescriptor:000000000000007a .Loc.38
     /tmp/ccAJYWl7.s:237    .progmem.data.ProductString:0000000000000000 ProductString
     /tmp/ccAJYWl7.s:162    .text.CALLBACK_USB_GetDescriptor:0000000000000080 .Loc.39
     /tmp/ccAJYWl7.s:164    .text.CALLBACK_USB_GetDescriptor:0000000000000080 .Loc.40
     /tmp/ccAJYWl7.s:228    .rodata.CSWTCH.1:0000000000000000 CSWTCH.1
     /tmp/ccAJYWl7.s:176    .text.CALLBACK_USB_GetDescriptor:0000000000000094 .Loc.41
     /tmp/ccAJYWl7.s:180    .text.CALLBACK_USB_GetDescriptor:0000000000000098 .Loc.42
     /tmp/ccAJYWl7.s:184    .text.CALLBACK_USB_GetDescriptor:000000000000009a .Loc.43
     /tmp/ccAJYWl7.s:188    .text.CALLBACK_USB_GetDescriptor:000000000000009e .Loc.44
     /tmp/ccAJYWl7.s:372    .progmem.data.DeviceDescriptor:0000000000000000 DeviceDescriptor
     /tmp/ccAJYWl7.s:192    .text.CALLBACK_USB_GetDescriptor:00000000000000a2 .Loc.45
     /tmp/ccAJYWl7.s:196    .text.CALLBACK_USB_GetDescriptor:00000000000000a4 .Loc.46
     /tmp/ccAJYWl7.s:200    .text.CALLBACK_USB_GetDescriptor:00000000000000a8 .Loc.47
     /tmp/ccAJYWl7.s:271    .progmem.data.ConfigurationDescriptor:0000000000000000 ConfigurationDescriptor
     /tmp/ccAJYWl7.s:204    .text.CALLBACK_USB_GetDescriptor:00000000000000ac .Loc.48
     /tmp/ccAJYWl7.s:206    .text.CALLBACK_USB_GetDescriptor:00000000000000ae L0
     /tmp/ccAJYWl7.s:424    .progmem.data.KeyboardReport:0000000000000000 KeyboardReport
     /tmp/ccAJYWl7.s:414    .progmem.data.MouseReport:0000000000000000 MouseReport
     /tmp/ccAJYWl7.s:400    .progmem.data.ExtrakeyReport:0000000000000000 ExtrakeyReport
     /tmp/ccAJYWl7.s:391    .progmem.data.NKROReport:0000000000000000 NKROReport
     /tmp/ccAJYWl7.s:209    .text.CALLBACK_USB_GetDescriptor:00000000000000ae L0
                     .debug_frame:0000000000000000 L0
     /tmp/ccAJYWl7.s:89     .text.CALLBACK_USB_GetDescriptor:0000000000000052 .L2
     /tmp/ccAJYWl7.s:58     .text.CALLBACK_USB_GetDescriptor:0000000000000028 .L3
     /tmp/ccAJYWl7.s:183    .text.CALLBACK_USB_GetDescriptor:000000000000009a .L9
     /tmp/ccAJYWl7.s:195    .text.CALLBACK_USB_GetDescriptor:00000000000000a4 .L10
     /tmp/ccAJYWl7.s:127    .text.CALLBACK_USB_GetDescriptor:000000000000006e .L4
     /tmp/ccAJYWl7.s:161    .text.CALLBACK_USB_GetDescriptor:0000000000000080 .L5
     /tmp/ccAJYWl7.s:47     .text.CALLBACK_USB_GetDescriptor:000000000000001e .L13
     /tmp/ccAJYWl7.s:137    .text.CALLBACK_USB_GetDescriptor:0000000000000074 .L7
     /tmp/ccAJYWl7.s:148    .text.CALLBACK_USB_GetDescriptor:000000000000007a .L8
     /tmp/ccAJYWl7.s:108    .text.CALLBACK_USB_GetDescriptor:0000000000000068 .L14
     /tmp/ccAJYWl7.s:1528   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccAJYWl7.s:2370   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccAJYWl7.s:2382   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccAJYWl7.s:16     .text.CALLBACK_USB_GetDescriptor:0000000000000000 .LFB104
     /tmp/ccAJYWl7.s:207    .text.CALLBACK_USB_GetDescriptor:00000000000000ae .LFE104
     /tmp/ccAJYWl7.s:1931   .debug_loc:000000000000001a .LLST0
     /tmp/ccAJYWl7.s:1904   .debug_loc:0000000000000000 .LVUS0
     /tmp/ccAJYWl7.s:2050   .debug_loc:00000000000000f0 .LLST1
     /tmp/ccAJYWl7.s:2039   .debug_loc:00000000000000e6 .LVUS1
     /tmp/ccAJYWl7.s:2084   .debug_loc:0000000000000139 .LLST2
     /tmp/ccAJYWl7.s:2079   .debug_loc:0000000000000135 .LVUS2
     /tmp/ccAJYWl7.s:2130   .debug_loc:0000000000000179 .LLST3
     /tmp/ccAJYWl7.s:2105   .debug_loc:0000000000000161 .LVUS3
     /tmp/ccAJYWl7.s:2206   .debug_loc:000000000000021d .LLST4
     /tmp/ccAJYWl7.s:2181   .debug_loc:0000000000000205 .LVUS4
     /tmp/ccAJYWl7.s:2286   .debug_loc:00000000000002c5 .LLST5
     /tmp/ccAJYWl7.s:2275   .debug_loc:00000000000002bb .LVUS5
     /tmp/ccAJYWl7.s:2325   .debug_loc:0000000000000313 .LLST6
     /tmp/ccAJYWl7.s:2318   .debug_loc:000000000000030d .LVUS6
     /tmp/ccAJYWl7.s:100    .text.CALLBACK_USB_GetDescriptor:0000000000000060 .LBB2
     /tmp/ccAJYWl7.s:104    .text.CALLBACK_USB_GetDescriptor:0000000000000064 .LBE2
     /tmp/ccAJYWl7.s:140    .text.CALLBACK_USB_GetDescriptor:0000000000000074 .LBB4
     /tmp/ccAJYWl7.s:150    .text.CALLBACK_USB_GetDescriptor:000000000000007a .LBE4
     /tmp/ccAJYWl7.s:2350   .debug_loc:0000000000000345 .LLST7
     /tmp/ccAJYWl7.s:2347   .debug_loc:0000000000000343 .LVUS7
     /tmp/ccAJYWl7.s:15     .text.CALLBACK_USB_GetDescriptor:0000000000000000 .LVL0
     /tmp/ccAJYWl7.s:30     .text.CALLBACK_USB_GetDescriptor:0000000000000008 .LVL1
     /tmp/ccAJYWl7.s:54     .text.CALLBACK_USB_GetDescriptor:0000000000000026 .LVL3
     /tmp/ccAJYWl7.s:57     .text.CALLBACK_USB_GetDescriptor:0000000000000028 .LVL4
     /tmp/ccAJYWl7.s:78     .text.CALLBACK_USB_GetDescriptor:0000000000000046 .LVL6
     /tmp/ccAJYWl7.s:88     .text.CALLBACK_USB_GetDescriptor:0000000000000052 .LVL8
     /tmp/ccAJYWl7.s:126    .text.CALLBACK_USB_GetDescriptor:000000000000006e .LVL13
     /tmp/ccAJYWl7.s:136    .text.CALLBACK_USB_GetDescriptor:0000000000000074 .LVL14
     /tmp/ccAJYWl7.s:175    .text.CALLBACK_USB_GetDescriptor:0000000000000094 .LVL17
     /tmp/ccAJYWl7.s:182    .text.CALLBACK_USB_GetDescriptor:000000000000009a .LVL19
     /tmp/ccAJYWl7.s:191    .text.CALLBACK_USB_GetDescriptor:00000000000000a2 .LVL21
     /tmp/ccAJYWl7.s:194    .text.CALLBACK_USB_GetDescriptor:00000000000000a4 .LVL22
     /tmp/ccAJYWl7.s:203    .text.CALLBACK_USB_GetDescriptor:00000000000000ac .LVL24
     /tmp/ccAJYWl7.s:82     .text.CALLBACK_USB_GetDescriptor:000000000000004a .LVL7
     /tmp/ccAJYWl7.s:46     .text.CALLBACK_USB_GetDescriptor:000000000000001e .LVL2
     /tmp/ccAJYWl7.s:72     .text.CALLBACK_USB_GetDescriptor:000000000000003e .LVL5
     /tmp/ccAJYWl7.s:92     .text.CALLBACK_USB_GetDescriptor:0000000000000054 .LVL9
     /tmp/ccAJYWl7.s:160    .text.CALLBACK_USB_GetDescriptor:0000000000000080 .LVL16
     /tmp/ccAJYWl7.s:179    .text.CALLBACK_USB_GetDescriptor:0000000000000098 .LVL18
     /tmp/ccAJYWl7.s:187    .text.CALLBACK_USB_GetDescriptor:000000000000009e .LVL20
     /tmp/ccAJYWl7.s:199    .text.CALLBACK_USB_GetDescriptor:00000000000000a8 .LVL23
     /tmp/ccAJYWl7.s:107    .text.CALLBACK_USB_GetDescriptor:0000000000000068 .LVL10
     /tmp/ccAJYWl7.s:147    .text.CALLBACK_USB_GetDescriptor:000000000000007a .LVL15
     /tmp/ccAJYWl7.s:122    .text.CALLBACK_USB_GetDescriptor:000000000000006c .LVL12
     /tmp/ccAJYWl7.s:116    .text.CALLBACK_USB_GetDescriptor:000000000000006a .LVL11
     /tmp/ccAJYWl7.s:439    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccAJYWl7.s:109    .text.CALLBACK_USB_GetDescriptor:0000000000000068 .LBB3
     /tmp/ccAJYWl7.s:119    .text.CALLBACK_USB_GetDescriptor:000000000000006a .LBE3
     /tmp/ccAJYWl7.s:153    .text.CALLBACK_USB_GetDescriptor:000000000000007a .LBB5
     /tmp/ccAJYWl7.s:163    .text.CALLBACK_USB_GetDescriptor:0000000000000080 .LBE5

UNDEFINED SYMBOLS
__do_copy_data
