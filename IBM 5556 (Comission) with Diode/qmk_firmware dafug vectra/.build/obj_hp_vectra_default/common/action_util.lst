   1               		.file	"action_util.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.file 1 "./tmk_core/common/action_util.c"
  11               		.section	.text.get_oneshot_locked_mods,"ax",@progbits
  12               	.global	get_oneshot_locked_mods
  14               	get_oneshot_locked_mods:
  15               	.LFB107:
   1:./tmk_core/common/action_util.c **** /*
   2:./tmk_core/common/action_util.c **** Copyright 2013 Jun Wako <wakojun@gmail.com>
   3:./tmk_core/common/action_util.c **** 
   4:./tmk_core/common/action_util.c **** This program is free software: you can redistribute it and/or modify
   5:./tmk_core/common/action_util.c **** it under the terms of the GNU General Public License as published by
   6:./tmk_core/common/action_util.c **** the Free Software Foundation, either version 2 of the License, or
   7:./tmk_core/common/action_util.c **** (at your option) any later version.
   8:./tmk_core/common/action_util.c **** 
   9:./tmk_core/common/action_util.c **** This program is distributed in the hope that it will be useful,
  10:./tmk_core/common/action_util.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:./tmk_core/common/action_util.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:./tmk_core/common/action_util.c **** GNU General Public License for more details.
  13:./tmk_core/common/action_util.c **** 
  14:./tmk_core/common/action_util.c **** You should have received a copy of the GNU General Public License
  15:./tmk_core/common/action_util.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:./tmk_core/common/action_util.c **** */
  17:./tmk_core/common/action_util.c **** #include "host.h"
  18:./tmk_core/common/action_util.c **** #include "report.h"
  19:./tmk_core/common/action_util.c **** #include "debug.h"
  20:./tmk_core/common/action_util.c **** #include "action_util.h"
  21:./tmk_core/common/action_util.c **** #include "action_layer.h"
  22:./tmk_core/common/action_util.c **** #include "timer.h"
  23:./tmk_core/common/action_util.c **** #include "keycode_config.h"
  24:./tmk_core/common/action_util.c **** 
  25:./tmk_core/common/action_util.c **** extern keymap_config_t keymap_config;
  26:./tmk_core/common/action_util.c **** 
  27:./tmk_core/common/action_util.c **** 
  28:./tmk_core/common/action_util.c **** static inline void add_key_byte(uint8_t code);
  29:./tmk_core/common/action_util.c **** static inline void del_key_byte(uint8_t code);
  30:./tmk_core/common/action_util.c **** #ifdef NKRO_ENABLE
  31:./tmk_core/common/action_util.c **** static inline void add_key_bit(uint8_t code);
  32:./tmk_core/common/action_util.c **** static inline void del_key_bit(uint8_t code);
  33:./tmk_core/common/action_util.c **** #endif
  34:./tmk_core/common/action_util.c **** 
  35:./tmk_core/common/action_util.c **** static uint8_t real_mods = 0;
  36:./tmk_core/common/action_util.c **** static uint8_t weak_mods = 0;
  37:./tmk_core/common/action_util.c **** static uint8_t macro_mods = 0;
  38:./tmk_core/common/action_util.c **** 
  39:./tmk_core/common/action_util.c **** #ifdef USB_6KRO_ENABLE
  40:./tmk_core/common/action_util.c **** #define RO_ADD(a, b) ((a + b) % KEYBOARD_REPORT_KEYS)
  41:./tmk_core/common/action_util.c **** #define RO_SUB(a, b) ((a - b + KEYBOARD_REPORT_KEYS) % KEYBOARD_REPORT_KEYS)
  42:./tmk_core/common/action_util.c **** #define RO_INC(a) RO_ADD(a, 1)
  43:./tmk_core/common/action_util.c **** #define RO_DEC(a) RO_SUB(a, 1)
  44:./tmk_core/common/action_util.c **** static int8_t cb_head = 0;
  45:./tmk_core/common/action_util.c **** static int8_t cb_tail = 0;
  46:./tmk_core/common/action_util.c **** static int8_t cb_count = 0;
  47:./tmk_core/common/action_util.c **** #endif
  48:./tmk_core/common/action_util.c **** 
  49:./tmk_core/common/action_util.c **** // TODO: pointer variable is not needed
  50:./tmk_core/common/action_util.c **** //report_keyboard_t keyboard_report = {};
  51:./tmk_core/common/action_util.c **** report_keyboard_t *keyboard_report = &(report_keyboard_t){};
  52:./tmk_core/common/action_util.c **** 
  53:./tmk_core/common/action_util.c **** #ifndef NO_ACTION_ONESHOT
  54:./tmk_core/common/action_util.c **** static int8_t oneshot_mods = 0;
  55:./tmk_core/common/action_util.c **** static int8_t oneshot_locked_mods = 0;
  56:./tmk_core/common/action_util.c **** int8_t get_oneshot_locked_mods(void) { return oneshot_locked_mods; }
  16               		.loc 1 56 38 view -0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  22               		.loc 1 56 40 view .LVU1
  23               		.loc 1 56 68 is_stmt 0 view .LVU2
  24 0000 8091 0000 		lds r24,oneshot_locked_mods
  25               	/* epilogue start */
  26 0004 0895      		ret
  27               		.cfi_endproc
  28               	.LFE107:
  30               		.section	.text.set_oneshot_locked_mods,"ax",@progbits
  31               	.global	set_oneshot_locked_mods
  33               	set_oneshot_locked_mods:
  34               	.LVL0:
  35               	.LFB108:
  57:./tmk_core/common/action_util.c **** void set_oneshot_locked_mods(int8_t mods) { oneshot_locked_mods = mods; }
  36               		.loc 1 57 43 is_stmt 1 view -0
  37               		.cfi_startproc
  38               	/* prologue: function */
  39               	/* frame size = 0 */
  40               	/* stack size = 0 */
  41               	.L__stack_usage = 0
  42               		.loc 1 57 45 view .LVU4
  43               		.loc 1 57 65 is_stmt 0 view .LVU5
  44 0000 8093 0000 		sts oneshot_locked_mods,r24
  45               	/* epilogue start */
  46               		.loc 1 57 73 view .LVU6
  47 0004 0895      		ret
  48               		.cfi_endproc
  49               	.LFE108:
  51               		.section	.text.clear_oneshot_locked_mods,"ax",@progbits
  52               	.global	clear_oneshot_locked_mods
  54               	clear_oneshot_locked_mods:
  55               	.LFB109:
  58:./tmk_core/common/action_util.c **** void clear_oneshot_locked_mods(void) { oneshot_locked_mods = 0; }
  56               		.loc 1 58 38 is_stmt 1 view -0
  57               		.cfi_startproc
  58               	/* prologue: function */
  59               	/* frame size = 0 */
  60               	/* stack size = 0 */
  61               	.L__stack_usage = 0
  62               		.loc 1 58 40 view .LVU8
  63               		.loc 1 58 60 is_stmt 0 view .LVU9
  64 0000 1092 0000 		sts oneshot_locked_mods,__zero_reg__
  65               	/* epilogue start */
  66               		.loc 1 58 65 view .LVU10
  67 0004 0895      		ret
  68               		.cfi_endproc
  69               	.LFE109:
  71               		.section	.text.get_oneshot_layer,"ax",@progbits
  72               	.global	get_oneshot_layer
  74               	get_oneshot_layer:
  75               	.LFB110:
  59:./tmk_core/common/action_util.c **** #if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
  60:./tmk_core/common/action_util.c **** static int16_t oneshot_time = 0;
  61:./tmk_core/common/action_util.c **** inline bool has_oneshot_mods_timed_out() {
  62:./tmk_core/common/action_util.c ****   return TIMER_DIFF_16(timer_read(), oneshot_time) >= ONESHOT_TIMEOUT;
  63:./tmk_core/common/action_util.c **** }
  64:./tmk_core/common/action_util.c **** #endif
  65:./tmk_core/common/action_util.c **** #endif
  66:./tmk_core/common/action_util.c **** 
  67:./tmk_core/common/action_util.c **** /* oneshot layer */
  68:./tmk_core/common/action_util.c **** #ifndef NO_ACTION_ONESHOT
  69:./tmk_core/common/action_util.c **** /* oneshot_layer_data bits
  70:./tmk_core/common/action_util.c **** * LLLL LSSS
  71:./tmk_core/common/action_util.c **** * where:
  72:./tmk_core/common/action_util.c **** *   L => are layer bits
  73:./tmk_core/common/action_util.c **** *   S => oneshot state bits
  74:./tmk_core/common/action_util.c **** */
  75:./tmk_core/common/action_util.c **** static int8_t oneshot_layer_data = 0;
  76:./tmk_core/common/action_util.c **** 
  77:./tmk_core/common/action_util.c **** inline uint8_t get_oneshot_layer(void) { return oneshot_layer_data >> 3; }
  76               		.loc 1 77 40 is_stmt 1 view -0
  77               		.cfi_startproc
  78               	/* prologue: function */
  79               	/* frame size = 0 */
  80               	/* stack size = 0 */
  81               	.L__stack_usage = 0
  82               		.loc 1 77 42 view .LVU12
  83               		.loc 1 77 68 is_stmt 0 view .LVU13
  84 0000 8091 0000 		lds r24,oneshot_layer_data
  85               		.loc 1 77 74 view .LVU14
  86 0004 8595      		asr r24
  87 0006 8595      		asr r24
  88 0008 8595      		asr r24
  89               	/* epilogue start */
  90 000a 0895      		ret
  91               		.cfi_endproc
  92               	.LFE110:
  94               		.section	.text.get_oneshot_layer_state,"ax",@progbits
  95               	.global	get_oneshot_layer_state
  97               	get_oneshot_layer_state:
  98               	.LFB111:
  78:./tmk_core/common/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
  99               		.loc 1 78 46 is_stmt 1 view -0
 100               		.cfi_startproc
 101               	/* prologue: function */
 102               	/* frame size = 0 */
 103               	/* stack size = 0 */
 104               	.L__stack_usage = 0
 105               		.loc 1 78 48 view .LVU16
 106               		.loc 1 78 74 is_stmt 0 view .LVU17
 107 0000 8091 0000 		lds r24,oneshot_layer_data
 108               		.loc 1 78 83 view .LVU18
 109 0004 8770      		andi r24,lo8(7)
 110               	/* epilogue start */
 111 0006 0895      		ret
 112               		.cfi_endproc
 113               	.LFE111:
 115               		.section	.text.set_oneshot_layer,"ax",@progbits
 116               	.global	set_oneshot_layer
 118               	set_oneshot_layer:
 119               	.LVL1:
 120               	.LFB112:
  79:./tmk_core/common/action_util.c **** 
  80:./tmk_core/common/action_util.c **** #if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
  81:./tmk_core/common/action_util.c **** static int16_t oneshot_layer_time = 0;
  82:./tmk_core/common/action_util.c **** inline bool has_oneshot_layer_timed_out() {
  83:./tmk_core/common/action_util.c ****     return TIMER_DIFF_16(timer_read(), oneshot_layer_time) >= ONESHOT_TIMEOUT &&
  84:./tmk_core/common/action_util.c ****         !(get_oneshot_layer_state() & ONESHOT_TOGGLED);
  85:./tmk_core/common/action_util.c **** }
  86:./tmk_core/common/action_util.c **** #endif
  87:./tmk_core/common/action_util.c **** 
  88:./tmk_core/common/action_util.c **** /* Oneshot layer */
  89:./tmk_core/common/action_util.c **** void set_oneshot_layer(uint8_t layer, uint8_t state)
  90:./tmk_core/common/action_util.c **** {
 121               		.loc 1 90 1 is_stmt 1 view -0
 122               		.cfi_startproc
 123               	/* prologue: function */
 124               	/* frame size = 0 */
 125               	/* stack size = 0 */
 126               	.L__stack_usage = 0
  91:./tmk_core/common/action_util.c ****     oneshot_layer_data = layer << 3 | state;
 127               		.loc 1 91 5 view .LVU20
 128               		.loc 1 91 32 is_stmt 0 view .LVU21
 129 0000 98E0      		ldi r25,lo8(8)
 130 0002 899F      		mul r24,r25
 131 0004 9001      		movw r18,r0
 132 0006 1124      		clr __zero_reg__
 133               		.loc 1 91 37 view .LVU22
 134 0008 622B      		or r22,r18
 135               	.LVL2:
 136               		.loc 1 91 24 view .LVU23
 137 000a 6093 0000 		sts oneshot_layer_data,r22
  92:./tmk_core/common/action_util.c ****     layer_on(layer);
 138               		.loc 1 92 5 is_stmt 1 view .LVU24
 139 000e 0C94 0000 		jmp layer_on
 140               	.LVL3:
 141               		.loc 1 92 5 is_stmt 0 view .LVU25
 142               		.cfi_endproc
 143               	.LFE112:
 145               		.section	.text.reset_oneshot_layer,"ax",@progbits
 146               	.global	reset_oneshot_layer
 148               	reset_oneshot_layer:
 149               	.LFB113:
  93:./tmk_core/common/action_util.c **** #if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
  94:./tmk_core/common/action_util.c ****     oneshot_layer_time = timer_read();
  95:./tmk_core/common/action_util.c **** #endif
  96:./tmk_core/common/action_util.c **** }
  97:./tmk_core/common/action_util.c **** void reset_oneshot_layer(void) {
 150               		.loc 1 97 32 is_stmt 1 view -0
 151               		.cfi_startproc
 152               	/* prologue: function */
 153               	/* frame size = 0 */
 154               	/* stack size = 0 */
 155               	.L__stack_usage = 0
  98:./tmk_core/common/action_util.c ****     oneshot_layer_data = 0;
 156               		.loc 1 98 5 view .LVU27
 157               		.loc 1 98 24 is_stmt 0 view .LVU28
 158 0000 1092 0000 		sts oneshot_layer_data,__zero_reg__
 159               	/* epilogue start */
  99:./tmk_core/common/action_util.c **** #if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 100:./tmk_core/common/action_util.c ****     oneshot_layer_time = 0;
 101:./tmk_core/common/action_util.c **** #endif
 102:./tmk_core/common/action_util.c **** }
 160               		.loc 1 102 1 view .LVU29
 161 0004 0895      		ret
 162               		.cfi_endproc
 163               	.LFE113:
 165               		.section	.text.clear_oneshot_layer_state,"ax",@progbits
 166               	.global	clear_oneshot_layer_state
 168               	clear_oneshot_layer_state:
 169               	.LVL4:
 170               	.LFB114:
 103:./tmk_core/common/action_util.c **** void clear_oneshot_layer_state(oneshot_fullfillment_t state)
 104:./tmk_core/common/action_util.c **** {
 171               		.loc 1 104 1 is_stmt 1 view -0
 172               		.cfi_startproc
 173               	/* prologue: function */
 174               	/* frame size = 0 */
 175               	/* stack size = 0 */
 176               	.L__stack_usage = 0
 105:./tmk_core/common/action_util.c ****     uint8_t start_state = oneshot_layer_data;
 177               		.loc 1 105 5 view .LVU31
 178               		.loc 1 105 13 is_stmt 0 view .LVU32
 179 0000 2091 0000 		lds r18,oneshot_layer_data
 180               	.LVL5:
 106:./tmk_core/common/action_util.c ****     oneshot_layer_data &= ~state;
 181               		.loc 1 106 5 is_stmt 1 view .LVU33
 182               		.loc 1 106 24 is_stmt 0 view .LVU34
 183 0004 8095      		com r24
 184               	.LVL6:
 185               		.loc 1 106 24 view .LVU35
 186 0006 8223      		and r24,r18
 187               	.LVL7:
 188               		.loc 1 106 24 view .LVU36
 189 0008 8093 0000 		sts oneshot_layer_data,r24
 107:./tmk_core/common/action_util.c ****     if (!get_oneshot_layer_state() && start_state != oneshot_layer_data) {
 190               		.loc 1 107 5 is_stmt 1 view .LVU37
 191               		.loc 1 107 8 is_stmt 0 view .LVU38
 192 000c 982F      		mov r25,r24
 193 000e 9770      		andi r25,lo8(7)
 194 0010 9111      		cpse r25,__zero_reg__
 195 0012 00C0      		rjmp .L8
 196               		.loc 1 107 51 discriminator 1 view .LVU39
 197 0014 30E0      		ldi r19,0
 198 0016 482F      		mov r20,r24
 199 0018 082E      		mov __tmp_reg__,r24
 200 001a 000C      		lsl r0
 201 001c 550B      		sbc r21,r21
 202               		.loc 1 107 36 discriminator 1 view .LVU40
 203 001e 2417      		cp r18,r20
 204 0020 3507      		cpc r19,r21
 205 0022 01F0      		breq .L8
 108:./tmk_core/common/action_util.c ****         layer_off(get_oneshot_layer());
 206               		.loc 1 108 9 is_stmt 1 view .LVU41
 207               	.LBB8:
 208               	.LBI8:
  77:./tmk_core/common/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 209               		.loc 1 77 16 view .LVU42
 210               	.LBB9:
  77:./tmk_core/common/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 211               		.loc 1 77 42 view .LVU43
 212               	.LBE9:
 213               	.LBE8:
 214               		.loc 1 108 9 is_stmt 0 view .LVU44
 215 0024 8595      		asr r24
 216 0026 8595      		asr r24
 217 0028 8595      		asr r24
 218 002a 0C94 0000 		jmp layer_off
 219               	.LVL8:
 220               	.L8:
 221               	/* epilogue start */
 109:./tmk_core/common/action_util.c **** #if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 110:./tmk_core/common/action_util.c ****     oneshot_layer_time = 0;
 111:./tmk_core/common/action_util.c **** #endif
 112:./tmk_core/common/action_util.c ****     }
 113:./tmk_core/common/action_util.c **** }
 222               		.loc 1 113 1 view .LVU45
 223 002e 0895      		ret
 224               		.cfi_endproc
 225               	.LFE114:
 227               		.section	.text.is_oneshot_layer_active,"ax",@progbits
 228               	.global	is_oneshot_layer_active
 230               	is_oneshot_layer_active:
 231               	.LFB115:
 114:./tmk_core/common/action_util.c **** bool is_oneshot_layer_active(void)
 115:./tmk_core/common/action_util.c **** {
 232               		.loc 1 115 1 is_stmt 1 view -0
 233               		.cfi_startproc
 234               	/* prologue: function */
 235               	/* frame size = 0 */
 236               	/* stack size = 0 */
 237               	.L__stack_usage = 0
 116:./tmk_core/common/action_util.c ****     return get_oneshot_layer_state();
 238               		.loc 1 116 5 view .LVU47
 239               	.LBB10:
 240               	.LBI10:
  78:./tmk_core/common/action_util.c **** 
 241               		.loc 1 78 16 view .LVU48
 242               	.LBB11:
  78:./tmk_core/common/action_util.c **** 
 243               		.loc 1 78 48 view .LVU49
 244               	.LBE11:
 245               	.LBE10:
 246               		.loc 1 116 12 is_stmt 0 view .LVU50
 247 0000 9091 0000 		lds r25,oneshot_layer_data
 248 0004 9770      		andi r25,lo8(7)
 249 0006 81E0      		ldi r24,lo8(1)
 250 0008 9111      		cpse r25,__zero_reg__
 251 000a 00C0      		rjmp .L11
 252 000c 80E0      		ldi r24,0
 253               	.L11:
 254               	/* epilogue start */
 117:./tmk_core/common/action_util.c **** }
 255               		.loc 1 117 1 view .LVU51
 256 000e 0895      		ret
 257               		.cfi_endproc
 258               	.LFE115:
 260               		.section	.text.add_key,"ax",@progbits
 261               	.global	add_key
 263               	add_key:
 264               	.LVL9:
 265               	.LFB117:
 118:./tmk_core/common/action_util.c **** #endif
 119:./tmk_core/common/action_util.c **** 
 120:./tmk_core/common/action_util.c **** void send_keyboard_report(void) {
 121:./tmk_core/common/action_util.c ****     keyboard_report->mods  = real_mods;
 122:./tmk_core/common/action_util.c ****     keyboard_report->mods |= weak_mods;
 123:./tmk_core/common/action_util.c ****     keyboard_report->mods |= macro_mods;
 124:./tmk_core/common/action_util.c **** #ifndef NO_ACTION_ONESHOT
 125:./tmk_core/common/action_util.c ****     if (oneshot_mods) {
 126:./tmk_core/common/action_util.c **** #if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 127:./tmk_core/common/action_util.c ****         if (has_oneshot_mods_timed_out()) {
 128:./tmk_core/common/action_util.c ****             dprintf("Oneshot: timeout\n");
 129:./tmk_core/common/action_util.c ****             clear_oneshot_mods();
 130:./tmk_core/common/action_util.c ****         }
 131:./tmk_core/common/action_util.c **** #endif
 132:./tmk_core/common/action_util.c ****         keyboard_report->mods |= oneshot_mods;
 133:./tmk_core/common/action_util.c ****         if (has_anykey()) {
 134:./tmk_core/common/action_util.c ****             clear_oneshot_mods();
 135:./tmk_core/common/action_util.c ****         }
 136:./tmk_core/common/action_util.c ****     }
 137:./tmk_core/common/action_util.c **** 
 138:./tmk_core/common/action_util.c **** #endif
 139:./tmk_core/common/action_util.c ****     host_keyboard_send(keyboard_report);
 140:./tmk_core/common/action_util.c **** }
 141:./tmk_core/common/action_util.c **** 
 142:./tmk_core/common/action_util.c **** /* key */
 143:./tmk_core/common/action_util.c **** void add_key(uint8_t key)
 144:./tmk_core/common/action_util.c **** {
 266               		.loc 1 144 1 is_stmt 1 view -0
 267               		.cfi_startproc
 268               	/* prologue: function */
 269               	/* frame size = 0 */
 270               	/* stack size = 0 */
 271               	.L__stack_usage = 0
 145:./tmk_core/common/action_util.c **** #ifdef NKRO_ENABLE
 146:./tmk_core/common/action_util.c ****     if (keyboard_protocol && keymap_config.nkro) {
 272               		.loc 1 146 5 view .LVU53
 273               		.loc 1 146 8 is_stmt 0 view .LVU54
 274 0000 9091 0000 		lds r25,keyboard_protocol
 275 0004 9923      		tst r25
 276 0006 01F0      		breq .L13
 277               		.loc 1 146 27 discriminator 1 view .LVU55
 278 0008 9091 0000 		lds r25,keymap_config
 279 000c 97FF      		sbrs r25,7
 280 000e 00C0      		rjmp .L13
 147:./tmk_core/common/action_util.c ****         add_key_bit(key);
 281               		.loc 1 147 9 is_stmt 1 view .LVU56
 282               	.LVL10:
 283               	.LBB16:
 284               	.LBI16:
 148:./tmk_core/common/action_util.c ****         return;
 149:./tmk_core/common/action_util.c ****     }
 150:./tmk_core/common/action_util.c **** #endif
 151:./tmk_core/common/action_util.c ****     add_key_byte(key);
 152:./tmk_core/common/action_util.c **** }
 153:./tmk_core/common/action_util.c **** 
 154:./tmk_core/common/action_util.c **** void del_key(uint8_t key)
 155:./tmk_core/common/action_util.c **** {
 156:./tmk_core/common/action_util.c **** #ifdef NKRO_ENABLE
 157:./tmk_core/common/action_util.c ****     if (keyboard_protocol && keymap_config.nkro) {
 158:./tmk_core/common/action_util.c ****         del_key_bit(key);
 159:./tmk_core/common/action_util.c ****         return;
 160:./tmk_core/common/action_util.c ****     }
 161:./tmk_core/common/action_util.c **** #endif
 162:./tmk_core/common/action_util.c ****     del_key_byte(key);
 163:./tmk_core/common/action_util.c **** }
 164:./tmk_core/common/action_util.c **** 
 165:./tmk_core/common/action_util.c **** void clear_keys(void)
 166:./tmk_core/common/action_util.c **** {
 167:./tmk_core/common/action_util.c ****     // not clear mods
 168:./tmk_core/common/action_util.c ****     for (int8_t i = 1; i < KEYBOARD_REPORT_SIZE; i++) {
 169:./tmk_core/common/action_util.c ****         keyboard_report->raw[i] = 0;
 170:./tmk_core/common/action_util.c ****     }
 171:./tmk_core/common/action_util.c **** }
 172:./tmk_core/common/action_util.c **** 
 173:./tmk_core/common/action_util.c **** 
 174:./tmk_core/common/action_util.c **** /* modifier */
 175:./tmk_core/common/action_util.c **** uint8_t get_mods(void) { return real_mods; }
 176:./tmk_core/common/action_util.c **** void add_mods(uint8_t mods) { real_mods |= mods; }
 177:./tmk_core/common/action_util.c **** void del_mods(uint8_t mods) { real_mods &= ~mods; }
 178:./tmk_core/common/action_util.c **** void set_mods(uint8_t mods) { real_mods = mods; }
 179:./tmk_core/common/action_util.c **** void clear_mods(void) { real_mods = 0; }
 180:./tmk_core/common/action_util.c **** 
 181:./tmk_core/common/action_util.c **** /* weak modifier */
 182:./tmk_core/common/action_util.c **** uint8_t get_weak_mods(void) { return weak_mods; }
 183:./tmk_core/common/action_util.c **** void add_weak_mods(uint8_t mods) { weak_mods |= mods; }
 184:./tmk_core/common/action_util.c **** void del_weak_mods(uint8_t mods) { weak_mods &= ~mods; }
 185:./tmk_core/common/action_util.c **** void set_weak_mods(uint8_t mods) { weak_mods = mods; }
 186:./tmk_core/common/action_util.c **** void clear_weak_mods(void) { weak_mods = 0; }
 187:./tmk_core/common/action_util.c **** 
 188:./tmk_core/common/action_util.c **** /* macro modifier */
 189:./tmk_core/common/action_util.c **** uint8_t get_macro_mods(void) { return macro_mods; }
 190:./tmk_core/common/action_util.c **** void add_macro_mods(uint8_t mods) { macro_mods |= mods; }
 191:./tmk_core/common/action_util.c **** void del_macro_mods(uint8_t mods) { macro_mods &= ~mods; }
 192:./tmk_core/common/action_util.c **** void set_macro_mods(uint8_t mods) { macro_mods = mods; }
 193:./tmk_core/common/action_util.c **** void clear_macro_mods(void) { macro_mods = 0; }
 194:./tmk_core/common/action_util.c **** 
 195:./tmk_core/common/action_util.c **** /* Oneshot modifier */
 196:./tmk_core/common/action_util.c **** #ifndef NO_ACTION_ONESHOT
 197:./tmk_core/common/action_util.c **** void set_oneshot_mods(uint8_t mods)
 198:./tmk_core/common/action_util.c **** {
 199:./tmk_core/common/action_util.c ****     oneshot_mods = mods;
 200:./tmk_core/common/action_util.c **** #if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 201:./tmk_core/common/action_util.c ****     oneshot_time = timer_read();
 202:./tmk_core/common/action_util.c **** #endif
 203:./tmk_core/common/action_util.c **** }
 204:./tmk_core/common/action_util.c **** void clear_oneshot_mods(void)
 205:./tmk_core/common/action_util.c **** {
 206:./tmk_core/common/action_util.c ****     oneshot_mods = 0;
 207:./tmk_core/common/action_util.c **** #if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 208:./tmk_core/common/action_util.c ****     oneshot_time = 0;
 209:./tmk_core/common/action_util.c **** #endif
 210:./tmk_core/common/action_util.c **** }
 211:./tmk_core/common/action_util.c **** uint8_t get_oneshot_mods(void)
 212:./tmk_core/common/action_util.c **** {
 213:./tmk_core/common/action_util.c ****     return oneshot_mods;
 214:./tmk_core/common/action_util.c **** }
 215:./tmk_core/common/action_util.c **** #endif
 216:./tmk_core/common/action_util.c **** 
 217:./tmk_core/common/action_util.c **** /*
 218:./tmk_core/common/action_util.c ****  * inspect keyboard state
 219:./tmk_core/common/action_util.c ****  */
 220:./tmk_core/common/action_util.c **** uint8_t has_anykey(void)
 221:./tmk_core/common/action_util.c **** {
 222:./tmk_core/common/action_util.c ****     uint8_t cnt = 0;
 223:./tmk_core/common/action_util.c ****     for (uint8_t i = 1; i < KEYBOARD_REPORT_SIZE; i++) {
 224:./tmk_core/common/action_util.c ****         if (keyboard_report->raw[i])
 225:./tmk_core/common/action_util.c ****             cnt++;
 226:./tmk_core/common/action_util.c ****     }
 227:./tmk_core/common/action_util.c ****     return cnt;
 228:./tmk_core/common/action_util.c **** }
 229:./tmk_core/common/action_util.c **** 
 230:./tmk_core/common/action_util.c **** uint8_t has_anymod(void)
 231:./tmk_core/common/action_util.c **** {
 232:./tmk_core/common/action_util.c ****     return bitpop(real_mods);
 233:./tmk_core/common/action_util.c **** }
 234:./tmk_core/common/action_util.c **** 
 235:./tmk_core/common/action_util.c **** uint8_t get_first_key(void)
 236:./tmk_core/common/action_util.c **** {
 237:./tmk_core/common/action_util.c **** #ifdef NKRO_ENABLE
 238:./tmk_core/common/action_util.c ****     if (keyboard_protocol && keymap_config.nkro) {
 239:./tmk_core/common/action_util.c ****         uint8_t i = 0;
 240:./tmk_core/common/action_util.c ****         for (; i < KEYBOARD_REPORT_BITS && !keyboard_report->nkro.bits[i]; i++)
 241:./tmk_core/common/action_util.c ****             ;
 242:./tmk_core/common/action_util.c ****         return i<<3 | biton(keyboard_report->nkro.bits[i]);
 243:./tmk_core/common/action_util.c ****     }
 244:./tmk_core/common/action_util.c **** #endif
 245:./tmk_core/common/action_util.c **** #ifdef USB_6KRO_ENABLE
 246:./tmk_core/common/action_util.c ****     uint8_t i = cb_head;
 247:./tmk_core/common/action_util.c ****     do {
 248:./tmk_core/common/action_util.c ****         if (keyboard_report->keys[i] != 0) {
 249:./tmk_core/common/action_util.c ****             break;
 250:./tmk_core/common/action_util.c ****         }
 251:./tmk_core/common/action_util.c ****         i = RO_INC(i);
 252:./tmk_core/common/action_util.c ****     } while (i != cb_tail);
 253:./tmk_core/common/action_util.c ****     return keyboard_report->keys[i];
 254:./tmk_core/common/action_util.c **** #else
 255:./tmk_core/common/action_util.c ****     return keyboard_report->keys[0];
 256:./tmk_core/common/action_util.c **** #endif
 257:./tmk_core/common/action_util.c **** }
 258:./tmk_core/common/action_util.c **** 
 259:./tmk_core/common/action_util.c **** 
 260:./tmk_core/common/action_util.c **** 
 261:./tmk_core/common/action_util.c **** /* local functions */
 262:./tmk_core/common/action_util.c **** static inline void add_key_byte(uint8_t code)
 263:./tmk_core/common/action_util.c **** {
 264:./tmk_core/common/action_util.c **** #ifdef USB_6KRO_ENABLE
 265:./tmk_core/common/action_util.c ****     int8_t i = cb_head;
 266:./tmk_core/common/action_util.c ****     int8_t empty = -1;
 267:./tmk_core/common/action_util.c ****     if (cb_count) {
 268:./tmk_core/common/action_util.c ****         do {
 269:./tmk_core/common/action_util.c ****             if (keyboard_report->keys[i] == code) {
 270:./tmk_core/common/action_util.c ****                 return;
 271:./tmk_core/common/action_util.c ****             }
 272:./tmk_core/common/action_util.c ****             if (empty == -1 && keyboard_report->keys[i] == 0) {
 273:./tmk_core/common/action_util.c ****                 empty = i;
 274:./tmk_core/common/action_util.c ****             }
 275:./tmk_core/common/action_util.c ****             i = RO_INC(i);
 276:./tmk_core/common/action_util.c ****         } while (i != cb_tail);
 277:./tmk_core/common/action_util.c ****         if (i == cb_tail) {
 278:./tmk_core/common/action_util.c ****             if (cb_tail == cb_head) {
 279:./tmk_core/common/action_util.c ****                 // buffer is full
 280:./tmk_core/common/action_util.c ****                 if (empty == -1) {
 281:./tmk_core/common/action_util.c ****                     // pop head when has no empty space
 282:./tmk_core/common/action_util.c ****                     cb_head = RO_INC(cb_head);
 283:./tmk_core/common/action_util.c ****                     cb_count--;
 284:./tmk_core/common/action_util.c ****                 }
 285:./tmk_core/common/action_util.c ****                 else {
 286:./tmk_core/common/action_util.c ****                     // left shift when has empty space
 287:./tmk_core/common/action_util.c ****                     uint8_t offset = 1;
 288:./tmk_core/common/action_util.c ****                     i = RO_INC(empty);
 289:./tmk_core/common/action_util.c ****                     do {
 290:./tmk_core/common/action_util.c ****                         if (keyboard_report->keys[i] != 0) {
 291:./tmk_core/common/action_util.c ****                             keyboard_report->keys[empty] = keyboard_report->keys[i];
 292:./tmk_core/common/action_util.c ****                             keyboard_report->keys[i] = 0;
 293:./tmk_core/common/action_util.c ****                             empty = RO_INC(empty);
 294:./tmk_core/common/action_util.c ****                         }
 295:./tmk_core/common/action_util.c ****                         else {
 296:./tmk_core/common/action_util.c ****                             offset++;
 297:./tmk_core/common/action_util.c ****                         }
 298:./tmk_core/common/action_util.c ****                         i = RO_INC(i);
 299:./tmk_core/common/action_util.c ****                     } while (i != cb_tail);
 300:./tmk_core/common/action_util.c ****                     cb_tail = RO_SUB(cb_tail, offset);
 301:./tmk_core/common/action_util.c ****                 }
 302:./tmk_core/common/action_util.c ****             }
 303:./tmk_core/common/action_util.c ****         }
 304:./tmk_core/common/action_util.c ****     }
 305:./tmk_core/common/action_util.c ****     // add to tail
 306:./tmk_core/common/action_util.c ****     keyboard_report->keys[cb_tail] = code;
 307:./tmk_core/common/action_util.c ****     cb_tail = RO_INC(cb_tail);
 308:./tmk_core/common/action_util.c ****     cb_count++;
 309:./tmk_core/common/action_util.c **** #else
 310:./tmk_core/common/action_util.c ****     int8_t i = 0;
 311:./tmk_core/common/action_util.c ****     int8_t empty = -1;
 312:./tmk_core/common/action_util.c ****     for (; i < KEYBOARD_REPORT_KEYS; i++) {
 313:./tmk_core/common/action_util.c ****         if (keyboard_report->keys[i] == code) {
 314:./tmk_core/common/action_util.c ****             break;
 315:./tmk_core/common/action_util.c ****         }
 316:./tmk_core/common/action_util.c ****         if (empty == -1 && keyboard_report->keys[i] == 0) {
 317:./tmk_core/common/action_util.c ****             empty = i;
 318:./tmk_core/common/action_util.c ****         }
 319:./tmk_core/common/action_util.c ****     }
 320:./tmk_core/common/action_util.c ****     if (i == KEYBOARD_REPORT_KEYS) {
 321:./tmk_core/common/action_util.c ****         if (empty != -1) {
 322:./tmk_core/common/action_util.c ****             keyboard_report->keys[empty] = code;
 323:./tmk_core/common/action_util.c ****         }
 324:./tmk_core/common/action_util.c ****     }
 325:./tmk_core/common/action_util.c **** #endif
 326:./tmk_core/common/action_util.c **** }
 327:./tmk_core/common/action_util.c **** 
 328:./tmk_core/common/action_util.c **** static inline void del_key_byte(uint8_t code)
 329:./tmk_core/common/action_util.c **** {
 330:./tmk_core/common/action_util.c **** #ifdef USB_6KRO_ENABLE
 331:./tmk_core/common/action_util.c ****     uint8_t i = cb_head;
 332:./tmk_core/common/action_util.c ****     if (cb_count) {
 333:./tmk_core/common/action_util.c ****         do {
 334:./tmk_core/common/action_util.c ****             if (keyboard_report->keys[i] == code) {
 335:./tmk_core/common/action_util.c ****                 keyboard_report->keys[i] = 0;
 336:./tmk_core/common/action_util.c ****                 cb_count--;
 337:./tmk_core/common/action_util.c ****                 if (cb_count == 0) {
 338:./tmk_core/common/action_util.c ****                     // reset head and tail
 339:./tmk_core/common/action_util.c ****                     cb_tail = cb_head = 0;
 340:./tmk_core/common/action_util.c ****                 }
 341:./tmk_core/common/action_util.c ****                 if (i == RO_DEC(cb_tail)) {
 342:./tmk_core/common/action_util.c ****                     // left shift when next to tail
 343:./tmk_core/common/action_util.c ****                     do {
 344:./tmk_core/common/action_util.c ****                         cb_tail = RO_DEC(cb_tail);
 345:./tmk_core/common/action_util.c ****                         if (keyboard_report->keys[RO_DEC(cb_tail)] != 0) {
 346:./tmk_core/common/action_util.c ****                             break;
 347:./tmk_core/common/action_util.c ****                         }
 348:./tmk_core/common/action_util.c ****                     } while (cb_tail != cb_head);
 349:./tmk_core/common/action_util.c ****                 }
 350:./tmk_core/common/action_util.c ****                 break;
 351:./tmk_core/common/action_util.c ****             }
 352:./tmk_core/common/action_util.c ****             i = RO_INC(i);
 353:./tmk_core/common/action_util.c ****         } while (i != cb_tail);
 354:./tmk_core/common/action_util.c ****     }
 355:./tmk_core/common/action_util.c **** #else
 356:./tmk_core/common/action_util.c ****     for (uint8_t i = 0; i < KEYBOARD_REPORT_KEYS; i++) {
 357:./tmk_core/common/action_util.c ****         if (keyboard_report->keys[i] == code) {
 358:./tmk_core/common/action_util.c ****             keyboard_report->keys[i] = 0;
 359:./tmk_core/common/action_util.c ****         }
 360:./tmk_core/common/action_util.c ****     }
 361:./tmk_core/common/action_util.c **** #endif
 362:./tmk_core/common/action_util.c **** }
 363:./tmk_core/common/action_util.c **** 
 364:./tmk_core/common/action_util.c **** #ifdef NKRO_ENABLE
 365:./tmk_core/common/action_util.c **** static inline void add_key_bit(uint8_t code)
 285               		.loc 1 365 20 view .LVU57
 286               	.LBB17:
 366:./tmk_core/common/action_util.c **** {
 367:./tmk_core/common/action_util.c ****     if ((code>>3) < KEYBOARD_REPORT_BITS) {
 287               		.loc 1 367 5 view .LVU58
 288               		.loc 1 367 19 is_stmt 0 view .LVU59
 289 0010 982F      		mov r25,r24
 290 0012 9695      		lsr r25
 291 0014 9695      		lsr r25
 292 0016 9695      		lsr r25
 293               		.loc 1 367 8 view .LVU60
 294 0018 9F31      		cpi r25,lo8(31)
 295 001a 01F0      		breq .L12
 368:./tmk_core/common/action_util.c ****         keyboard_report->nkro.bits[code>>3] |= 1<<(code&7);
 296               		.loc 1 368 9 is_stmt 1 view .LVU61
 297               		.loc 1 368 24 is_stmt 0 view .LVU62
 298 001c E091 0000 		lds r30,keyboard_report
 299 0020 F091 0000 		lds r31,keyboard_report+1
 300               		.loc 1 368 45 view .LVU63
 301 0024 E90F      		add r30,r25
 302 0026 F11D      		adc r31,__zero_reg__
 303               		.loc 1 368 56 view .LVU64
 304 0028 8770      		andi r24,lo8(7)
 305               	.LVL11:
 306               		.loc 1 368 49 view .LVU65
 307 002a 21E0      		ldi r18,lo8(1)
 308 002c 30E0      		ldi r19,0
 309 002e 00C0      		rjmp 2f
 310               		1:
 311 0030 220F      		lsl r18
 312               		2:
 313 0032 8A95      		dec r24
 314 0034 02F4      		brpl 1b
 315               		.loc 1 368 45 view .LVU66
 316 0036 8181      		ldd r24,Z+1
 317 0038 822B      		or r24,r18
 318 003a 8183      		std Z+1,r24
 319 003c 0895      		ret
 320               	.LVL12:
 321               	.L13:
 322               		.loc 1 368 45 view .LVU67
 323               	.LBE17:
 324               	.LBE16:
 325               	.LBB18:
 326               	.LBB19:
 312:./tmk_core/common/action_util.c ****         if (keyboard_report->keys[i] == code) {
 327               		.loc 1 312 14 is_stmt 1 view .LVU68
 313:./tmk_core/common/action_util.c ****             break;
 328               		.loc 1 313 28 is_stmt 0 view .LVU69
 329 003e 2091 0000 		lds r18,keyboard_report
 330 0042 3091 0000 		lds r19,keyboard_report+1
 331 0046 F901      		movw r30,r18
 332 0048 3296      		adiw r30,2
 333 004a 9FEF      		ldi r25,lo8(-1)
 334 004c 40E0      		ldi r20,0
 335               	.LVL13:
 336               	.L16:
 313:./tmk_core/common/action_util.c ****             break;
 337               		.loc 1 313 9 is_stmt 1 view .LVU70
 313:./tmk_core/common/action_util.c ****             break;
 338               		.loc 1 313 34 is_stmt 0 view .LVU71
 339 004e 5191      		ld r21,Z+
 313:./tmk_core/common/action_util.c ****             break;
 340               		.loc 1 313 12 view .LVU72
 341 0050 8517      		cp r24,r21
 342 0052 01F0      		breq .L12
 316:./tmk_core/common/action_util.c ****             empty = i;
 343               		.loc 1 316 9 is_stmt 1 view .LVU73
 316:./tmk_core/common/action_util.c ****             empty = i;
 344               		.loc 1 316 12 is_stmt 0 view .LVU74
 345 0054 9F3F      		cpi r25,lo8(-1)
 346 0056 01F4      		brne .L15
 316:./tmk_core/common/action_util.c ****             empty = i;
 347               		.loc 1 316 25 view .LVU75
 348 0058 5111      		cpse r21,__zero_reg__
 349 005a 00C0      		rjmp .L15
 350 005c 942F      		mov r25,r20
 351               	.LVL14:
 352               	.L15:
 312:./tmk_core/common/action_util.c ****         if (keyboard_report->keys[i] == code) {
 353               		.loc 1 312 39 is_stmt 1 view .LVU76
 354 005e 4F5F      		subi r20,lo8(-(1))
 355               	.LVL15:
 312:./tmk_core/common/action_util.c ****         if (keyboard_report->keys[i] == code) {
 356               		.loc 1 312 14 view .LVU77
 357 0060 4E31      		cpi r20,lo8(30)
 358 0062 01F4      		brne .L16
 320:./tmk_core/common/action_util.c ****         if (empty != -1) {
 359               		.loc 1 320 5 view .LVU78
 321:./tmk_core/common/action_util.c ****             keyboard_report->keys[empty] = code;
 360               		.loc 1 321 9 view .LVU79
 321:./tmk_core/common/action_util.c ****             keyboard_report->keys[empty] = code;
 361               		.loc 1 321 12 is_stmt 0 view .LVU80
 362 0064 9F3F      		cpi r25,lo8(-1)
 363 0066 01F4      		brne .L18
 364               	.LVL16:
 365               	.L12:
 366               	/* epilogue start */
 321:./tmk_core/common/action_util.c ****             keyboard_report->keys[empty] = code;
 367               		.loc 1 321 12 view .LVU81
 368               	.LBE19:
 369               	.LBE18:
 152:./tmk_core/common/action_util.c **** 
 370               		.loc 1 152 1 view .LVU82
 371 0068 0895      		ret
 372               	.LVL17:
 373               	.L18:
 374               	.LBB21:
 375               	.LBB20:
 322:./tmk_core/common/action_util.c ****         }
 376               		.loc 1 322 13 is_stmt 1 view .LVU83
 322:./tmk_core/common/action_util.c ****         }
 377               		.loc 1 322 42 is_stmt 0 view .LVU84
 378 006a 290F      		add r18,r25
 379 006c 311D      		adc r19,__zero_reg__
 380 006e 97FD      		sbrc r25,7
 381 0070 3A95      		dec r19
 382 0072 F901      		movw r30,r18
 383 0074 8283      		std Z+2,r24
 384               	.LVL18:
 322:./tmk_core/common/action_util.c ****         }
 385               		.loc 1 322 42 view .LVU85
 386 0076 0895      		ret
 387               	.LBE20:
 388               	.LBE21:
 389               		.cfi_endproc
 390               	.LFE117:
 392               		.section	.text.del_key,"ax",@progbits
 393               	.global	del_key
 395               	del_key:
 396               	.LVL19:
 397               	.LFB118:
 155:./tmk_core/common/action_util.c **** #ifdef NKRO_ENABLE
 398               		.loc 1 155 1 is_stmt 1 view -0
 399               		.cfi_startproc
 400               	/* prologue: function */
 401               	/* frame size = 0 */
 402               	/* stack size = 0 */
 403               	.L__stack_usage = 0
 157:./tmk_core/common/action_util.c ****         del_key_bit(key);
 404               		.loc 1 157 5 view .LVU87
 157:./tmk_core/common/action_util.c ****         del_key_bit(key);
 405               		.loc 1 157 8 is_stmt 0 view .LVU88
 406 0000 9091 0000 		lds r25,keyboard_protocol
 407 0004 9923      		tst r25
 408 0006 01F0      		breq .L29
 157:./tmk_core/common/action_util.c ****         del_key_bit(key);
 409               		.loc 1 157 27 discriminator 1 view .LVU89
 410 0008 9091 0000 		lds r25,keymap_config
 411 000c 97FF      		sbrs r25,7
 412 000e 00C0      		rjmp .L29
 158:./tmk_core/common/action_util.c ****         return;
 413               		.loc 1 158 9 is_stmt 1 view .LVU90
 414               	.LVL20:
 415               	.LBB27:
 416               	.LBI27:
 369:./tmk_core/common/action_util.c ****     } else {
 370:./tmk_core/common/action_util.c ****         dprintf("add_key_bit: can't add: %02X\n", code);
 371:./tmk_core/common/action_util.c ****     }
 372:./tmk_core/common/action_util.c **** }
 373:./tmk_core/common/action_util.c **** 
 374:./tmk_core/common/action_util.c **** static inline void del_key_bit(uint8_t code)
 417               		.loc 1 374 20 view .LVU91
 418               	.LBB28:
 375:./tmk_core/common/action_util.c **** {
 376:./tmk_core/common/action_util.c ****     if ((code>>3) < KEYBOARD_REPORT_BITS) {
 419               		.loc 1 376 5 view .LVU92
 420               		.loc 1 376 19 is_stmt 0 view .LVU93
 421 0010 982F      		mov r25,r24
 422 0012 9695      		lsr r25
 423 0014 9695      		lsr r25
 424 0016 9695      		lsr r25
 425               		.loc 1 376 8 view .LVU94
 426 0018 9F31      		cpi r25,lo8(31)
 427 001a 01F0      		breq .L28
 377:./tmk_core/common/action_util.c ****         keyboard_report->nkro.bits[code>>3] &= ~(1<<(code&7));
 428               		.loc 1 377 9 is_stmt 1 view .LVU95
 429               		.loc 1 377 24 is_stmt 0 view .LVU96
 430 001c E091 0000 		lds r30,keyboard_report
 431 0020 F091 0000 		lds r31,keyboard_report+1
 432               		.loc 1 377 45 view .LVU97
 433 0024 E90F      		add r30,r25
 434 0026 F11D      		adc r31,__zero_reg__
 435               		.loc 1 377 58 view .LVU98
 436 0028 8770      		andi r24,lo8(7)
 437               	.LVL21:
 438               		.loc 1 377 51 view .LVU99
 439 002a 21E0      		ldi r18,lo8(1)
 440 002c 30E0      		ldi r19,0
 441 002e A901      		movw r20,r18
 442 0030 00C0      		rjmp 2f
 443               		1:
 444 0032 440F      		lsl r20
 445 0034 551F      		rol r21
 446               		2:
 447 0036 8A95      		dec r24
 448 0038 02F4      		brpl 1b
 449 003a CA01      		movw r24,r20
 450               		.loc 1 377 45 view .LVU100
 451 003c 8095      		com r24
 452 003e 9181      		ldd r25,Z+1
 453 0040 8923      		and r24,r25
 454 0042 8183      		std Z+1,r24
 455 0044 0895      		ret
 456               	.LVL22:
 457               	.L29:
 458               		.loc 1 377 45 view .LVU101
 459               	.LBE28:
 460               	.LBE27:
 461               	.LBB29:
 462               	.LBB30:
 356:./tmk_core/common/action_util.c ****         if (keyboard_report->keys[i] == code) {
 463               		.loc 1 356 27 is_stmt 1 view .LVU102
 357:./tmk_core/common/action_util.c ****             keyboard_report->keys[i] = 0;
 464               		.loc 1 357 28 is_stmt 0 view .LVU103
 465 0046 2091 0000 		lds r18,keyboard_report
 466 004a 3091 0000 		lds r19,keyboard_report+1
 467 004e F901      		movw r30,r18
 468 0050 3296      		adiw r30,2
 469 0052 205E      		subi r18,-32
 470 0054 3F4F      		sbci r19,-1
 471               	.LVL23:
 472               	.L33:
 357:./tmk_core/common/action_util.c ****             keyboard_report->keys[i] = 0;
 473               		.loc 1 357 9 is_stmt 1 view .LVU104
 357:./tmk_core/common/action_util.c ****             keyboard_report->keys[i] = 0;
 474               		.loc 1 357 34 is_stmt 0 view .LVU105
 475 0056 9191      		ld r25,Z+
 476               	.LVL24:
 357:./tmk_core/common/action_util.c ****             keyboard_report->keys[i] = 0;
 477               		.loc 1 357 12 view .LVU106
 478 0058 8913      		cpse r24,r25
 479 005a 00C0      		rjmp .L32
 358:./tmk_core/common/action_util.c ****         }
 480               		.loc 1 358 13 is_stmt 1 view .LVU107
 358:./tmk_core/common/action_util.c ****         }
 481               		.loc 1 358 38 is_stmt 0 view .LVU108
 482 005c DF01      		movw r26,r30
 483 005e 1197      		sbiw r26,1
 484 0060 1C92      		st X,__zero_reg__
 485               	.L32:
 356:./tmk_core/common/action_util.c ****         if (keyboard_report->keys[i] == code) {
 486               		.loc 1 356 52 is_stmt 1 view .LVU109
 487               	.LVL25:
 356:./tmk_core/common/action_util.c ****         if (keyboard_report->keys[i] == code) {
 488               		.loc 1 356 27 view .LVU110
 489 0062 E217      		cp r30,r18
 490 0064 F307      		cpc r31,r19
 491 0066 01F4      		brne .L33
 492               	.LVL26:
 493               	.L28:
 494               	/* epilogue start */
 356:./tmk_core/common/action_util.c ****         if (keyboard_report->keys[i] == code) {
 495               		.loc 1 356 27 is_stmt 0 view .LVU111
 496               	.LBE30:
 497               	.LBE29:
 163:./tmk_core/common/action_util.c **** 
 498               		.loc 1 163 1 view .LVU112
 499 0068 0895      		ret
 500               		.cfi_endproc
 501               	.LFE118:
 503               		.section	.text.clear_keys,"ax",@progbits
 504               	.global	clear_keys
 506               	clear_keys:
 507               	.LFB119:
 166:./tmk_core/common/action_util.c ****     // not clear mods
 508               		.loc 1 166 1 is_stmt 1 view -0
 509               		.cfi_startproc
 510               	/* prologue: function */
 511               	/* frame size = 0 */
 512               	/* stack size = 0 */
 513               	.L__stack_usage = 0
 168:./tmk_core/common/action_util.c ****         keyboard_report->raw[i] = 0;
 514               		.loc 1 168 5 view .LVU114
 515               	.LBB31:
 168:./tmk_core/common/action_util.c ****         keyboard_report->raw[i] = 0;
 516               		.loc 1 168 10 view .LVU115
 517               	.LVL27:
 168:./tmk_core/common/action_util.c ****         keyboard_report->raw[i] = 0;
 518               		.loc 1 168 26 view .LVU116
 519               	.LBE31:
 166:./tmk_core/common/action_util.c ****     // not clear mods
 520               		.loc 1 166 1 is_stmt 0 view .LVU117
 521 0000 81E0      		ldi r24,lo8(1)
 522 0002 90E0      		ldi r25,0
 523               	.LVL28:
 524               	.L42:
 525               	.LBB32:
 169:./tmk_core/common/action_util.c ****     }
 526               		.loc 1 169 9 is_stmt 1 discriminator 3 view .LVU118
 169:./tmk_core/common/action_util.c ****     }
 527               		.loc 1 169 24 is_stmt 0 discriminator 3 view .LVU119
 528 0004 E091 0000 		lds r30,keyboard_report
 529 0008 F091 0000 		lds r31,keyboard_report+1
 169:./tmk_core/common/action_util.c ****     }
 530               		.loc 1 169 33 discriminator 3 view .LVU120
 531 000c E80F      		add r30,r24
 532 000e F91F      		adc r31,r25
 533 0010 1082      		st Z,__zero_reg__
 168:./tmk_core/common/action_util.c ****         keyboard_report->raw[i] = 0;
 534               		.loc 1 168 51 is_stmt 1 discriminator 3 view .LVU121
 535               	.LVL29:
 168:./tmk_core/common/action_util.c ****         keyboard_report->raw[i] = 0;
 536               		.loc 1 168 26 discriminator 3 view .LVU122
 537 0012 0196      		adiw r24,1
 538               	.LVL30:
 168:./tmk_core/common/action_util.c ****         keyboard_report->raw[i] = 0;
 539               		.loc 1 168 26 is_stmt 0 discriminator 3 view .LVU123
 540 0014 8032      		cpi r24,32
 541 0016 9105      		cpc r25,__zero_reg__
 542 0018 01F4      		brne .L42
 543               	/* epilogue start */
 544               	.LBE32:
 171:./tmk_core/common/action_util.c **** 
 545               		.loc 1 171 1 view .LVU124
 546 001a 0895      		ret
 547               		.cfi_endproc
 548               	.LFE119:
 550               		.section	.text.get_mods,"ax",@progbits
 551               	.global	get_mods
 553               	get_mods:
 554               	.LFB120:
 175:./tmk_core/common/action_util.c **** void add_mods(uint8_t mods) { real_mods |= mods; }
 555               		.loc 1 175 24 is_stmt 1 view -0
 556               		.cfi_startproc
 557               	/* prologue: function */
 558               	/* frame size = 0 */
 559               	/* stack size = 0 */
 560               	.L__stack_usage = 0
 175:./tmk_core/common/action_util.c **** void add_mods(uint8_t mods) { real_mods |= mods; }
 561               		.loc 1 175 26 view .LVU126
 175:./tmk_core/common/action_util.c **** void add_mods(uint8_t mods) { real_mods |= mods; }
 562               		.loc 1 175 44 is_stmt 0 view .LVU127
 563 0000 8091 0000 		lds r24,real_mods
 564               	/* epilogue start */
 565 0004 0895      		ret
 566               		.cfi_endproc
 567               	.LFE120:
 569               		.section	.text.add_mods,"ax",@progbits
 570               	.global	add_mods
 572               	add_mods:
 573               	.LVL31:
 574               	.LFB121:
 176:./tmk_core/common/action_util.c **** void del_mods(uint8_t mods) { real_mods &= ~mods; }
 575               		.loc 1 176 29 is_stmt 1 view -0
 576               		.cfi_startproc
 577               	/* prologue: function */
 578               	/* frame size = 0 */
 579               	/* stack size = 0 */
 580               	.L__stack_usage = 0
 176:./tmk_core/common/action_util.c **** void del_mods(uint8_t mods) { real_mods &= ~mods; }
 581               		.loc 1 176 31 view .LVU129
 176:./tmk_core/common/action_util.c **** void del_mods(uint8_t mods) { real_mods &= ~mods; }
 582               		.loc 1 176 41 is_stmt 0 view .LVU130
 583 0000 9091 0000 		lds r25,real_mods
 584 0004 982B      		or r25,r24
 585 0006 9093 0000 		sts real_mods,r25
 586               	/* epilogue start */
 176:./tmk_core/common/action_util.c **** void del_mods(uint8_t mods) { real_mods &= ~mods; }
 587               		.loc 1 176 50 view .LVU131
 588 000a 0895      		ret
 589               		.cfi_endproc
 590               	.LFE121:
 592               		.section	.text.del_mods,"ax",@progbits
 593               	.global	del_mods
 595               	del_mods:
 596               	.LVL32:
 597               	.LFB122:
 177:./tmk_core/common/action_util.c **** void set_mods(uint8_t mods) { real_mods = mods; }
 598               		.loc 1 177 29 is_stmt 1 view -0
 599               		.cfi_startproc
 600               	/* prologue: function */
 601               	/* frame size = 0 */
 602               	/* stack size = 0 */
 603               	.L__stack_usage = 0
 177:./tmk_core/common/action_util.c **** void set_mods(uint8_t mods) { real_mods = mods; }
 604               		.loc 1 177 31 view .LVU133
 177:./tmk_core/common/action_util.c **** void set_mods(uint8_t mods) { real_mods = mods; }
 605               		.loc 1 177 41 is_stmt 0 view .LVU134
 606 0000 982F      		mov r25,r24
 607 0002 9095      		com r25
 608 0004 8091 0000 		lds r24,real_mods
 609               	.LVL33:
 177:./tmk_core/common/action_util.c **** void set_mods(uint8_t mods) { real_mods = mods; }
 610               		.loc 1 177 41 view .LVU135
 611 0008 8923      		and r24,r25
 612 000a 8093 0000 		sts real_mods,r24
 613               	/* epilogue start */
 177:./tmk_core/common/action_util.c **** void set_mods(uint8_t mods) { real_mods = mods; }
 614               		.loc 1 177 51 view .LVU136
 615 000e 0895      		ret
 616               		.cfi_endproc
 617               	.LFE122:
 619               		.section	.text.set_mods,"ax",@progbits
 620               	.global	set_mods
 622               	set_mods:
 623               	.LVL34:
 624               	.LFB123:
 178:./tmk_core/common/action_util.c **** void clear_mods(void) { real_mods = 0; }
 625               		.loc 1 178 29 is_stmt 1 view -0
 626               		.cfi_startproc
 627               	/* prologue: function */
 628               	/* frame size = 0 */
 629               	/* stack size = 0 */
 630               	.L__stack_usage = 0
 178:./tmk_core/common/action_util.c **** void clear_mods(void) { real_mods = 0; }
 631               		.loc 1 178 31 view .LVU138
 178:./tmk_core/common/action_util.c **** void clear_mods(void) { real_mods = 0; }
 632               		.loc 1 178 41 is_stmt 0 view .LVU139
 633 0000 8093 0000 		sts real_mods,r24
 634               	/* epilogue start */
 178:./tmk_core/common/action_util.c **** void clear_mods(void) { real_mods = 0; }
 635               		.loc 1 178 49 view .LVU140
 636 0004 0895      		ret
 637               		.cfi_endproc
 638               	.LFE123:
 640               		.section	.text.clear_mods,"ax",@progbits
 641               	.global	clear_mods
 643               	clear_mods:
 644               	.LFB124:
 179:./tmk_core/common/action_util.c **** 
 645               		.loc 1 179 23 is_stmt 1 view -0
 646               		.cfi_startproc
 647               	/* prologue: function */
 648               	/* frame size = 0 */
 649               	/* stack size = 0 */
 650               	.L__stack_usage = 0
 179:./tmk_core/common/action_util.c **** 
 651               		.loc 1 179 25 view .LVU142
 179:./tmk_core/common/action_util.c **** 
 652               		.loc 1 179 35 is_stmt 0 view .LVU143
 653 0000 1092 0000 		sts real_mods,__zero_reg__
 654               	/* epilogue start */
 179:./tmk_core/common/action_util.c **** 
 655               		.loc 1 179 40 view .LVU144
 656 0004 0895      		ret
 657               		.cfi_endproc
 658               	.LFE124:
 660               		.section	.text.get_weak_mods,"ax",@progbits
 661               	.global	get_weak_mods
 663               	get_weak_mods:
 664               	.LFB125:
 182:./tmk_core/common/action_util.c **** void add_weak_mods(uint8_t mods) { weak_mods |= mods; }
 665               		.loc 1 182 29 is_stmt 1 view -0
 666               		.cfi_startproc
 667               	/* prologue: function */
 668               	/* frame size = 0 */
 669               	/* stack size = 0 */
 670               	.L__stack_usage = 0
 182:./tmk_core/common/action_util.c **** void add_weak_mods(uint8_t mods) { weak_mods |= mods; }
 671               		.loc 1 182 31 view .LVU146
 182:./tmk_core/common/action_util.c **** void add_weak_mods(uint8_t mods) { weak_mods |= mods; }
 672               		.loc 1 182 49 is_stmt 0 view .LVU147
 673 0000 8091 0000 		lds r24,weak_mods
 674               	/* epilogue start */
 675 0004 0895      		ret
 676               		.cfi_endproc
 677               	.LFE125:
 679               		.section	.text.add_weak_mods,"ax",@progbits
 680               	.global	add_weak_mods
 682               	add_weak_mods:
 683               	.LVL35:
 684               	.LFB126:
 183:./tmk_core/common/action_util.c **** void del_weak_mods(uint8_t mods) { weak_mods &= ~mods; }
 685               		.loc 1 183 34 is_stmt 1 view -0
 686               		.cfi_startproc
 687               	/* prologue: function */
 688               	/* frame size = 0 */
 689               	/* stack size = 0 */
 690               	.L__stack_usage = 0
 183:./tmk_core/common/action_util.c **** void del_weak_mods(uint8_t mods) { weak_mods &= ~mods; }
 691               		.loc 1 183 36 view .LVU149
 183:./tmk_core/common/action_util.c **** void del_weak_mods(uint8_t mods) { weak_mods &= ~mods; }
 692               		.loc 1 183 46 is_stmt 0 view .LVU150
 693 0000 9091 0000 		lds r25,weak_mods
 694 0004 982B      		or r25,r24
 695 0006 9093 0000 		sts weak_mods,r25
 696               	/* epilogue start */
 183:./tmk_core/common/action_util.c **** void del_weak_mods(uint8_t mods) { weak_mods &= ~mods; }
 697               		.loc 1 183 55 view .LVU151
 698 000a 0895      		ret
 699               		.cfi_endproc
 700               	.LFE126:
 702               		.section	.text.del_weak_mods,"ax",@progbits
 703               	.global	del_weak_mods
 705               	del_weak_mods:
 706               	.LVL36:
 707               	.LFB127:
 184:./tmk_core/common/action_util.c **** void set_weak_mods(uint8_t mods) { weak_mods = mods; }
 708               		.loc 1 184 34 is_stmt 1 view -0
 709               		.cfi_startproc
 710               	/* prologue: function */
 711               	/* frame size = 0 */
 712               	/* stack size = 0 */
 713               	.L__stack_usage = 0
 184:./tmk_core/common/action_util.c **** void set_weak_mods(uint8_t mods) { weak_mods = mods; }
 714               		.loc 1 184 36 view .LVU153
 184:./tmk_core/common/action_util.c **** void set_weak_mods(uint8_t mods) { weak_mods = mods; }
 715               		.loc 1 184 46 is_stmt 0 view .LVU154
 716 0000 982F      		mov r25,r24
 717 0002 9095      		com r25
 718 0004 8091 0000 		lds r24,weak_mods
 719               	.LVL37:
 184:./tmk_core/common/action_util.c **** void set_weak_mods(uint8_t mods) { weak_mods = mods; }
 720               		.loc 1 184 46 view .LVU155
 721 0008 8923      		and r24,r25
 722 000a 8093 0000 		sts weak_mods,r24
 723               	/* epilogue start */
 184:./tmk_core/common/action_util.c **** void set_weak_mods(uint8_t mods) { weak_mods = mods; }
 724               		.loc 1 184 56 view .LVU156
 725 000e 0895      		ret
 726               		.cfi_endproc
 727               	.LFE127:
 729               		.section	.text.set_weak_mods,"ax",@progbits
 730               	.global	set_weak_mods
 732               	set_weak_mods:
 733               	.LVL38:
 734               	.LFB128:
 185:./tmk_core/common/action_util.c **** void clear_weak_mods(void) { weak_mods = 0; }
 735               		.loc 1 185 34 is_stmt 1 view -0
 736               		.cfi_startproc
 737               	/* prologue: function */
 738               	/* frame size = 0 */
 739               	/* stack size = 0 */
 740               	.L__stack_usage = 0
 185:./tmk_core/common/action_util.c **** void clear_weak_mods(void) { weak_mods = 0; }
 741               		.loc 1 185 36 view .LVU158
 185:./tmk_core/common/action_util.c **** void clear_weak_mods(void) { weak_mods = 0; }
 742               		.loc 1 185 46 is_stmt 0 view .LVU159
 743 0000 8093 0000 		sts weak_mods,r24
 744               	/* epilogue start */
 185:./tmk_core/common/action_util.c **** void clear_weak_mods(void) { weak_mods = 0; }
 745               		.loc 1 185 54 view .LVU160
 746 0004 0895      		ret
 747               		.cfi_endproc
 748               	.LFE128:
 750               		.section	.text.clear_weak_mods,"ax",@progbits
 751               	.global	clear_weak_mods
 753               	clear_weak_mods:
 754               	.LFB129:
 186:./tmk_core/common/action_util.c **** 
 755               		.loc 1 186 28 is_stmt 1 view -0
 756               		.cfi_startproc
 757               	/* prologue: function */
 758               	/* frame size = 0 */
 759               	/* stack size = 0 */
 760               	.L__stack_usage = 0
 186:./tmk_core/common/action_util.c **** 
 761               		.loc 1 186 30 view .LVU162
 186:./tmk_core/common/action_util.c **** 
 762               		.loc 1 186 40 is_stmt 0 view .LVU163
 763 0000 1092 0000 		sts weak_mods,__zero_reg__
 764               	/* epilogue start */
 186:./tmk_core/common/action_util.c **** 
 765               		.loc 1 186 45 view .LVU164
 766 0004 0895      		ret
 767               		.cfi_endproc
 768               	.LFE129:
 770               		.section	.text.get_macro_mods,"ax",@progbits
 771               	.global	get_macro_mods
 773               	get_macro_mods:
 774               	.LFB130:
 189:./tmk_core/common/action_util.c **** void add_macro_mods(uint8_t mods) { macro_mods |= mods; }
 775               		.loc 1 189 30 is_stmt 1 view -0
 776               		.cfi_startproc
 777               	/* prologue: function */
 778               	/* frame size = 0 */
 779               	/* stack size = 0 */
 780               	.L__stack_usage = 0
 189:./tmk_core/common/action_util.c **** void add_macro_mods(uint8_t mods) { macro_mods |= mods; }
 781               		.loc 1 189 32 view .LVU166
 189:./tmk_core/common/action_util.c **** void add_macro_mods(uint8_t mods) { macro_mods |= mods; }
 782               		.loc 1 189 51 is_stmt 0 view .LVU167
 783 0000 8091 0000 		lds r24,macro_mods
 784               	/* epilogue start */
 785 0004 0895      		ret
 786               		.cfi_endproc
 787               	.LFE130:
 789               		.section	.text.add_macro_mods,"ax",@progbits
 790               	.global	add_macro_mods
 792               	add_macro_mods:
 793               	.LVL39:
 794               	.LFB131:
 190:./tmk_core/common/action_util.c **** void del_macro_mods(uint8_t mods) { macro_mods &= ~mods; }
 795               		.loc 1 190 35 is_stmt 1 view -0
 796               		.cfi_startproc
 797               	/* prologue: function */
 798               	/* frame size = 0 */
 799               	/* stack size = 0 */
 800               	.L__stack_usage = 0
 190:./tmk_core/common/action_util.c **** void del_macro_mods(uint8_t mods) { macro_mods &= ~mods; }
 801               		.loc 1 190 37 view .LVU169
 190:./tmk_core/common/action_util.c **** void del_macro_mods(uint8_t mods) { macro_mods &= ~mods; }
 802               		.loc 1 190 48 is_stmt 0 view .LVU170
 803 0000 9091 0000 		lds r25,macro_mods
 804 0004 982B      		or r25,r24
 805 0006 9093 0000 		sts macro_mods,r25
 806               	/* epilogue start */
 190:./tmk_core/common/action_util.c **** void del_macro_mods(uint8_t mods) { macro_mods &= ~mods; }
 807               		.loc 1 190 57 view .LVU171
 808 000a 0895      		ret
 809               		.cfi_endproc
 810               	.LFE131:
 812               		.section	.text.del_macro_mods,"ax",@progbits
 813               	.global	del_macro_mods
 815               	del_macro_mods:
 816               	.LVL40:
 817               	.LFB132:
 191:./tmk_core/common/action_util.c **** void set_macro_mods(uint8_t mods) { macro_mods = mods; }
 818               		.loc 1 191 35 is_stmt 1 view -0
 819               		.cfi_startproc
 820               	/* prologue: function */
 821               	/* frame size = 0 */
 822               	/* stack size = 0 */
 823               	.L__stack_usage = 0
 191:./tmk_core/common/action_util.c **** void set_macro_mods(uint8_t mods) { macro_mods = mods; }
 824               		.loc 1 191 37 view .LVU173
 191:./tmk_core/common/action_util.c **** void set_macro_mods(uint8_t mods) { macro_mods = mods; }
 825               		.loc 1 191 48 is_stmt 0 view .LVU174
 826 0000 982F      		mov r25,r24
 827 0002 9095      		com r25
 828 0004 8091 0000 		lds r24,macro_mods
 829               	.LVL41:
 191:./tmk_core/common/action_util.c **** void set_macro_mods(uint8_t mods) { macro_mods = mods; }
 830               		.loc 1 191 48 view .LVU175
 831 0008 8923      		and r24,r25
 832 000a 8093 0000 		sts macro_mods,r24
 833               	/* epilogue start */
 191:./tmk_core/common/action_util.c **** void set_macro_mods(uint8_t mods) { macro_mods = mods; }
 834               		.loc 1 191 58 view .LVU176
 835 000e 0895      		ret
 836               		.cfi_endproc
 837               	.LFE132:
 839               		.section	.text.set_macro_mods,"ax",@progbits
 840               	.global	set_macro_mods
 842               	set_macro_mods:
 843               	.LVL42:
 844               	.LFB133:
 192:./tmk_core/common/action_util.c **** void clear_macro_mods(void) { macro_mods = 0; }
 845               		.loc 1 192 35 is_stmt 1 view -0
 846               		.cfi_startproc
 847               	/* prologue: function */
 848               	/* frame size = 0 */
 849               	/* stack size = 0 */
 850               	.L__stack_usage = 0
 192:./tmk_core/common/action_util.c **** void clear_macro_mods(void) { macro_mods = 0; }
 851               		.loc 1 192 37 view .LVU178
 192:./tmk_core/common/action_util.c **** void clear_macro_mods(void) { macro_mods = 0; }
 852               		.loc 1 192 48 is_stmt 0 view .LVU179
 853 0000 8093 0000 		sts macro_mods,r24
 854               	/* epilogue start */
 192:./tmk_core/common/action_util.c **** void clear_macro_mods(void) { macro_mods = 0; }
 855               		.loc 1 192 56 view .LVU180
 856 0004 0895      		ret
 857               		.cfi_endproc
 858               	.LFE133:
 860               		.section	.text.clear_macro_mods,"ax",@progbits
 861               	.global	clear_macro_mods
 863               	clear_macro_mods:
 864               	.LFB134:
 193:./tmk_core/common/action_util.c **** 
 865               		.loc 1 193 29 is_stmt 1 view -0
 866               		.cfi_startproc
 867               	/* prologue: function */
 868               	/* frame size = 0 */
 869               	/* stack size = 0 */
 870               	.L__stack_usage = 0
 193:./tmk_core/common/action_util.c **** 
 871               		.loc 1 193 31 view .LVU182
 193:./tmk_core/common/action_util.c **** 
 872               		.loc 1 193 42 is_stmt 0 view .LVU183
 873 0000 1092 0000 		sts macro_mods,__zero_reg__
 874               	/* epilogue start */
 193:./tmk_core/common/action_util.c **** 
 875               		.loc 1 193 47 view .LVU184
 876 0004 0895      		ret
 877               		.cfi_endproc
 878               	.LFE134:
 880               		.section	.text.set_oneshot_mods,"ax",@progbits
 881               	.global	set_oneshot_mods
 883               	set_oneshot_mods:
 884               	.LVL43:
 885               	.LFB135:
 198:./tmk_core/common/action_util.c ****     oneshot_mods = mods;
 886               		.loc 1 198 1 is_stmt 1 view -0
 887               		.cfi_startproc
 888               	/* prologue: function */
 889               	/* frame size = 0 */
 890               	/* stack size = 0 */
 891               	.L__stack_usage = 0
 199:./tmk_core/common/action_util.c **** #if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 892               		.loc 1 199 5 view .LVU186
 199:./tmk_core/common/action_util.c **** #if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 893               		.loc 1 199 18 is_stmt 0 view .LVU187
 894 0000 8093 0000 		sts oneshot_mods,r24
 895               	/* epilogue start */
 203:./tmk_core/common/action_util.c **** void clear_oneshot_mods(void)
 896               		.loc 1 203 1 view .LVU188
 897 0004 0895      		ret
 898               		.cfi_endproc
 899               	.LFE135:
 901               		.section	.text.clear_oneshot_mods,"ax",@progbits
 902               	.global	clear_oneshot_mods
 904               	clear_oneshot_mods:
 905               	.LFB136:
 205:./tmk_core/common/action_util.c ****     oneshot_mods = 0;
 906               		.loc 1 205 1 is_stmt 1 view -0
 907               		.cfi_startproc
 908               	/* prologue: function */
 909               	/* frame size = 0 */
 910               	/* stack size = 0 */
 911               	.L__stack_usage = 0
 206:./tmk_core/common/action_util.c **** #if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 912               		.loc 1 206 5 view .LVU190
 206:./tmk_core/common/action_util.c **** #if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 913               		.loc 1 206 18 is_stmt 0 view .LVU191
 914 0000 1092 0000 		sts oneshot_mods,__zero_reg__
 915               	/* epilogue start */
 210:./tmk_core/common/action_util.c **** uint8_t get_oneshot_mods(void)
 916               		.loc 1 210 1 view .LVU192
 917 0004 0895      		ret
 918               		.cfi_endproc
 919               	.LFE136:
 921               		.section	.text.get_oneshot_mods,"ax",@progbits
 922               	.global	get_oneshot_mods
 924               	get_oneshot_mods:
 925               	.LFB137:
 212:./tmk_core/common/action_util.c ****     return oneshot_mods;
 926               		.loc 1 212 1 is_stmt 1 view -0
 927               		.cfi_startproc
 928               	/* prologue: function */
 929               	/* frame size = 0 */
 930               	/* stack size = 0 */
 931               	.L__stack_usage = 0
 213:./tmk_core/common/action_util.c **** }
 932               		.loc 1 213 5 view .LVU194
 214:./tmk_core/common/action_util.c **** #endif
 933               		.loc 1 214 1 is_stmt 0 view .LVU195
 934 0000 8091 0000 		lds r24,oneshot_mods
 935               	/* epilogue start */
 936 0004 0895      		ret
 937               		.cfi_endproc
 938               	.LFE137:
 940               		.section	.text.has_anykey,"ax",@progbits
 941               	.global	has_anykey
 943               	has_anykey:
 944               	.LFB138:
 221:./tmk_core/common/action_util.c ****     uint8_t cnt = 0;
 945               		.loc 1 221 1 is_stmt 1 view -0
 946               		.cfi_startproc
 947               	/* prologue: function */
 948               	/* frame size = 0 */
 949               	/* stack size = 0 */
 950               	.L__stack_usage = 0
 222:./tmk_core/common/action_util.c ****     for (uint8_t i = 1; i < KEYBOARD_REPORT_SIZE; i++) {
 951               		.loc 1 222 5 view .LVU197
 952               	.LVL44:
 223:./tmk_core/common/action_util.c ****         if (keyboard_report->raw[i])
 953               		.loc 1 223 5 view .LVU198
 954               	.LBB33:
 223:./tmk_core/common/action_util.c ****         if (keyboard_report->raw[i])
 955               		.loc 1 223 10 view .LVU199
 223:./tmk_core/common/action_util.c ****         if (keyboard_report->raw[i])
 956               		.loc 1 223 27 view .LVU200
 224:./tmk_core/common/action_util.c ****             cnt++;
 957               		.loc 1 224 28 is_stmt 0 view .LVU201
 958 0000 2091 0000 		lds r18,keyboard_report
 959 0004 3091 0000 		lds r19,keyboard_report+1
 960 0008 F901      		movw r30,r18
 961 000a 3196      		adiw r30,1
 962 000c 205E      		subi r18,-32
 963 000e 3F4F      		sbci r19,-1
 964               	.LBE33:
 222:./tmk_core/common/action_util.c ****     for (uint8_t i = 1; i < KEYBOARD_REPORT_SIZE; i++) {
 965               		.loc 1 222 13 view .LVU202
 966 0010 80E0      		ldi r24,0
 967               	.LVL45:
 968               	.L64:
 969               	.LBB34:
 224:./tmk_core/common/action_util.c ****             cnt++;
 970               		.loc 1 224 9 is_stmt 1 view .LVU203
 224:./tmk_core/common/action_util.c ****             cnt++;
 971               		.loc 1 224 33 is_stmt 0 view .LVU204
 972 0012 9191      		ld r25,Z+
 973               	.LVL46:
 224:./tmk_core/common/action_util.c ****             cnt++;
 974               		.loc 1 224 12 view .LVU205
 975 0014 9111      		cpse r25,__zero_reg__
 225:./tmk_core/common/action_util.c ****     }
 976               		.loc 1 225 13 is_stmt 1 view .LVU206
 225:./tmk_core/common/action_util.c ****     }
 977               		.loc 1 225 16 is_stmt 0 view .LVU207
 978 0016 8F5F      		subi r24,lo8(-(1))
 979               	.LVL47:
 980               	.L63:
 223:./tmk_core/common/action_util.c ****         if (keyboard_report->raw[i])
 981               		.loc 1 223 52 is_stmt 1 discriminator 2 view .LVU208
 223:./tmk_core/common/action_util.c ****         if (keyboard_report->raw[i])
 982               		.loc 1 223 27 discriminator 2 view .LVU209
 983 0018 E217      		cp r30,r18
 984 001a F307      		cpc r31,r19
 985 001c 01F4      		brne .L64
 223:./tmk_core/common/action_util.c ****         if (keyboard_report->raw[i])
 986               		.loc 1 223 27 is_stmt 0 discriminator 2 view .LVU210
 987               	.LBE34:
 227:./tmk_core/common/action_util.c **** }
 988               		.loc 1 227 5 is_stmt 1 view .LVU211
 989               	/* epilogue start */
 228:./tmk_core/common/action_util.c **** 
 990               		.loc 1 228 1 is_stmt 0 view .LVU212
 991 001e 0895      		ret
 992               		.cfi_endproc
 993               	.LFE138:
 995               		.section	.text.send_keyboard_report,"ax",@progbits
 996               	.global	send_keyboard_report
 998               	send_keyboard_report:
 999               	.LFB116:
 120:./tmk_core/common/action_util.c ****     keyboard_report->mods  = real_mods;
 1000               		.loc 1 120 33 is_stmt 1 view -0
 1001               		.cfi_startproc
 1002               	/* prologue: function */
 1003               	/* frame size = 0 */
 1004               	/* stack size = 0 */
 1005               	.L__stack_usage = 0
 121:./tmk_core/common/action_util.c ****     keyboard_report->mods |= weak_mods;
 1006               		.loc 1 121 5 view .LVU214
 121:./tmk_core/common/action_util.c ****     keyboard_report->mods |= weak_mods;
 1007               		.loc 1 121 20 is_stmt 0 view .LVU215
 1008 0000 E091 0000 		lds r30,keyboard_report
 1009 0004 F091 0000 		lds r31,keyboard_report+1
 121:./tmk_core/common/action_util.c ****     keyboard_report->mods |= weak_mods;
 1010               		.loc 1 121 28 view .LVU216
 1011 0008 8091 0000 		lds r24,real_mods
 1012 000c 8083      		st Z,r24
 122:./tmk_core/common/action_util.c ****     keyboard_report->mods |= macro_mods;
 1013               		.loc 1 122 5 is_stmt 1 view .LVU217
 122:./tmk_core/common/action_util.c ****     keyboard_report->mods |= macro_mods;
 1014               		.loc 1 122 20 is_stmt 0 view .LVU218
 1015 000e E091 0000 		lds r30,keyboard_report
 1016 0012 F091 0000 		lds r31,keyboard_report+1
 122:./tmk_core/common/action_util.c ****     keyboard_report->mods |= macro_mods;
 1017               		.loc 1 122 27 view .LVU219
 1018 0016 8081      		ld r24,Z
 1019 0018 9091 0000 		lds r25,weak_mods
 1020 001c 892B      		or r24,r25
 1021 001e 8083      		st Z,r24
 123:./tmk_core/common/action_util.c **** #ifndef NO_ACTION_ONESHOT
 1022               		.loc 1 123 5 is_stmt 1 view .LVU220
 123:./tmk_core/common/action_util.c **** #ifndef NO_ACTION_ONESHOT
 1023               		.loc 1 123 20 is_stmt 0 view .LVU221
 1024 0020 E091 0000 		lds r30,keyboard_report
 1025 0024 F091 0000 		lds r31,keyboard_report+1
 123:./tmk_core/common/action_util.c **** #ifndef NO_ACTION_ONESHOT
 1026               		.loc 1 123 27 view .LVU222
 1027 0028 8081      		ld r24,Z
 1028 002a 9091 0000 		lds r25,macro_mods
 1029 002e 892B      		or r24,r25
 1030 0030 8083      		st Z,r24
 125:./tmk_core/common/action_util.c **** #if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1031               		.loc 1 125 5 is_stmt 1 view .LVU223
 125:./tmk_core/common/action_util.c **** #if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1032               		.loc 1 125 9 is_stmt 0 view .LVU224
 1033 0032 9091 0000 		lds r25,oneshot_mods
 125:./tmk_core/common/action_util.c **** #if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1034               		.loc 1 125 8 view .LVU225
 1035 0036 9923      		tst r25
 1036 0038 01F0      		breq .L71
 132:./tmk_core/common/action_util.c ****         if (has_anykey()) {
 1037               		.loc 1 132 9 is_stmt 1 view .LVU226
 132:./tmk_core/common/action_util.c ****         if (has_anykey()) {
 1038               		.loc 1 132 24 is_stmt 0 view .LVU227
 1039 003a E091 0000 		lds r30,keyboard_report
 1040 003e F091 0000 		lds r31,keyboard_report+1
 132:./tmk_core/common/action_util.c ****         if (has_anykey()) {
 1041               		.loc 1 132 31 view .LVU228
 1042 0042 8081      		ld r24,Z
 1043 0044 892B      		or r24,r25
 1044 0046 8083      		st Z,r24
 133:./tmk_core/common/action_util.c ****             clear_oneshot_mods();
 1045               		.loc 1 133 9 is_stmt 1 view .LVU229
 133:./tmk_core/common/action_util.c ****             clear_oneshot_mods();
 1046               		.loc 1 133 13 is_stmt 0 view .LVU230
 1047 0048 0E94 0000 		call has_anykey
 1048               	.LVL48:
 133:./tmk_core/common/action_util.c ****             clear_oneshot_mods();
 1049               		.loc 1 133 12 view .LVU231
 1050 004c 8111      		cpse r24,__zero_reg__
 134:./tmk_core/common/action_util.c ****         }
 1051               		.loc 1 134 13 is_stmt 1 view .LVU232
 1052               	.LBB37:
 1053               	.LBI37:
 204:./tmk_core/common/action_util.c **** {
 1054               		.loc 1 204 6 view .LVU233
 1055               	.LBB38:
 206:./tmk_core/common/action_util.c **** #if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1056               		.loc 1 206 5 view .LVU234
 206:./tmk_core/common/action_util.c **** #if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1057               		.loc 1 206 18 is_stmt 0 view .LVU235
 1058 004e 1092 0000 		sts oneshot_mods,__zero_reg__
 1059               	.L71:
 1060               	.LBE38:
 1061               	.LBE37:
 139:./tmk_core/common/action_util.c **** }
 1062               		.loc 1 139 5 is_stmt 1 view .LVU236
 1063 0052 8091 0000 		lds r24,keyboard_report
 1064 0056 9091 0000 		lds r25,keyboard_report+1
 1065 005a 0C94 0000 		jmp host_keyboard_send
 1066               	.LVL49:
 1067               		.cfi_endproc
 1068               	.LFE116:
 1070               		.section	.text.has_anymod,"ax",@progbits
 1071               	.global	has_anymod
 1073               	has_anymod:
 1074               	.LFB139:
 231:./tmk_core/common/action_util.c ****     return bitpop(real_mods);
 1075               		.loc 1 231 1 view -0
 1076               		.cfi_startproc
 1077               	/* prologue: function */
 1078               	/* frame size = 0 */
 1079               	/* stack size = 0 */
 1080               	.L__stack_usage = 0
 232:./tmk_core/common/action_util.c **** }
 1081               		.loc 1 232 5 view .LVU238
 232:./tmk_core/common/action_util.c **** }
 1082               		.loc 1 232 12 is_stmt 0 view .LVU239
 1083 0000 8091 0000 		lds r24,real_mods
 1084 0004 0C94 0000 		jmp bitpop
 1085               	.LVL50:
 1086               		.cfi_endproc
 1087               	.LFE139:
 1089               		.section	.text.get_first_key,"ax",@progbits
 1090               	.global	get_first_key
 1092               	get_first_key:
 1093               	.LFB140:
 236:./tmk_core/common/action_util.c **** #ifdef NKRO_ENABLE
 1094               		.loc 1 236 1 is_stmt 1 view -0
 1095               		.cfi_startproc
 1096 0000 CF93      		push r28
 1097               	.LCFI0:
 1098               		.cfi_def_cfa_offset 3
 1099               		.cfi_offset 28, -2
 1100 0002 DF93      		push r29
 1101               	.LCFI1:
 1102               		.cfi_def_cfa_offset 4
 1103               		.cfi_offset 29, -3
 1104               	/* prologue: function */
 1105               	/* frame size = 0 */
 1106               	/* stack size = 2 */
 1107               	.L__stack_usage = 2
 238:./tmk_core/common/action_util.c ****         uint8_t i = 0;
 1108               		.loc 1 238 5 view .LVU241
 1109               	.LBB39:
 240:./tmk_core/common/action_util.c ****             ;
 1110               		.loc 1 240 60 is_stmt 0 view .LVU242
 1111 0004 E091 0000 		lds r30,keyboard_report
 1112 0008 F091 0000 		lds r31,keyboard_report+1
 1113               	.LBE39:
 238:./tmk_core/common/action_util.c ****         uint8_t i = 0;
 1114               		.loc 1 238 8 view .LVU243
 1115 000c 8091 0000 		lds r24,keyboard_protocol
 1116 0010 8823      		tst r24
 1117 0012 01F0      		breq .L78
 238:./tmk_core/common/action_util.c ****         uint8_t i = 0;
 1118               		.loc 1 238 27 discriminator 1 view .LVU244
 1119 0014 8091 0000 		lds r24,keymap_config
 1120 0018 DF01      		movw r26,r30
 1121 001a 1196      		adiw r26,1
 1122               	.LBB40:
 239:./tmk_core/common/action_util.c ****         for (; i < KEYBOARD_REPORT_BITS && !keyboard_report->nkro.bits[i]; i++)
 1123               		.loc 1 239 17 discriminator 1 view .LVU245
 1124 001c C0E0      		ldi r28,0
 1125               	.LBE40:
 238:./tmk_core/common/action_util.c ****         uint8_t i = 0;
 1126               		.loc 1 238 27 discriminator 1 view .LVU246
 1127 001e 87FD      		sbrc r24,7
 1128 0020 00C0      		rjmp .L79
 1129               	.L78:
 255:./tmk_core/common/action_util.c **** #endif
 1130               		.loc 1 255 5 is_stmt 1 view .LVU247
 255:./tmk_core/common/action_util.c **** #endif
 1131               		.loc 1 255 33 is_stmt 0 view .LVU248
 1132 0022 8281      		ldd r24,Z+2
 1133 0024 00C0      		rjmp .L77
 1134               	.LVL51:
 1135               	.L81:
 1136               	.LBB41:
 240:./tmk_core/common/action_util.c ****             ;
 1137               		.loc 1 240 77 is_stmt 1 discriminator 3 view .LVU249
 1138 0026 CF5F      		subi r28,lo8(-(1))
 1139               	.LVL52:
 240:./tmk_core/common/action_util.c ****             ;
 1140               		.loc 1 240 41 discriminator 3 view .LVU250
 1141 0028 CF31      		cpi r28,lo8(31)
 1142 002a 01F0      		breq .L80
 1143               	.LVL53:
 1144               	.L79:
 240:./tmk_core/common/action_util.c ****             ;
 1145               		.loc 1 240 71 is_stmt 0 discriminator 2 view .LVU251
 1146 002c 8D91      		ld r24,X+
 240:./tmk_core/common/action_util.c ****             ;
 1147               		.loc 1 240 41 discriminator 2 view .LVU252
 1148 002e 8823      		tst r24
 1149 0030 01F0      		breq .L81
 1150               	.L80:
 242:./tmk_core/common/action_util.c ****     }
 1151               		.loc 1 242 9 is_stmt 1 view .LVU253
 242:./tmk_core/common/action_util.c ****     }
 1152               		.loc 1 242 17 is_stmt 0 view .LVU254
 1153 0032 D0E0      		ldi r29,0
 242:./tmk_core/common/action_util.c ****     }
 1154               		.loc 1 242 23 view .LVU255
 1155 0034 EC0F      		add r30,r28
 1156 0036 FD1F      		adc r31,r29
 1157 0038 8181      		ldd r24,Z+1
 1158 003a 0E94 0000 		call biton
 1159               	.LVL54:
 242:./tmk_core/common/action_util.c ****     }
 1160               		.loc 1 242 17 view .LVU256
 1161 003e 93E0      		ldi r25,3
 1162               		1:
 1163 0040 CC0F      		lsl r28
 1164 0042 DD1F      		rol r29
 1165 0044 9A95      		dec r25
 1166 0046 01F4      		brne 1b
 1167               	.LVL55:
 242:./tmk_core/common/action_util.c ****     }
 1168               		.loc 1 242 21 view .LVU257
 1169 0048 8C2B      		or r24,r28
 1170               	.LVL56:
 1171               	.L77:
 1172               	/* epilogue start */
 242:./tmk_core/common/action_util.c ****     }
 1173               		.loc 1 242 21 view .LVU258
 1174               	.LBE41:
 257:./tmk_core/common/action_util.c **** 
 1175               		.loc 1 257 1 view .LVU259
 1176 004a DF91      		pop r29
 1177 004c CF91      		pop r28
 1178 004e 0895      		ret
 1179               		.cfi_endproc
 1180               	.LFE140:
 1182               		.section	.bss.oneshot_layer_data,"aw",@nobits
 1185               	oneshot_layer_data:
 1186 0000 00        		.zero	1
 1187               		.section	.bss.oneshot_locked_mods,"aw",@nobits
 1190               	oneshot_locked_mods:
 1191 0000 00        		.zero	1
 1192               		.section	.bss.oneshot_mods,"aw",@nobits
 1195               	oneshot_mods:
 1196 0000 00        		.zero	1
 1197               	.global	keyboard_report
 1198               		.section	.data.keyboard_report,"aw"
 1201               	keyboard_report:
 1202 0000 0000      		.word	__compound_literal.0
 1203               		.section	.bss.__compound_literal.0,"aw",@nobits
 1206               	__compound_literal.0:
 1207 0000 0000 0000 		.zero	32
 1207      0000 0000 
 1207      0000 0000 
 1207      0000 0000 
 1207      0000 0000 
 1208               		.section	.bss.macro_mods,"aw",@nobits
 1211               	macro_mods:
 1212 0000 00        		.zero	1
 1213               		.section	.bss.weak_mods,"aw",@nobits
 1216               	weak_mods:
 1217 0000 00        		.zero	1
 1218               		.section	.bss.real_mods,"aw",@nobits
 1221               	real_mods:
 1222 0000 00        		.zero	1
 1223               		.text
 1224               	.Letext0:
 1225               		.file 2 "/usr/avr/include/stdint.h"
 1226               		.file 3 "./tmk_core/common/report.h"
 1227               		.file 4 "./tmk_core/common/host.h"
 1228               		.file 5 "./tmk_core/common/action_util.h"
 1229               		.file 6 "./quantum/keycode_config.h"
 1230               		.file 7 "./tmk_core/common/util.h"
 1231               		.file 8 "./tmk_core/common/action_layer.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 action_util.c
     /tmp/ccBNApom.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccBNApom.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccBNApom.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccBNApom.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccBNApom.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccBNApom.s:14     .text.get_oneshot_locked_mods:0000000000000000 get_oneshot_locked_mods
     /tmp/ccBNApom.s:16     .text.get_oneshot_locked_mods:0000000000000000 .Loc.0
     /tmp/ccBNApom.s:17     .text.get_oneshot_locked_mods:0000000000000000 L0
     /tmp/ccBNApom.s:22     .text.get_oneshot_locked_mods:0000000000000000 .Loc.1
     /tmp/ccBNApom.s:23     .text.get_oneshot_locked_mods:0000000000000000 .Loc.2
     /tmp/ccBNApom.s:1190   .bss.oneshot_locked_mods:0000000000000000 oneshot_locked_mods
     /tmp/ccBNApom.s:27     .text.get_oneshot_locked_mods:0000000000000006 L0
     /tmp/ccBNApom.s:33     .text.set_oneshot_locked_mods:0000000000000000 set_oneshot_locked_mods
     /tmp/ccBNApom.s:36     .text.set_oneshot_locked_mods:0000000000000000 .Loc.3
     /tmp/ccBNApom.s:37     .text.set_oneshot_locked_mods:0000000000000000 L0
     /tmp/ccBNApom.s:42     .text.set_oneshot_locked_mods:0000000000000000 .Loc.4
     /tmp/ccBNApom.s:43     .text.set_oneshot_locked_mods:0000000000000000 .Loc.5
     /tmp/ccBNApom.s:46     .text.set_oneshot_locked_mods:0000000000000004 .Loc.6
     /tmp/ccBNApom.s:48     .text.set_oneshot_locked_mods:0000000000000006 L0
     /tmp/ccBNApom.s:54     .text.clear_oneshot_locked_mods:0000000000000000 clear_oneshot_locked_mods
     /tmp/ccBNApom.s:56     .text.clear_oneshot_locked_mods:0000000000000000 .Loc.7
     /tmp/ccBNApom.s:57     .text.clear_oneshot_locked_mods:0000000000000000 L0
     /tmp/ccBNApom.s:62     .text.clear_oneshot_locked_mods:0000000000000000 .Loc.8
     /tmp/ccBNApom.s:63     .text.clear_oneshot_locked_mods:0000000000000000 .Loc.9
     /tmp/ccBNApom.s:66     .text.clear_oneshot_locked_mods:0000000000000004 .Loc.10
     /tmp/ccBNApom.s:68     .text.clear_oneshot_locked_mods:0000000000000006 L0
     /tmp/ccBNApom.s:74     .text.get_oneshot_layer:0000000000000000 get_oneshot_layer
     /tmp/ccBNApom.s:76     .text.get_oneshot_layer:0000000000000000 .Loc.11
     /tmp/ccBNApom.s:77     .text.get_oneshot_layer:0000000000000000 L0
     /tmp/ccBNApom.s:82     .text.get_oneshot_layer:0000000000000000 .Loc.12
     /tmp/ccBNApom.s:83     .text.get_oneshot_layer:0000000000000000 .Loc.13
     /tmp/ccBNApom.s:1185   .bss.oneshot_layer_data:0000000000000000 oneshot_layer_data
     /tmp/ccBNApom.s:85     .text.get_oneshot_layer:0000000000000004 .Loc.14
     /tmp/ccBNApom.s:91     .text.get_oneshot_layer:000000000000000c L0
     /tmp/ccBNApom.s:97     .text.get_oneshot_layer_state:0000000000000000 get_oneshot_layer_state
     /tmp/ccBNApom.s:99     .text.get_oneshot_layer_state:0000000000000000 .Loc.15
     /tmp/ccBNApom.s:100    .text.get_oneshot_layer_state:0000000000000000 L0
     /tmp/ccBNApom.s:105    .text.get_oneshot_layer_state:0000000000000000 .Loc.16
     /tmp/ccBNApom.s:106    .text.get_oneshot_layer_state:0000000000000000 .Loc.17
     /tmp/ccBNApom.s:108    .text.get_oneshot_layer_state:0000000000000004 .Loc.18
     /tmp/ccBNApom.s:112    .text.get_oneshot_layer_state:0000000000000008 L0
     /tmp/ccBNApom.s:118    .text.set_oneshot_layer:0000000000000000 set_oneshot_layer
     /tmp/ccBNApom.s:121    .text.set_oneshot_layer:0000000000000000 .Loc.19
     /tmp/ccBNApom.s:122    .text.set_oneshot_layer:0000000000000000 L0
     /tmp/ccBNApom.s:127    .text.set_oneshot_layer:0000000000000000 .Loc.20
     /tmp/ccBNApom.s:128    .text.set_oneshot_layer:0000000000000000 .Loc.21
     /tmp/ccBNApom.s:133    .text.set_oneshot_layer:0000000000000008 .Loc.22
     /tmp/ccBNApom.s:136    .text.set_oneshot_layer:000000000000000a .Loc.23
     /tmp/ccBNApom.s:138    .text.set_oneshot_layer:000000000000000e .Loc.24
     /tmp/ccBNApom.s:141    .text.set_oneshot_layer:0000000000000012 .Loc.25
     /tmp/ccBNApom.s:142    .text.set_oneshot_layer:0000000000000012 L0
     /tmp/ccBNApom.s:148    .text.reset_oneshot_layer:0000000000000000 reset_oneshot_layer
     /tmp/ccBNApom.s:150    .text.reset_oneshot_layer:0000000000000000 .Loc.26
     /tmp/ccBNApom.s:151    .text.reset_oneshot_layer:0000000000000000 L0
     /tmp/ccBNApom.s:156    .text.reset_oneshot_layer:0000000000000000 .Loc.27
     /tmp/ccBNApom.s:157    .text.reset_oneshot_layer:0000000000000000 .Loc.28
     /tmp/ccBNApom.s:160    .text.reset_oneshot_layer:0000000000000004 .Loc.29
     /tmp/ccBNApom.s:162    .text.reset_oneshot_layer:0000000000000006 L0
     /tmp/ccBNApom.s:168    .text.clear_oneshot_layer_state:0000000000000000 clear_oneshot_layer_state
     /tmp/ccBNApom.s:171    .text.clear_oneshot_layer_state:0000000000000000 .Loc.30
     /tmp/ccBNApom.s:172    .text.clear_oneshot_layer_state:0000000000000000 L0
     /tmp/ccBNApom.s:177    .text.clear_oneshot_layer_state:0000000000000000 .Loc.31
     /tmp/ccBNApom.s:178    .text.clear_oneshot_layer_state:0000000000000000 .Loc.32
     /tmp/ccBNApom.s:181    .text.clear_oneshot_layer_state:0000000000000004 .Loc.33
     /tmp/ccBNApom.s:182    .text.clear_oneshot_layer_state:0000000000000004 .Loc.34
     /tmp/ccBNApom.s:185    .text.clear_oneshot_layer_state:0000000000000006 .Loc.35
     /tmp/ccBNApom.s:188    .text.clear_oneshot_layer_state:0000000000000008 .Loc.36
     /tmp/ccBNApom.s:190    .text.clear_oneshot_layer_state:000000000000000c .Loc.37
     /tmp/ccBNApom.s:191    .text.clear_oneshot_layer_state:000000000000000c .Loc.38
     /tmp/ccBNApom.s:196    .text.clear_oneshot_layer_state:0000000000000014 .Loc.39
     /tmp/ccBNApom.s:202    .text.clear_oneshot_layer_state:000000000000001e .Loc.40
     /tmp/ccBNApom.s:206    .text.clear_oneshot_layer_state:0000000000000024 .Loc.41
     /tmp/ccBNApom.s:209    .text.clear_oneshot_layer_state:0000000000000024 .Loc.42
     /tmp/ccBNApom.s:211    .text.clear_oneshot_layer_state:0000000000000024 .Loc.43
     /tmp/ccBNApom.s:214    .text.clear_oneshot_layer_state:0000000000000024 .Loc.44
     /tmp/ccBNApom.s:222    .text.clear_oneshot_layer_state:000000000000002e .Loc.45
     /tmp/ccBNApom.s:224    .text.clear_oneshot_layer_state:0000000000000030 L0
     /tmp/ccBNApom.s:230    .text.is_oneshot_layer_active:0000000000000000 is_oneshot_layer_active
     /tmp/ccBNApom.s:232    .text.is_oneshot_layer_active:0000000000000000 .Loc.46
     /tmp/ccBNApom.s:233    .text.is_oneshot_layer_active:0000000000000000 L0
     /tmp/ccBNApom.s:238    .text.is_oneshot_layer_active:0000000000000000 .Loc.47
     /tmp/ccBNApom.s:241    .text.is_oneshot_layer_active:0000000000000000 .Loc.48
     /tmp/ccBNApom.s:243    .text.is_oneshot_layer_active:0000000000000000 .Loc.49
     /tmp/ccBNApom.s:246    .text.is_oneshot_layer_active:0000000000000000 .Loc.50
     /tmp/ccBNApom.s:255    .text.is_oneshot_layer_active:000000000000000e .Loc.51
     /tmp/ccBNApom.s:257    .text.is_oneshot_layer_active:0000000000000010 L0
     /tmp/ccBNApom.s:263    .text.add_key:0000000000000000 add_key
     /tmp/ccBNApom.s:266    .text.add_key:0000000000000000 .Loc.52
     /tmp/ccBNApom.s:267    .text.add_key:0000000000000000 L0
     /tmp/ccBNApom.s:272    .text.add_key:0000000000000000 .Loc.53
     /tmp/ccBNApom.s:273    .text.add_key:0000000000000000 .Loc.54
     /tmp/ccBNApom.s:277    .text.add_key:0000000000000008 .Loc.55
     /tmp/ccBNApom.s:281    .text.add_key:0000000000000010 .Loc.56
     /tmp/ccBNApom.s:285    .text.add_key:0000000000000010 .Loc.57
     /tmp/ccBNApom.s:287    .text.add_key:0000000000000010 .Loc.58
     /tmp/ccBNApom.s:288    .text.add_key:0000000000000010 .Loc.59
     /tmp/ccBNApom.s:293    .text.add_key:0000000000000018 .Loc.60
     /tmp/ccBNApom.s:296    .text.add_key:000000000000001c .Loc.61
     /tmp/ccBNApom.s:297    .text.add_key:000000000000001c .Loc.62
     /tmp/ccBNApom.s:1201   .data.keyboard_report:0000000000000000 keyboard_report
     /tmp/ccBNApom.s:300    .text.add_key:0000000000000024 .Loc.63
     /tmp/ccBNApom.s:303    .text.add_key:0000000000000028 .Loc.64
     /tmp/ccBNApom.s:306    .text.add_key:000000000000002a .Loc.65
     /tmp/ccBNApom.s:315    .text.add_key:0000000000000036 .Loc.66
     /tmp/ccBNApom.s:322    .text.add_key:000000000000003e .Loc.67
     /tmp/ccBNApom.s:327    .text.add_key:000000000000003e .Loc.68
     /tmp/ccBNApom.s:328    .text.add_key:000000000000003e .Loc.69
     /tmp/ccBNApom.s:337    .text.add_key:000000000000004e .Loc.70
     /tmp/ccBNApom.s:338    .text.add_key:000000000000004e .Loc.71
     /tmp/ccBNApom.s:340    .text.add_key:0000000000000050 .Loc.72
     /tmp/ccBNApom.s:343    .text.add_key:0000000000000054 .Loc.73
     /tmp/ccBNApom.s:344    .text.add_key:0000000000000054 .Loc.74
     /tmp/ccBNApom.s:347    .text.add_key:0000000000000058 .Loc.75
     /tmp/ccBNApom.s:353    .text.add_key:000000000000005e .Loc.76
     /tmp/ccBNApom.s:356    .text.add_key:0000000000000060 .Loc.77
     /tmp/ccBNApom.s:359    .text.add_key:0000000000000064 .Loc.78
     /tmp/ccBNApom.s:360    .text.add_key:0000000000000064 .Loc.79
     /tmp/ccBNApom.s:361    .text.add_key:0000000000000064 .Loc.80
     /tmp/ccBNApom.s:367    .text.add_key:0000000000000068 .Loc.81
     /tmp/ccBNApom.s:370    .text.add_key:0000000000000068 .Loc.82
     /tmp/ccBNApom.s:376    .text.add_key:000000000000006a .Loc.83
     /tmp/ccBNApom.s:377    .text.add_key:000000000000006a .Loc.84
     /tmp/ccBNApom.s:385    .text.add_key:0000000000000076 .Loc.85
     /tmp/ccBNApom.s:389    .text.add_key:0000000000000078 L0
     /tmp/ccBNApom.s:395    .text.del_key:0000000000000000 del_key
     /tmp/ccBNApom.s:398    .text.del_key:0000000000000000 .Loc.86
     /tmp/ccBNApom.s:399    .text.del_key:0000000000000000 L0
     /tmp/ccBNApom.s:404    .text.del_key:0000000000000000 .Loc.87
     /tmp/ccBNApom.s:405    .text.del_key:0000000000000000 .Loc.88
     /tmp/ccBNApom.s:409    .text.del_key:0000000000000008 .Loc.89
     /tmp/ccBNApom.s:413    .text.del_key:0000000000000010 .Loc.90
     /tmp/ccBNApom.s:417    .text.del_key:0000000000000010 .Loc.91
     /tmp/ccBNApom.s:419    .text.del_key:0000000000000010 .Loc.92
     /tmp/ccBNApom.s:420    .text.del_key:0000000000000010 .Loc.93
     /tmp/ccBNApom.s:425    .text.del_key:0000000000000018 .Loc.94
     /tmp/ccBNApom.s:428    .text.del_key:000000000000001c .Loc.95
     /tmp/ccBNApom.s:429    .text.del_key:000000000000001c .Loc.96
     /tmp/ccBNApom.s:432    .text.del_key:0000000000000024 .Loc.97
     /tmp/ccBNApom.s:435    .text.del_key:0000000000000028 .Loc.98
     /tmp/ccBNApom.s:438    .text.del_key:000000000000002a .Loc.99
     /tmp/ccBNApom.s:450    .text.del_key:000000000000003c .Loc.100
     /tmp/ccBNApom.s:458    .text.del_key:0000000000000046 .Loc.101
     /tmp/ccBNApom.s:463    .text.del_key:0000000000000046 .Loc.102
     /tmp/ccBNApom.s:464    .text.del_key:0000000000000046 .Loc.103
     /tmp/ccBNApom.s:473    .text.del_key:0000000000000056 .Loc.104
     /tmp/ccBNApom.s:474    .text.del_key:0000000000000056 .Loc.105
     /tmp/ccBNApom.s:477    .text.del_key:0000000000000058 .Loc.106
     /tmp/ccBNApom.s:480    .text.del_key:000000000000005c .Loc.107
     /tmp/ccBNApom.s:481    .text.del_key:000000000000005c .Loc.108
     /tmp/ccBNApom.s:486    .text.del_key:0000000000000062 .Loc.109
     /tmp/ccBNApom.s:488    .text.del_key:0000000000000062 .Loc.110
     /tmp/ccBNApom.s:495    .text.del_key:0000000000000068 .Loc.111
     /tmp/ccBNApom.s:498    .text.del_key:0000000000000068 .Loc.112
     /tmp/ccBNApom.s:500    .text.del_key:000000000000006a L0
     /tmp/ccBNApom.s:506    .text.clear_keys:0000000000000000 clear_keys
     /tmp/ccBNApom.s:508    .text.clear_keys:0000000000000000 .Loc.113
     /tmp/ccBNApom.s:509    .text.clear_keys:0000000000000000 L0
     /tmp/ccBNApom.s:514    .text.clear_keys:0000000000000000 .Loc.114
     /tmp/ccBNApom.s:516    .text.clear_keys:0000000000000000 .Loc.115
     /tmp/ccBNApom.s:518    .text.clear_keys:0000000000000000 .Loc.116
     /tmp/ccBNApom.s:520    .text.clear_keys:0000000000000000 .Loc.117
     /tmp/ccBNApom.s:526    .text.clear_keys:0000000000000004 .Loc.118
     /tmp/ccBNApom.s:527    .text.clear_keys:0000000000000004 .Loc.119
     /tmp/ccBNApom.s:530    .text.clear_keys:000000000000000c .Loc.120
     /tmp/ccBNApom.s:534    .text.clear_keys:0000000000000012 .Loc.121
     /tmp/ccBNApom.s:536    .text.clear_keys:0000000000000012 .Loc.122
     /tmp/ccBNApom.s:539    .text.clear_keys:0000000000000014 .Loc.123
     /tmp/ccBNApom.s:545    .text.clear_keys:000000000000001a .Loc.124
     /tmp/ccBNApom.s:547    .text.clear_keys:000000000000001c L0
     /tmp/ccBNApom.s:553    .text.get_mods:0000000000000000 get_mods
     /tmp/ccBNApom.s:555    .text.get_mods:0000000000000000 .Loc.125
     /tmp/ccBNApom.s:556    .text.get_mods:0000000000000000 L0
     /tmp/ccBNApom.s:561    .text.get_mods:0000000000000000 .Loc.126
     /tmp/ccBNApom.s:562    .text.get_mods:0000000000000000 .Loc.127
     /tmp/ccBNApom.s:1221   .bss.real_mods:0000000000000000 real_mods
     /tmp/ccBNApom.s:566    .text.get_mods:0000000000000006 L0
     /tmp/ccBNApom.s:572    .text.add_mods:0000000000000000 add_mods
     /tmp/ccBNApom.s:575    .text.add_mods:0000000000000000 .Loc.128
     /tmp/ccBNApom.s:576    .text.add_mods:0000000000000000 L0
     /tmp/ccBNApom.s:581    .text.add_mods:0000000000000000 .Loc.129
     /tmp/ccBNApom.s:582    .text.add_mods:0000000000000000 .Loc.130
     /tmp/ccBNApom.s:587    .text.add_mods:000000000000000a .Loc.131
     /tmp/ccBNApom.s:589    .text.add_mods:000000000000000c L0
     /tmp/ccBNApom.s:595    .text.del_mods:0000000000000000 del_mods
     /tmp/ccBNApom.s:598    .text.del_mods:0000000000000000 .Loc.132
     /tmp/ccBNApom.s:599    .text.del_mods:0000000000000000 L0
     /tmp/ccBNApom.s:604    .text.del_mods:0000000000000000 .Loc.133
     /tmp/ccBNApom.s:605    .text.del_mods:0000000000000000 .Loc.134
     /tmp/ccBNApom.s:610    .text.del_mods:0000000000000008 .Loc.135
     /tmp/ccBNApom.s:614    .text.del_mods:000000000000000e .Loc.136
     /tmp/ccBNApom.s:616    .text.del_mods:0000000000000010 L0
     /tmp/ccBNApom.s:622    .text.set_mods:0000000000000000 set_mods
     /tmp/ccBNApom.s:625    .text.set_mods:0000000000000000 .Loc.137
     /tmp/ccBNApom.s:626    .text.set_mods:0000000000000000 L0
     /tmp/ccBNApom.s:631    .text.set_mods:0000000000000000 .Loc.138
     /tmp/ccBNApom.s:632    .text.set_mods:0000000000000000 .Loc.139
     /tmp/ccBNApom.s:635    .text.set_mods:0000000000000004 .Loc.140
     /tmp/ccBNApom.s:637    .text.set_mods:0000000000000006 L0
     /tmp/ccBNApom.s:643    .text.clear_mods:0000000000000000 clear_mods
     /tmp/ccBNApom.s:645    .text.clear_mods:0000000000000000 .Loc.141
     /tmp/ccBNApom.s:646    .text.clear_mods:0000000000000000 L0
     /tmp/ccBNApom.s:651    .text.clear_mods:0000000000000000 .Loc.142
     /tmp/ccBNApom.s:652    .text.clear_mods:0000000000000000 .Loc.143
     /tmp/ccBNApom.s:655    .text.clear_mods:0000000000000004 .Loc.144
     /tmp/ccBNApom.s:657    .text.clear_mods:0000000000000006 L0
     /tmp/ccBNApom.s:663    .text.get_weak_mods:0000000000000000 get_weak_mods
     /tmp/ccBNApom.s:665    .text.get_weak_mods:0000000000000000 .Loc.145
     /tmp/ccBNApom.s:666    .text.get_weak_mods:0000000000000000 L0
     /tmp/ccBNApom.s:671    .text.get_weak_mods:0000000000000000 .Loc.146
     /tmp/ccBNApom.s:672    .text.get_weak_mods:0000000000000000 .Loc.147
     /tmp/ccBNApom.s:1216   .bss.weak_mods:0000000000000000 weak_mods
     /tmp/ccBNApom.s:676    .text.get_weak_mods:0000000000000006 L0
     /tmp/ccBNApom.s:682    .text.add_weak_mods:0000000000000000 add_weak_mods
     /tmp/ccBNApom.s:685    .text.add_weak_mods:0000000000000000 .Loc.148
     /tmp/ccBNApom.s:686    .text.add_weak_mods:0000000000000000 L0
     /tmp/ccBNApom.s:691    .text.add_weak_mods:0000000000000000 .Loc.149
     /tmp/ccBNApom.s:692    .text.add_weak_mods:0000000000000000 .Loc.150
     /tmp/ccBNApom.s:697    .text.add_weak_mods:000000000000000a .Loc.151
     /tmp/ccBNApom.s:699    .text.add_weak_mods:000000000000000c L0
     /tmp/ccBNApom.s:705    .text.del_weak_mods:0000000000000000 del_weak_mods
     /tmp/ccBNApom.s:708    .text.del_weak_mods:0000000000000000 .Loc.152
     /tmp/ccBNApom.s:709    .text.del_weak_mods:0000000000000000 L0
     /tmp/ccBNApom.s:714    .text.del_weak_mods:0000000000000000 .Loc.153
     /tmp/ccBNApom.s:715    .text.del_weak_mods:0000000000000000 .Loc.154
     /tmp/ccBNApom.s:720    .text.del_weak_mods:0000000000000008 .Loc.155
     /tmp/ccBNApom.s:724    .text.del_weak_mods:000000000000000e .Loc.156
     /tmp/ccBNApom.s:726    .text.del_weak_mods:0000000000000010 L0
     /tmp/ccBNApom.s:732    .text.set_weak_mods:0000000000000000 set_weak_mods
     /tmp/ccBNApom.s:735    .text.set_weak_mods:0000000000000000 .Loc.157
     /tmp/ccBNApom.s:736    .text.set_weak_mods:0000000000000000 L0
     /tmp/ccBNApom.s:741    .text.set_weak_mods:0000000000000000 .Loc.158
     /tmp/ccBNApom.s:742    .text.set_weak_mods:0000000000000000 .Loc.159
     /tmp/ccBNApom.s:745    .text.set_weak_mods:0000000000000004 .Loc.160
     /tmp/ccBNApom.s:747    .text.set_weak_mods:0000000000000006 L0
     /tmp/ccBNApom.s:753    .text.clear_weak_mods:0000000000000000 clear_weak_mods
     /tmp/ccBNApom.s:755    .text.clear_weak_mods:0000000000000000 .Loc.161
     /tmp/ccBNApom.s:756    .text.clear_weak_mods:0000000000000000 L0
     /tmp/ccBNApom.s:761    .text.clear_weak_mods:0000000000000000 .Loc.162
     /tmp/ccBNApom.s:762    .text.clear_weak_mods:0000000000000000 .Loc.163
     /tmp/ccBNApom.s:765    .text.clear_weak_mods:0000000000000004 .Loc.164
     /tmp/ccBNApom.s:767    .text.clear_weak_mods:0000000000000006 L0
     /tmp/ccBNApom.s:773    .text.get_macro_mods:0000000000000000 get_macro_mods
     /tmp/ccBNApom.s:775    .text.get_macro_mods:0000000000000000 .Loc.165
     /tmp/ccBNApom.s:776    .text.get_macro_mods:0000000000000000 L0
     /tmp/ccBNApom.s:781    .text.get_macro_mods:0000000000000000 .Loc.166
     /tmp/ccBNApom.s:782    .text.get_macro_mods:0000000000000000 .Loc.167
     /tmp/ccBNApom.s:1211   .bss.macro_mods:0000000000000000 macro_mods
     /tmp/ccBNApom.s:786    .text.get_macro_mods:0000000000000006 L0
     /tmp/ccBNApom.s:792    .text.add_macro_mods:0000000000000000 add_macro_mods
     /tmp/ccBNApom.s:795    .text.add_macro_mods:0000000000000000 .Loc.168
     /tmp/ccBNApom.s:796    .text.add_macro_mods:0000000000000000 L0
     /tmp/ccBNApom.s:801    .text.add_macro_mods:0000000000000000 .Loc.169
     /tmp/ccBNApom.s:802    .text.add_macro_mods:0000000000000000 .Loc.170
     /tmp/ccBNApom.s:807    .text.add_macro_mods:000000000000000a .Loc.171
     /tmp/ccBNApom.s:809    .text.add_macro_mods:000000000000000c L0
     /tmp/ccBNApom.s:815    .text.del_macro_mods:0000000000000000 del_macro_mods
     /tmp/ccBNApom.s:818    .text.del_macro_mods:0000000000000000 .Loc.172
     /tmp/ccBNApom.s:819    .text.del_macro_mods:0000000000000000 L0
     /tmp/ccBNApom.s:824    .text.del_macro_mods:0000000000000000 .Loc.173
     /tmp/ccBNApom.s:825    .text.del_macro_mods:0000000000000000 .Loc.174
     /tmp/ccBNApom.s:830    .text.del_macro_mods:0000000000000008 .Loc.175
     /tmp/ccBNApom.s:834    .text.del_macro_mods:000000000000000e .Loc.176
     /tmp/ccBNApom.s:836    .text.del_macro_mods:0000000000000010 L0
     /tmp/ccBNApom.s:842    .text.set_macro_mods:0000000000000000 set_macro_mods
     /tmp/ccBNApom.s:845    .text.set_macro_mods:0000000000000000 .Loc.177
     /tmp/ccBNApom.s:846    .text.set_macro_mods:0000000000000000 L0
     /tmp/ccBNApom.s:851    .text.set_macro_mods:0000000000000000 .Loc.178
     /tmp/ccBNApom.s:852    .text.set_macro_mods:0000000000000000 .Loc.179
     /tmp/ccBNApom.s:855    .text.set_macro_mods:0000000000000004 .Loc.180
     /tmp/ccBNApom.s:857    .text.set_macro_mods:0000000000000006 L0
     /tmp/ccBNApom.s:863    .text.clear_macro_mods:0000000000000000 clear_macro_mods
     /tmp/ccBNApom.s:865    .text.clear_macro_mods:0000000000000000 .Loc.181
     /tmp/ccBNApom.s:866    .text.clear_macro_mods:0000000000000000 L0
     /tmp/ccBNApom.s:871    .text.clear_macro_mods:0000000000000000 .Loc.182
     /tmp/ccBNApom.s:872    .text.clear_macro_mods:0000000000000000 .Loc.183
     /tmp/ccBNApom.s:875    .text.clear_macro_mods:0000000000000004 .Loc.184
     /tmp/ccBNApom.s:877    .text.clear_macro_mods:0000000000000006 L0
     /tmp/ccBNApom.s:883    .text.set_oneshot_mods:0000000000000000 set_oneshot_mods
     /tmp/ccBNApom.s:886    .text.set_oneshot_mods:0000000000000000 .Loc.185
     /tmp/ccBNApom.s:887    .text.set_oneshot_mods:0000000000000000 L0
     /tmp/ccBNApom.s:892    .text.set_oneshot_mods:0000000000000000 .Loc.186
     /tmp/ccBNApom.s:893    .text.set_oneshot_mods:0000000000000000 .Loc.187
     /tmp/ccBNApom.s:1195   .bss.oneshot_mods:0000000000000000 oneshot_mods
     /tmp/ccBNApom.s:896    .text.set_oneshot_mods:0000000000000004 .Loc.188
     /tmp/ccBNApom.s:898    .text.set_oneshot_mods:0000000000000006 L0
     /tmp/ccBNApom.s:904    .text.clear_oneshot_mods:0000000000000000 clear_oneshot_mods
     /tmp/ccBNApom.s:906    .text.clear_oneshot_mods:0000000000000000 .Loc.189
     /tmp/ccBNApom.s:907    .text.clear_oneshot_mods:0000000000000000 L0
     /tmp/ccBNApom.s:912    .text.clear_oneshot_mods:0000000000000000 .Loc.190
     /tmp/ccBNApom.s:913    .text.clear_oneshot_mods:0000000000000000 .Loc.191
     /tmp/ccBNApom.s:916    .text.clear_oneshot_mods:0000000000000004 .Loc.192
     /tmp/ccBNApom.s:918    .text.clear_oneshot_mods:0000000000000006 L0
     /tmp/ccBNApom.s:924    .text.get_oneshot_mods:0000000000000000 get_oneshot_mods
     /tmp/ccBNApom.s:926    .text.get_oneshot_mods:0000000000000000 .Loc.193
     /tmp/ccBNApom.s:927    .text.get_oneshot_mods:0000000000000000 L0
     /tmp/ccBNApom.s:932    .text.get_oneshot_mods:0000000000000000 .Loc.194
     /tmp/ccBNApom.s:933    .text.get_oneshot_mods:0000000000000000 .Loc.195
     /tmp/ccBNApom.s:937    .text.get_oneshot_mods:0000000000000006 L0
     /tmp/ccBNApom.s:943    .text.has_anykey:0000000000000000 has_anykey
     /tmp/ccBNApom.s:945    .text.has_anykey:0000000000000000 .Loc.196
     /tmp/ccBNApom.s:946    .text.has_anykey:0000000000000000 L0
     /tmp/ccBNApom.s:951    .text.has_anykey:0000000000000000 .Loc.197
     /tmp/ccBNApom.s:953    .text.has_anykey:0000000000000000 .Loc.198
     /tmp/ccBNApom.s:955    .text.has_anykey:0000000000000000 .Loc.199
     /tmp/ccBNApom.s:956    .text.has_anykey:0000000000000000 .Loc.200
     /tmp/ccBNApom.s:957    .text.has_anykey:0000000000000000 .Loc.201
     /tmp/ccBNApom.s:965    .text.has_anykey:0000000000000010 .Loc.202
     /tmp/ccBNApom.s:970    .text.has_anykey:0000000000000012 .Loc.203
     /tmp/ccBNApom.s:971    .text.has_anykey:0000000000000012 .Loc.204
     /tmp/ccBNApom.s:974    .text.has_anykey:0000000000000014 .Loc.205
     /tmp/ccBNApom.s:976    .text.has_anykey:0000000000000016 .Loc.206
     /tmp/ccBNApom.s:977    .text.has_anykey:0000000000000016 .Loc.207
     /tmp/ccBNApom.s:981    .text.has_anykey:0000000000000018 .Loc.208
     /tmp/ccBNApom.s:982    .text.has_anykey:0000000000000018 .Loc.209
     /tmp/ccBNApom.s:986    .text.has_anykey:000000000000001e .Loc.210
     /tmp/ccBNApom.s:988    .text.has_anykey:000000000000001e .Loc.211
     /tmp/ccBNApom.s:990    .text.has_anykey:000000000000001e .Loc.212
     /tmp/ccBNApom.s:992    .text.has_anykey:0000000000000020 L0
     /tmp/ccBNApom.s:998    .text.send_keyboard_report:0000000000000000 send_keyboard_report
     /tmp/ccBNApom.s:1000   .text.send_keyboard_report:0000000000000000 .Loc.213
     /tmp/ccBNApom.s:1001   .text.send_keyboard_report:0000000000000000 L0
     /tmp/ccBNApom.s:1006   .text.send_keyboard_report:0000000000000000 .Loc.214
     /tmp/ccBNApom.s:1007   .text.send_keyboard_report:0000000000000000 .Loc.215
     /tmp/ccBNApom.s:1010   .text.send_keyboard_report:0000000000000008 .Loc.216
     /tmp/ccBNApom.s:1013   .text.send_keyboard_report:000000000000000e .Loc.217
     /tmp/ccBNApom.s:1014   .text.send_keyboard_report:000000000000000e .Loc.218
     /tmp/ccBNApom.s:1017   .text.send_keyboard_report:0000000000000016 .Loc.219
     /tmp/ccBNApom.s:1022   .text.send_keyboard_report:0000000000000020 .Loc.220
     /tmp/ccBNApom.s:1023   .text.send_keyboard_report:0000000000000020 .Loc.221
     /tmp/ccBNApom.s:1026   .text.send_keyboard_report:0000000000000028 .Loc.222
     /tmp/ccBNApom.s:1031   .text.send_keyboard_report:0000000000000032 .Loc.223
     /tmp/ccBNApom.s:1032   .text.send_keyboard_report:0000000000000032 .Loc.224
     /tmp/ccBNApom.s:1034   .text.send_keyboard_report:0000000000000036 .Loc.225
     /tmp/ccBNApom.s:1037   .text.send_keyboard_report:000000000000003a .Loc.226
     /tmp/ccBNApom.s:1038   .text.send_keyboard_report:000000000000003a .Loc.227
     /tmp/ccBNApom.s:1041   .text.send_keyboard_report:0000000000000042 .Loc.228
     /tmp/ccBNApom.s:1045   .text.send_keyboard_report:0000000000000048 .Loc.229
     /tmp/ccBNApom.s:1046   .text.send_keyboard_report:0000000000000048 .Loc.230
     /tmp/ccBNApom.s:1049   .text.send_keyboard_report:000000000000004c .Loc.231
     /tmp/ccBNApom.s:1051   .text.send_keyboard_report:000000000000004e .Loc.232
     /tmp/ccBNApom.s:1054   .text.send_keyboard_report:000000000000004e .Loc.233
     /tmp/ccBNApom.s:1056   .text.send_keyboard_report:000000000000004e .Loc.234
     /tmp/ccBNApom.s:1057   .text.send_keyboard_report:000000000000004e .Loc.235
     /tmp/ccBNApom.s:1062   .text.send_keyboard_report:0000000000000052 .Loc.236
     /tmp/ccBNApom.s:1067   .text.send_keyboard_report:000000000000005e L0
     /tmp/ccBNApom.s:1073   .text.has_anymod:0000000000000000 has_anymod
     /tmp/ccBNApom.s:1075   .text.has_anymod:0000000000000000 .Loc.237
     /tmp/ccBNApom.s:1076   .text.has_anymod:0000000000000000 L0
     /tmp/ccBNApom.s:1081   .text.has_anymod:0000000000000000 .Loc.238
     /tmp/ccBNApom.s:1082   .text.has_anymod:0000000000000000 .Loc.239
     /tmp/ccBNApom.s:1086   .text.has_anymod:0000000000000008 L0
     /tmp/ccBNApom.s:1092   .text.get_first_key:0000000000000000 get_first_key
     /tmp/ccBNApom.s:1094   .text.get_first_key:0000000000000000 .Loc.240
     /tmp/ccBNApom.s:1095   .text.get_first_key:0000000000000000 L0
     /tmp/ccBNApom.s:1108   .text.get_first_key:0000000000000004 .Loc.241
     /tmp/ccBNApom.s:1110   .text.get_first_key:0000000000000004 .Loc.242
     /tmp/ccBNApom.s:1114   .text.get_first_key:000000000000000c .Loc.243
     /tmp/ccBNApom.s:1118   .text.get_first_key:0000000000000014 .Loc.244
     /tmp/ccBNApom.s:1123   .text.get_first_key:000000000000001c .Loc.245
     /tmp/ccBNApom.s:1126   .text.get_first_key:000000000000001e .Loc.246
     /tmp/ccBNApom.s:1130   .text.get_first_key:0000000000000022 .Loc.247
     /tmp/ccBNApom.s:1131   .text.get_first_key:0000000000000022 .Loc.248
     /tmp/ccBNApom.s:1137   .text.get_first_key:0000000000000026 .Loc.249
     /tmp/ccBNApom.s:1140   .text.get_first_key:0000000000000028 .Loc.250
     /tmp/ccBNApom.s:1145   .text.get_first_key:000000000000002c .Loc.251
     /tmp/ccBNApom.s:1147   .text.get_first_key:000000000000002e .Loc.252
     /tmp/ccBNApom.s:1151   .text.get_first_key:0000000000000032 .Loc.253
     /tmp/ccBNApom.s:1152   .text.get_first_key:0000000000000032 .Loc.254
     /tmp/ccBNApom.s:1154   .text.get_first_key:0000000000000034 .Loc.255
     /tmp/ccBNApom.s:1160   .text.get_first_key:000000000000003e .Loc.256
     /tmp/ccBNApom.s:1168   .text.get_first_key:0000000000000048 .Loc.257
     /tmp/ccBNApom.s:1173   .text.get_first_key:000000000000004a .Loc.258
     /tmp/ccBNApom.s:1175   .text.get_first_key:000000000000004a .Loc.259
     /tmp/ccBNApom.s:1179   .text.get_first_key:0000000000000050 L0
     /tmp/ccBNApom.s:1206   .bss.__compound_literal.0:0000000000000000 __compound_literal.0
     /tmp/ccBNApom.s:30     .text.get_oneshot_locked_mods:0000000000000006 L0
     /tmp/ccBNApom.s:51     .text.set_oneshot_locked_mods:0000000000000006 L0
     /tmp/ccBNApom.s:71     .text.clear_oneshot_locked_mods:0000000000000006 L0
     /tmp/ccBNApom.s:94     .text.get_oneshot_layer:000000000000000c L0
     /tmp/ccBNApom.s:115    .text.get_oneshot_layer_state:0000000000000008 L0
     /tmp/ccBNApom.s:145    .text.set_oneshot_layer:0000000000000012 L0
     /tmp/ccBNApom.s:165    .text.reset_oneshot_layer:0000000000000006 L0
     /tmp/ccBNApom.s:227    .text.clear_oneshot_layer_state:0000000000000030 L0
     /tmp/ccBNApom.s:260    .text.is_oneshot_layer_active:0000000000000010 L0
     /tmp/ccBNApom.s:392    .text.add_key:0000000000000078 L0
     /tmp/ccBNApom.s:503    .text.del_key:000000000000006a L0
     /tmp/ccBNApom.s:550    .text.clear_keys:000000000000001c L0
     /tmp/ccBNApom.s:569    .text.get_mods:0000000000000006 L0
     /tmp/ccBNApom.s:592    .text.add_mods:000000000000000c L0
     /tmp/ccBNApom.s:619    .text.del_mods:0000000000000010 L0
     /tmp/ccBNApom.s:640    .text.set_mods:0000000000000006 L0
     /tmp/ccBNApom.s:660    .text.clear_mods:0000000000000006 L0
     /tmp/ccBNApom.s:679    .text.get_weak_mods:0000000000000006 L0
     /tmp/ccBNApom.s:702    .text.add_weak_mods:000000000000000c L0
     /tmp/ccBNApom.s:729    .text.del_weak_mods:0000000000000010 L0
     /tmp/ccBNApom.s:750    .text.set_weak_mods:0000000000000006 L0
     /tmp/ccBNApom.s:770    .text.clear_weak_mods:0000000000000006 L0
     /tmp/ccBNApom.s:789    .text.get_macro_mods:0000000000000006 L0
     /tmp/ccBNApom.s:812    .text.add_macro_mods:000000000000000c L0
     /tmp/ccBNApom.s:839    .text.del_macro_mods:0000000000000010 L0
     /tmp/ccBNApom.s:860    .text.set_macro_mods:0000000000000006 L0
     /tmp/ccBNApom.s:880    .text.clear_macro_mods:0000000000000006 L0
     /tmp/ccBNApom.s:901    .text.set_oneshot_mods:0000000000000006 L0
     /tmp/ccBNApom.s:921    .text.clear_oneshot_mods:0000000000000006 L0
     /tmp/ccBNApom.s:940    .text.get_oneshot_mods:0000000000000006 L0
     /tmp/ccBNApom.s:995    .text.has_anykey:0000000000000020 L0
     /tmp/ccBNApom.s:1070   .text.send_keyboard_report:000000000000005e L0
     /tmp/ccBNApom.s:1089   .text.has_anymod:0000000000000008 L0
     /tmp/ccBNApom.s:1182   .text.get_first_key:0000000000000050 L0
                     .debug_frame:0000000000000000 L0
     /tmp/ccBNApom.s:220    .text.clear_oneshot_layer_state:000000000000002e .L8
     /tmp/ccBNApom.s:253    .text.is_oneshot_layer_active:000000000000000e .L11
     /tmp/ccBNApom.s:321    .text.add_key:000000000000003e .L13
     /tmp/ccBNApom.s:365    .text.add_key:0000000000000068 .L12
     /tmp/ccBNApom.s:312    .text.add_key:0000000000000032 .L21
     /tmp/ccBNApom.s:310    .text.add_key:0000000000000030 .L11
     /tmp/ccBNApom.s:352    .text.add_key:000000000000005e .L15
     /tmp/ccBNApom.s:336    .text.add_key:000000000000004e .L16
     /tmp/ccBNApom.s:373    .text.add_key:000000000000006a .L18
     /tmp/ccBNApom.s:457    .text.del_key:0000000000000046 .L29
     /tmp/ccBNApom.s:493    .text.del_key:0000000000000068 .L28
     /tmp/ccBNApom.s:446    .text.del_key:0000000000000036 .L22
     /tmp/ccBNApom.s:443    .text.del_key:0000000000000032 .L12
     /tmp/ccBNApom.s:485    .text.del_key:0000000000000062 .L32
     /tmp/ccBNApom.s:472    .text.del_key:0000000000000056 .L33
     /tmp/ccBNApom.s:524    .text.clear_keys:0000000000000004 .L42
     /tmp/ccBNApom.s:968    .text.has_anykey:0000000000000012 .L64
     /tmp/ccBNApom.s:1059   .text.send_keyboard_report:0000000000000052 .L71
     /tmp/ccBNApom.s:1129   .text.get_first_key:0000000000000022 .L78
     /tmp/ccBNApom.s:1144   .text.get_first_key:000000000000002c .L79
     /tmp/ccBNApom.s:1171   .text.get_first_key:000000000000004a .L77
     /tmp/ccBNApom.s:1150   .text.get_first_key:0000000000000032 .L80
     /tmp/ccBNApom.s:1135   .text.get_first_key:0000000000000026 .L81
     /tmp/ccBNApom.s:1162   .text.get_first_key:0000000000000040 .L13
     /tmp/ccBNApom.s:2634   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccBNApom.s:4011   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccBNApom.s:4109   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccBNApom.s:1093   .text.get_first_key:0000000000000000 .LFB140
     /tmp/ccBNApom.s:1180   .text.get_first_key:0000000000000050 .LFE140
     /tmp/ccBNApom.s:3477   .debug_loc:0000000000000000 .LLST17
     /tmp/ccBNApom.s:3501   .debug_loc:0000000000000031 .LLST18
     /tmp/ccBNApom.s:3498   .debug_loc:000000000000002f .LVUS18
     /tmp/ccBNApom.s:1159   .text.get_first_key:000000000000003e .LVL54
     /tmp/ccBNApom.s:1074   .text.has_anymod:0000000000000000 .LFB139
     /tmp/ccBNApom.s:1087   .text.has_anymod:0000000000000008 .LFE139
     /tmp/ccBNApom.s:1085   .text.has_anymod:0000000000000008 .LVL50
     /tmp/ccBNApom.s:944    .text.has_anykey:0000000000000000 .LFB138
     /tmp/ccBNApom.s:993    .text.has_anykey:0000000000000020 .LFE138
     /tmp/ccBNApom.s:3513   .debug_loc:0000000000000048 .LLST15
     /tmp/ccBNApom.s:3508   .debug_loc:0000000000000044 .LVUS15
     /tmp/ccBNApom.s:3534   .debug_loc:000000000000006f .LLST16
     /tmp/ccBNApom.s:3525   .debug_loc:0000000000000067 .LVUS16
     /tmp/ccBNApom.s:925    .text.get_oneshot_mods:0000000000000000 .LFB137
     /tmp/ccBNApom.s:938    .text.get_oneshot_mods:0000000000000006 .LFE137
     /tmp/ccBNApom.s:885    .text.set_oneshot_mods:0000000000000000 .LFB135
     /tmp/ccBNApom.s:899    .text.set_oneshot_mods:0000000000000006 .LFE135
     /tmp/ccBNApom.s:864    .text.clear_macro_mods:0000000000000000 .LFB134
     /tmp/ccBNApom.s:878    .text.clear_macro_mods:0000000000000006 .LFE134
     /tmp/ccBNApom.s:844    .text.set_macro_mods:0000000000000000 .LFB133
     /tmp/ccBNApom.s:858    .text.set_macro_mods:0000000000000006 .LFE133
     /tmp/ccBNApom.s:817    .text.del_macro_mods:0000000000000000 .LFB132
     /tmp/ccBNApom.s:837    .text.del_macro_mods:0000000000000010 .LFE132
     /tmp/ccBNApom.s:3582   .debug_loc:00000000000000c8 .LLST14
     /tmp/ccBNApom.s:3577   .debug_loc:00000000000000c4 .LVUS14
     /tmp/ccBNApom.s:794    .text.add_macro_mods:0000000000000000 .LFB131
     /tmp/ccBNApom.s:810    .text.add_macro_mods:000000000000000c .LFE131
     /tmp/ccBNApom.s:774    .text.get_macro_mods:0000000000000000 .LFB130
     /tmp/ccBNApom.s:787    .text.get_macro_mods:0000000000000006 .LFE130
     /tmp/ccBNApom.s:754    .text.clear_weak_mods:0000000000000000 .LFB129
     /tmp/ccBNApom.s:768    .text.clear_weak_mods:0000000000000006 .LFE129
     /tmp/ccBNApom.s:734    .text.set_weak_mods:0000000000000000 .LFB128
     /tmp/ccBNApom.s:748    .text.set_weak_mods:0000000000000006 .LFE128
     /tmp/ccBNApom.s:707    .text.del_weak_mods:0000000000000000 .LFB127
     /tmp/ccBNApom.s:727    .text.del_weak_mods:0000000000000010 .LFE127
     /tmp/ccBNApom.s:3601   .debug_loc:00000000000000ed .LLST13
     /tmp/ccBNApom.s:3596   .debug_loc:00000000000000e9 .LVUS13
     /tmp/ccBNApom.s:684    .text.add_weak_mods:0000000000000000 .LFB126
     /tmp/ccBNApom.s:700    .text.add_weak_mods:000000000000000c .LFE126
     /tmp/ccBNApom.s:664    .text.get_weak_mods:0000000000000000 .LFB125
     /tmp/ccBNApom.s:677    .text.get_weak_mods:0000000000000006 .LFE125
     /tmp/ccBNApom.s:644    .text.clear_mods:0000000000000000 .LFB124
     /tmp/ccBNApom.s:658    .text.clear_mods:0000000000000006 .LFE124
     /tmp/ccBNApom.s:624    .text.set_mods:0000000000000000 .LFB123
     /tmp/ccBNApom.s:638    .text.set_mods:0000000000000006 .LFE123
     /tmp/ccBNApom.s:597    .text.del_mods:0000000000000000 .LFB122
     /tmp/ccBNApom.s:617    .text.del_mods:0000000000000010 .LFE122
     /tmp/ccBNApom.s:3620   .debug_loc:0000000000000112 .LLST12
     /tmp/ccBNApom.s:3615   .debug_loc:000000000000010e .LVUS12
     /tmp/ccBNApom.s:574    .text.add_mods:0000000000000000 .LFB121
     /tmp/ccBNApom.s:590    .text.add_mods:000000000000000c .LFE121
     /tmp/ccBNApom.s:554    .text.get_mods:0000000000000000 .LFB120
     /tmp/ccBNApom.s:567    .text.get_mods:0000000000000006 .LFE120
     /tmp/ccBNApom.s:507    .text.clear_keys:0000000000000000 .LFB119
     /tmp/ccBNApom.s:548    .text.clear_keys:000000000000001c .LFE119
     /tmp/ccBNApom.s:3643   .debug_loc:000000000000013b .LLST11
     /tmp/ccBNApom.s:3634   .debug_loc:0000000000000133 .LVUS11
     /tmp/ccBNApom.s:397    .text.del_key:0000000000000000 .LFB118
     /tmp/ccBNApom.s:501    .text.del_key:000000000000006a .LFE118
     /tmp/ccBNApom.s:3672   .debug_loc:0000000000000178 .LLST8
     /tmp/ccBNApom.s:3665   .debug_loc:0000000000000172 .LVUS8
     /tmp/ccBNApom.s:416    .text.del_key:0000000000000010 .LBI27
     /tmp/ccBNApom.s:415    .text.del_key:0000000000000010 .LBB27
     /tmp/ccBNApom.s:460    .text.del_key:0000000000000046 .LBE27
     /tmp/ccBNApom.s:3695   .debug_loc:00000000000001a8 .LLST9
     /tmp/ccBNApom.s:3690   .debug_loc:00000000000001a4 .LVUS9
     /tmp/ccBNApom.s:461    .text.del_key:0000000000000046 .LBB29
     /tmp/ccBNApom.s:497    .text.del_key:0000000000000068 .LBE29
     /tmp/ccBNApom.s:462    .text.del_key:0000000000000046 .LBB30
     /tmp/ccBNApom.s:496    .text.del_key:0000000000000068 .LBE30
     /tmp/ccBNApom.s:3718   .debug_loc:00000000000001d1 .LLST10
     /tmp/ccBNApom.s:3709   .debug_loc:00000000000001c9 .LVUS10
     /tmp/ccBNApom.s:265    .text.add_key:0000000000000000 .LFB117
     /tmp/ccBNApom.s:390    .text.add_key:0000000000000078 .LFE117
     /tmp/ccBNApom.s:3766   .debug_loc:0000000000000221 .LLST4
     /tmp/ccBNApom.s:3759   .debug_loc:000000000000021b .LVUS4
     /tmp/ccBNApom.s:284    .text.add_key:0000000000000010 .LBI16
     /tmp/ccBNApom.s:283    .text.add_key:0000000000000010 .LBB16
     /tmp/ccBNApom.s:324    .text.add_key:000000000000003e .LBE16
     /tmp/ccBNApom.s:3789   .debug_loc:0000000000000251 .LLST5
     /tmp/ccBNApom.s:3784   .debug_loc:000000000000024d .LVUS5
     /tmp/ccBNApom.s:3810   .debug_loc:0000000000000278 .LLST6
     /tmp/ccBNApom.s:3803   .debug_loc:0000000000000272 .LVUS6
     /tmp/ccBNApom.s:3833   .debug_loc:00000000000002a8 .LLST7
     /tmp/ccBNApom.s:3826   .debug_loc:00000000000002a2 .LVUS7
     /tmp/ccBNApom.s:999    .text.send_keyboard_report:0000000000000000 .LFB116
     /tmp/ccBNApom.s:1068   .text.send_keyboard_report:000000000000005e .LFE116
     /tmp/ccBNApom.s:1053   .text.send_keyboard_report:000000000000004e .LBI37
     /tmp/ccBNApom.s:1052   .text.send_keyboard_report:000000000000004e .LBB37
     /tmp/ccBNApom.s:1061   .text.send_keyboard_report:0000000000000052 .LBE37
     /tmp/ccBNApom.s:1048   .text.send_keyboard_report:000000000000004c .LVL48
     /tmp/ccBNApom.s:1066   .text.send_keyboard_report:000000000000005e .LVL49
     /tmp/ccBNApom.s:231    .text.is_oneshot_layer_active:0000000000000000 .LFB115
     /tmp/ccBNApom.s:258    .text.is_oneshot_layer_active:0000000000000010 .LFE115
     /tmp/ccBNApom.s:240    .text.is_oneshot_layer_active:0000000000000000 .LBI10
     /tmp/ccBNApom.s:239    .text.is_oneshot_layer_active:0000000000000000 .LBB10
     /tmp/ccBNApom.s:245    .text.is_oneshot_layer_active:0000000000000000 .LBE10
     /tmp/ccBNApom.s:170    .text.clear_oneshot_layer_state:0000000000000000 .LFB114
     /tmp/ccBNApom.s:225    .text.clear_oneshot_layer_state:0000000000000030 .LFE114
     /tmp/ccBNApom.s:3857   .debug_loc:00000000000002d9 .LLST2
     /tmp/ccBNApom.s:3850   .debug_loc:00000000000002d3 .LVUS2
     /tmp/ccBNApom.s:3883   .debug_loc:000000000000030c .LLST3
     /tmp/ccBNApom.s:3878   .debug_loc:0000000000000308 .LVUS3
     /tmp/ccBNApom.s:208    .text.clear_oneshot_layer_state:0000000000000024 .LBI8
     /tmp/ccBNApom.s:207    .text.clear_oneshot_layer_state:0000000000000024 .LBB8
     /tmp/ccBNApom.s:213    .text.clear_oneshot_layer_state:0000000000000024 .LBE8
     /tmp/ccBNApom.s:219    .text.clear_oneshot_layer_state:000000000000002e .LVL8
     /tmp/ccBNApom.s:149    .text.reset_oneshot_layer:0000000000000000 .LFB113
     /tmp/ccBNApom.s:163    .text.reset_oneshot_layer:0000000000000006 .LFE113
     /tmp/ccBNApom.s:120    .text.set_oneshot_layer:0000000000000000 .LFB112
     /tmp/ccBNApom.s:143    .text.set_oneshot_layer:0000000000000012 .LFE112
     /tmp/ccBNApom.s:3899   .debug_loc:000000000000032e .LLST0
     /tmp/ccBNApom.s:3894   .debug_loc:000000000000032a .LVUS0
     /tmp/ccBNApom.s:3918   .debug_loc:0000000000000353 .LLST1
     /tmp/ccBNApom.s:3913   .debug_loc:000000000000034f .LVUS1
     /tmp/ccBNApom.s:140    .text.set_oneshot_layer:0000000000000012 .LVL3
     /tmp/ccBNApom.s:55     .text.clear_oneshot_locked_mods:0000000000000000 .LFB109
     /tmp/ccBNApom.s:69     .text.clear_oneshot_locked_mods:0000000000000006 .LFE109
     /tmp/ccBNApom.s:35     .text.set_oneshot_locked_mods:0000000000000000 .LFB108
     /tmp/ccBNApom.s:49     .text.set_oneshot_locked_mods:0000000000000006 .LFE108
     /tmp/ccBNApom.s:15     .text.get_oneshot_locked_mods:0000000000000000 .LFB107
     /tmp/ccBNApom.s:28     .text.get_oneshot_locked_mods:0000000000000006 .LFE107
     /tmp/ccBNApom.s:75     .text.get_oneshot_layer:0000000000000000 .LFB110
     /tmp/ccBNApom.s:92     .text.get_oneshot_layer:000000000000000c .LFE110
     /tmp/ccBNApom.s:98     .text.get_oneshot_layer_state:0000000000000000 .LFB111
     /tmp/ccBNApom.s:113    .text.get_oneshot_layer_state:0000000000000008 .LFE111
     /tmp/ccBNApom.s:905    .text.clear_oneshot_mods:0000000000000000 .LFB136
     /tmp/ccBNApom.s:919    .text.clear_oneshot_mods:0000000000000006 .LFE136
     /tmp/ccBNApom.s:1097   .text.get_first_key:0000000000000002 .LCFI0
     /tmp/ccBNApom.s:1101   .text.get_first_key:0000000000000004 .LCFI1
     /tmp/ccBNApom.s:1134   .text.get_first_key:0000000000000026 .LVL51
     /tmp/ccBNApom.s:1167   .text.get_first_key:0000000000000048 .LVL55
     /tmp/ccBNApom.s:952    .text.has_anykey:0000000000000000 .LVL44
     /tmp/ccBNApom.s:967    .text.has_anykey:0000000000000012 .LVL45
     /tmp/ccBNApom.s:973    .text.has_anykey:0000000000000014 .LVL46
     /tmp/ccBNApom.s:979    .text.has_anykey:0000000000000018 .LVL47
     /tmp/ccBNApom.s:816    .text.del_macro_mods:0000000000000000 .LVL40
     /tmp/ccBNApom.s:829    .text.del_macro_mods:0000000000000008 .LVL41
     /tmp/ccBNApom.s:706    .text.del_weak_mods:0000000000000000 .LVL36
     /tmp/ccBNApom.s:719    .text.del_weak_mods:0000000000000008 .LVL37
     /tmp/ccBNApom.s:596    .text.del_mods:0000000000000000 .LVL32
     /tmp/ccBNApom.s:609    .text.del_mods:0000000000000008 .LVL33
     /tmp/ccBNApom.s:517    .text.clear_keys:0000000000000000 .LVL27
     /tmp/ccBNApom.s:523    .text.clear_keys:0000000000000004 .LVL28
     /tmp/ccBNApom.s:535    .text.clear_keys:0000000000000012 .LVL29
     /tmp/ccBNApom.s:538    .text.clear_keys:0000000000000014 .LVL30
     /tmp/ccBNApom.s:396    .text.del_key:0000000000000000 .LVL19
     /tmp/ccBNApom.s:437    .text.del_key:000000000000002a .LVL21
     /tmp/ccBNApom.s:456    .text.del_key:0000000000000046 .LVL22
     /tmp/ccBNApom.s:414    .text.del_key:0000000000000010 .LVL20
     /tmp/ccBNApom.s:471    .text.del_key:0000000000000056 .LVL23
     /tmp/ccBNApom.s:476    .text.del_key:0000000000000058 .LVL24
     /tmp/ccBNApom.s:487    .text.del_key:0000000000000062 .LVL25
     /tmp/ccBNApom.s:492    .text.del_key:0000000000000068 .LVL26
     /tmp/ccBNApom.s:264    .text.add_key:0000000000000000 .LVL9
     /tmp/ccBNApom.s:305    .text.add_key:000000000000002a .LVL11
     /tmp/ccBNApom.s:320    .text.add_key:000000000000003e .LVL12
     /tmp/ccBNApom.s:282    .text.add_key:0000000000000010 .LVL10
     /tmp/ccBNApom.s:335    .text.add_key:000000000000004e .LVL13
     /tmp/ccBNApom.s:364    .text.add_key:0000000000000068 .LVL16
     /tmp/ccBNApom.s:372    .text.add_key:000000000000006a .LVL17
     /tmp/ccBNApom.s:384    .text.add_key:0000000000000076 .LVL18
     /tmp/ccBNApom.s:169    .text.clear_oneshot_layer_state:0000000000000000 .LVL4
     /tmp/ccBNApom.s:184    .text.clear_oneshot_layer_state:0000000000000006 .LVL6
     /tmp/ccBNApom.s:187    .text.clear_oneshot_layer_state:0000000000000008 .LVL7
     /tmp/ccBNApom.s:180    .text.clear_oneshot_layer_state:0000000000000004 .LVL5
     /tmp/ccBNApom.s:119    .text.set_oneshot_layer:0000000000000000 .LVL1
     /tmp/ccBNApom.s:135    .text.set_oneshot_layer:000000000000000a .LVL2
     /tmp/ccBNApom.s:1233   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccBNApom.s:325    .text.add_key:000000000000003e .LBB18
     /tmp/ccBNApom.s:369    .text.add_key:0000000000000068 .LBE18
     /tmp/ccBNApom.s:374    .text.add_key:000000000000006a .LBB21
     /tmp/ccBNApom.s:388    .text.add_key:0000000000000078 .LBE21
     /tmp/ccBNApom.s:515    .text.clear_keys:0000000000000000 .LBB31
     /tmp/ccBNApom.s:519    .text.clear_keys:0000000000000000 .LBE31
     /tmp/ccBNApom.s:525    .text.clear_keys:0000000000000004 .LBB32
     /tmp/ccBNApom.s:544    .text.clear_keys:000000000000001a .LBE32
     /tmp/ccBNApom.s:954    .text.has_anykey:0000000000000000 .LBB33
     /tmp/ccBNApom.s:964    .text.has_anykey:0000000000000010 .LBE33
     /tmp/ccBNApom.s:969    .text.has_anykey:0000000000000012 .LBB34
     /tmp/ccBNApom.s:987    .text.has_anykey:000000000000001e .LBE34
     /tmp/ccBNApom.s:1109   .text.get_first_key:0000000000000004 .LBB39
     /tmp/ccBNApom.s:1113   .text.get_first_key:000000000000000c .LBE39
     /tmp/ccBNApom.s:1122   .text.get_first_key:000000000000001c .LBB40
     /tmp/ccBNApom.s:1125   .text.get_first_key:000000000000001e .LBE40
     /tmp/ccBNApom.s:1136   .text.get_first_key:0000000000000026 .LBB41
     /tmp/ccBNApom.s:1174   .text.get_first_key:000000000000004a .LBE41

UNDEFINED SYMBOLS
layer_on
layer_off
keyboard_protocol
keymap_config
host_keyboard_send
bitpop
biton
__do_copy_data
__do_clear_bss
