   1               		.file	"timer.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.timer_init,"ax",@progbits
  11               	.global	timer_init
  13               	timer_init:
  14               	.LFB5:
  15               		.file 1 "./tmk_core/common/avr/timer.c"
   1:./tmk_core/common/avr/timer.c **** /*
   2:./tmk_core/common/avr/timer.c **** Copyright 2011 Jun Wako <wakojun@gmail.com>
   3:./tmk_core/common/avr/timer.c **** 
   4:./tmk_core/common/avr/timer.c **** This program is free software: you can redistribute it and/or modify
   5:./tmk_core/common/avr/timer.c **** it under the terms of the GNU General Public License as published by
   6:./tmk_core/common/avr/timer.c **** the Free Software Foundation, either version 2 of the License, or
   7:./tmk_core/common/avr/timer.c **** (at your option) any later version.
   8:./tmk_core/common/avr/timer.c **** 
   9:./tmk_core/common/avr/timer.c **** This program is distributed in the hope that it will be useful,
  10:./tmk_core/common/avr/timer.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:./tmk_core/common/avr/timer.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:./tmk_core/common/avr/timer.c **** GNU General Public License for more details.
  13:./tmk_core/common/avr/timer.c **** 
  14:./tmk_core/common/avr/timer.c **** You should have received a copy of the GNU General Public License
  15:./tmk_core/common/avr/timer.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:./tmk_core/common/avr/timer.c **** */
  17:./tmk_core/common/avr/timer.c **** 
  18:./tmk_core/common/avr/timer.c **** #include <avr/io.h>
  19:./tmk_core/common/avr/timer.c **** #include <avr/interrupt.h>
  20:./tmk_core/common/avr/timer.c **** #include <util/atomic.h>
  21:./tmk_core/common/avr/timer.c **** #include <stdint.h>
  22:./tmk_core/common/avr/timer.c **** #include "timer_avr.h"
  23:./tmk_core/common/avr/timer.c **** #include "timer.h"
  24:./tmk_core/common/avr/timer.c **** 
  25:./tmk_core/common/avr/timer.c **** 
  26:./tmk_core/common/avr/timer.c **** // counter resolution 1ms
  27:./tmk_core/common/avr/timer.c **** // NOTE: union { uint32_t timer32; struct { uint16_t dummy; uint16_t timer16; }}
  28:./tmk_core/common/avr/timer.c **** volatile uint32_t timer_count;
  29:./tmk_core/common/avr/timer.c **** 
  30:./tmk_core/common/avr/timer.c **** void timer_init(void)
  31:./tmk_core/common/avr/timer.c **** {
  16               		.loc 1 31 1 view -0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  32:./tmk_core/common/avr/timer.c ****     // Timer0 CTC mode
  33:./tmk_core/common/avr/timer.c ****     TCCR0A = 0x02;
  22               		.loc 1 33 5 view .LVU1
  23               		.loc 1 33 12 is_stmt 0 view .LVU2
  24 0000 82E0      		ldi r24,lo8(2)
  25 0002 84BD      		out 0x24,r24
  34:./tmk_core/common/avr/timer.c **** 
  35:./tmk_core/common/avr/timer.c **** #if TIMER_PRESCALER == 1
  36:./tmk_core/common/avr/timer.c ****     TCCR0B = 0x01;
  37:./tmk_core/common/avr/timer.c **** #elif TIMER_PRESCALER == 8
  38:./tmk_core/common/avr/timer.c ****     TCCR0B = 0x02;
  39:./tmk_core/common/avr/timer.c **** #elif TIMER_PRESCALER == 64
  40:./tmk_core/common/avr/timer.c ****     TCCR0B = 0x03;
  26               		.loc 1 40 5 is_stmt 1 view .LVU3
  27               		.loc 1 40 12 is_stmt 0 view .LVU4
  28 0004 93E0      		ldi r25,lo8(3)
  29 0006 95BD      		out 0x25,r25
  41:./tmk_core/common/avr/timer.c **** #elif TIMER_PRESCALER == 256
  42:./tmk_core/common/avr/timer.c ****     TCCR0B = 0x04;
  43:./tmk_core/common/avr/timer.c **** #elif TIMER_PRESCALER == 1024
  44:./tmk_core/common/avr/timer.c ****     TCCR0B = 0x05;
  45:./tmk_core/common/avr/timer.c **** #else
  46:./tmk_core/common/avr/timer.c **** #   error "Timer prescaler value is NOT vaild."
  47:./tmk_core/common/avr/timer.c **** #endif
  48:./tmk_core/common/avr/timer.c **** 
  49:./tmk_core/common/avr/timer.c ****     OCR0A = TIMER_RAW_TOP;
  30               		.loc 1 49 5 is_stmt 1 view .LVU5
  31               		.loc 1 49 11 is_stmt 0 view .LVU6
  32 0008 9AEF      		ldi r25,lo8(-6)
  33 000a 97BD      		out 0x27,r25
  50:./tmk_core/common/avr/timer.c ****     TIMSK0 = (1<<OCIE0A);
  34               		.loc 1 50 5 is_stmt 1 view .LVU7
  35               		.loc 1 50 12 is_stmt 0 view .LVU8
  36 000c 8093 6E00 		sts 110,r24
  37               	/* epilogue start */
  51:./tmk_core/common/avr/timer.c **** }
  38               		.loc 1 51 1 view .LVU9
  39 0010 0895      		ret
  40               		.cfi_endproc
  41               	.LFE5:
  43               		.section	.text.timer_clear,"ax",@progbits
  44               	.global	timer_clear
  46               	timer_clear:
  47               	.LFB6:
  52:./tmk_core/common/avr/timer.c **** 
  53:./tmk_core/common/avr/timer.c **** inline
  54:./tmk_core/common/avr/timer.c **** void timer_clear(void)
  55:./tmk_core/common/avr/timer.c **** {
  48               		.loc 1 55 1 is_stmt 1 view -0
  49               		.cfi_startproc
  50               	/* prologue: function */
  51               	/* frame size = 0 */
  52               	/* stack size = 0 */
  53               	.L__stack_usage = 0
  56:./tmk_core/common/avr/timer.c ****   ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
  54               		.loc 1 56 3 view .LVU11
  55               	.LBB22:
  56               		.loc 1 56 3 view .LVU12
  57 0000 8FB7      		in r24,__SREG__
  58               	.LVL0:
  59               	.LBB23:
  60               	.LBI23:
  61               		.file 2 "/usr/avr/include/util/atomic.h"
   1:/usr/avr/include/util/atomic.h **** /* Copyright (c) 2007 Dean Camera
   2:/usr/avr/include/util/atomic.h ****    All rights reserved.
   3:/usr/avr/include/util/atomic.h **** 
   4:/usr/avr/include/util/atomic.h ****    Redistribution and use in source and binary forms, with or without
   5:/usr/avr/include/util/atomic.h ****    modification, are permitted provided that the following conditions are met:
   6:/usr/avr/include/util/atomic.h **** 
   7:/usr/avr/include/util/atomic.h ****    * Redistributions of source code must retain the above copyright
   8:/usr/avr/include/util/atomic.h ****      notice, this list of conditions and the following disclaimer.
   9:/usr/avr/include/util/atomic.h **** 
  10:/usr/avr/include/util/atomic.h ****    * Redistributions in binary form must reproduce the above copyright
  11:/usr/avr/include/util/atomic.h ****      notice, this list of conditions and the following disclaimer in
  12:/usr/avr/include/util/atomic.h ****      the documentation and/or other materials provided with the
  13:/usr/avr/include/util/atomic.h ****      distribution.
  14:/usr/avr/include/util/atomic.h **** 
  15:/usr/avr/include/util/atomic.h ****    * Neither the name of the copyright holders nor the names of
  16:/usr/avr/include/util/atomic.h ****      contributors may be used to endorse or promote products derived
  17:/usr/avr/include/util/atomic.h ****      from this software without specific prior written permission.
  18:/usr/avr/include/util/atomic.h **** 
  19:/usr/avr/include/util/atomic.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  20:/usr/avr/include/util/atomic.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  21:/usr/avr/include/util/atomic.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  22:/usr/avr/include/util/atomic.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  23:/usr/avr/include/util/atomic.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  24:/usr/avr/include/util/atomic.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  25:/usr/avr/include/util/atomic.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  26:/usr/avr/include/util/atomic.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  27:/usr/avr/include/util/atomic.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  28:/usr/avr/include/util/atomic.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  29:/usr/avr/include/util/atomic.h ****   POSSIBILITY OF SUCH DAMAGE.
  30:/usr/avr/include/util/atomic.h **** */
  31:/usr/avr/include/util/atomic.h **** 
  32:/usr/avr/include/util/atomic.h **** /* $Id: atomic.h 2158 2010-06-10 15:48:28Z joerg_wunsch $ */
  33:/usr/avr/include/util/atomic.h **** 
  34:/usr/avr/include/util/atomic.h **** #ifndef _UTIL_ATOMIC_H_
  35:/usr/avr/include/util/atomic.h **** #define _UTIL_ATOMIC_H_ 1
  36:/usr/avr/include/util/atomic.h **** 
  37:/usr/avr/include/util/atomic.h **** #include <avr/io.h>
  38:/usr/avr/include/util/atomic.h **** #include <avr/interrupt.h>
  39:/usr/avr/include/util/atomic.h **** 
  40:/usr/avr/include/util/atomic.h **** #if !defined(__DOXYGEN__)
  41:/usr/avr/include/util/atomic.h **** /* Internal helper functions. */
  42:/usr/avr/include/util/atomic.h **** static __inline__ uint8_t __iSeiRetVal(void)
  43:/usr/avr/include/util/atomic.h **** {
  44:/usr/avr/include/util/atomic.h ****     sei();
  45:/usr/avr/include/util/atomic.h ****     return 1;
  46:/usr/avr/include/util/atomic.h **** }
  47:/usr/avr/include/util/atomic.h **** 
  48:/usr/avr/include/util/atomic.h **** static __inline__ uint8_t __iCliRetVal(void)
  62               		.loc 2 48 27 view .LVU13
  63               	.LBB24:
  49:/usr/avr/include/util/atomic.h **** {
  50:/usr/avr/include/util/atomic.h ****     cli();
  64               		.loc 2 50 5 view .LVU14
  65               	/* #APP */
  66               	 ;  50 "/usr/avr/include/util/atomic.h" 1
  67 0002 F894      		cli
  68               	 ;  0 "" 2
  51:/usr/avr/include/util/atomic.h ****     return 1;
  69               		.loc 2 51 5 view .LVU15
  70               	.LVL1:
  71               		.loc 2 51 5 is_stmt 0 view .LVU16
  72               	/* #NOAPP */
  73               	.LBE24:
  74               	.LBE23:
  75               		.loc 1 56 3 is_stmt 1 view .LVU17
  57:./tmk_core/common/avr/timer.c ****     timer_count = 0;
  76               		.loc 1 57 5 view .LVU18
  77               		.loc 1 57 17 is_stmt 0 view .LVU19
  78 0004 1092 0000 		sts timer_count,__zero_reg__
  79 0008 1092 0000 		sts timer_count+1,__zero_reg__
  80 000c 1092 0000 		sts timer_count+2,__zero_reg__
  81 0010 1092 0000 		sts timer_count+3,__zero_reg__
  56:./tmk_core/common/avr/timer.c ****     timer_count = 0;
  82               		.loc 1 56 3 is_stmt 1 view .LVU20
  83               	.LVL2:
  56:./tmk_core/common/avr/timer.c ****     timer_count = 0;
  84               		.loc 1 56 3 view .LVU21
  85               	.LBB25:
  86               	.LBI25:
  52:/usr/avr/include/util/atomic.h **** }
  53:/usr/avr/include/util/atomic.h **** 
  54:/usr/avr/include/util/atomic.h **** static __inline__ void __iSeiParam(const uint8_t *__s)
  55:/usr/avr/include/util/atomic.h **** {
  56:/usr/avr/include/util/atomic.h ****     sei();
  57:/usr/avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
  58:/usr/avr/include/util/atomic.h ****     (void)__s;
  59:/usr/avr/include/util/atomic.h **** }
  60:/usr/avr/include/util/atomic.h **** 
  61:/usr/avr/include/util/atomic.h **** static __inline__ void __iCliParam(const uint8_t *__s)
  62:/usr/avr/include/util/atomic.h **** {
  63:/usr/avr/include/util/atomic.h ****     cli();
  64:/usr/avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
  65:/usr/avr/include/util/atomic.h ****     (void)__s;
  66:/usr/avr/include/util/atomic.h **** }
  67:/usr/avr/include/util/atomic.h **** 
  68:/usr/avr/include/util/atomic.h **** static __inline__ void __iRestore(const  uint8_t *__s)
  87               		.loc 2 68 24 view .LVU22
  88               	.LBB26:
  69:/usr/avr/include/util/atomic.h **** {
  70:/usr/avr/include/util/atomic.h ****     SREG = *__s;
  89               		.loc 2 70 5 view .LVU23
  90               		.loc 2 70 10 is_stmt 0 view .LVU24
  91 0014 8FBF      		out __SREG__,r24
  71:/usr/avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
  92               		.loc 2 71 5 is_stmt 1 view .LVU25
  93               	.LVL3:
  94               	/* epilogue start */
  95               		.loc 2 71 5 is_stmt 0 view .LVU26
  96               	.LBE26:
  97               	.LBE25:
  98               	.LBE22:
  58:./tmk_core/common/avr/timer.c ****   }
  59:./tmk_core/common/avr/timer.c **** }
  99               		.loc 1 59 1 view .LVU27
 100 0016 0895      		ret
 101               		.cfi_endproc
 102               	.LFE6:
 104               		.section	.text.timer_read,"ax",@progbits
 105               	.global	timer_read
 107               	timer_read:
 108               	.LFB7:
  60:./tmk_core/common/avr/timer.c **** 
  61:./tmk_core/common/avr/timer.c **** inline
  62:./tmk_core/common/avr/timer.c **** uint16_t timer_read(void)
  63:./tmk_core/common/avr/timer.c **** {
 109               		.loc 1 63 1 is_stmt 1 view -0
 110               		.cfi_startproc
 111               	/* prologue: function */
 112               	/* frame size = 0 */
 113               	/* stack size = 0 */
 114               	.L__stack_usage = 0
  64:./tmk_core/common/avr/timer.c ****     uint32_t t;
 115               		.loc 1 64 5 view .LVU29
  65:./tmk_core/common/avr/timer.c **** 
  66:./tmk_core/common/avr/timer.c ****     ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
 116               		.loc 1 66 5 view .LVU30
 117               	.LBB32:
 118               		.loc 1 66 5 view .LVU31
 119 0000 2FB7      		in r18,__SREG__
 120               	.LVL4:
 121               	.LBB33:
 122               	.LBI33:
  48:/usr/avr/include/util/atomic.h **** {
 123               		.loc 2 48 27 view .LVU32
 124               	.LBB34:
  50:/usr/avr/include/util/atomic.h ****     return 1;
 125               		.loc 2 50 5 view .LVU33
 126               	/* #APP */
 127               	 ;  50 "/usr/avr/include/util/atomic.h" 1
 128 0002 F894      		cli
 129               	 ;  0 "" 2
  51:/usr/avr/include/util/atomic.h **** }
 130               		.loc 2 51 5 view .LVU34
 131               	.LVL5:
  51:/usr/avr/include/util/atomic.h **** }
 132               		.loc 2 51 5 is_stmt 0 view .LVU35
 133               	/* #NOAPP */
 134               	.LBE34:
 135               	.LBE33:
 136               		.loc 1 66 5 is_stmt 1 view .LVU36
  67:./tmk_core/common/avr/timer.c ****       t = timer_count;
 137               		.loc 1 67 7 view .LVU37
 138               		.loc 1 67 9 is_stmt 0 view .LVU38
 139 0004 8091 0000 		lds r24,timer_count
 140 0008 9091 0000 		lds r25,timer_count+1
 141 000c A091 0000 		lds r26,timer_count+2
 142 0010 B091 0000 		lds r27,timer_count+3
  66:./tmk_core/common/avr/timer.c ****       t = timer_count;
 143               		.loc 1 66 5 is_stmt 1 view .LVU39
 144               	.LVL6:
  66:./tmk_core/common/avr/timer.c ****       t = timer_count;
 145               		.loc 1 66 5 view .LVU40
 146               	.LBB35:
 147               	.LBI35:
  68:/usr/avr/include/util/atomic.h **** {
 148               		.loc 2 68 24 view .LVU41
 149               	.LBB36:
  70:/usr/avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
 150               		.loc 2 70 5 view .LVU42
  70:/usr/avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
 151               		.loc 2 70 10 is_stmt 0 view .LVU43
 152 0014 2FBF      		out __SREG__,r18
 153               		.loc 2 71 5 is_stmt 1 view .LVU44
 154               	.LVL7:
 155               		.loc 2 71 5 is_stmt 0 view .LVU45
 156               	.LBE36:
 157               	.LBE35:
 158               	.LBE32:
  68:./tmk_core/common/avr/timer.c ****     }
  69:./tmk_core/common/avr/timer.c **** 
  70:./tmk_core/common/avr/timer.c ****     return (t & 0xFFFF);
 159               		.loc 1 70 5 is_stmt 1 view .LVU46
 160               	/* epilogue start */
  71:./tmk_core/common/avr/timer.c **** }
 161               		.loc 1 71 1 is_stmt 0 view .LVU47
 162 0016 0895      		ret
 163               		.cfi_endproc
 164               	.LFE7:
 166               		.section	.text.timer_read32,"ax",@progbits
 167               	.global	timer_read32
 169               	timer_read32:
 170               	.LFB8:
  72:./tmk_core/common/avr/timer.c **** 
  73:./tmk_core/common/avr/timer.c **** inline
  74:./tmk_core/common/avr/timer.c **** uint32_t timer_read32(void)
  75:./tmk_core/common/avr/timer.c **** {
 171               		.loc 1 75 1 is_stmt 1 view -0
 172               		.cfi_startproc
 173 0000 CF93      		push r28
 174               	.LCFI0:
 175               		.cfi_def_cfa_offset 3
 176               		.cfi_offset 28, -2
 177 0002 DF93      		push r29
 178               	.LCFI1:
 179               		.cfi_def_cfa_offset 4
 180               		.cfi_offset 29, -3
 181 0004 00D0      		rcall .
 182 0006 00D0      		rcall .
 183               	.LCFI2:
 184               		.cfi_def_cfa_offset 8
 185 0008 CDB7      		in r28,__SP_L__
 186 000a DEB7      		in r29,__SP_H__
 187               	.LCFI3:
 188               		.cfi_def_cfa_register 28
 189               	/* prologue: function */
 190               	/* frame size = 4 */
 191               	/* stack size = 6 */
 192               	.L__stack_usage = 6
  76:./tmk_core/common/avr/timer.c ****     uint32_t t;
 193               		.loc 1 76 5 view .LVU49
  77:./tmk_core/common/avr/timer.c **** 
  78:./tmk_core/common/avr/timer.c ****     ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
 194               		.loc 1 78 5 view .LVU50
 195               	.LBB42:
 196               		.loc 1 78 5 view .LVU51
 197 000c 8FB7      		in r24,__SREG__
 198               	.LVL8:
 199               	.LBB43:
 200               	.LBI43:
  48:/usr/avr/include/util/atomic.h **** {
 201               		.loc 2 48 27 view .LVU52
 202               	.LBB44:
  50:/usr/avr/include/util/atomic.h ****     return 1;
 203               		.loc 2 50 5 view .LVU53
 204               	/* #APP */
 205               	 ;  50 "/usr/avr/include/util/atomic.h" 1
 206 000e F894      		cli
 207               	 ;  0 "" 2
  51:/usr/avr/include/util/atomic.h **** }
 208               		.loc 2 51 5 view .LVU54
 209               	.LVL9:
  51:/usr/avr/include/util/atomic.h **** }
 210               		.loc 2 51 5 is_stmt 0 view .LVU55
 211               	/* #NOAPP */
 212               	.LBE44:
 213               	.LBE43:
 214               		.loc 1 78 5 is_stmt 1 view .LVU56
  79:./tmk_core/common/avr/timer.c ****       t = timer_count;
 215               		.loc 1 79 7 view .LVU57
 216               		.loc 1 79 9 is_stmt 0 view .LVU58
 217 0010 2091 0000 		lds r18,timer_count
 218 0014 3091 0000 		lds r19,timer_count+1
 219 0018 4091 0000 		lds r20,timer_count+2
 220 001c 5091 0000 		lds r21,timer_count+3
 221 0020 2983      		std Y+1,r18
 222 0022 3A83      		std Y+2,r19
 223 0024 4B83      		std Y+3,r20
 224 0026 5C83      		std Y+4,r21
 225               	.LVL10:
  78:./tmk_core/common/avr/timer.c ****       t = timer_count;
 226               		.loc 1 78 5 is_stmt 1 view .LVU59
  78:./tmk_core/common/avr/timer.c ****       t = timer_count;
 227               		.loc 1 78 5 view .LVU60
 228               	.LBB45:
 229               	.LBI45:
  68:/usr/avr/include/util/atomic.h **** {
 230               		.loc 2 68 24 view .LVU61
 231               	.LBB46:
  70:/usr/avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
 232               		.loc 2 70 5 view .LVU62
  70:/usr/avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
 233               		.loc 2 70 10 is_stmt 0 view .LVU63
 234 0028 8FBF      		out __SREG__,r24
 235               		.loc 2 71 5 is_stmt 1 view .LVU64
 236               	.LVL11:
 237               		.loc 2 71 5 is_stmt 0 view .LVU65
 238               	.LBE46:
 239               	.LBE45:
 240               	.LBE42:
  80:./tmk_core/common/avr/timer.c ****     }
  81:./tmk_core/common/avr/timer.c **** 
  82:./tmk_core/common/avr/timer.c ****     return t;
 241               		.loc 1 82 5 is_stmt 1 view .LVU66
  83:./tmk_core/common/avr/timer.c **** }
 242               		.loc 1 83 1 is_stmt 0 view .LVU67
 243 002a 6981      		ldd r22,Y+1
 244 002c 7A81      		ldd r23,Y+2
 245 002e 8B81      		ldd r24,Y+3
 246 0030 9C81      		ldd r25,Y+4
 247               	/* epilogue start */
 248 0032 0F90      		pop __tmp_reg__
 249 0034 0F90      		pop __tmp_reg__
 250 0036 0F90      		pop __tmp_reg__
 251 0038 0F90      		pop __tmp_reg__
 252 003a DF91      		pop r29
 253 003c CF91      		pop r28
 254 003e 0895      		ret
 255               		.cfi_endproc
 256               	.LFE8:
 258               		.section	.text.timer_elapsed,"ax",@progbits
 259               	.global	timer_elapsed
 261               	timer_elapsed:
 262               	.LVL12:
 263               	.LFB9:
  84:./tmk_core/common/avr/timer.c **** 
  85:./tmk_core/common/avr/timer.c **** inline
  86:./tmk_core/common/avr/timer.c **** uint16_t timer_elapsed(uint16_t last)
  87:./tmk_core/common/avr/timer.c **** {
 264               		.loc 1 87 1 is_stmt 1 view -0
 265               		.cfi_startproc
 266               		.loc 1 87 1 is_stmt 0 view .LVU69
 267 0000 CF92      		push r12
 268               	.LCFI4:
 269               		.cfi_def_cfa_offset 3
 270               		.cfi_offset 12, -2
 271 0002 DF92      		push r13
 272               	.LCFI5:
 273               		.cfi_def_cfa_offset 4
 274               		.cfi_offset 13, -3
 275 0004 EF92      		push r14
 276               	.LCFI6:
 277               		.cfi_def_cfa_offset 5
 278               		.cfi_offset 14, -4
 279 0006 FF92      		push r15
 280               	.LCFI7:
 281               		.cfi_def_cfa_offset 6
 282               		.cfi_offset 15, -5
 283               	/* prologue: function */
 284               	/* frame size = 0 */
 285               	/* stack size = 4 */
 286               	.L__stack_usage = 4
 287 0008 9C01      		movw r18,r24
  88:./tmk_core/common/avr/timer.c ****     uint32_t t;
 288               		.loc 1 88 5 is_stmt 1 view .LVU70
  89:./tmk_core/common/avr/timer.c **** 
  90:./tmk_core/common/avr/timer.c ****     ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
 289               		.loc 1 90 5 view .LVU71
 290               	.LBB52:
 291               		.loc 1 90 5 view .LVU72
 292 000a 4FB7      		in r20,__SREG__
 293               	.LVL13:
 294               	.LBB53:
 295               	.LBI53:
  48:/usr/avr/include/util/atomic.h **** {
 296               		.loc 2 48 27 view .LVU73
 297               	.LBB54:
  50:/usr/avr/include/util/atomic.h ****     return 1;
 298               		.loc 2 50 5 view .LVU74
 299               	/* #APP */
 300               	 ;  50 "/usr/avr/include/util/atomic.h" 1
 301 000c F894      		cli
 302               	 ;  0 "" 2
  51:/usr/avr/include/util/atomic.h **** }
 303               		.loc 2 51 5 view .LVU75
 304               	.LVL14:
  51:/usr/avr/include/util/atomic.h **** }
 305               		.loc 2 51 5 is_stmt 0 view .LVU76
 306               	/* #NOAPP */
 307               	.LBE54:
 308               	.LBE53:
 309               		.loc 1 90 5 is_stmt 1 view .LVU77
  91:./tmk_core/common/avr/timer.c ****       t = timer_count;
 310               		.loc 1 91 7 view .LVU78
 311               		.loc 1 91 9 is_stmt 0 view .LVU79
 312 000e 8091 0000 		lds r24,timer_count
 313 0012 9091 0000 		lds r25,timer_count+1
 314 0016 A091 0000 		lds r26,timer_count+2
 315 001a B091 0000 		lds r27,timer_count+3
 316               	.LVL15:
  90:./tmk_core/common/avr/timer.c ****       t = timer_count;
 317               		.loc 1 90 5 is_stmt 1 view .LVU80
  90:./tmk_core/common/avr/timer.c ****       t = timer_count;
 318               		.loc 1 90 5 view .LVU81
 319               	.LBB55:
 320               	.LBI55:
  68:/usr/avr/include/util/atomic.h **** {
 321               		.loc 2 68 24 view .LVU82
 322               	.LBB56:
  70:/usr/avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
 323               		.loc 2 70 5 view .LVU83
  70:/usr/avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
 324               		.loc 2 70 10 is_stmt 0 view .LVU84
 325 001e 4FBF      		out __SREG__,r20
 326               		.loc 2 71 5 is_stmt 1 view .LVU85
 327               	.LVL16:
 328               		.loc 2 71 5 is_stmt 0 view .LVU86
 329               	.LBE56:
 330               	.LBE55:
 331               	.LBE52:
  92:./tmk_core/common/avr/timer.c ****     }
  93:./tmk_core/common/avr/timer.c **** 
  94:./tmk_core/common/avr/timer.c ****     return TIMER_DIFF_16((t & 0xFFFF), last);
 332               		.loc 1 94 5 is_stmt 1 view .LVU87
 333               		.loc 1 94 12 is_stmt 0 view .LVU88
 334 0020 6C01      		movw r12,r24
 335 0022 7D01      		movw r14,r26
 336 0024 EE24      		clr r14
 337 0026 FF24      		clr r15
 338 0028 A901      		movw r20,r18
 339 002a 70E0      		ldi r23,0
 340 002c 60E0      		ldi r22,0
 341 002e C416      		cp r12,r20
 342 0030 D506      		cpc r13,r21
 343 0032 E606      		cpc r14,r22
 344 0034 F706      		cpc r15,r23
 345 0036 00F0      		brlo .L6
 346               	.LVL17:
 347               	.L8:
 348               		.loc 1 94 12 discriminator 2 view .LVU89
 349 0038 821B      		sub r24,r18
 350 003a 930B      		sbc r25,r19
 351               	/* epilogue start */
  95:./tmk_core/common/avr/timer.c **** }
 352               		.loc 1 95 1 discriminator 2 view .LVU90
 353 003c FF90      		pop r15
 354 003e EF90      		pop r14
 355 0040 DF90      		pop r13
 356 0042 CF90      		pop r12
 357 0044 0895      		ret
 358               	.LVL18:
 359               	.L6:
  94:./tmk_core/common/avr/timer.c **** }
 360               		.loc 1 94 12 discriminator 2 view .LVU91
 361 0046 0197      		sbiw r24,1
 362               	.LVL19:
  94:./tmk_core/common/avr/timer.c **** }
 363               		.loc 1 94 12 discriminator 2 view .LVU92
 364 0048 00C0      		rjmp .L8
 365               		.cfi_endproc
 366               	.LFE9:
 368               		.section	.text.timer_elapsed32,"ax",@progbits
 369               	.global	timer_elapsed32
 371               	timer_elapsed32:
 372               	.LVL20:
 373               	.LFB10:
  96:./tmk_core/common/avr/timer.c **** 
  97:./tmk_core/common/avr/timer.c **** inline
  98:./tmk_core/common/avr/timer.c **** uint32_t timer_elapsed32(uint32_t last)
  99:./tmk_core/common/avr/timer.c **** {
 374               		.loc 1 99 1 is_stmt 1 view -0
 375               		.cfi_startproc
 376               		.loc 1 99 1 is_stmt 0 view .LVU94
 377 0000 0F93      		push r16
 378               	.LCFI8:
 379               		.cfi_def_cfa_offset 3
 380               		.cfi_offset 16, -2
 381 0002 1F93      		push r17
 382               	.LCFI9:
 383               		.cfi_def_cfa_offset 4
 384               		.cfi_offset 17, -3
 385 0004 CF93      		push r28
 386               	.LCFI10:
 387               		.cfi_def_cfa_offset 5
 388               		.cfi_offset 28, -4
 389 0006 DF93      		push r29
 390               	.LCFI11:
 391               		.cfi_def_cfa_offset 6
 392               		.cfi_offset 29, -5
 393 0008 00D0      		rcall .
 394 000a 00D0      		rcall .
 395               	.LCFI12:
 396               		.cfi_def_cfa_offset 10
 397 000c CDB7      		in r28,__SP_L__
 398 000e DEB7      		in r29,__SP_H__
 399               	.LCFI13:
 400               		.cfi_def_cfa_register 28
 401               	/* prologue: function */
 402               	/* frame size = 4 */
 403               	/* stack size = 8 */
 404               	.L__stack_usage = 8
 405 0010 462F      		mov r20,r22
 406 0012 572F      		mov r21,r23
 407 0014 BC01      		movw r22,r24
 408               	.LVL21:
 100:./tmk_core/common/avr/timer.c ****     uint32_t t;
 409               		.loc 1 100 5 is_stmt 1 view .LVU95
 101:./tmk_core/common/avr/timer.c **** 
 102:./tmk_core/common/avr/timer.c ****     ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
 410               		.loc 1 102 5 view .LVU96
 411               	.LBB62:
 412               		.loc 1 102 5 view .LVU97
 413 0016 2FB7      		in r18,__SREG__
 414               	.LVL22:
 415               	.LBB63:
 416               	.LBI63:
  48:/usr/avr/include/util/atomic.h **** {
 417               		.loc 2 48 27 view .LVU98
 418               	.LBB64:
  50:/usr/avr/include/util/atomic.h ****     return 1;
 419               		.loc 2 50 5 view .LVU99
 420               	/* #APP */
 421               	 ;  50 "/usr/avr/include/util/atomic.h" 1
 422 0018 F894      		cli
 423               	 ;  0 "" 2
  51:/usr/avr/include/util/atomic.h **** }
 424               		.loc 2 51 5 view .LVU100
 425               	.LVL23:
  51:/usr/avr/include/util/atomic.h **** }
 426               		.loc 2 51 5 is_stmt 0 view .LVU101
 427               	/* #NOAPP */
 428               	.LBE64:
 429               	.LBE63:
 430               		.loc 1 102 5 is_stmt 1 view .LVU102
 103:./tmk_core/common/avr/timer.c ****       t = timer_count;
 431               		.loc 1 103 7 view .LVU103
 432               		.loc 1 103 9 is_stmt 0 view .LVU104
 433 001a 8091 0000 		lds r24,timer_count
 434 001e 9091 0000 		lds r25,timer_count+1
 435 0022 A091 0000 		lds r26,timer_count+2
 436 0026 B091 0000 		lds r27,timer_count+3
 437               	.LVL24:
 102:./tmk_core/common/avr/timer.c ****       t = timer_count;
 438               		.loc 1 102 5 is_stmt 1 view .LVU105
 102:./tmk_core/common/avr/timer.c ****       t = timer_count;
 439               		.loc 1 102 5 view .LVU106
 440               	.LBB65:
 441               	.LBI65:
  68:/usr/avr/include/util/atomic.h **** {
 442               		.loc 2 68 24 view .LVU107
 443               	.LBB66:
  70:/usr/avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
 444               		.loc 2 70 5 view .LVU108
  70:/usr/avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
 445               		.loc 2 70 10 is_stmt 0 view .LVU109
 446 002a 2FBF      		out __SREG__,r18
 447               		.loc 2 71 5 is_stmt 1 view .LVU110
 448               	.LVL25:
 449               		.loc 2 71 5 is_stmt 0 view .LVU111
 450               	.LBE66:
 451               	.LBE65:
 452               	.LBE62:
 104:./tmk_core/common/avr/timer.c ****     }
 105:./tmk_core/common/avr/timer.c **** 
 106:./tmk_core/common/avr/timer.c ****     return TIMER_DIFF_32(t, last);
 453               		.loc 1 106 5 is_stmt 1 view .LVU112
 454               		.loc 1 106 12 is_stmt 0 view .LVU113
 455 002c 8417      		cp r24,r20
 456 002e 9507      		cpc r25,r21
 457 0030 A607      		cpc r26,r22
 458 0032 B707      		cpc r27,r23
 459 0034 00F0      		brlo .L10
 460               	.LVL26:
 461               	.L12:
 462               		.loc 1 106 12 discriminator 2 view .LVU114
 463 0036 8C01      		movw r16,r24
 464 0038 9D01      		movw r18,r26
 465 003a 041B      		sub r16,r20
 466 003c 150B      		sbc r17,r21
 467 003e 260B      		sbc r18,r22
 468 0040 370B      		sbc r19,r23
 469 0042 0983      		std Y+1,r16
 470 0044 1A83      		std Y+2,r17
 471 0046 2B83      		std Y+3,r18
 472 0048 3C83      		std Y+4,r19
 107:./tmk_core/common/avr/timer.c **** }
 473               		.loc 1 107 1 discriminator 2 view .LVU115
 474 004a 6981      		ldd r22,Y+1
 475 004c 7A81      		ldd r23,Y+2
 476 004e 8B81      		ldd r24,Y+3
 477 0050 9C81      		ldd r25,Y+4
 478               	/* epilogue start */
 479 0052 0F90      		pop __tmp_reg__
 480 0054 0F90      		pop __tmp_reg__
 481 0056 0F90      		pop __tmp_reg__
 482 0058 0F90      		pop __tmp_reg__
 483 005a DF91      		pop r29
 484 005c CF91      		pop r28
 485 005e 1F91      		pop r17
 486 0060 0F91      		pop r16
 487 0062 0895      		ret
 488               	.LVL27:
 489               	.L10:
 106:./tmk_core/common/avr/timer.c **** }
 490               		.loc 1 106 12 discriminator 2 view .LVU116
 491 0064 0197      		sbiw r24,1
 492 0066 A109      		sbc r26,__zero_reg__
 493 0068 B109      		sbc r27,__zero_reg__
 494               	.LVL28:
 106:./tmk_core/common/avr/timer.c **** }
 495               		.loc 1 106 12 discriminator 2 view .LVU117
 496 006a 00C0      		rjmp .L12
 497               		.cfi_endproc
 498               	.LFE10:
 500               		.section	.text.__vector_21,"ax",@progbits
 501               	.global	__vector_21
 503               	__vector_21:
 504               	.LFB11:
 108:./tmk_core/common/avr/timer.c **** 
 109:./tmk_core/common/avr/timer.c **** // excecuted once per 1ms.(excess for just timer count?)
 110:./tmk_core/common/avr/timer.c **** ISR(TIMER0_COMPA_vect)
 111:./tmk_core/common/avr/timer.c **** {
 505               		.loc 1 111 1 is_stmt 1 view -0
 506               		.cfi_startproc
 507 0000 1F92 1FB6 		__gcc_isr 1
 507      1F92 1124 
 507      8F93 
 508 000a 9F93      		push r25
 509               	.LCFI14:
 510               		.cfi_def_cfa_offset 3
 511               		.cfi_offset 25, -2
 512 000c AF93      		push r26
 513               	.LCFI15:
 514               		.cfi_def_cfa_offset 4
 515               		.cfi_offset 26, -3
 516 000e BF93      		push r27
 517               	.LCFI16:
 518               		.cfi_def_cfa_offset 5
 519               		.cfi_offset 27, -4
 520               	/* prologue: Signal */
 521               	/* frame size = 0 */
 522               	/* stack size = 3...7 */
 523               	.L__stack_usage = 3 + __gcc_isr.n_pushed
 112:./tmk_core/common/avr/timer.c ****     timer_count++;
 524               		.loc 1 112 5 view .LVU119
 525               		.loc 1 112 16 is_stmt 0 view .LVU120
 526 0010 8091 0000 		lds r24,timer_count
 527 0014 9091 0000 		lds r25,timer_count+1
 528 0018 A091 0000 		lds r26,timer_count+2
 529 001c B091 0000 		lds r27,timer_count+3
 530 0020 0196      		adiw r24,1
 531 0022 A11D      		adc r26,__zero_reg__
 532 0024 B11D      		adc r27,__zero_reg__
 533 0026 8093 0000 		sts timer_count,r24
 534 002a 9093 0000 		sts timer_count+1,r25
 535 002e A093 0000 		sts timer_count+2,r26
 536 0032 B093 0000 		sts timer_count+3,r27
 537               	/* epilogue start */
 113:./tmk_core/common/avr/timer.c **** }
 538               		.loc 1 113 1 view .LVU121
 539 0036 BF91      		pop r27
 540 0038 AF91      		pop r26
 541 003a 9F91      		pop r25
 542 003c 8F91 1F90 		__gcc_isr 2
 542      1FBE 1F90 
 543 0044 1895      		reti
 544               		__gcc_isr 0,r24
 545               		.cfi_endproc
 546               	.LFE11:
 548               	.global	timer_count
 549               		.section	.bss.timer_count,"aw",@nobits
 552               	timer_count:
 553 0000 0000 0000 		.zero	4
 554               		.text
 555               	.Letext0:
 556               		.file 3 "/usr/avr/include/stdint.h"
 557               		.file 4 "./tmk_core/common/timer.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 timer.c
     /tmp/ccrkXv6K.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccrkXv6K.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccrkXv6K.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccrkXv6K.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccrkXv6K.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccrkXv6K.s:13     .text.timer_init:0000000000000000 timer_init
     /tmp/ccrkXv6K.s:46     .text.timer_clear:0000000000000000 timer_clear
     /tmp/ccrkXv6K.s:552    .bss.timer_count:0000000000000000 timer_count
     /tmp/ccrkXv6K.s:107    .text.timer_read:0000000000000000 timer_read
     /tmp/ccrkXv6K.s:169    .text.timer_read32:0000000000000000 timer_read32
     /tmp/ccrkXv6K.s:261    .text.timer_elapsed:0000000000000000 timer_elapsed
     /tmp/ccrkXv6K.s:371    .text.timer_elapsed32:0000000000000000 timer_elapsed32
     /tmp/ccrkXv6K.s:503    .text.__vector_21:0000000000000000 __vector_21
                            *ABS*:0000000000000003 __gcc_isr.n_pushed.001

UNDEFINED SYMBOLS
__do_clear_bss
