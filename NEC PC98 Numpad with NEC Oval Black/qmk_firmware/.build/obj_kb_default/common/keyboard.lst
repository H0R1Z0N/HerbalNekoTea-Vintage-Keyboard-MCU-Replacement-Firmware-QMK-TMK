   1               		.file	"keyboard.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.matrix_setup,"ax",@progbits
  11               		.weak	matrix_setup
  13               	matrix_setup:
  14               	.LFB103:
  15               		.file 1 "./tmk_core/common/keyboard.c"
   1:./tmk_core/common/keyboard.c **** /*
   2:./tmk_core/common/keyboard.c **** Copyright 2011, 2012, 2013 Jun Wako <wakojun@gmail.com>
   3:./tmk_core/common/keyboard.c **** 
   4:./tmk_core/common/keyboard.c **** This program is free software: you can redistribute it and/or modify
   5:./tmk_core/common/keyboard.c **** it under the terms of the GNU General Public License as published by
   6:./tmk_core/common/keyboard.c **** the Free Software Foundation, either version 2 of the License, or
   7:./tmk_core/common/keyboard.c **** (at your option) any later version.
   8:./tmk_core/common/keyboard.c **** 
   9:./tmk_core/common/keyboard.c **** This program is distributed in the hope that it will be useful,
  10:./tmk_core/common/keyboard.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:./tmk_core/common/keyboard.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:./tmk_core/common/keyboard.c **** GNU General Public License for more details.
  13:./tmk_core/common/keyboard.c **** 
  14:./tmk_core/common/keyboard.c **** You should have received a copy of the GNU General Public License
  15:./tmk_core/common/keyboard.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:./tmk_core/common/keyboard.c **** */
  17:./tmk_core/common/keyboard.c **** #include <stdint.h>
  18:./tmk_core/common/keyboard.c **** #include "keyboard.h"
  19:./tmk_core/common/keyboard.c **** #include "matrix.h"
  20:./tmk_core/common/keyboard.c **** #include "keymap.h"
  21:./tmk_core/common/keyboard.c **** #include "host.h"
  22:./tmk_core/common/keyboard.c **** #include "led.h"
  23:./tmk_core/common/keyboard.c **** #include "keycode.h"
  24:./tmk_core/common/keyboard.c **** #include "timer.h"
  25:./tmk_core/common/keyboard.c **** #include "print.h"
  26:./tmk_core/common/keyboard.c **** #include "debug.h"
  27:./tmk_core/common/keyboard.c **** #include "command.h"
  28:./tmk_core/common/keyboard.c **** #include "util.h"
  29:./tmk_core/common/keyboard.c **** #include "sendchar.h"
  30:./tmk_core/common/keyboard.c **** #include "eeconfig.h"
  31:./tmk_core/common/keyboard.c **** #include "backlight.h"
  32:./tmk_core/common/keyboard.c **** #include "action_layer.h"
  33:./tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
  34:./tmk_core/common/keyboard.c **** #   include "bootmagic.h"
  35:./tmk_core/common/keyboard.c **** #else
  36:./tmk_core/common/keyboard.c **** #   include "magic.h"
  37:./tmk_core/common/keyboard.c **** #endif
  38:./tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
  39:./tmk_core/common/keyboard.c **** #   include "mousekey.h"
  40:./tmk_core/common/keyboard.c **** #endif
  41:./tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  42:./tmk_core/common/keyboard.c **** #   include "ps2_mouse.h"
  43:./tmk_core/common/keyboard.c **** #endif
  44:./tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  45:./tmk_core/common/keyboard.c **** #   include "serial_mouse.h"
  46:./tmk_core/common/keyboard.c **** #endif
  47:./tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  48:./tmk_core/common/keyboard.c **** #   include "adb.h"
  49:./tmk_core/common/keyboard.c **** #endif
  50:./tmk_core/common/keyboard.c **** #ifdef RGBLIGHT_ENABLE
  51:./tmk_core/common/keyboard.c **** #   include "rgblight.h"
  52:./tmk_core/common/keyboard.c **** #endif
  53:./tmk_core/common/keyboard.c **** #ifdef SERIAL_LINK_ENABLE
  54:./tmk_core/common/keyboard.c **** #   include "serial_link/system/serial_link.h"
  55:./tmk_core/common/keyboard.c **** #endif
  56:./tmk_core/common/keyboard.c **** #ifdef VISUALIZER_ENABLE
  57:./tmk_core/common/keyboard.c **** #   include "visualizer/visualizer.h"
  58:./tmk_core/common/keyboard.c **** #endif
  59:./tmk_core/common/keyboard.c **** 
  60:./tmk_core/common/keyboard.c **** 
  61:./tmk_core/common/keyboard.c **** 
  62:./tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
  63:./tmk_core/common/keyboard.c **** static bool has_ghost_in_row(uint8_t row)
  64:./tmk_core/common/keyboard.c **** {
  65:./tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = matrix_get_row(row);
  66:./tmk_core/common/keyboard.c ****     // No ghost exists when less than 2 keys are down on the row
  67:./tmk_core/common/keyboard.c ****     if (((matrix_row - 1) & matrix_row) == 0)
  68:./tmk_core/common/keyboard.c ****         return false;
  69:./tmk_core/common/keyboard.c **** 
  70:./tmk_core/common/keyboard.c ****     // Ghost occurs when the row shares column line with other row
  71:./tmk_core/common/keyboard.c ****     for (uint8_t i=0; i < MATRIX_ROWS; i++) {
  72:./tmk_core/common/keyboard.c ****         if (i != row && (matrix_get_row(i) & matrix_row))
  73:./tmk_core/common/keyboard.c ****             return true;
  74:./tmk_core/common/keyboard.c ****     }
  75:./tmk_core/common/keyboard.c ****     return false;
  76:./tmk_core/common/keyboard.c **** }
  77:./tmk_core/common/keyboard.c **** #endif
  78:./tmk_core/common/keyboard.c **** 
  79:./tmk_core/common/keyboard.c **** __attribute__ ((weak))
  80:./tmk_core/common/keyboard.c **** void matrix_setup(void) {
  16               		.loc 1 80 25 view -0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  81:./tmk_core/common/keyboard.c **** }
  22               		.loc 1 81 1 view .LVU1
  23               	/* epilogue start */
  24 0000 0895      		ret
  25               		.cfi_endproc
  26               	.LFE103:
  28               		.section	.text.keyboard_setup,"ax",@progbits
  29               	.global	keyboard_setup
  31               	keyboard_setup:
  32               	.LFB104:
  82:./tmk_core/common/keyboard.c **** 
  83:./tmk_core/common/keyboard.c **** void keyboard_setup(void) {
  33               		.loc 1 83 27 view -0
  34               		.cfi_startproc
  35               	/* prologue: function */
  36               	/* frame size = 0 */
  37               	/* stack size = 0 */
  38               	.L__stack_usage = 0
  84:./tmk_core/common/keyboard.c ****     matrix_setup();
  39               		.loc 1 84 5 view .LVU3
  40 0000 0C94 0000 		jmp matrix_setup
  41               	.LVL0:
  42               		.cfi_endproc
  43               	.LFE104:
  45               		.section	.text.keyboard_init,"ax",@progbits
  46               	.global	keyboard_init
  48               	keyboard_init:
  49               	.LFB105:
  85:./tmk_core/common/keyboard.c **** }
  86:./tmk_core/common/keyboard.c **** 
  87:./tmk_core/common/keyboard.c **** void keyboard_init(void) {
  50               		.loc 1 87 26 view -0
  51               		.cfi_startproc
  52               	/* prologue: function */
  53               	/* frame size = 0 */
  54               	/* stack size = 0 */
  55               	.L__stack_usage = 0
  88:./tmk_core/common/keyboard.c ****     timer_init();
  56               		.loc 1 88 5 view .LVU5
  57 0000 0E94 0000 		call timer_init
  58               	.LVL1:
  89:./tmk_core/common/keyboard.c ****     matrix_init();
  59               		.loc 1 89 5 view .LVU6
  60 0004 0E94 0000 		call matrix_init
  61               	.LVL2:
  90:./tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  91:./tmk_core/common/keyboard.c ****     ps2_mouse_init();
  92:./tmk_core/common/keyboard.c **** #endif
  93:./tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  94:./tmk_core/common/keyboard.c ****     serial_mouse_init();
  95:./tmk_core/common/keyboard.c **** #endif
  96:./tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  97:./tmk_core/common/keyboard.c ****     adb_mouse_init();
  98:./tmk_core/common/keyboard.c **** #endif
  99:./tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
 100:./tmk_core/common/keyboard.c ****     bootmagic();
  62               		.loc 1 100 5 view .LVU7
  63 0008 0C94 0000 		jmp bootmagic
  64               	.LVL3:
  65               		.cfi_endproc
  66               	.LFE105:
  68               		.section	.text.keyboard_task,"ax",@progbits
  69               	.global	keyboard_task
  71               	keyboard_task:
  72               	.LFB106:
 101:./tmk_core/common/keyboard.c **** #else
 102:./tmk_core/common/keyboard.c ****     magic();
 103:./tmk_core/common/keyboard.c **** #endif
 104:./tmk_core/common/keyboard.c **** #ifdef BACKLIGHT_ENABLE
 105:./tmk_core/common/keyboard.c ****     backlight_init();
 106:./tmk_core/common/keyboard.c **** #endif
 107:./tmk_core/common/keyboard.c **** #ifdef RGBLIGHT_ENABLE
 108:./tmk_core/common/keyboard.c ****     rgblight_init();
 109:./tmk_core/common/keyboard.c **** #endif
 110:./tmk_core/common/keyboard.c **** #if defined(NKRO_ENABLE) && defined(FORCE_NKRO)
 111:./tmk_core/common/keyboard.c ****     keymap_config.nkro = 1;
 112:./tmk_core/common/keyboard.c **** #endif
 113:./tmk_core/common/keyboard.c **** }
 114:./tmk_core/common/keyboard.c **** 
 115:./tmk_core/common/keyboard.c **** /*
 116:./tmk_core/common/keyboard.c ****  * Do keyboard routine jobs: scan mantrix, light LEDs, ...
 117:./tmk_core/common/keyboard.c ****  * This is repeatedly called as fast as possible.
 118:./tmk_core/common/keyboard.c ****  */
 119:./tmk_core/common/keyboard.c **** void keyboard_task(void)
 120:./tmk_core/common/keyboard.c **** {
  73               		.loc 1 120 1 view -0
  74               		.cfi_startproc
  75 0000 BF92      		push r11
  76               	.LCFI0:
  77               		.cfi_def_cfa_offset 3
  78               		.cfi_offset 11, -2
  79 0002 CF92      		push r12
  80               	.LCFI1:
  81               		.cfi_def_cfa_offset 4
  82               		.cfi_offset 12, -3
  83 0004 DF92      		push r13
  84               	.LCFI2:
  85               		.cfi_def_cfa_offset 5
  86               		.cfi_offset 13, -4
  87 0006 EF92      		push r14
  88               	.LCFI3:
  89               		.cfi_def_cfa_offset 6
  90               		.cfi_offset 14, -5
  91 0008 FF92      		push r15
  92               	.LCFI4:
  93               		.cfi_def_cfa_offset 7
  94               		.cfi_offset 15, -6
  95 000a 0F93      		push r16
  96               	.LCFI5:
  97               		.cfi_def_cfa_offset 8
  98               		.cfi_offset 16, -7
  99 000c 1F93      		push r17
 100               	.LCFI6:
 101               		.cfi_def_cfa_offset 9
 102               		.cfi_offset 17, -8
 103 000e CF93      		push r28
 104               	.LCFI7:
 105               		.cfi_def_cfa_offset 10
 106               		.cfi_offset 28, -9
 107 0010 DF93      		push r29
 108               	.LCFI8:
 109               		.cfi_def_cfa_offset 11
 110               		.cfi_offset 29, -10
 111 0012 00D0      		rcall .
 112 0014 00D0      		rcall .
 113 0016 0F92      		push __tmp_reg__
 114               	.LCFI9:
 115               		.cfi_def_cfa_offset 16
 116 0018 CDB7      		in r28,__SP_L__
 117 001a DEB7      		in r29,__SP_H__
 118               	.LCFI10:
 119               		.cfi_def_cfa_register 28
 120               	/* prologue: function */
 121               	/* frame size = 5 */
 122               	/* stack size = 14 */
 123               	.L__stack_usage = 14
 121:./tmk_core/common/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 124               		.loc 1 121 5 view .LVU9
 122:./tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 123:./tmk_core/common/keyboard.c ****     static matrix_row_t matrix_ghost[MATRIX_ROWS];
 124:./tmk_core/common/keyboard.c **** #endif
 125:./tmk_core/common/keyboard.c ****     static uint8_t led_status = 0;
 125               		.loc 1 125 5 view .LVU10
 126:./tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = 0;
 126               		.loc 1 126 5 view .LVU11
 127               	.LVL4:
 127:./tmk_core/common/keyboard.c ****     matrix_row_t matrix_change = 0;
 128               		.loc 1 127 5 view .LVU12
 128:./tmk_core/common/keyboard.c **** 
 129:./tmk_core/common/keyboard.c ****     matrix_scan();
 129               		.loc 1 129 5 view .LVU13
 130 001c 0E94 0000 		call matrix_scan
 131               	.LVL5:
 130:./tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 132               		.loc 1 130 5 view .LVU14
 133               	.LBB7:
 134               		.loc 1 130 10 view .LVU15
 135               		.loc 1 130 25 view .LVU16
 136 0020 80E0      		ldi r24,lo8(matrix_prev.1)
 137 0022 C82E      		mov r12,r24
 138 0024 80E0      		ldi r24,hi8(matrix_prev.1)
 139 0026 D82E      		mov r13,r24
 140               	.LBE7:
 129:./tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 141               		.loc 1 129 5 is_stmt 0 view .LVU17
 142 0028 10E0      		ldi r17,0
 143 002a 00E0      		ldi r16,0
 144               	.LVL6:
 145               	.L10:
 129:./tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 146               		.loc 1 129 5 view .LVU18
 147 002c B02E      		mov r11,r16
 148               	.LVL7:
 149               	.LBB11:
 131:./tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 150               		.loc 1 131 9 is_stmt 1 view .LVU19
 151               		.loc 1 131 22 is_stmt 0 view .LVU20
 152 002e 802F      		mov r24,r16
 153 0030 0E94 0000 		call matrix_get_row
 154               	.LVL8:
 155 0034 F82E      		mov r15,r24
 156               	.LVL9:
 132:./tmk_core/common/keyboard.c ****         matrix_change = matrix_row ^ matrix_prev[r];
 157               		.loc 1 132 9 is_stmt 1 view .LVU21
 158               		.loc 1 132 49 is_stmt 0 view .LVU22
 159 0036 F601      		movw r30,r12
 160 0038 E190      		ld r14,Z+
 161 003a 6F01      		movw r12,r30
 162               	.LVL10:
 133:./tmk_core/common/keyboard.c ****         if (matrix_change) {
 163               		.loc 1 133 9 is_stmt 1 view .LVU23
 164               		.loc 1 133 12 is_stmt 0 view .LVU24
 165 003c E816      		cp r14,r24
 166 003e 01F4      		brne .+2
 167 0040 00C0      		rjmp .L5
 134:./tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 135:./tmk_core/common/keyboard.c ****             if (has_ghost_in_row(r)) {
 136:./tmk_core/common/keyboard.c ****                 /* Keep track of whether ghosted status has changed for
 137:./tmk_core/common/keyboard.c ****                  * debugging. But don't update matrix_prev until un-ghosted, or
 138:./tmk_core/common/keyboard.c ****                  * the last key would be lost.
 139:./tmk_core/common/keyboard.c ****                  */
 140:./tmk_core/common/keyboard.c ****                 if (debug_matrix && matrix_ghost[r] != matrix_row) {
 141:./tmk_core/common/keyboard.c ****                     matrix_print();
 142:./tmk_core/common/keyboard.c ****                 }
 143:./tmk_core/common/keyboard.c ****                 matrix_ghost[r] = matrix_row;
 144:./tmk_core/common/keyboard.c ****                 continue;
 145:./tmk_core/common/keyboard.c ****             }
 146:./tmk_core/common/keyboard.c ****             matrix_ghost[r] = matrix_row;
 147:./tmk_core/common/keyboard.c **** #endif
 148:./tmk_core/common/keyboard.c ****             if (debug_matrix) matrix_print();
 168               		.loc 1 148 13 is_stmt 1 view .LVU25
 169               		.loc 1 148 17 is_stmt 0 view .LVU26
 170 0042 8091 0000 		lds r24,debug_config
 171               		.loc 1 148 16 view .LVU27
 172 0046 81FD      		sbrc r24,1
 173               		.loc 1 148 31 is_stmt 1 discriminator 1 view .LVU28
 174 0048 0E94 0000 		call matrix_print
 175               	.LVL11:
 176               	.L6:
 132:./tmk_core/common/keyboard.c ****         if (matrix_change) {
 177               		.loc 1 132 23 is_stmt 0 view .LVU29
 178 004c 8E2D      		mov r24,r14
 179 004e 8F25      		eor r24,r15
 149:./tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 180               		.loc 1 149 13 is_stmt 1 view .LVU30
 181               	.LBB8:
 182               		.loc 1 149 18 view .LVU31
 183               	.LVL12:
 184               		.loc 1 149 33 view .LVU32
 150:./tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 185               		.loc 1 150 17 view .LVU33
 186               		.loc 1 150 20 is_stmt 0 view .LVU34
 187 0050 80FD      		sbrc r24,0
 188 0052 00C0      		rjmp .L12
 149:./tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 189               		.loc 1 149 50 is_stmt 1 view .LVU35
 190               	.LVL13:
 149:./tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 191               		.loc 1 149 33 view .LVU36
 192               		.loc 1 150 17 view .LVU37
 193               		.loc 1 150 20 is_stmt 0 view .LVU38
 194 0054 81FD      		sbrc r24,1
 195 0056 00C0      		rjmp .L13
 149:./tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 196               		.loc 1 149 50 is_stmt 1 view .LVU39
 197               	.LVL14:
 149:./tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 198               		.loc 1 149 33 view .LVU40
 199               		.loc 1 150 17 view .LVU41
 200               		.loc 1 150 20 is_stmt 0 view .LVU42
 201 0058 82FF      		sbrs r24,2
 202 005a 00C0      		rjmp .L5
 149:./tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 203               		.loc 1 149 51 view .LVU43
 204 005c 92E0      		ldi r25,lo8(2)
 205               		.loc 1 150 21 view .LVU44
 206 005e 82E0      		ldi r24,lo8(2)
 207               	.LVL15:
 208               	.L7:
 209               	.LBB9:
 151:./tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 210               		.loc 1 151 21 is_stmt 1 view .LVU45
 211               		.loc 1 151 45 is_stmt 0 view .LVU46
 212 0060 9983      		std Y+1,r25
 213 0062 BA82      		std Y+2,r11
 152:./tmk_core/common/keyboard.c ****                         .key = (keypos_t){ .row = r, .col = c },
 153:./tmk_core/common/keyboard.c ****                         .pressed = (matrix_row & ((matrix_row_t)1<<c)),
 214               		.loc 1 153 66 view .LVU47
 215 0064 21E0      		ldi r18,lo8(1)
 216 0066 30E0      		ldi r19,0
 217 0068 6901      		movw r12,r18
 218 006a 00C0      		rjmp 2f
 219               		1:
 220 006c CC0C      		lsl r12
 221 006e DD1C      		rol r13
 222               		2:
 223 0070 8A95      		dec r24
 224 0072 02F4      		brpl 1b
 225               		.loc 1 153 48 view .LVU48
 226 0074 8F2D      		mov r24,r15
 227 0076 90E0      		ldi r25,0
 228 0078 8C21      		and r24,r12
 229 007a 9D21      		and r25,r13
 230 007c 892B      		or r24,r25
 231 007e 01F4      		brne .L8
 232 0080 20E0      		ldi r18,0
 233               	.L8:
 151:./tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 234               		.loc 1 151 45 view .LVU49
 235 0082 2B83      		std Y+3,r18
 154:./tmk_core/common/keyboard.c ****                         .time = (timer_read() | 1) /* time should not be 0 */
 236               		.loc 1 154 34 view .LVU50
 237 0084 0E94 0000 		call timer_read
 238               	.LVL16:
 239               		.loc 1 154 47 view .LVU51
 240 0088 8160      		ori r24,1
 151:./tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 241               		.loc 1 151 45 view .LVU52
 242 008a 782F      		mov r23,r24
 243 008c 9D83      		std Y+5,r25
 244 008e 8C83      		std Y+4,r24
 151:./tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 245               		.loc 1 151 21 view .LVU53
 246 0090 4981      		ldd r20,Y+1
 247 0092 5A81      		ldd r21,Y+2
 248 0094 6B81      		ldd r22,Y+3
 249 0096 8D81      		ldd r24,Y+5
 250 0098 0E94 0000 		call action_exec
 251               	.LVL17:
 155:./tmk_core/common/keyboard.c ****                     });
 156:./tmk_core/common/keyboard.c ****                     // record a processed key
 157:./tmk_core/common/keyboard.c ****                     matrix_prev[r] ^= ((matrix_row_t)1<<c);
 252               		.loc 1 157 21 is_stmt 1 view .LVU54
 253               		.loc 1 157 36 is_stmt 0 view .LVU55
 254 009c F801      		movw r30,r16
 255 009e E050      		subi r30,lo8(-(matrix_prev.1))
 256 00a0 F040      		sbci r31,hi8(-(matrix_prev.1))
 257 00a2 8081      		ld r24,Z
 258 00a4 C826      		eor r12,r24
 259 00a6 C082      		st Z,r12
 158:./tmk_core/common/keyboard.c ****                     // process a key per task call
 159:./tmk_core/common/keyboard.c ****                     goto MATRIX_LOOP_END;
 260               		.loc 1 159 21 is_stmt 1 view .LVU56
 261               	.LVL18:
 262               	.L9:
 263               		.loc 1 159 21 is_stmt 0 view .LVU57
 264               	.LBE9:
 265               	.LBE8:
 266               	.LBE11:
 160:./tmk_core/common/keyboard.c ****                 }
 161:./tmk_core/common/keyboard.c ****             }
 162:./tmk_core/common/keyboard.c ****         }
 163:./tmk_core/common/keyboard.c ****     }
 164:./tmk_core/common/keyboard.c ****     // call with pseudo tick event when no real key event.
 165:./tmk_core/common/keyboard.c ****     action_exec(TICK);
 166:./tmk_core/common/keyboard.c **** 
 167:./tmk_core/common/keyboard.c **** MATRIX_LOOP_END:
 168:./tmk_core/common/keyboard.c **** 
 169:./tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
 170:./tmk_core/common/keyboard.c ****     // mousekey repeat & acceleration
 171:./tmk_core/common/keyboard.c ****     mousekey_task();
 267               		.loc 1 171 5 is_stmt 1 view .LVU58
 268 00a8 0E94 0000 		call mousekey_task
 269               	.LVL19:
 172:./tmk_core/common/keyboard.c **** #endif
 173:./tmk_core/common/keyboard.c **** 
 174:./tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
 175:./tmk_core/common/keyboard.c ****     ps2_mouse_task();
 176:./tmk_core/common/keyboard.c **** #endif
 177:./tmk_core/common/keyboard.c **** 
 178:./tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
 179:./tmk_core/common/keyboard.c ****     serial_mouse_task();
 180:./tmk_core/common/keyboard.c **** #endif
 181:./tmk_core/common/keyboard.c **** 
 182:./tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
 183:./tmk_core/common/keyboard.c ****     adb_mouse_task();
 184:./tmk_core/common/keyboard.c **** #endif
 185:./tmk_core/common/keyboard.c **** 
 186:./tmk_core/common/keyboard.c **** #ifdef SERIAL_LINK_ENABLE
 187:./tmk_core/common/keyboard.c **** 	serial_link_update();
 188:./tmk_core/common/keyboard.c **** #endif
 189:./tmk_core/common/keyboard.c **** 
 190:./tmk_core/common/keyboard.c **** #ifdef VISUALIZER_ENABLE
 191:./tmk_core/common/keyboard.c ****     visualizer_update(default_layer_state, layer_state, host_keyboard_leds());
 192:./tmk_core/common/keyboard.c **** #endif
 193:./tmk_core/common/keyboard.c **** 
 194:./tmk_core/common/keyboard.c ****     // update LED
 195:./tmk_core/common/keyboard.c ****     if (led_status != host_keyboard_leds()) {
 270               		.loc 1 195 5 view .LVU59
 271               		.loc 1 195 23 is_stmt 0 view .LVU60
 272 00ac 0E94 0000 		call host_keyboard_leds
 273               	.LVL20:
 274               		.loc 1 195 8 view .LVU61
 275 00b0 9091 0000 		lds r25,led_status.0
 276 00b4 8917      		cp r24,r25
 277 00b6 01F0      		breq .L4
 196:./tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 278               		.loc 1 196 9 is_stmt 1 view .LVU62
 279               		.loc 1 196 22 is_stmt 0 view .LVU63
 280 00b8 0E94 0000 		call host_keyboard_leds
 281               	.LVL21:
 282               		.loc 1 196 20 view .LVU64
 283 00bc 8093 0000 		sts led_status.0,r24
 197:./tmk_core/common/keyboard.c ****         keyboard_set_leds(led_status);
 284               		.loc 1 197 9 is_stmt 1 view .LVU65
 285               	.LVL22:
 286               	.LBB12:
 287               	.LBI12:
 198:./tmk_core/common/keyboard.c ****     }
 199:./tmk_core/common/keyboard.c **** }
 200:./tmk_core/common/keyboard.c **** 
 201:./tmk_core/common/keyboard.c **** void keyboard_set_leds(uint8_t leds)
 288               		.loc 1 201 6 view .LVU66
 289               	.LBB13:
 202:./tmk_core/common/keyboard.c **** {
 203:./tmk_core/common/keyboard.c ****     if (debug_keyboard) { debug("keyboard_set_led: "); debug_hex8(leds); debug("\n"); }
 290               		.loc 1 203 5 view .LVU67
 291               		.loc 1 203 54 view .LVU68
 292               		.loc 1 203 72 view .LVU69
 293               		.loc 1 203 85 view .LVU70
 204:./tmk_core/common/keyboard.c ****     led_set(leds);
 294               		.loc 1 204 5 view .LVU71
 295               	/* epilogue start */
 296               	.LBE13:
 297               	.LBE12:
 199:./tmk_core/common/keyboard.c **** 
 298               		.loc 1 199 1 is_stmt 0 view .LVU72
 299 00c0 0F90      		pop __tmp_reg__
 300 00c2 0F90      		pop __tmp_reg__
 301 00c4 0F90      		pop __tmp_reg__
 302 00c6 0F90      		pop __tmp_reg__
 303 00c8 0F90      		pop __tmp_reg__
 304 00ca DF91      		pop r29
 305 00cc CF91      		pop r28
 306 00ce 1F91      		pop r17
 307 00d0 0F91      		pop r16
 308 00d2 FF90      		pop r15
 309               	.LVL23:
 199:./tmk_core/common/keyboard.c **** 
 310               		.loc 1 199 1 view .LVU73
 311 00d4 EF90      		pop r14
 199:./tmk_core/common/keyboard.c **** 
 312               		.loc 1 199 1 view .LVU74
 313 00d6 DF90      		pop r13
 314 00d8 CF90      		pop r12
 315 00da BF90      		pop r11
 316               	.LBB15:
 317               	.LBB14:
 318               		.loc 1 204 5 view .LVU75
 319 00dc 0C94 0000 		jmp led_set
 320               	.LVL24:
 321               	.L12:
 322               		.loc 1 204 5 view .LVU76
 323               	.LBE14:
 324               	.LBE15:
 325               	.LBB16:
 326               	.LBB10:
 149:./tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 327               		.loc 1 149 26 view .LVU77
 328 00e0 90E0      		ldi r25,0
 150:./tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 329               		.loc 1 150 21 view .LVU78
 330 00e2 80E0      		ldi r24,0
 331 00e4 00C0      		rjmp .L7
 332               	.LVL25:
 333               	.L13:
 149:./tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 334               		.loc 1 149 51 view .LVU79
 335 00e6 91E0      		ldi r25,lo8(1)
 150:./tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 336               		.loc 1 150 21 view .LVU80
 337 00e8 81E0      		ldi r24,lo8(1)
 338 00ea 00C0      		rjmp .L7
 339               	.LVL26:
 340               	.L5:
 150:./tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 341               		.loc 1 150 21 view .LVU81
 342               	.LBE10:
 130:./tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 343               		.loc 1 130 42 is_stmt 1 view .LVU82
 130:./tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 344               		.loc 1 130 25 view .LVU83
 130:./tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 345               		.loc 1 130 5 is_stmt 0 view .LVU84
 346 00ec 0F5F      		subi r16,-1
 347 00ee 1F4F      		sbci r17,-1
 348               	.LVL27:
 130:./tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 349               		.loc 1 130 5 view .LVU85
 350 00f0 0E30      		cpi r16,14
 351 00f2 1105      		cpc r17,__zero_reg__
 352 00f4 01F0      		breq .+2
 353 00f6 00C0      		rjmp .L10
 354               	.LBE16:
 165:./tmk_core/common/keyboard.c **** 
 355               		.loc 1 165 5 is_stmt 1 view .LVU86
 165:./tmk_core/common/keyboard.c **** 
 356               		.loc 1 165 17 is_stmt 0 view .LVU87
 357 00f8 8FEF      		ldi r24,lo8(-1)
 358 00fa 8983      		std Y+1,r24
 359 00fc 8A83      		std Y+2,r24
 360 00fe 1B82      		std Y+3,__zero_reg__
 361 0100 0E94 0000 		call timer_read
 362               	.LVL28:
 363 0104 8160      		ori r24,1
 364 0106 782F      		mov r23,r24
 365 0108 9D83      		std Y+5,r25
 366 010a 8C83      		std Y+4,r24
 165:./tmk_core/common/keyboard.c **** 
 367               		.loc 1 165 5 view .LVU88
 368 010c 4981      		ldd r20,Y+1
 369 010e 5A81      		ldd r21,Y+2
 370 0110 6B81      		ldd r22,Y+3
 371 0112 8D81      		ldd r24,Y+5
 372 0114 0E94 0000 		call action_exec
 373               	.LVL29:
 374 0118 00C0      		rjmp .L9
 375               	.LVL30:
 376               	.L4:
 377               	/* epilogue start */
 199:./tmk_core/common/keyboard.c **** 
 378               		.loc 1 199 1 view .LVU89
 379 011a 0F90      		pop __tmp_reg__
 380 011c 0F90      		pop __tmp_reg__
 381 011e 0F90      		pop __tmp_reg__
 382 0120 0F90      		pop __tmp_reg__
 383 0122 0F90      		pop __tmp_reg__
 384 0124 DF91      		pop r29
 385 0126 CF91      		pop r28
 386 0128 1F91      		pop r17
 387 012a 0F91      		pop r16
 388 012c FF90      		pop r15
 389               	.LVL31:
 199:./tmk_core/common/keyboard.c **** 
 390               		.loc 1 199 1 view .LVU90
 391 012e EF90      		pop r14
 199:./tmk_core/common/keyboard.c **** 
 392               		.loc 1 199 1 view .LVU91
 393 0130 DF90      		pop r13
 394 0132 CF90      		pop r12
 395 0134 BF90      		pop r11
 396 0136 0895      		ret
 397               		.cfi_endproc
 398               	.LFE106:
 400               		.section	.text.keyboard_set_leds,"ax",@progbits
 401               	.global	keyboard_set_leds
 403               	keyboard_set_leds:
 404               	.LVL32:
 405               	.LFB107:
 202:./tmk_core/common/keyboard.c ****     if (debug_keyboard) { debug("keyboard_set_led: "); debug_hex8(leds); debug("\n"); }
 406               		.loc 1 202 1 is_stmt 1 view -0
 407               		.cfi_startproc
 408               	/* prologue: function */
 409               	/* frame size = 0 */
 410               	/* stack size = 0 */
 411               	.L__stack_usage = 0
 203:./tmk_core/common/keyboard.c ****     led_set(leds);
 412               		.loc 1 203 5 view .LVU93
 203:./tmk_core/common/keyboard.c ****     led_set(leds);
 413               		.loc 1 203 54 view .LVU94
 203:./tmk_core/common/keyboard.c ****     led_set(leds);
 414               		.loc 1 203 72 view .LVU95
 203:./tmk_core/common/keyboard.c ****     led_set(leds);
 415               		.loc 1 203 85 view .LVU96
 416               		.loc 1 204 5 view .LVU97
 417 0000 0C94 0000 		jmp led_set
 418               	.LVL33:
 419               		.loc 1 204 5 is_stmt 0 view .LVU98
 420               		.cfi_endproc
 421               	.LFE107:
 423               		.section	.bss.led_status.0,"aw",@nobits
 426               	led_status.0:
 427 0000 00        		.zero	1
 428               		.section	.bss.matrix_prev.1,"aw",@nobits
 431               	matrix_prev.1:
 432 0000 0000 0000 		.zero	14
 432      0000 0000 
 432      0000 0000 
 432      0000 
 433               		.text
 434               	.Letext0:
 435               		.file 2 "/usr/avr/include/stdint.h"
 436               		.file 3 "./tmk_core/common/keyboard.h"
 437               		.file 4 "./tmk_core/common/matrix.h"
 438               		.file 5 "./tmk_core/common/debug.h"
 439               		.file 6 "./tmk_core/common/timer.h"
 440               		.file 7 "./tmk_core/common/action.h"
 441               		.file 8 "./tmk_core/common/led.h"
 442               		.file 9 "./tmk_core/common/mousekey.h"
 443               		.file 10 "./tmk_core/common/host.h"
 444               		.file 11 "./tmk_core/common/bootmagic.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keyboard.c
     /tmp/ccEsAP97.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccEsAP97.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccEsAP97.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccEsAP97.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccEsAP97.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccEsAP97.s:13     .text.matrix_setup:0000000000000000 matrix_setup
     /tmp/ccEsAP97.s:31     .text.keyboard_setup:0000000000000000 keyboard_setup
     /tmp/ccEsAP97.s:48     .text.keyboard_init:0000000000000000 keyboard_init
     /tmp/ccEsAP97.s:71     .text.keyboard_task:0000000000000000 keyboard_task
     /tmp/ccEsAP97.s:431    .bss.matrix_prev.1:0000000000000000 matrix_prev.1
     /tmp/ccEsAP97.s:426    .bss.led_status.0:0000000000000000 led_status.0
     /tmp/ccEsAP97.s:403    .text.keyboard_set_leds:0000000000000000 keyboard_set_leds

UNDEFINED SYMBOLS
timer_init
matrix_init
bootmagic
matrix_scan
matrix_get_row
debug_config
matrix_print
timer_read
action_exec
mousekey_task
host_keyboard_leds
led_set
__do_clear_bss
