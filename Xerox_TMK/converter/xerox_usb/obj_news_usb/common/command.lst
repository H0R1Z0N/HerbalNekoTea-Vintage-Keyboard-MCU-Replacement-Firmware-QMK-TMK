   1               		.file	"command.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.mousekey_console_help,"ax",@progbits
  12               	mousekey_console_help:
  13               	.LFB114:
  14               		.file 1 "../../tmk_core/common/command.c"
   1:../../tmk_core/common/command.c **** /*
   2:../../tmk_core/common/command.c **** Copyright 2011 Jun Wako <wakojun@gmail.com>
   3:../../tmk_core/common/command.c **** 
   4:../../tmk_core/common/command.c **** This program is free software: you can redistribute it and/or modify
   5:../../tmk_core/common/command.c **** it under the terms of the GNU General Public License as published by
   6:../../tmk_core/common/command.c **** the Free Software Foundation, either version 2 of the License, or
   7:../../tmk_core/common/command.c **** (at your option) any later version.
   8:../../tmk_core/common/command.c **** 
   9:../../tmk_core/common/command.c **** This program is distributed in the hope that it will be useful,
  10:../../tmk_core/common/command.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:../../tmk_core/common/command.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:../../tmk_core/common/command.c **** GNU General Public License for more details.
  13:../../tmk_core/common/command.c **** 
  14:../../tmk_core/common/command.c **** You should have received a copy of the GNU General Public License
  15:../../tmk_core/common/command.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:../../tmk_core/common/command.c **** */
  17:../../tmk_core/common/command.c **** #include <stdint.h>
  18:../../tmk_core/common/command.c **** #include <stdbool.h>
  19:../../tmk_core/common/command.c **** #include "wait.h"
  20:../../tmk_core/common/command.c **** #include "keycode.h"
  21:../../tmk_core/common/command.c **** #include "host.h"
  22:../../tmk_core/common/command.c **** #include "keymap.h"
  23:../../tmk_core/common/command.c **** #include "print.h"
  24:../../tmk_core/common/command.c **** #include "debug.h"
  25:../../tmk_core/common/command.c **** #include "util.h"
  26:../../tmk_core/common/command.c **** #include "timer.h"
  27:../../tmk_core/common/command.c **** #include "keyboard.h"
  28:../../tmk_core/common/command.c **** #include "bootloader.h"
  29:../../tmk_core/common/command.c **** #include "action_layer.h"
  30:../../tmk_core/common/command.c **** #include "action_util.h"
  31:../../tmk_core/common/command.c **** #include "eeconfig.h"
  32:../../tmk_core/common/command.c **** #include "sleep_led.h"
  33:../../tmk_core/common/command.c **** #include "led.h"
  34:../../tmk_core/common/command.c **** #include "command.h"
  35:../../tmk_core/common/command.c **** #include "backlight.h"
  36:../../tmk_core/common/command.c **** 
  37:../../tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
  38:../../tmk_core/common/command.c **** #include "mousekey.h"
  39:../../tmk_core/common/command.c **** #endif
  40:../../tmk_core/common/command.c **** 
  41:../../tmk_core/common/command.c **** #ifdef PROTOCOL_PJRC
  42:../../tmk_core/common/command.c **** #   include "usb_keyboard.h"
  43:../../tmk_core/common/command.c **** #   ifdef EXTRAKEY_ENABLE
  44:../../tmk_core/common/command.c **** #       include "usb_extra.h"
  45:../../tmk_core/common/command.c **** #   endif
  46:../../tmk_core/common/command.c **** #endif
  47:../../tmk_core/common/command.c **** 
  48:../../tmk_core/common/command.c **** #ifdef PROTOCOL_VUSB
  49:../../tmk_core/common/command.c **** #   include "usbdrv.h"
  50:../../tmk_core/common/command.c **** #endif
  51:../../tmk_core/common/command.c **** 
  52:../../tmk_core/common/command.c **** 
  53:../../tmk_core/common/command.c **** static bool command_common(uint8_t code);
  54:../../tmk_core/common/command.c **** static void command_common_help(void);
  55:../../tmk_core/common/command.c **** static bool command_console(uint8_t code);
  56:../../tmk_core/common/command.c **** static void command_console_help(void);
  57:../../tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
  58:../../tmk_core/common/command.c **** static bool mousekey_console(uint8_t code);
  59:../../tmk_core/common/command.c **** static void mousekey_console_help(void);
  60:../../tmk_core/common/command.c **** static uint8_t numkey2num(uint8_t code);
  61:../../tmk_core/common/command.c **** #endif
  62:../../tmk_core/common/command.c **** 
  63:../../tmk_core/common/command.c **** 
  64:../../tmk_core/common/command.c **** static void switch_default_layer(uint8_t layer);
  65:../../tmk_core/common/command.c **** 
  66:../../tmk_core/common/command.c **** 
  67:../../tmk_core/common/command.c **** command_state_t command_state = ONESHOT;
  68:../../tmk_core/common/command.c **** 
  69:../../tmk_core/common/command.c **** 
  70:../../tmk_core/common/command.c **** bool command_proc(uint8_t code)
  71:../../tmk_core/common/command.c **** {
  72:../../tmk_core/common/command.c ****     switch (command_state) {
  73:../../tmk_core/common/command.c ****         case ONESHOT:
  74:../../tmk_core/common/command.c ****             if (!IS_COMMAND())
  75:../../tmk_core/common/command.c ****                 return false;
  76:../../tmk_core/common/command.c ****             return (command_extra(code) || command_common(code));
  77:../../tmk_core/common/command.c ****             break;
  78:../../tmk_core/common/command.c ****         case CONSOLE:
  79:../../tmk_core/common/command.c ****             if (IS_COMMAND())
  80:../../tmk_core/common/command.c ****                 return (command_extra(code) || command_common(code));
  81:../../tmk_core/common/command.c ****             else
  82:../../tmk_core/common/command.c ****                 return (command_console_extra(code) || command_console(code));
  83:../../tmk_core/common/command.c ****             break;
  84:../../tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
  85:../../tmk_core/common/command.c ****         case MOUSEKEY:
  86:../../tmk_core/common/command.c ****             mousekey_console(code);
  87:../../tmk_core/common/command.c ****             break;
  88:../../tmk_core/common/command.c **** #endif
  89:../../tmk_core/common/command.c ****         default:
  90:../../tmk_core/common/command.c ****             command_state = ONESHOT;
  91:../../tmk_core/common/command.c ****             return false;
  92:../../tmk_core/common/command.c ****     }
  93:../../tmk_core/common/command.c ****     return true;
  94:../../tmk_core/common/command.c **** }
  95:../../tmk_core/common/command.c **** 
  96:../../tmk_core/common/command.c **** /* TODO: Refactoring is needed. */
  97:../../tmk_core/common/command.c **** /* This allows to define extra commands. return false when not processed. */
  98:../../tmk_core/common/command.c **** bool command_extra(uint8_t code) __attribute__ ((weak));
  99:../../tmk_core/common/command.c **** bool command_extra(uint8_t code)
 100:../../tmk_core/common/command.c **** {
 101:../../tmk_core/common/command.c ****     (void)code;
 102:../../tmk_core/common/command.c ****     return false;
 103:../../tmk_core/common/command.c **** }
 104:../../tmk_core/common/command.c **** 
 105:../../tmk_core/common/command.c **** bool command_console_extra(uint8_t code) __attribute__ ((weak));
 106:../../tmk_core/common/command.c **** bool command_console_extra(uint8_t code)
 107:../../tmk_core/common/command.c **** {
 108:../../tmk_core/common/command.c ****     (void)code;
 109:../../tmk_core/common/command.c ****     return false;
 110:../../tmk_core/common/command.c **** }
 111:../../tmk_core/common/command.c **** 
 112:../../tmk_core/common/command.c **** 
 113:../../tmk_core/common/command.c **** /***********************************************************
 114:../../tmk_core/common/command.c ****  * Command common
 115:../../tmk_core/common/command.c ****  ***********************************************************/
 116:../../tmk_core/common/command.c **** static void command_common_help(void)
 117:../../tmk_core/common/command.c **** {
 118:../../tmk_core/common/command.c ****     print("\n\t- Magic -\n"
 119:../../tmk_core/common/command.c ****           "d:	debug\n"
 120:../../tmk_core/common/command.c ****           "x:	debug matrix\n"
 121:../../tmk_core/common/command.c ****           "k:	debug keyboard\n"
 122:../../tmk_core/common/command.c ****           "m:	debug mouse\n"
 123:../../tmk_core/common/command.c ****           "v:	version\n"
 124:../../tmk_core/common/command.c ****           "s:	status\n"
 125:../../tmk_core/common/command.c ****           "c:	console mode\n"
 126:../../tmk_core/common/command.c ****           "0-4:	layer0-4(F10-F4)\n"
 127:../../tmk_core/common/command.c ****           "Paus:	bootloader\n"
 128:../../tmk_core/common/command.c **** 
 129:../../tmk_core/common/command.c **** #ifdef KEYBOARD_LOCK_ENABLE
 130:../../tmk_core/common/command.c ****           "Caps:	Lock\n"
 131:../../tmk_core/common/command.c **** #endif
 132:../../tmk_core/common/command.c **** 
 133:../../tmk_core/common/command.c **** #ifdef BOOTMAGIC_ENABLE
 134:../../tmk_core/common/command.c ****           "e:	eeprom\n"
 135:../../tmk_core/common/command.c **** #endif
 136:../../tmk_core/common/command.c **** 
 137:../../tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 138:../../tmk_core/common/command.c ****           "n:	NKRO\n"
 139:../../tmk_core/common/command.c **** #endif
 140:../../tmk_core/common/command.c **** 
 141:../../tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 142:../../tmk_core/common/command.c ****           "z:	sleep LED test\n"
 143:../../tmk_core/common/command.c **** #endif
 144:../../tmk_core/common/command.c ****     );
 145:../../tmk_core/common/command.c **** }
 146:../../tmk_core/common/command.c **** 
 147:../../tmk_core/common/command.c **** #ifdef BOOTMAGIC_ENABLE
 148:../../tmk_core/common/command.c **** static void print_eeconfig(void)
 149:../../tmk_core/common/command.c **** {
 150:../../tmk_core/common/command.c ****     print("default_layer: "); print_dec(eeconfig_read_default_layer()); print("\n");
 151:../../tmk_core/common/command.c **** 
 152:../../tmk_core/common/command.c ****     debug_config_t dc;
 153:../../tmk_core/common/command.c ****     dc.raw = eeconfig_read_debug();
 154:../../tmk_core/common/command.c ****     print("debug_config.raw: "); print_hex8(dc.raw); print("\n");
 155:../../tmk_core/common/command.c ****     print(".enable: "); print_dec(dc.enable); print("\n");
 156:../../tmk_core/common/command.c ****     print(".matrix: "); print_dec(dc.matrix); print("\n");
 157:../../tmk_core/common/command.c ****     print(".keyboard: "); print_dec(dc.keyboard); print("\n");
 158:../../tmk_core/common/command.c ****     print(".mouse: "); print_dec(dc.mouse); print("\n");
 159:../../tmk_core/common/command.c **** 
 160:../../tmk_core/common/command.c ****     keymap_config_t kc;
 161:../../tmk_core/common/command.c ****     kc.raw = eeconfig_read_keymap();
 162:../../tmk_core/common/command.c ****     print("keymap_config.raw: "); print_hex8(kc.raw); print("\n");
 163:../../tmk_core/common/command.c ****     print(".swap_control_capslock: "); print_dec(kc.swap_control_capslock); print("\n");
 164:../../tmk_core/common/command.c ****     print(".capslock_to_control: "); print_dec(kc.capslock_to_control); print("\n");
 165:../../tmk_core/common/command.c ****     print(".swap_lalt_lgui: "); print_dec(kc.swap_lalt_lgui); print("\n");
 166:../../tmk_core/common/command.c ****     print(".swap_ralt_rgui: "); print_dec(kc.swap_ralt_rgui); print("\n");
 167:../../tmk_core/common/command.c ****     print(".no_gui: "); print_dec(kc.no_gui); print("\n");
 168:../../tmk_core/common/command.c ****     print(".swap_grave_esc: "); print_dec(kc.swap_grave_esc); print("\n");
 169:../../tmk_core/common/command.c ****     print(".swap_backslash_backspace: "); print_dec(kc.swap_backslash_backspace); print("\n");
 170:../../tmk_core/common/command.c ****     print(".nkro: "); print_dec(kc.nkro); print("\n");
 171:../../tmk_core/common/command.c **** 
 172:../../tmk_core/common/command.c **** #ifdef BACKLIGHT_ENABLE
 173:../../tmk_core/common/command.c ****     backlight_config_t bc;
 174:../../tmk_core/common/command.c ****     bc.raw = eeconfig_read_backlight();
 175:../../tmk_core/common/command.c ****     print("backlight_config.raw: "); print_hex8(bc.raw); print("\n");
 176:../../tmk_core/common/command.c ****     print(".enable: "); print_dec(bc.enable); print("\n");
 177:../../tmk_core/common/command.c ****     print(".level: "); print_dec(bc.level); print("\n");
 178:../../tmk_core/common/command.c **** #endif
 179:../../tmk_core/common/command.c **** }
 180:../../tmk_core/common/command.c **** #endif
 181:../../tmk_core/common/command.c **** 
 182:../../tmk_core/common/command.c **** static bool command_common(uint8_t code)
 183:../../tmk_core/common/command.c **** {
 184:../../tmk_core/common/command.c **** #ifdef KEYBOARD_LOCK_ENABLE
 185:../../tmk_core/common/command.c ****     static host_driver_t *host_driver = 0;
 186:../../tmk_core/common/command.c **** #endif
 187:../../tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 188:../../tmk_core/common/command.c ****     static bool sleep_led_test = false;
 189:../../tmk_core/common/command.c **** #endif
 190:../../tmk_core/common/command.c ****     switch (code) {
 191:../../tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 192:../../tmk_core/common/command.c ****         case KC_Z:
 193:../../tmk_core/common/command.c ****             // test breathing sleep LED
 194:../../tmk_core/common/command.c ****             print("Sleep LED test\n");
 195:../../tmk_core/common/command.c ****             if (sleep_led_test) {
 196:../../tmk_core/common/command.c ****                 sleep_led_disable();
 197:../../tmk_core/common/command.c ****                 led_set(host_keyboard_leds());
 198:../../tmk_core/common/command.c ****             } else {
 199:../../tmk_core/common/command.c ****                 sleep_led_enable();
 200:../../tmk_core/common/command.c ****             }
 201:../../tmk_core/common/command.c ****             sleep_led_test = !sleep_led_test;
 202:../../tmk_core/common/command.c ****             break;
 203:../../tmk_core/common/command.c **** #endif
 204:../../tmk_core/common/command.c **** #ifdef BOOTMAGIC_ENABLE
 205:../../tmk_core/common/command.c ****         case KC_E:
 206:../../tmk_core/common/command.c ****             print("eeconfig:\n");
 207:../../tmk_core/common/command.c ****             print_eeconfig();
 208:../../tmk_core/common/command.c ****             break;
 209:../../tmk_core/common/command.c **** #endif
 210:../../tmk_core/common/command.c **** #ifdef KEYBOARD_LOCK_ENABLE
 211:../../tmk_core/common/command.c ****         case KC_CAPSLOCK:
 212:../../tmk_core/common/command.c ****             if (host_get_driver()) {
 213:../../tmk_core/common/command.c ****                 host_driver = host_get_driver();
 214:../../tmk_core/common/command.c ****                 clear_keyboard();
 215:../../tmk_core/common/command.c ****                 host_set_driver(0);
 216:../../tmk_core/common/command.c ****                 print("Locked.\n");
 217:../../tmk_core/common/command.c ****             } else {
 218:../../tmk_core/common/command.c ****                 host_set_driver(host_driver);
 219:../../tmk_core/common/command.c ****                 print("Unlocked.\n");
 220:../../tmk_core/common/command.c ****             }
 221:../../tmk_core/common/command.c ****             break;
 222:../../tmk_core/common/command.c **** #endif
 223:../../tmk_core/common/command.c ****         case KC_H:
 224:../../tmk_core/common/command.c ****         case KC_SLASH: /* ? */
 225:../../tmk_core/common/command.c ****             command_common_help();
 226:../../tmk_core/common/command.c ****             break;
 227:../../tmk_core/common/command.c ****         case KC_C:
 228:../../tmk_core/common/command.c ****             debug_matrix   = false;
 229:../../tmk_core/common/command.c ****             debug_keyboard = false;
 230:../../tmk_core/common/command.c ****             debug_mouse    = false;
 231:../../tmk_core/common/command.c ****             debug_enable   = false;
 232:../../tmk_core/common/command.c ****             command_console_help();
 233:../../tmk_core/common/command.c ****             print("C> ");
 234:../../tmk_core/common/command.c ****             command_state = CONSOLE;
 235:../../tmk_core/common/command.c ****             break;
 236:../../tmk_core/common/command.c ****         case KC_PAUSE:
 237:../../tmk_core/common/command.c ****             clear_keyboard();
 238:../../tmk_core/common/command.c ****             print("\n\nbootloader... ");
 239:../../tmk_core/common/command.c ****             wait_ms(1000);
 240:../../tmk_core/common/command.c ****             bootloader_jump(); // not return
 241:../../tmk_core/common/command.c ****             break;
 242:../../tmk_core/common/command.c ****         case KC_D:
 243:../../tmk_core/common/command.c ****             if (debug_enable) {
 244:../../tmk_core/common/command.c ****                 print("\ndebug: off\n");
 245:../../tmk_core/common/command.c ****                 debug_matrix   = false;
 246:../../tmk_core/common/command.c ****                 debug_keyboard = false;
 247:../../tmk_core/common/command.c ****                 debug_mouse    = false;
 248:../../tmk_core/common/command.c ****                 debug_enable   = false;
 249:../../tmk_core/common/command.c ****             } else {
 250:../../tmk_core/common/command.c ****                 print("\ndebug: on\n");
 251:../../tmk_core/common/command.c ****                 debug_enable   = true;
 252:../../tmk_core/common/command.c ****             }
 253:../../tmk_core/common/command.c ****             break;
 254:../../tmk_core/common/command.c ****         case KC_X: // debug matrix toggle
 255:../../tmk_core/common/command.c ****             debug_matrix = !debug_matrix;
 256:../../tmk_core/common/command.c ****             if (debug_matrix) {
 257:../../tmk_core/common/command.c ****                 print("\nmatrix: on\n");
 258:../../tmk_core/common/command.c ****                 debug_enable = true;
 259:../../tmk_core/common/command.c ****             } else {
 260:../../tmk_core/common/command.c ****                 print("\nmatrix: off\n");
 261:../../tmk_core/common/command.c ****             }
 262:../../tmk_core/common/command.c ****             break;
 263:../../tmk_core/common/command.c ****         case KC_K: // debug keyboard toggle
 264:../../tmk_core/common/command.c ****             debug_keyboard = !debug_keyboard;
 265:../../tmk_core/common/command.c ****             if (debug_keyboard) {
 266:../../tmk_core/common/command.c ****                 print("\nkeyboard: on\n");
 267:../../tmk_core/common/command.c ****                 debug_enable = true;
 268:../../tmk_core/common/command.c ****             } else {
 269:../../tmk_core/common/command.c ****                 print("\nkeyboard: off\n");
 270:../../tmk_core/common/command.c ****             }
 271:../../tmk_core/common/command.c ****             break;
 272:../../tmk_core/common/command.c ****         case KC_M: // debug mouse toggle
 273:../../tmk_core/common/command.c ****             debug_mouse = !debug_mouse;
 274:../../tmk_core/common/command.c ****             if (debug_mouse) {
 275:../../tmk_core/common/command.c ****                 print("\nmouse: on\n");
 276:../../tmk_core/common/command.c ****                 debug_enable = true;
 277:../../tmk_core/common/command.c ****             } else {
 278:../../tmk_core/common/command.c ****                 print("\nmouse: off\n");
 279:../../tmk_core/common/command.c ****             }
 280:../../tmk_core/common/command.c ****             break;
 281:../../tmk_core/common/command.c ****         case KC_V: // print version & information
 282:../../tmk_core/common/command.c ****             print("\n\t- Version -\n");
 283:../../tmk_core/common/command.c ****             print("DESC: " STR(DESCRIPTION) "\n");
 284:../../tmk_core/common/command.c ****             print("VID: " STR(VENDOR_ID) "(" STR(MANUFACTURER) ") "
 285:../../tmk_core/common/command.c ****                   "PID: " STR(PRODUCT_ID) "(" STR(PRODUCT) ") "
 286:../../tmk_core/common/command.c ****                   "VER: " STR(DEVICE_VER) "\n");
 287:../../tmk_core/common/command.c ****             print("BUILD: " STR(TMK_VERSION) " (" __TIME__ " " __DATE__ ")\n");
 288:../../tmk_core/common/command.c ****             /* build options */
 289:../../tmk_core/common/command.c ****             print("OPTIONS:"
 290:../../tmk_core/common/command.c **** #ifdef PROTOCOL_PJRC
 291:../../tmk_core/common/command.c ****             " PJRC"
 292:../../tmk_core/common/command.c **** #endif
 293:../../tmk_core/common/command.c **** #ifdef PROTOCOL_LUFA
 294:../../tmk_core/common/command.c ****             " LUFA"
 295:../../tmk_core/common/command.c **** #endif
 296:../../tmk_core/common/command.c **** #ifdef PROTOCOL_VUSB
 297:../../tmk_core/common/command.c ****             " VUSB"
 298:../../tmk_core/common/command.c **** #endif
 299:../../tmk_core/common/command.c **** #ifdef PROTOCOL_CHIBIOS
 300:../../tmk_core/common/command.c ****             " CHIBIOS"
 301:../../tmk_core/common/command.c **** #endif
 302:../../tmk_core/common/command.c **** #ifdef BOOTMAGIC_ENABLE
 303:../../tmk_core/common/command.c ****             " BOOTMAGIC"
 304:../../tmk_core/common/command.c **** #endif
 305:../../tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
 306:../../tmk_core/common/command.c ****             " MOUSEKEY"
 307:../../tmk_core/common/command.c **** #endif
 308:../../tmk_core/common/command.c **** #ifdef EXTRAKEY_ENABLE
 309:../../tmk_core/common/command.c ****             " EXTRAKEY"
 310:../../tmk_core/common/command.c **** #endif
 311:../../tmk_core/common/command.c **** #ifdef CONSOLE_ENABLE
 312:../../tmk_core/common/command.c ****             " CONSOLE"
 313:../../tmk_core/common/command.c **** #endif
 314:../../tmk_core/common/command.c **** #ifdef COMMAND_ENABLE
 315:../../tmk_core/common/command.c ****             " COMMAND"
 316:../../tmk_core/common/command.c **** #endif
 317:../../tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 318:../../tmk_core/common/command.c ****             " NKRO"
 319:../../tmk_core/common/command.c **** #endif
 320:../../tmk_core/common/command.c **** #ifdef KEYMAP_SECTION_ENABLE
 321:../../tmk_core/common/command.c ****             " KEYMAP_SECTION"
 322:../../tmk_core/common/command.c **** #endif
 323:../../tmk_core/common/command.c ****             " " STR(BOOTLOADER_SIZE) "\n");
 324:../../tmk_core/common/command.c **** 
 325:../../tmk_core/common/command.c ****             print("GCC: " STR(__GNUC__) "." STR(__GNUC_MINOR__) "." STR(__GNUC_PATCHLEVEL__)
 326:../../tmk_core/common/command.c **** #if defined(__AVR__)
 327:../../tmk_core/common/command.c ****                   " AVR-LIBC: " __AVR_LIBC_VERSION_STRING__
 328:../../tmk_core/common/command.c ****                   " AVR_ARCH: avr" STR(__AVR_ARCH__) "\n");
 329:../../tmk_core/common/command.c **** #elif defined(__arm__)
 330:../../tmk_core/common/command.c ****             // TODO
 331:../../tmk_core/common/command.c ****             );
 332:../../tmk_core/common/command.c **** #endif
 333:../../tmk_core/common/command.c ****             break;
 334:../../tmk_core/common/command.c ****         case KC_S:
 335:../../tmk_core/common/command.c ****             print("\n\t- Status -\n");
 336:../../tmk_core/common/command.c ****             print_val_hex8(host_keyboard_leds());
 337:../../tmk_core/common/command.c ****             print_val_hex8(keyboard_protocol);
 338:../../tmk_core/common/command.c ****             print_val_hex8(keyboard_idle);
 339:../../tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 340:../../tmk_core/common/command.c ****             print_val_hex8(keyboard_nkro);
 341:../../tmk_core/common/command.c **** #endif
 342:../../tmk_core/common/command.c ****             print_val_hex32(timer_read32());
 343:../../tmk_core/common/command.c **** 
 344:../../tmk_core/common/command.c **** #ifdef PROTOCOL_PJRC
 345:../../tmk_core/common/command.c ****             print_val_hex8(UDCON);
 346:../../tmk_core/common/command.c ****             print_val_hex8(UDIEN);
 347:../../tmk_core/common/command.c ****             print_val_hex8(UDINT);
 348:../../tmk_core/common/command.c ****             print_val_hex8(usb_keyboard_leds);
 349:../../tmk_core/common/command.c ****             print_val_hex8(usb_keyboard_idle_count);
 350:../../tmk_core/common/command.c **** #endif
 351:../../tmk_core/common/command.c **** 
 352:../../tmk_core/common/command.c **** #ifdef PROTOCOL_PJRC
 353:../../tmk_core/common/command.c **** #   if USB_COUNT_SOF
 354:../../tmk_core/common/command.c ****             print_val_hex8(usbSofCount);
 355:../../tmk_core/common/command.c **** #   endif
 356:../../tmk_core/common/command.c **** #endif
 357:../../tmk_core/common/command.c ****             break;
 358:../../tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 359:../../tmk_core/common/command.c ****         case KC_N:
 360:../../tmk_core/common/command.c ****             clear_keyboard(); //Prevents stuck keys.
 361:../../tmk_core/common/command.c ****             keyboard_nkro = !keyboard_nkro;
 362:../../tmk_core/common/command.c ****             if (keyboard_nkro) {
 363:../../tmk_core/common/command.c ****                 print("NKRO: on\n");
 364:../../tmk_core/common/command.c ****             } else {
 365:../../tmk_core/common/command.c ****                 print("NKRO: off\n");
 366:../../tmk_core/common/command.c ****             }
 367:../../tmk_core/common/command.c ****             break;
 368:../../tmk_core/common/command.c **** #endif
 369:../../tmk_core/common/command.c ****         case KC_ESC:
 370:../../tmk_core/common/command.c ****         case KC_GRV:
 371:../../tmk_core/common/command.c ****         case KC_0:
 372:../../tmk_core/common/command.c ****         case KC_F10:
 373:../../tmk_core/common/command.c ****             switch_default_layer(0);
 374:../../tmk_core/common/command.c ****             break;
 375:../../tmk_core/common/command.c ****         case KC_1 ... KC_9:
 376:../../tmk_core/common/command.c ****             switch_default_layer((code - KC_1) + 1);
 377:../../tmk_core/common/command.c ****             break;
 378:../../tmk_core/common/command.c ****         case KC_F1 ... KC_F9:
 379:../../tmk_core/common/command.c ****             switch_default_layer((code - KC_F1) + 1);
 380:../../tmk_core/common/command.c ****             break;
 381:../../tmk_core/common/command.c ****         default:
 382:../../tmk_core/common/command.c ****             print("?");
 383:../../tmk_core/common/command.c ****             return false;
 384:../../tmk_core/common/command.c ****     }
 385:../../tmk_core/common/command.c ****     return true;
 386:../../tmk_core/common/command.c **** }
 387:../../tmk_core/common/command.c **** 
 388:../../tmk_core/common/command.c **** 
 389:../../tmk_core/common/command.c **** /***********************************************************
 390:../../tmk_core/common/command.c ****  * Command console
 391:../../tmk_core/common/command.c ****  ***********************************************************/
 392:../../tmk_core/common/command.c **** static void command_console_help(void)
 393:../../tmk_core/common/command.c **** {
 394:../../tmk_core/common/command.c ****     print("\n\t- Console -\n"
 395:../../tmk_core/common/command.c ****           "ESC/q:	quit\n"
 396:../../tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
 397:../../tmk_core/common/command.c ****           "m:	mousekey\n"
 398:../../tmk_core/common/command.c **** #endif
 399:../../tmk_core/common/command.c ****     );
 400:../../tmk_core/common/command.c **** }
 401:../../tmk_core/common/command.c **** 
 402:../../tmk_core/common/command.c **** static bool command_console(uint8_t code)
 403:../../tmk_core/common/command.c **** {
 404:../../tmk_core/common/command.c ****     switch (code) {
 405:../../tmk_core/common/command.c ****         case KC_H:
 406:../../tmk_core/common/command.c ****         case KC_SLASH: /* ? */
 407:../../tmk_core/common/command.c ****             command_console_help();
 408:../../tmk_core/common/command.c ****             break;
 409:../../tmk_core/common/command.c ****         case KC_Q:
 410:../../tmk_core/common/command.c ****         case KC_ESC:
 411:../../tmk_core/common/command.c ****             command_state = ONESHOT;
 412:../../tmk_core/common/command.c ****             return false;
 413:../../tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
 414:../../tmk_core/common/command.c ****         case KC_M:
 415:../../tmk_core/common/command.c ****             mousekey_console_help();
 416:../../tmk_core/common/command.c ****             print("M> ");
 417:../../tmk_core/common/command.c ****             command_state = MOUSEKEY;
 418:../../tmk_core/common/command.c ****             return true;
 419:../../tmk_core/common/command.c **** #endif
 420:../../tmk_core/common/command.c ****         default:
 421:../../tmk_core/common/command.c ****             print("?");
 422:../../tmk_core/common/command.c ****             return false;
 423:../../tmk_core/common/command.c ****     }
 424:../../tmk_core/common/command.c ****     print("C> ");
 425:../../tmk_core/common/command.c ****     return true;
 426:../../tmk_core/common/command.c **** }
 427:../../tmk_core/common/command.c **** 
 428:../../tmk_core/common/command.c **** 
 429:../../tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
 430:../../tmk_core/common/command.c **** /***********************************************************
 431:../../tmk_core/common/command.c ****  * Mousekey console
 432:../../tmk_core/common/command.c ****  ***********************************************************/
 433:../../tmk_core/common/command.c **** static uint8_t mousekey_param = 0;
 434:../../tmk_core/common/command.c **** 
 435:../../tmk_core/common/command.c **** static void mousekey_param_print(void)
 436:../../tmk_core/common/command.c **** {
 437:../../tmk_core/common/command.c ****     print("\n\t- Values -\n");
 438:../../tmk_core/common/command.c ****     print("1: delay(*10ms): "); pdec(mk_delay); print("\n");
 439:../../tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 440:../../tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 441:../../tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 442:../../tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 443:../../tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 444:../../tmk_core/common/command.c **** }
 445:../../tmk_core/common/command.c **** 
 446:../../tmk_core/common/command.c **** //#define PRINT_SET_VAL(v)  print(#v " = "); print_dec(v); print("\n");
 447:../../tmk_core/common/command.c **** #define PRINT_SET_VAL(v)  xprintf(#v " = %d\n", (v))
 448:../../tmk_core/common/command.c **** static void mousekey_param_inc(uint8_t param, uint8_t inc)
 449:../../tmk_core/common/command.c **** {
 450:../../tmk_core/common/command.c ****     switch (param) {
 451:../../tmk_core/common/command.c ****         case 1:
 452:../../tmk_core/common/command.c ****             if (mk_delay + inc < UINT8_MAX)
 453:../../tmk_core/common/command.c ****                 mk_delay += inc;
 454:../../tmk_core/common/command.c ****             else
 455:../../tmk_core/common/command.c ****                 mk_delay = UINT8_MAX;
 456:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_delay);
 457:../../tmk_core/common/command.c ****             break;
 458:../../tmk_core/common/command.c ****         case 2:
 459:../../tmk_core/common/command.c ****             if (mk_interval + inc < UINT8_MAX)
 460:../../tmk_core/common/command.c ****                 mk_interval += inc;
 461:../../tmk_core/common/command.c ****             else
 462:../../tmk_core/common/command.c ****                 mk_interval = UINT8_MAX;
 463:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_interval);
 464:../../tmk_core/common/command.c ****             break;
 465:../../tmk_core/common/command.c ****         case 3:
 466:../../tmk_core/common/command.c ****             if (mk_max_speed + inc < UINT8_MAX)
 467:../../tmk_core/common/command.c ****                 mk_max_speed += inc;
 468:../../tmk_core/common/command.c ****             else
 469:../../tmk_core/common/command.c ****                 mk_max_speed = UINT8_MAX;
 470:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 471:../../tmk_core/common/command.c ****             break;
 472:../../tmk_core/common/command.c ****         case 4:
 473:../../tmk_core/common/command.c ****             if (mk_time_to_max + inc < UINT8_MAX)
 474:../../tmk_core/common/command.c ****                 mk_time_to_max += inc;
 475:../../tmk_core/common/command.c ****             else
 476:../../tmk_core/common/command.c ****                 mk_time_to_max = UINT8_MAX;
 477:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 478:../../tmk_core/common/command.c ****             break;
 479:../../tmk_core/common/command.c ****         case 5:
 480:../../tmk_core/common/command.c ****             if (mk_wheel_max_speed + inc < UINT8_MAX)
 481:../../tmk_core/common/command.c ****                 mk_wheel_max_speed += inc;
 482:../../tmk_core/common/command.c ****             else
 483:../../tmk_core/common/command.c ****                 mk_wheel_max_speed = UINT8_MAX;
 484:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 485:../../tmk_core/common/command.c ****             break;
 486:../../tmk_core/common/command.c ****         case 6:
 487:../../tmk_core/common/command.c ****             if (mk_wheel_time_to_max + inc < UINT8_MAX)
 488:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max += inc;
 489:../../tmk_core/common/command.c ****             else
 490:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max = UINT8_MAX;
 491:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 492:../../tmk_core/common/command.c ****             break;
 493:../../tmk_core/common/command.c ****     }
 494:../../tmk_core/common/command.c **** }
 495:../../tmk_core/common/command.c **** 
 496:../../tmk_core/common/command.c **** static void mousekey_param_dec(uint8_t param, uint8_t dec)
 497:../../tmk_core/common/command.c **** {
 498:../../tmk_core/common/command.c ****     switch (param) {
 499:../../tmk_core/common/command.c ****         case 1:
 500:../../tmk_core/common/command.c ****             if (mk_delay > dec)
 501:../../tmk_core/common/command.c ****                 mk_delay -= dec;
 502:../../tmk_core/common/command.c ****             else
 503:../../tmk_core/common/command.c ****                 mk_delay = 0;
 504:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_delay);
 505:../../tmk_core/common/command.c ****             break;
 506:../../tmk_core/common/command.c ****         case 2:
 507:../../tmk_core/common/command.c ****             if (mk_interval > dec)
 508:../../tmk_core/common/command.c ****                 mk_interval -= dec;
 509:../../tmk_core/common/command.c ****             else
 510:../../tmk_core/common/command.c ****                 mk_interval = 0;
 511:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_interval);
 512:../../tmk_core/common/command.c ****             break;
 513:../../tmk_core/common/command.c ****         case 3:
 514:../../tmk_core/common/command.c ****             if (mk_max_speed > dec)
 515:../../tmk_core/common/command.c ****                 mk_max_speed -= dec;
 516:../../tmk_core/common/command.c ****             else
 517:../../tmk_core/common/command.c ****                 mk_max_speed = 0;
 518:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 519:../../tmk_core/common/command.c ****             break;
 520:../../tmk_core/common/command.c ****         case 4:
 521:../../tmk_core/common/command.c ****             if (mk_time_to_max > dec)
 522:../../tmk_core/common/command.c ****                 mk_time_to_max -= dec;
 523:../../tmk_core/common/command.c ****             else
 524:../../tmk_core/common/command.c ****                 mk_time_to_max = 0;
 525:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 526:../../tmk_core/common/command.c ****             break;
 527:../../tmk_core/common/command.c ****         case 5:
 528:../../tmk_core/common/command.c ****             if (mk_wheel_max_speed > dec)
 529:../../tmk_core/common/command.c ****                 mk_wheel_max_speed -= dec;
 530:../../tmk_core/common/command.c ****             else
 531:../../tmk_core/common/command.c ****                 mk_wheel_max_speed = 0;
 532:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 533:../../tmk_core/common/command.c ****             break;
 534:../../tmk_core/common/command.c ****         case 6:
 535:../../tmk_core/common/command.c ****             if (mk_wheel_time_to_max > dec)
 536:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max -= dec;
 537:../../tmk_core/common/command.c ****             else
 538:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max = 0;
 539:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 540:../../tmk_core/common/command.c ****             break;
 541:../../tmk_core/common/command.c ****     }
 542:../../tmk_core/common/command.c **** }
 543:../../tmk_core/common/command.c **** 
 544:../../tmk_core/common/command.c **** static void mousekey_console_help(void)
 545:../../tmk_core/common/command.c **** {
  15               		.loc 1 545 1 view -0
  16               		.cfi_startproc
  17               	/* prologue: function */
  18               	/* frame size = 0 */
  19               	/* stack size = 0 */
  20               	.L__stack_usage = 0
 546:../../tmk_core/common/command.c ****     print("\n\t- Mousekey -\n"
  21               		.loc 1 546 5 view .LVU1
  22               	.LBB30:
  23               		.loc 1 546 5 view .LVU2
  24               		.loc 1 546 5 view .LVU3
  25               	.LBE30:
  26 0000 80E0      		ldi r24,lo8(__c.5476)
  27 0002 90E0      		ldi r25,hi8(__c.5476)
  28 0004 0E94 0000 		call xputs
  29               	.LVL0:
 547:../../tmk_core/common/command.c ****           "ESC/q:	quit\n"
 548:../../tmk_core/common/command.c ****           "1:	delay(*10ms)\n"
 549:../../tmk_core/common/command.c ****           "2:	interval(ms)\n"
 550:../../tmk_core/common/command.c ****           "3:	max_speed\n"
 551:../../tmk_core/common/command.c ****           "4:	time_to_max\n"
 552:../../tmk_core/common/command.c ****           "5:	wheel_max_speed\n"
 553:../../tmk_core/common/command.c ****           "6:	wheel_time_to_max\n"
 554:../../tmk_core/common/command.c ****           "\n"
 555:../../tmk_core/common/command.c ****           "p:	print values\n"
 556:../../tmk_core/common/command.c ****           "d:	set defaults\n"
 557:../../tmk_core/common/command.c ****           "up:	+1\n"
 558:../../tmk_core/common/command.c ****           "down:	-1\n"
 559:../../tmk_core/common/command.c ****           "pgup:	+10\n"
 560:../../tmk_core/common/command.c ****           "pgdown:	-10\n"
 561:../../tmk_core/common/command.c ****           "\n"
 562:../../tmk_core/common/command.c ****           "speed = delta * max_speed * (repeat / time_to_max)\n");
 563:../../tmk_core/common/command.c ****     xprintf("where delta: cursor=%d, wheel=%d\n" 
  30               		.loc 1 563 5 view .LVU4
  31               	.LBB31:
  32               		.loc 1 563 5 view .LVU5
  33               		.loc 1 563 5 view .LVU6
  34               	.LBE31:
  35 0008 1F92      		push __zero_reg__
  36               	.LCFI0:
  37               		.cfi_def_cfa_offset 3
  38 000a 81E0      		ldi r24,lo8(1)
  39 000c 8F93      		push r24
  40               	.LCFI1:
  41               		.cfi_def_cfa_offset 4
  42 000e 1F92      		push __zero_reg__
  43               	.LCFI2:
  44               		.cfi_def_cfa_offset 5
  45 0010 85E0      		ldi r24,lo8(5)
  46 0012 8F93      		push r24
  47               	.LCFI3:
  48               		.cfi_def_cfa_offset 6
  49 0014 80E0      		ldi r24,lo8(__c.5478)
  50 0016 90E0      		ldi r25,hi8(__c.5478)
  51 0018 9F93      		push r25
  52               	.LCFI4:
  53               		.cfi_def_cfa_offset 7
  54 001a 8F93      		push r24
  55               	.LCFI5:
  56               		.cfi_def_cfa_offset 8
  57 001c 0E94 0000 		call __xprintf
  58               	.LVL1:
 564:../../tmk_core/common/command.c ****             "See http://en.wikipedia.org/wiki/Mouse_keys\n", MOUSEKEY_MOVE_DELTA,  MOUSEKEY_WHEEL_D
 565:../../tmk_core/common/command.c **** }
  59               		.loc 1 565 1 is_stmt 0 view .LVU7
  60 0020 0F90      		pop __tmp_reg__
  61 0022 0F90      		pop __tmp_reg__
  62 0024 0F90      		pop __tmp_reg__
  63 0026 0F90      		pop __tmp_reg__
  64 0028 0F90      		pop __tmp_reg__
  65 002a 0F90      		pop __tmp_reg__
  66               	.LCFI6:
  67               		.cfi_def_cfa_offset 2
  68               	/* epilogue start */
  69 002c 0895      		ret
  70               		.cfi_endproc
  71               	.LFE114:
  73               		.section	.text.mousekey_param_inc,"ax",@progbits
  75               	mousekey_param_inc:
  76               	.LVL2:
  77               	.LFB112:
 449:../../tmk_core/common/command.c ****     switch (param) {
  78               		.loc 1 449 1 is_stmt 1 view -0
  79               		.cfi_startproc
  80               	/* prologue: function */
  81               	/* frame size = 0 */
  82               	/* stack size = 0 */
  83               	.L__stack_usage = 0
 450:../../tmk_core/common/command.c ****         case 1:
  84               		.loc 1 450 5 view .LVU9
  85 0000 8330      		cpi r24,lo8(3)
  86 0002 01F4      		brne .+2
  87 0004 00C0      		rjmp .L3
  88 0006 00F4      		brsh .L4
  89 0008 8130      		cpi r24,lo8(1)
  90 000a 01F0      		breq .L5
  91 000c 8230      		cpi r24,lo8(2)
  92 000e 01F0      		breq .L6
  93 0010 0895      		ret
  94               	.L4:
  95 0012 8530      		cpi r24,lo8(5)
  96 0014 01F4      		brne .+2
  97 0016 00C0      		rjmp .L8
  98 0018 00F4      		brsh .+2
  99 001a 00C0      		rjmp .L9
 100 001c 8630      		cpi r24,lo8(6)
 101 001e 01F4      		brne .+2
 102 0020 00C0      		rjmp .L10
 103 0022 0895      		ret
 104               	.L5:
 452:../../tmk_core/common/command.c ****                 mk_delay += inc;
 105               		.loc 1 452 13 view .LVU10
 452:../../tmk_core/common/command.c ****                 mk_delay += inc;
 106               		.loc 1 452 26 is_stmt 0 view .LVU11
 107 0024 8091 0000 		lds r24,mk_delay
 108               	.LVL3:
 452:../../tmk_core/common/command.c ****                 mk_delay += inc;
 109               		.loc 1 452 26 view .LVU12
 110 0028 482F      		mov r20,r24
 111 002a 460F      		add r20,r22
 112 002c 5527      		clr r21
 113 002e 551F      		rol r21
 452:../../tmk_core/common/command.c ****                 mk_delay += inc;
 114               		.loc 1 452 16 view .LVU13
 115 0030 4F3F      		cpi r20,-1
 116 0032 5105      		cpc r21,__zero_reg__
 117 0034 04F4      		brge .L11
 453:../../tmk_core/common/command.c ****             else
 118               		.loc 1 453 17 is_stmt 1 view .LVU14
 453:../../tmk_core/common/command.c ****             else
 119               		.loc 1 453 26 is_stmt 0 view .LVU15
 120 0036 680F      		add r22,r24
 121               	.LVL4:
 453:../../tmk_core/common/command.c ****             else
 122               		.loc 1 453 26 view .LVU16
 123 0038 6093 0000 		sts mk_delay,r22
 124               	.L12:
 456:../../tmk_core/common/command.c ****             break;
 125               		.loc 1 456 13 is_stmt 1 view .LVU17
 126               	.LBB32:
 456:../../tmk_core/common/command.c ****             break;
 127               		.loc 1 456 13 view .LVU18
 456:../../tmk_core/common/command.c ****             break;
 128               		.loc 1 456 13 view .LVU19
 129               	.LBE32:
 130 003c 8091 0000 		lds r24,mk_delay
 131 0040 1F92      		push __zero_reg__
 132               	.LCFI7:
 133               		.cfi_def_cfa_offset 3
 134 0042 8F93      		push r24
 135               	.LCFI8:
 136               		.cfi_def_cfa_offset 4
 137 0044 80E0      		ldi r24,lo8(__c.5432)
 138 0046 90E0      		ldi r25,hi8(__c.5432)
 139               	.L23:
 491:../../tmk_core/common/command.c ****             break;
 140               		.loc 1 491 13 is_stmt 0 view .LVU20
 141 0048 9F93      		push r25
 142               	.LCFI9:
 143               		.cfi_def_cfa_offset 5
 144 004a 8F93      		push r24
 145               	.LCFI10:
 146               		.cfi_def_cfa_offset 6
 147 004c 0E94 0000 		call __xprintf
 148               	.LVL5:
 492:../../tmk_core/common/command.c ****     }
 149               		.loc 1 492 13 is_stmt 1 view .LVU21
 150 0050 0F90      		pop __tmp_reg__
 151 0052 0F90      		pop __tmp_reg__
 152 0054 0F90      		pop __tmp_reg__
 153 0056 0F90      		pop __tmp_reg__
 154               	.LCFI11:
 155               		.cfi_def_cfa_offset 2
 156               	/* epilogue start */
 494:../../tmk_core/common/command.c **** 
 157               		.loc 1 494 1 is_stmt 0 view .LVU22
 158 0058 0895      		ret
 159               	.LVL6:
 160               	.L11:
 455:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_delay);
 161               		.loc 1 455 17 is_stmt 1 view .LVU23
 455:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_delay);
 162               		.loc 1 455 26 is_stmt 0 view .LVU24
 163 005a 8FEF      		ldi r24,lo8(-1)
 164 005c 8093 0000 		sts mk_delay,r24
 165 0060 00C0      		rjmp .L12
 166               	.LVL7:
 167               	.L6:
 459:../../tmk_core/common/command.c ****                 mk_interval += inc;
 168               		.loc 1 459 13 is_stmt 1 view .LVU25
 459:../../tmk_core/common/command.c ****                 mk_interval += inc;
 169               		.loc 1 459 29 is_stmt 0 view .LVU26
 170 0062 8091 0000 		lds r24,mk_interval
 171               	.LVL8:
 459:../../tmk_core/common/command.c ****                 mk_interval += inc;
 172               		.loc 1 459 29 view .LVU27
 173 0066 482F      		mov r20,r24
 174 0068 460F      		add r20,r22
 175 006a 5527      		clr r21
 176 006c 551F      		rol r21
 459:../../tmk_core/common/command.c ****                 mk_interval += inc;
 177               		.loc 1 459 16 view .LVU28
 178 006e 4F3F      		cpi r20,-1
 179 0070 5105      		cpc r21,__zero_reg__
 180 0072 04F4      		brge .L13
 460:../../tmk_core/common/command.c ****             else
 181               		.loc 1 460 17 is_stmt 1 view .LVU29
 460:../../tmk_core/common/command.c ****             else
 182               		.loc 1 460 29 is_stmt 0 view .LVU30
 183 0074 680F      		add r22,r24
 184               	.LVL9:
 460:../../tmk_core/common/command.c ****             else
 185               		.loc 1 460 29 view .LVU31
 186 0076 6093 0000 		sts mk_interval,r22
 187               	.L14:
 463:../../tmk_core/common/command.c ****             break;
 188               		.loc 1 463 13 is_stmt 1 view .LVU32
 189               	.LBB33:
 463:../../tmk_core/common/command.c ****             break;
 190               		.loc 1 463 13 view .LVU33
 463:../../tmk_core/common/command.c ****             break;
 191               		.loc 1 463 13 view .LVU34
 192               	.LBE33:
 193 007a 8091 0000 		lds r24,mk_interval
 194 007e 1F92      		push __zero_reg__
 195               	.LCFI12:
 196               		.cfi_remember_state
 197               		.cfi_def_cfa_offset 3
 198 0080 8F93      		push r24
 199               	.LCFI13:
 200               		.cfi_def_cfa_offset 4
 201 0082 80E0      		ldi r24,lo8(__c.5436)
 202 0084 90E0      		ldi r25,hi8(__c.5436)
 203 0086 00C0      		rjmp .L23
 204               	.LVL10:
 205               	.L13:
 206               	.LCFI14:
 207               		.cfi_restore_state
 462:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_interval);
 208               		.loc 1 462 17 view .LVU35
 462:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_interval);
 209               		.loc 1 462 29 is_stmt 0 view .LVU36
 210 0088 8FEF      		ldi r24,lo8(-1)
 211 008a 8093 0000 		sts mk_interval,r24
 212 008e 00C0      		rjmp .L14
 213               	.LVL11:
 214               	.L3:
 466:../../tmk_core/common/command.c ****                 mk_max_speed += inc;
 215               		.loc 1 466 13 is_stmt 1 view .LVU37
 466:../../tmk_core/common/command.c ****                 mk_max_speed += inc;
 216               		.loc 1 466 30 is_stmt 0 view .LVU38
 217 0090 8091 0000 		lds r24,mk_max_speed
 218               	.LVL12:
 466:../../tmk_core/common/command.c ****                 mk_max_speed += inc;
 219               		.loc 1 466 30 view .LVU39
 220 0094 482F      		mov r20,r24
 221 0096 460F      		add r20,r22
 222 0098 5527      		clr r21
 223 009a 551F      		rol r21
 466:../../tmk_core/common/command.c ****                 mk_max_speed += inc;
 224               		.loc 1 466 16 view .LVU40
 225 009c 4F3F      		cpi r20,-1
 226 009e 5105      		cpc r21,__zero_reg__
 227 00a0 04F4      		brge .L15
 467:../../tmk_core/common/command.c ****             else
 228               		.loc 1 467 17 is_stmt 1 view .LVU41
 467:../../tmk_core/common/command.c ****             else
 229               		.loc 1 467 30 is_stmt 0 view .LVU42
 230 00a2 680F      		add r22,r24
 231               	.LVL13:
 467:../../tmk_core/common/command.c ****             else
 232               		.loc 1 467 30 view .LVU43
 233 00a4 6093 0000 		sts mk_max_speed,r22
 234               	.L16:
 470:../../tmk_core/common/command.c ****             break;
 235               		.loc 1 470 13 is_stmt 1 view .LVU44
 236               	.LBB34:
 470:../../tmk_core/common/command.c ****             break;
 237               		.loc 1 470 13 view .LVU45
 470:../../tmk_core/common/command.c ****             break;
 238               		.loc 1 470 13 view .LVU46
 239               	.LBE34:
 240 00a8 8091 0000 		lds r24,mk_max_speed
 241 00ac 1F92      		push __zero_reg__
 242               	.LCFI15:
 243               		.cfi_remember_state
 244               		.cfi_def_cfa_offset 3
 245 00ae 8F93      		push r24
 246               	.LCFI16:
 247               		.cfi_def_cfa_offset 4
 248 00b0 80E0      		ldi r24,lo8(__c.5439)
 249 00b2 90E0      		ldi r25,hi8(__c.5439)
 250 00b4 00C0      		rjmp .L23
 251               	.LVL14:
 252               	.L15:
 253               	.LCFI17:
 254               		.cfi_restore_state
 469:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 255               		.loc 1 469 17 view .LVU47
 469:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 256               		.loc 1 469 30 is_stmt 0 view .LVU48
 257 00b6 8FEF      		ldi r24,lo8(-1)
 258 00b8 8093 0000 		sts mk_max_speed,r24
 259 00bc 00C0      		rjmp .L16
 260               	.LVL15:
 261               	.L9:
 473:../../tmk_core/common/command.c ****                 mk_time_to_max += inc;
 262               		.loc 1 473 13 is_stmt 1 view .LVU49
 473:../../tmk_core/common/command.c ****                 mk_time_to_max += inc;
 263               		.loc 1 473 32 is_stmt 0 view .LVU50
 264 00be 8091 0000 		lds r24,mk_time_to_max
 265               	.LVL16:
 473:../../tmk_core/common/command.c ****                 mk_time_to_max += inc;
 266               		.loc 1 473 32 view .LVU51
 267 00c2 482F      		mov r20,r24
 268 00c4 460F      		add r20,r22
 269 00c6 5527      		clr r21
 270 00c8 551F      		rol r21
 473:../../tmk_core/common/command.c ****                 mk_time_to_max += inc;
 271               		.loc 1 473 16 view .LVU52
 272 00ca 4F3F      		cpi r20,-1
 273 00cc 5105      		cpc r21,__zero_reg__
 274 00ce 04F4      		brge .L17
 474:../../tmk_core/common/command.c ****             else
 275               		.loc 1 474 17 is_stmt 1 view .LVU53
 474:../../tmk_core/common/command.c ****             else
 276               		.loc 1 474 32 is_stmt 0 view .LVU54
 277 00d0 680F      		add r22,r24
 278               	.LVL17:
 474:../../tmk_core/common/command.c ****             else
 279               		.loc 1 474 32 view .LVU55
 280 00d2 6093 0000 		sts mk_time_to_max,r22
 281               	.L18:
 477:../../tmk_core/common/command.c ****             break;
 282               		.loc 1 477 13 is_stmt 1 view .LVU56
 283               	.LBB35:
 477:../../tmk_core/common/command.c ****             break;
 284               		.loc 1 477 13 view .LVU57
 477:../../tmk_core/common/command.c ****             break;
 285               		.loc 1 477 13 view .LVU58
 286               	.LBE35:
 287 00d6 8091 0000 		lds r24,mk_time_to_max
 288 00da 1F92      		push __zero_reg__
 289               	.LCFI18:
 290               		.cfi_remember_state
 291               		.cfi_def_cfa_offset 3
 292 00dc 8F93      		push r24
 293               	.LCFI19:
 294               		.cfi_def_cfa_offset 4
 295 00de 80E0      		ldi r24,lo8(__c.5442)
 296 00e0 90E0      		ldi r25,hi8(__c.5442)
 297 00e2 00C0      		rjmp .L23
 298               	.LVL18:
 299               	.L17:
 300               	.LCFI20:
 301               		.cfi_restore_state
 476:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 302               		.loc 1 476 17 view .LVU59
 476:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 303               		.loc 1 476 32 is_stmt 0 view .LVU60
 304 00e4 8FEF      		ldi r24,lo8(-1)
 305 00e6 8093 0000 		sts mk_time_to_max,r24
 306 00ea 00C0      		rjmp .L18
 307               	.LVL19:
 308               	.L8:
 480:../../tmk_core/common/command.c ****                 mk_wheel_max_speed += inc;
 309               		.loc 1 480 13 is_stmt 1 view .LVU61
 480:../../tmk_core/common/command.c ****                 mk_wheel_max_speed += inc;
 310               		.loc 1 480 36 is_stmt 0 view .LVU62
 311 00ec 8091 0000 		lds r24,mk_wheel_max_speed
 312               	.LVL20:
 480:../../tmk_core/common/command.c ****                 mk_wheel_max_speed += inc;
 313               		.loc 1 480 36 view .LVU63
 314 00f0 482F      		mov r20,r24
 315 00f2 460F      		add r20,r22
 316 00f4 5527      		clr r21
 317 00f6 551F      		rol r21
 480:../../tmk_core/common/command.c ****                 mk_wheel_max_speed += inc;
 318               		.loc 1 480 16 view .LVU64
 319 00f8 4F3F      		cpi r20,-1
 320 00fa 5105      		cpc r21,__zero_reg__
 321 00fc 04F4      		brge .L19
 481:../../tmk_core/common/command.c ****             else
 322               		.loc 1 481 17 is_stmt 1 view .LVU65
 481:../../tmk_core/common/command.c ****             else
 323               		.loc 1 481 36 is_stmt 0 view .LVU66
 324 00fe 680F      		add r22,r24
 325               	.LVL21:
 481:../../tmk_core/common/command.c ****             else
 326               		.loc 1 481 36 view .LVU67
 327 0100 6093 0000 		sts mk_wheel_max_speed,r22
 328               	.L20:
 484:../../tmk_core/common/command.c ****             break;
 329               		.loc 1 484 13 is_stmt 1 view .LVU68
 330               	.LBB36:
 484:../../tmk_core/common/command.c ****             break;
 331               		.loc 1 484 13 view .LVU69
 484:../../tmk_core/common/command.c ****             break;
 332               		.loc 1 484 13 view .LVU70
 333               	.LBE36:
 334 0104 8091 0000 		lds r24,mk_wheel_max_speed
 335 0108 1F92      		push __zero_reg__
 336               	.LCFI21:
 337               		.cfi_remember_state
 338               		.cfi_def_cfa_offset 3
 339 010a 8F93      		push r24
 340               	.LCFI22:
 341               		.cfi_def_cfa_offset 4
 342 010c 80E0      		ldi r24,lo8(__c.5445)
 343 010e 90E0      		ldi r25,hi8(__c.5445)
 344 0110 00C0      		rjmp .L23
 345               	.LVL22:
 346               	.L19:
 347               	.LCFI23:
 348               		.cfi_restore_state
 483:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 349               		.loc 1 483 17 view .LVU71
 483:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 350               		.loc 1 483 36 is_stmt 0 view .LVU72
 351 0112 8FEF      		ldi r24,lo8(-1)
 352 0114 8093 0000 		sts mk_wheel_max_speed,r24
 353 0118 00C0      		rjmp .L20
 354               	.LVL23:
 355               	.L10:
 487:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max += inc;
 356               		.loc 1 487 13 is_stmt 1 view .LVU73
 487:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max += inc;
 357               		.loc 1 487 38 is_stmt 0 view .LVU74
 358 011a 8091 0000 		lds r24,mk_wheel_time_to_max
 359               	.LVL24:
 487:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max += inc;
 360               		.loc 1 487 38 view .LVU75
 361 011e 482F      		mov r20,r24
 362 0120 460F      		add r20,r22
 363 0122 5527      		clr r21
 364 0124 551F      		rol r21
 487:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max += inc;
 365               		.loc 1 487 16 view .LVU76
 366 0126 4F3F      		cpi r20,-1
 367 0128 5105      		cpc r21,__zero_reg__
 368 012a 04F4      		brge .L21
 488:../../tmk_core/common/command.c ****             else
 369               		.loc 1 488 17 is_stmt 1 view .LVU77
 488:../../tmk_core/common/command.c ****             else
 370               		.loc 1 488 38 is_stmt 0 view .LVU78
 371 012c 680F      		add r22,r24
 372               	.LVL25:
 488:../../tmk_core/common/command.c ****             else
 373               		.loc 1 488 38 view .LVU79
 374 012e 6093 0000 		sts mk_wheel_time_to_max,r22
 375               	.L22:
 491:../../tmk_core/common/command.c ****             break;
 376               		.loc 1 491 13 is_stmt 1 view .LVU80
 377               	.LBB37:
 491:../../tmk_core/common/command.c ****             break;
 378               		.loc 1 491 13 view .LVU81
 491:../../tmk_core/common/command.c ****             break;
 379               		.loc 1 491 13 view .LVU82
 380               	.LBE37:
 381 0132 8091 0000 		lds r24,mk_wheel_time_to_max
 382 0136 1F92      		push __zero_reg__
 383               	.LCFI24:
 384               		.cfi_remember_state
 385               		.cfi_def_cfa_offset 3
 386 0138 8F93      		push r24
 387               	.LCFI25:
 388               		.cfi_def_cfa_offset 4
 389 013a 80E0      		ldi r24,lo8(__c.5448)
 390 013c 90E0      		ldi r25,hi8(__c.5448)
 391 013e 00C0      		rjmp .L23
 392               	.LVL26:
 393               	.L21:
 394               	.LCFI26:
 395               		.cfi_restore_state
 490:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 396               		.loc 1 490 17 view .LVU83
 490:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 397               		.loc 1 490 38 is_stmt 0 view .LVU84
 398 0140 8FEF      		ldi r24,lo8(-1)
 399 0142 8093 0000 		sts mk_wheel_time_to_max,r24
 400 0146 00C0      		rjmp .L22
 401               		.cfi_endproc
 402               	.LFE112:
 404               		.section	.text.mousekey_param_dec,"ax",@progbits
 406               	mousekey_param_dec:
 407               	.LVL27:
 408               	.LFB113:
 497:../../tmk_core/common/command.c ****     switch (param) {
 409               		.loc 1 497 1 is_stmt 1 view -0
 410               		.cfi_startproc
 411               	/* prologue: function */
 412               	/* frame size = 0 */
 413               	/* stack size = 0 */
 414               	.L__stack_usage = 0
 498:../../tmk_core/common/command.c ****         case 1:
 415               		.loc 1 498 5 view .LVU86
 416 0000 8330      		cpi r24,lo8(3)
 417 0002 01F0      		breq .L25
 418 0004 00F4      		brsh .L26
 419 0006 8130      		cpi r24,lo8(1)
 420 0008 01F0      		breq .L27
 421 000a 8230      		cpi r24,lo8(2)
 422 000c 01F0      		breq .L28
 423 000e 0895      		ret
 424               	.L26:
 425 0010 8530      		cpi r24,lo8(5)
 426 0012 01F4      		brne .+2
 427 0014 00C0      		rjmp .L30
 428 0016 00F4      		brsh .+2
 429 0018 00C0      		rjmp .L31
 430 001a 8630      		cpi r24,lo8(6)
 431 001c 01F4      		brne .+2
 432 001e 00C0      		rjmp .L32
 433 0020 0895      		ret
 434               	.L27:
 500:../../tmk_core/common/command.c ****                 mk_delay -= dec;
 435               		.loc 1 500 13 view .LVU87
 500:../../tmk_core/common/command.c ****                 mk_delay -= dec;
 436               		.loc 1 500 26 is_stmt 0 view .LVU88
 437 0022 8091 0000 		lds r24,mk_delay
 438               	.LVL28:
 500:../../tmk_core/common/command.c ****                 mk_delay -= dec;
 439               		.loc 1 500 16 view .LVU89
 440 0026 6817      		cp r22,r24
 441 0028 00F4      		brsh .L33
 501:../../tmk_core/common/command.c ****             else
 442               		.loc 1 501 17 is_stmt 1 view .LVU90
 501:../../tmk_core/common/command.c ****             else
 443               		.loc 1 501 26 is_stmt 0 view .LVU91
 444 002a 861B      		sub r24,r22
 445 002c 8093 0000 		sts mk_delay,r24
 446               	.L34:
 504:../../tmk_core/common/command.c ****             break;
 447               		.loc 1 504 13 is_stmt 1 view .LVU92
 448               	.LBB38:
 504:../../tmk_core/common/command.c ****             break;
 449               		.loc 1 504 13 view .LVU93
 504:../../tmk_core/common/command.c ****             break;
 450               		.loc 1 504 13 view .LVU94
 451               	.LBE38:
 452 0030 8091 0000 		lds r24,mk_delay
 453 0034 1F92      		push __zero_reg__
 454               	.LCFI27:
 455               		.cfi_def_cfa_offset 3
 456 0036 8F93      		push r24
 457               	.LCFI28:
 458               		.cfi_def_cfa_offset 4
 459 0038 80E0      		ldi r24,lo8(__c.5455)
 460 003a 90E0      		ldi r25,hi8(__c.5455)
 461               	.L45:
 539:../../tmk_core/common/command.c ****             break;
 462               		.loc 1 539 13 is_stmt 0 view .LVU95
 463 003c 9F93      		push r25
 464               	.LCFI29:
 465               		.cfi_def_cfa_offset 5
 466 003e 8F93      		push r24
 467               	.LCFI30:
 468               		.cfi_def_cfa_offset 6
 469 0040 0E94 0000 		call __xprintf
 470               	.LVL29:
 540:../../tmk_core/common/command.c ****     }
 471               		.loc 1 540 13 is_stmt 1 view .LVU96
 472 0044 0F90      		pop __tmp_reg__
 473 0046 0F90      		pop __tmp_reg__
 474 0048 0F90      		pop __tmp_reg__
 475 004a 0F90      		pop __tmp_reg__
 476               	.LCFI31:
 477               		.cfi_def_cfa_offset 2
 478               	/* epilogue start */
 542:../../tmk_core/common/command.c **** 
 479               		.loc 1 542 1 is_stmt 0 view .LVU97
 480 004c 0895      		ret
 481               	.LVL30:
 482               	.L33:
 503:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_delay);
 483               		.loc 1 503 17 is_stmt 1 view .LVU98
 503:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_delay);
 484               		.loc 1 503 26 is_stmt 0 view .LVU99
 485 004e 1092 0000 		sts mk_delay,__zero_reg__
 486 0052 00C0      		rjmp .L34
 487               	.LVL31:
 488               	.L28:
 507:../../tmk_core/common/command.c ****                 mk_interval -= dec;
 489               		.loc 1 507 13 is_stmt 1 view .LVU100
 507:../../tmk_core/common/command.c ****                 mk_interval -= dec;
 490               		.loc 1 507 29 is_stmt 0 view .LVU101
 491 0054 8091 0000 		lds r24,mk_interval
 492               	.LVL32:
 507:../../tmk_core/common/command.c ****                 mk_interval -= dec;
 493               		.loc 1 507 16 view .LVU102
 494 0058 6817      		cp r22,r24
 495 005a 00F4      		brsh .L35
 508:../../tmk_core/common/command.c ****             else
 496               		.loc 1 508 17 is_stmt 1 view .LVU103
 508:../../tmk_core/common/command.c ****             else
 497               		.loc 1 508 29 is_stmt 0 view .LVU104
 498 005c 861B      		sub r24,r22
 499 005e 8093 0000 		sts mk_interval,r24
 500               	.L36:
 511:../../tmk_core/common/command.c ****             break;
 501               		.loc 1 511 13 is_stmt 1 view .LVU105
 502               	.LBB39:
 511:../../tmk_core/common/command.c ****             break;
 503               		.loc 1 511 13 view .LVU106
 511:../../tmk_core/common/command.c ****             break;
 504               		.loc 1 511 13 view .LVU107
 505               	.LBE39:
 506 0062 8091 0000 		lds r24,mk_interval
 507 0066 1F92      		push __zero_reg__
 508               	.LCFI32:
 509               		.cfi_remember_state
 510               		.cfi_def_cfa_offset 3
 511 0068 8F93      		push r24
 512               	.LCFI33:
 513               		.cfi_def_cfa_offset 4
 514 006a 80E0      		ldi r24,lo8(__c.5459)
 515 006c 90E0      		ldi r25,hi8(__c.5459)
 516 006e 00C0      		rjmp .L45
 517               	.L35:
 518               	.LCFI34:
 519               		.cfi_restore_state
 510:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_interval);
 520               		.loc 1 510 17 view .LVU108
 510:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_interval);
 521               		.loc 1 510 29 is_stmt 0 view .LVU109
 522 0070 1092 0000 		sts mk_interval,__zero_reg__
 523 0074 00C0      		rjmp .L36
 524               	.LVL33:
 525               	.L25:
 514:../../tmk_core/common/command.c ****                 mk_max_speed -= dec;
 526               		.loc 1 514 13 is_stmt 1 view .LVU110
 514:../../tmk_core/common/command.c ****                 mk_max_speed -= dec;
 527               		.loc 1 514 30 is_stmt 0 view .LVU111
 528 0076 8091 0000 		lds r24,mk_max_speed
 529               	.LVL34:
 514:../../tmk_core/common/command.c ****                 mk_max_speed -= dec;
 530               		.loc 1 514 16 view .LVU112
 531 007a 6817      		cp r22,r24
 532 007c 00F4      		brsh .L37
 515:../../tmk_core/common/command.c ****             else
 533               		.loc 1 515 17 is_stmt 1 view .LVU113
 515:../../tmk_core/common/command.c ****             else
 534               		.loc 1 515 30 is_stmt 0 view .LVU114
 535 007e 861B      		sub r24,r22
 536 0080 8093 0000 		sts mk_max_speed,r24
 537               	.L38:
 518:../../tmk_core/common/command.c ****             break;
 538               		.loc 1 518 13 is_stmt 1 view .LVU115
 539               	.LBB40:
 518:../../tmk_core/common/command.c ****             break;
 540               		.loc 1 518 13 view .LVU116
 518:../../tmk_core/common/command.c ****             break;
 541               		.loc 1 518 13 view .LVU117
 542               	.LBE40:
 543 0084 8091 0000 		lds r24,mk_max_speed
 544 0088 1F92      		push __zero_reg__
 545               	.LCFI35:
 546               		.cfi_remember_state
 547               		.cfi_def_cfa_offset 3
 548 008a 8F93      		push r24
 549               	.LCFI36:
 550               		.cfi_def_cfa_offset 4
 551 008c 80E0      		ldi r24,lo8(__c.5462)
 552 008e 90E0      		ldi r25,hi8(__c.5462)
 553 0090 00C0      		rjmp .L45
 554               	.L37:
 555               	.LCFI37:
 556               		.cfi_restore_state
 517:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 557               		.loc 1 517 17 view .LVU118
 517:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 558               		.loc 1 517 30 is_stmt 0 view .LVU119
 559 0092 1092 0000 		sts mk_max_speed,__zero_reg__
 560 0096 00C0      		rjmp .L38
 561               	.LVL35:
 562               	.L31:
 521:../../tmk_core/common/command.c ****                 mk_time_to_max -= dec;
 563               		.loc 1 521 13 is_stmt 1 view .LVU120
 521:../../tmk_core/common/command.c ****                 mk_time_to_max -= dec;
 564               		.loc 1 521 32 is_stmt 0 view .LVU121
 565 0098 8091 0000 		lds r24,mk_time_to_max
 566               	.LVL36:
 521:../../tmk_core/common/command.c ****                 mk_time_to_max -= dec;
 567               		.loc 1 521 16 view .LVU122
 568 009c 6817      		cp r22,r24
 569 009e 00F4      		brsh .L39
 522:../../tmk_core/common/command.c ****             else
 570               		.loc 1 522 17 is_stmt 1 view .LVU123
 522:../../tmk_core/common/command.c ****             else
 571               		.loc 1 522 32 is_stmt 0 view .LVU124
 572 00a0 861B      		sub r24,r22
 573 00a2 8093 0000 		sts mk_time_to_max,r24
 574               	.L40:
 525:../../tmk_core/common/command.c ****             break;
 575               		.loc 1 525 13 is_stmt 1 view .LVU125
 576               	.LBB41:
 525:../../tmk_core/common/command.c ****             break;
 577               		.loc 1 525 13 view .LVU126
 525:../../tmk_core/common/command.c ****             break;
 578               		.loc 1 525 13 view .LVU127
 579               	.LBE41:
 580 00a6 8091 0000 		lds r24,mk_time_to_max
 581 00aa 1F92      		push __zero_reg__
 582               	.LCFI38:
 583               		.cfi_remember_state
 584               		.cfi_def_cfa_offset 3
 585 00ac 8F93      		push r24
 586               	.LCFI39:
 587               		.cfi_def_cfa_offset 4
 588 00ae 80E0      		ldi r24,lo8(__c.5465)
 589 00b0 90E0      		ldi r25,hi8(__c.5465)
 590 00b2 00C0      		rjmp .L45
 591               	.L39:
 592               	.LCFI40:
 593               		.cfi_restore_state
 524:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 594               		.loc 1 524 17 view .LVU128
 524:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 595               		.loc 1 524 32 is_stmt 0 view .LVU129
 596 00b4 1092 0000 		sts mk_time_to_max,__zero_reg__
 597 00b8 00C0      		rjmp .L40
 598               	.LVL37:
 599               	.L30:
 528:../../tmk_core/common/command.c ****                 mk_wheel_max_speed -= dec;
 600               		.loc 1 528 13 is_stmt 1 view .LVU130
 528:../../tmk_core/common/command.c ****                 mk_wheel_max_speed -= dec;
 601               		.loc 1 528 36 is_stmt 0 view .LVU131
 602 00ba 8091 0000 		lds r24,mk_wheel_max_speed
 603               	.LVL38:
 528:../../tmk_core/common/command.c ****                 mk_wheel_max_speed -= dec;
 604               		.loc 1 528 16 view .LVU132
 605 00be 6817      		cp r22,r24
 606 00c0 00F4      		brsh .L41
 529:../../tmk_core/common/command.c ****             else
 607               		.loc 1 529 17 is_stmt 1 view .LVU133
 529:../../tmk_core/common/command.c ****             else
 608               		.loc 1 529 36 is_stmt 0 view .LVU134
 609 00c2 861B      		sub r24,r22
 610 00c4 8093 0000 		sts mk_wheel_max_speed,r24
 611               	.L42:
 532:../../tmk_core/common/command.c ****             break;
 612               		.loc 1 532 13 is_stmt 1 view .LVU135
 613               	.LBB42:
 532:../../tmk_core/common/command.c ****             break;
 614               		.loc 1 532 13 view .LVU136
 532:../../tmk_core/common/command.c ****             break;
 615               		.loc 1 532 13 view .LVU137
 616               	.LBE42:
 617 00c8 8091 0000 		lds r24,mk_wheel_max_speed
 618 00cc 1F92      		push __zero_reg__
 619               	.LCFI41:
 620               		.cfi_remember_state
 621               		.cfi_def_cfa_offset 3
 622 00ce 8F93      		push r24
 623               	.LCFI42:
 624               		.cfi_def_cfa_offset 4
 625 00d0 80E0      		ldi r24,lo8(__c.5468)
 626 00d2 90E0      		ldi r25,hi8(__c.5468)
 627 00d4 00C0      		rjmp .L45
 628               	.L41:
 629               	.LCFI43:
 630               		.cfi_restore_state
 531:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 631               		.loc 1 531 17 view .LVU138
 531:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 632               		.loc 1 531 36 is_stmt 0 view .LVU139
 633 00d6 1092 0000 		sts mk_wheel_max_speed,__zero_reg__
 634 00da 00C0      		rjmp .L42
 635               	.LVL39:
 636               	.L32:
 535:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max -= dec;
 637               		.loc 1 535 13 is_stmt 1 view .LVU140
 535:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max -= dec;
 638               		.loc 1 535 38 is_stmt 0 view .LVU141
 639 00dc 8091 0000 		lds r24,mk_wheel_time_to_max
 640               	.LVL40:
 535:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max -= dec;
 641               		.loc 1 535 16 view .LVU142
 642 00e0 6817      		cp r22,r24
 643 00e2 00F4      		brsh .L43
 536:../../tmk_core/common/command.c ****             else
 644               		.loc 1 536 17 is_stmt 1 view .LVU143
 536:../../tmk_core/common/command.c ****             else
 645               		.loc 1 536 38 is_stmt 0 view .LVU144
 646 00e4 861B      		sub r24,r22
 647 00e6 8093 0000 		sts mk_wheel_time_to_max,r24
 648               	.L44:
 539:../../tmk_core/common/command.c ****             break;
 649               		.loc 1 539 13 is_stmt 1 view .LVU145
 650               	.LBB43:
 539:../../tmk_core/common/command.c ****             break;
 651               		.loc 1 539 13 view .LVU146
 539:../../tmk_core/common/command.c ****             break;
 652               		.loc 1 539 13 view .LVU147
 653               	.LBE43:
 654 00ea 8091 0000 		lds r24,mk_wheel_time_to_max
 655 00ee 1F92      		push __zero_reg__
 656               	.LCFI44:
 657               		.cfi_remember_state
 658               		.cfi_def_cfa_offset 3
 659 00f0 8F93      		push r24
 660               	.LCFI45:
 661               		.cfi_def_cfa_offset 4
 662 00f2 80E0      		ldi r24,lo8(__c.5471)
 663 00f4 90E0      		ldi r25,hi8(__c.5471)
 664 00f6 00C0      		rjmp .L45
 665               	.L43:
 666               	.LCFI46:
 667               		.cfi_restore_state
 538:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 668               		.loc 1 538 17 view .LVU148
 538:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 669               		.loc 1 538 38 is_stmt 0 view .LVU149
 670 00f8 1092 0000 		sts mk_wheel_time_to_max,__zero_reg__
 671 00fc 00C0      		rjmp .L44
 672               		.cfi_endproc
 673               	.LFE113:
 675               		.section	.text.switch_default_layer,"ax",@progbits
 677               	switch_default_layer:
 678               	.LVL41:
 679               	.LFB117:
 566:../../tmk_core/common/command.c **** 
 567:../../tmk_core/common/command.c **** static bool mousekey_console(uint8_t code)
 568:../../tmk_core/common/command.c **** {
 569:../../tmk_core/common/command.c ****     switch (code) {
 570:../../tmk_core/common/command.c ****         case KC_H:
 571:../../tmk_core/common/command.c ****         case KC_SLASH: /* ? */
 572:../../tmk_core/common/command.c ****             mousekey_console_help();
 573:../../tmk_core/common/command.c ****             break;
 574:../../tmk_core/common/command.c ****         case KC_Q:
 575:../../tmk_core/common/command.c ****         case KC_ESC:
 576:../../tmk_core/common/command.c ****             if (mousekey_param) {
 577:../../tmk_core/common/command.c ****                 mousekey_param = 0;
 578:../../tmk_core/common/command.c ****             } else {
 579:../../tmk_core/common/command.c ****                 print("C> ");
 580:../../tmk_core/common/command.c ****                 command_state = CONSOLE;
 581:../../tmk_core/common/command.c ****                 return false;
 582:../../tmk_core/common/command.c ****             }
 583:../../tmk_core/common/command.c ****             break;
 584:../../tmk_core/common/command.c ****         case KC_P:
 585:../../tmk_core/common/command.c ****             mousekey_param_print();
 586:../../tmk_core/common/command.c ****             break;
 587:../../tmk_core/common/command.c ****         case KC_1:
 588:../../tmk_core/common/command.c ****         case KC_2:
 589:../../tmk_core/common/command.c ****         case KC_3:
 590:../../tmk_core/common/command.c ****         case KC_4:
 591:../../tmk_core/common/command.c ****         case KC_5:
 592:../../tmk_core/common/command.c ****         case KC_6:
 593:../../tmk_core/common/command.c ****             mousekey_param = numkey2num(code);
 594:../../tmk_core/common/command.c ****             break;
 595:../../tmk_core/common/command.c ****         case KC_UP:
 596:../../tmk_core/common/command.c ****             mousekey_param_inc(mousekey_param, 1);
 597:../../tmk_core/common/command.c ****             break;
 598:../../tmk_core/common/command.c ****         case KC_DOWN:
 599:../../tmk_core/common/command.c ****             mousekey_param_dec(mousekey_param, 1);
 600:../../tmk_core/common/command.c ****             break;
 601:../../tmk_core/common/command.c ****         case KC_PGUP:
 602:../../tmk_core/common/command.c ****             mousekey_param_inc(mousekey_param, 10);
 603:../../tmk_core/common/command.c ****             break;
 604:../../tmk_core/common/command.c ****         case KC_PGDN:
 605:../../tmk_core/common/command.c ****             mousekey_param_dec(mousekey_param, 10);
 606:../../tmk_core/common/command.c ****             break;
 607:../../tmk_core/common/command.c ****         case KC_D:
 608:../../tmk_core/common/command.c ****             mk_delay = MOUSEKEY_DELAY/10;
 609:../../tmk_core/common/command.c ****             mk_interval = MOUSEKEY_INTERVAL;
 610:../../tmk_core/common/command.c ****             mk_max_speed = MOUSEKEY_MAX_SPEED;
 611:../../tmk_core/common/command.c ****             mk_time_to_max = MOUSEKEY_TIME_TO_MAX;
 612:../../tmk_core/common/command.c ****             mk_wheel_max_speed = MOUSEKEY_WHEEL_MAX_SPEED;
 613:../../tmk_core/common/command.c ****             mk_wheel_time_to_max = MOUSEKEY_WHEEL_TIME_TO_MAX;
 614:../../tmk_core/common/command.c ****             print("set default\n");
 615:../../tmk_core/common/command.c ****             break;
 616:../../tmk_core/common/command.c ****         default:
 617:../../tmk_core/common/command.c ****             print("?");
 618:../../tmk_core/common/command.c ****             return false;
 619:../../tmk_core/common/command.c ****     }
 620:../../tmk_core/common/command.c ****     if (mousekey_param) {
 621:../../tmk_core/common/command.c ****         xprintf("M%d> ", mousekey_param);
 622:../../tmk_core/common/command.c ****     } else {
 623:../../tmk_core/common/command.c ****         print("M>" );
 624:../../tmk_core/common/command.c ****     }
 625:../../tmk_core/common/command.c ****     return true;
 626:../../tmk_core/common/command.c **** }
 627:../../tmk_core/common/command.c **** #endif
 628:../../tmk_core/common/command.c **** 
 629:../../tmk_core/common/command.c **** 
 630:../../tmk_core/common/command.c **** /***********************************************************
 631:../../tmk_core/common/command.c ****  * Utilities
 632:../../tmk_core/common/command.c ****  ***********************************************************/
 633:../../tmk_core/common/command.c **** #if MOUSEKEY_ENABLE
 634:../../tmk_core/common/command.c **** static uint8_t numkey2num(uint8_t code)
 635:../../tmk_core/common/command.c **** {
 636:../../tmk_core/common/command.c ****     switch (code) {
 637:../../tmk_core/common/command.c ****         case KC_1: return 1;
 638:../../tmk_core/common/command.c ****         case KC_2: return 2;
 639:../../tmk_core/common/command.c ****         case KC_3: return 3;
 640:../../tmk_core/common/command.c ****         case KC_4: return 4;
 641:../../tmk_core/common/command.c ****         case KC_5: return 5;
 642:../../tmk_core/common/command.c ****         case KC_6: return 6;
 643:../../tmk_core/common/command.c ****         case KC_7: return 7;
 644:../../tmk_core/common/command.c ****         case KC_8: return 8;
 645:../../tmk_core/common/command.c ****         case KC_9: return 9;
 646:../../tmk_core/common/command.c ****         case KC_0: return 0;
 647:../../tmk_core/common/command.c ****     }
 648:../../tmk_core/common/command.c ****     return 0;
 649:../../tmk_core/common/command.c **** }
 650:../../tmk_core/common/command.c **** #endif
 651:../../tmk_core/common/command.c **** 
 652:../../tmk_core/common/command.c **** static void switch_default_layer(uint8_t layer)
 653:../../tmk_core/common/command.c **** {
 680               		.loc 1 653 1 is_stmt 1 view -0
 681               		.cfi_startproc
 682               		.loc 1 653 1 is_stmt 0 view .LVU151
 683 0000 CF93      		push r28
 684               	.LCFI47:
 685               		.cfi_def_cfa_offset 3
 686               		.cfi_offset 28, -2
 687               	/* prologue: function */
 688               	/* frame size = 0 */
 689               	/* stack size = 1 */
 690               	.L__stack_usage = 1
 691 0002 C82F      		mov r28,r24
 654:../../tmk_core/common/command.c ****     xprintf("L%d\n", layer);
 692               		.loc 1 654 5 is_stmt 1 view .LVU152
 693               	.LBB44:
 694               		.loc 1 654 5 view .LVU153
 695               		.loc 1 654 5 view .LVU154
 696               	.LBE44:
 697 0004 1F92      		push __zero_reg__
 698               	.LCFI48:
 699               		.cfi_def_cfa_offset 4
 700 0006 8F93      		push r24
 701               	.LCFI49:
 702               		.cfi_def_cfa_offset 5
 703 0008 80E0      		ldi r24,lo8(__c.5527)
 704 000a 90E0      		ldi r25,hi8(__c.5527)
 705               	.LVL42:
 706               		.loc 1 654 5 is_stmt 0 view .LVU155
 707 000c 9F93      		push r25
 708               	.LCFI50:
 709               		.cfi_def_cfa_offset 6
 710 000e 8F93      		push r24
 711               	.LCFI51:
 712               		.cfi_def_cfa_offset 7
 713 0010 0E94 0000 		call __xprintf
 714               	.LVL43:
 655:../../tmk_core/common/command.c ****     default_layer_set(1UL<<layer);
 715               		.loc 1 655 5 is_stmt 1 view .LVU156
 716 0014 61E0      		ldi r22,lo8(1)
 717 0016 70E0      		ldi r23,0
 718 0018 80E0      		ldi r24,0
 719 001a 90E0      		ldi r25,0
 720 001c 00C0      		rjmp 2f
 721               		1:
 722 001e 660F      		lsl r22
 723 0020 771F      		rol r23
 724 0022 881F      		rol r24
 725 0024 991F      		rol r25
 726               		2:
 727 0026 CA95      		dec r28
 728 0028 02F4      		brpl 1b
 729 002a 0E94 0000 		call default_layer_set
 730               	.LVL44:
 656:../../tmk_core/common/command.c ****     clear_keyboard();
 731               		.loc 1 656 5 view .LVU157
 732 002e 0F90      		pop __tmp_reg__
 733 0030 0F90      		pop __tmp_reg__
 734 0032 0F90      		pop __tmp_reg__
 735 0034 0F90      		pop __tmp_reg__
 736               	.LCFI52:
 737               		.cfi_def_cfa_offset 3
 738               	/* epilogue start */
 657:../../tmk_core/common/command.c **** }
 739               		.loc 1 657 1 is_stmt 0 view .LVU158
 740 0036 CF91      		pop r28
 741               	.LVL45:
 656:../../tmk_core/common/command.c ****     clear_keyboard();
 742               		.loc 1 656 5 view .LVU159
 743 0038 0C94 0000 		jmp clear_keyboard
 744               	.LVL46:
 745               		.cfi_endproc
 746               	.LFE117:
 748               		.section	.text.command_common,"ax",@progbits
 750               	command_common:
 751               	.LFB108:
 183:../../tmk_core/common/command.c **** #ifdef KEYBOARD_LOCK_ENABLE
 752               		.loc 1 183 1 is_stmt 1 view -0
 753               		.cfi_startproc
 754 0000 CF93      		push r28
 755               	.LCFI53:
 756               		.cfi_def_cfa_offset 3
 757               		.cfi_offset 28, -2
 758               	/* prologue: function */
 759               	/* frame size = 0 */
 760               	/* stack size = 1 */
 761               	.L__stack_usage = 1
 190:../../tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 762               		.loc 1 190 5 view .LVU161
 763 0002 8B31      		cpi r24,lo8(27)
 764 0004 01F4      		brne .+2
 765 0006 00C0      		rjmp .L48
 766 0008 00F0      		brlo .+2
 767 000a 00C0      		rjmp .L49
 768 000c 8E30      		cpi r24,lo8(14)
 769 000e 01F4      		brne .+2
 770 0010 00C0      		rjmp .L50
 771 0012 00F4      		brsh .L51
 772 0014 8730      		cpi r24,lo8(7)
 773 0016 01F4      		brne .+2
 774 0018 00C0      		rjmp .L52
 775 001a 00F4      		brsh .L53
 776 001c 8630      		cpi r24,lo8(6)
 777 001e 01F4      		brne .+2
 778 0020 00C0      		rjmp .L54
 779               	.L55:
 382:../../tmk_core/common/command.c ****             return false;
 780               		.loc 1 382 13 view .LVU162
 781               	.LBB126:
 382:../../tmk_core/common/command.c ****             return false;
 782               		.loc 1 382 13 view .LVU163
 382:../../tmk_core/common/command.c ****             return false;
 783               		.loc 1 382 13 view .LVU164
 784               	.LBE126:
 785 0022 80E0      		ldi r24,lo8(__c.5362)
 786 0024 90E0      		ldi r25,hi8(__c.5362)
 787 0026 0E94 0000 		call xputs
 383:../../tmk_core/common/command.c ****     }
 788               		.loc 1 383 13 view .LVU165
 383:../../tmk_core/common/command.c ****     }
 789               		.loc 1 383 20 is_stmt 0 view .LVU166
 790 002a C0E0      		ldi r28,0
 791 002c 00C0      		rjmp .L47
 792               	.L53:
 190:../../tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 793               		.loc 1 190 5 view .LVU167
 794 002e 8830      		cpi r24,lo8(8)
 795 0030 01F4      		brne .+2
 796 0032 00C0      		rjmp .L56
 797 0034 8B30      		cpi r24,lo8(11)
 798 0036 01F4      		brne .L55
 799               	.L57:
 225:../../tmk_core/common/command.c ****             break;
 800               		.loc 1 225 13 is_stmt 1 view .LVU168
 801               	.LBB127:
 802               	.LBI127:
 116:../../tmk_core/common/command.c **** {
 803               		.loc 1 116 13 view .LVU169
 804               	.LBB128:
 118:../../tmk_core/common/command.c ****           "d:	debug\n"
 805               		.loc 1 118 5 view .LVU170
 806               	.LBE128:
 807               	.LBE127:
 118:../../tmk_core/common/command.c ****           "d:	debug\n"
 808               		.loc 1 118 5 view .LVU171
 118:../../tmk_core/common/command.c ****           "d:	debug\n"
 809               		.loc 1 118 5 view .LVU172
 810               	.LBB130:
 811               	.LBB129:
 812 0038 80E0      		ldi r24,lo8(__c.5192)
 813 003a 90E0      		ldi r25,hi8(__c.5192)
 814               	.L97:
 815               	.LBE129:
 816               	.LBE130:
 365:../../tmk_core/common/command.c ****             }
 817               		.loc 1 365 17 is_stmt 0 view .LVU173
 818 003c 0E94 0000 		call xputs
 819 0040 00C0      		rjmp .L96
 820               	.L51:
 190:../../tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 821               		.loc 1 190 5 view .LVU174
 822 0042 8131      		cpi r24,lo8(17)
 823 0044 01F4      		brne .+2
 824 0046 00C0      		rjmp .L58
 825 0048 00F4      		brsh .L59
 826 004a 8031      		cpi r24,lo8(16)
 827 004c 01F4      		brne .L55
 273:../../tmk_core/common/command.c ****             if (debug_mouse) {
 828               		.loc 1 273 13 is_stmt 1 view .LVU175
 273:../../tmk_core/common/command.c ****             if (debug_mouse) {
 829               		.loc 1 273 28 is_stmt 0 view .LVU176
 830 004e 9091 0000 		lds r25,debug_config
 273:../../tmk_core/common/command.c ****             if (debug_mouse) {
 831               		.loc 1 273 25 view .LVU177
 832 0052 892F      		mov r24,r25
 833 0054 877F      		andi r24,~(1<<3)
 834 0056 93FF      		sbrs r25,3
 835 0058 8860      		ori r24,1<<3
 836 005a 8093 0000 		sts debug_config,r24
 274:../../tmk_core/common/command.c ****                 print("\nmouse: on\n");
 837               		.loc 1 274 13 is_stmt 1 view .LVU178
 274:../../tmk_core/common/command.c ****                 print("\nmouse: on\n");
 838               		.loc 1 274 16 is_stmt 0 view .LVU179
 839 005e 83FF      		sbrs r24,3
 840 0060 00C0      		rjmp .L74
 275:../../tmk_core/common/command.c ****                 debug_enable = true;
 841               		.loc 1 275 17 is_stmt 1 view .LVU180
 842               	.LBB131:
 275:../../tmk_core/common/command.c ****                 debug_enable = true;
 843               		.loc 1 275 17 view .LVU181
 275:../../tmk_core/common/command.c ****                 debug_enable = true;
 844               		.loc 1 275 17 view .LVU182
 845               	.LBE131:
 846 0062 80E0      		ldi r24,lo8(__c.5320)
 847 0064 90E0      		ldi r25,hi8(__c.5320)
 848 0066 00C0      		rjmp .L99
 849               	.L59:
 190:../../tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 850               		.loc 1 190 5 is_stmt 0 view .LVU183
 851 0068 8631      		cpi r24,lo8(22)
 852 006a 01F4      		brne .+2
 853 006c 00C0      		rjmp .L61
 854 006e 8931      		cpi r24,lo8(25)
 855 0070 01F4      		brne .L55
 282:../../tmk_core/common/command.c ****             print("DESC: " STR(DESCRIPTION) "\n");
 856               		.loc 1 282 13 is_stmt 1 view .LVU184
 857               	.LBB132:
 282:../../tmk_core/common/command.c ****             print("DESC: " STR(DESCRIPTION) "\n");
 858               		.loc 1 282 13 view .LVU185
 282:../../tmk_core/common/command.c ****             print("DESC: " STR(DESCRIPTION) "\n");
 859               		.loc 1 282 13 view .LVU186
 860               	.LBE132:
 861 0072 80E0      		ldi r24,lo8(__c.5325)
 862 0074 90E0      		ldi r25,hi8(__c.5325)
 863 0076 0E94 0000 		call xputs
 283:../../tmk_core/common/command.c ****             print("VID: " STR(VENDOR_ID) "(" STR(MANUFACTURER) ") "
 864               		.loc 1 283 13 view .LVU187
 865               	.LBB133:
 283:../../tmk_core/common/command.c ****             print("VID: " STR(VENDOR_ID) "(" STR(MANUFACTURER) ") "
 866               		.loc 1 283 13 view .LVU188
 283:../../tmk_core/common/command.c ****             print("VID: " STR(VENDOR_ID) "(" STR(MANUFACTURER) ") "
 867               		.loc 1 283 13 view .LVU189
 868               	.LBE133:
 869 007a 80E0      		ldi r24,lo8(__c.5327)
 870 007c 90E0      		ldi r25,hi8(__c.5327)
 871 007e 0E94 0000 		call xputs
 284:../../tmk_core/common/command.c ****                   "PID: " STR(PRODUCT_ID) "(" STR(PRODUCT) ") "
 872               		.loc 1 284 13 view .LVU190
 873               	.LBB134:
 284:../../tmk_core/common/command.c ****                   "PID: " STR(PRODUCT_ID) "(" STR(PRODUCT) ") "
 874               		.loc 1 284 13 view .LVU191
 284:../../tmk_core/common/command.c ****                   "PID: " STR(PRODUCT_ID) "(" STR(PRODUCT) ") "
 875               		.loc 1 284 13 view .LVU192
 876               	.LBE134:
 877 0082 80E0      		ldi r24,lo8(__c.5329)
 878 0084 90E0      		ldi r25,hi8(__c.5329)
 879 0086 0E94 0000 		call xputs
 287:../../tmk_core/common/command.c ****             /* build options */
 880               		.loc 1 287 13 view .LVU193
 881               	.LBB135:
 287:../../tmk_core/common/command.c ****             /* build options */
 882               		.loc 1 287 13 view .LVU194
 287:../../tmk_core/common/command.c ****             /* build options */
 883               		.loc 1 287 13 view .LVU195
 884               	.LBE135:
 885 008a 80E0      		ldi r24,lo8(__c.5331)
 886 008c 90E0      		ldi r25,hi8(__c.5331)
 887 008e 0E94 0000 		call xputs
 289:../../tmk_core/common/command.c **** #ifdef PROTOCOL_PJRC
 888               		.loc 1 289 13 view .LVU196
 889               	.LBB136:
 289:../../tmk_core/common/command.c **** #ifdef PROTOCOL_PJRC
 890               		.loc 1 289 13 view .LVU197
 289:../../tmk_core/common/command.c **** #ifdef PROTOCOL_PJRC
 891               		.loc 1 289 13 view .LVU198
 892               	.LBE136:
 893 0092 80E0      		ldi r24,lo8(__c.5333)
 894 0094 90E0      		ldi r25,hi8(__c.5333)
 895 0096 0E94 0000 		call xputs
 325:../../tmk_core/common/command.c **** #if defined(__AVR__)
 896               		.loc 1 325 13 view .LVU199
 897               	.LBB137:
 325:../../tmk_core/common/command.c **** #if defined(__AVR__)
 898               		.loc 1 325 13 view .LVU200
 325:../../tmk_core/common/command.c **** #if defined(__AVR__)
 899               		.loc 1 325 13 view .LVU201
 900               	.LBE137:
 901 009a 80E0      		ldi r24,lo8(__c.5335)
 902 009c 90E0      		ldi r25,hi8(__c.5335)
 903 009e 00C0      		rjmp .L97
 904               	.L49:
 190:../../tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 905               		.loc 1 190 5 is_stmt 0 view .LVU202
 906 00a0 8533      		cpi r24,lo8(53)
 907 00a2 01F0      		breq .L63
 908 00a4 00F4      		brsh .L64
 909 00a6 8732      		cpi r24,lo8(39)
 910 00a8 01F0      		breq .L63
 911 00aa 00F4      		brsh .L65
 912 00ac 8E31      		cpi r24,lo8(30)
 913 00ae 00F4      		brsh .+2
 914 00b0 00C0      		rjmp .L55
 376:../../tmk_core/common/command.c ****             break;
 915               		.loc 1 376 13 is_stmt 1 view .LVU203
 916 00b2 8D51      		subi r24,lo8(-(-29))
 917 00b4 00C0      		rjmp .L95
 918               	.L65:
 190:../../tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 919               		.loc 1 190 5 is_stmt 0 view .LVU204
 920 00b6 8932      		cpi r24,lo8(41)
 921 00b8 01F0      		breq .+2
 922 00ba 00C0      		rjmp .L55
 923               	.L63:
 373:../../tmk_core/common/command.c ****             break;
 924               		.loc 1 373 13 is_stmt 1 view .LVU205
 925 00bc 80E0      		ldi r24,0
 926               	.L95:
 379:../../tmk_core/common/command.c ****             break;
 927               		.loc 1 379 13 is_stmt 0 view .LVU206
 928 00be 0E94 0000 		call switch_default_layer
 929 00c2 00C0      		rjmp .L96
 930               	.L64:
 190:../../tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 931               		.loc 1 190 5 view .LVU207
 932 00c4 8334      		cpi r24,lo8(67)
 933 00c6 00F4      		brsh .L67
 934 00c8 8A33      		cpi r24,lo8(58)
 935 00ca 00F0      		brlo .+2
 936 00cc 00C0      		rjmp .L68
 937 00ce 8833      		cpi r24,lo8(56)
 938 00d0 01F4      		brne .+2
 939 00d2 00C0      		rjmp .L57
 940 00d4 00C0      		rjmp .L55
 941               	.L67:
 942 00d6 8334      		cpi r24,lo8(67)
 943 00d8 01F0      		breq .L63
 944 00da 8834      		cpi r24,lo8(72)
 945 00dc 01F0      		breq .+2
 946 00de 00C0      		rjmp .L55
 237:../../tmk_core/common/command.c ****             print("\n\nbootloader... ");
 947               		.loc 1 237 13 is_stmt 1 view .LVU208
 948 00e0 0E94 0000 		call clear_keyboard
 238:../../tmk_core/common/command.c ****             wait_ms(1000);
 949               		.loc 1 238 13 view .LVU209
 950               	.LBB138:
 238:../../tmk_core/common/command.c ****             wait_ms(1000);
 951               		.loc 1 238 13 view .LVU210
 238:../../tmk_core/common/command.c ****             wait_ms(1000);
 952               		.loc 1 238 13 view .LVU211
 953               	.LBE138:
 954 00e4 80E0      		ldi r24,lo8(__c.5302)
 955 00e6 90E0      		ldi r25,hi8(__c.5302)
 956 00e8 0E94 0000 		call xputs
 239:../../tmk_core/common/command.c ****             bootloader_jump(); // not return
 957               		.loc 1 239 13 view .LVU212
 958               	.LBB139:
 959               	.LBI139:
 960               		.file 2 "/usr/avr/include/util/delay.h"
   1:/usr/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/avr/include/util/delay.h **** 
   6:/usr/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/avr/include/util/delay.h **** 
   9:/usr/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/avr/include/util/delay.h **** 
  12:/usr/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/avr/include/util/delay.h ****      distribution.
  16:/usr/avr/include/util/delay.h **** 
  17:/usr/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/avr/include/util/delay.h **** 
  21:/usr/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/avr/include/util/delay.h **** 
  33:/usr/avr/include/util/delay.h **** /* $Id: delay.h.in 2506 2016-02-08 10:05:45Z joerg_wunsch $ */
  34:/usr/avr/include/util/delay.h **** 
  35:/usr/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/avr/include/util/delay.h **** 
  38:/usr/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/usr/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/usr/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/usr/avr/include/util/delay.h **** #  endif
  42:/usr/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/usr/avr/include/util/delay.h **** 
  44:/usr/avr/include/util/delay.h **** #include <inttypes.h>
  45:/usr/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/usr/avr/include/util/delay.h **** #include <math.h>
  47:/usr/avr/include/util/delay.h **** 
  48:/usr/avr/include/util/delay.h **** /** \file */
  49:/usr/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/usr/avr/include/util/delay.h ****     \code
  51:/usr/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/usr/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/usr/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/usr/avr/include/util/delay.h ****     \endcode
  55:/usr/avr/include/util/delay.h **** 
  56:/usr/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/usr/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/usr/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/usr/avr/include/util/delay.h ****     used.
  60:/usr/avr/include/util/delay.h **** 
  61:/usr/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/usr/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/usr/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/usr/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/usr/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/usr/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/usr/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/usr/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/usr/avr/include/util/delay.h **** 
  70:/usr/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/usr/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/usr/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/usr/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/usr/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/usr/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/usr/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/usr/avr/include/util/delay.h ****     routines linked into the application.
  78:/usr/avr/include/util/delay.h **** 
  79:/usr/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/usr/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/usr/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/usr/avr/include/util/delay.h **** 
  83:/usr/avr/include/util/delay.h **** */
  84:/usr/avr/include/util/delay.h **** 
  85:/usr/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/usr/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/usr/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/usr/avr/include/util/delay.h **** #endif
  89:/usr/avr/include/util/delay.h **** 
  90:/usr/avr/include/util/delay.h **** #ifndef F_CPU
  91:/usr/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/usr/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/usr/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/usr/avr/include/util/delay.h ****     \def F_CPU
  95:/usr/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/usr/avr/include/util/delay.h **** 
  97:/usr/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/usr/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/usr/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/usr/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/usr/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/usr/avr/include/util/delay.h **** 
 103:/usr/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/usr/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/usr/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/usr/avr/include/util/delay.h ****     integer value.
 107:/usr/avr/include/util/delay.h ****  */
 108:/usr/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/usr/avr/include/util/delay.h **** #endif
 110:/usr/avr/include/util/delay.h **** 
 111:/usr/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/usr/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/usr/avr/include/util/delay.h **** #endif
 114:/usr/avr/include/util/delay.h **** 
 115:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/usr/avr/include/util/delay.h **** #  include <math.h>
 119:/usr/avr/include/util/delay.h **** #endif
 120:/usr/avr/include/util/delay.h **** 
 121:/usr/avr/include/util/delay.h **** /**
 122:/usr/avr/include/util/delay.h ****    \ingroup util_delay
 123:/usr/avr/include/util/delay.h **** 
 124:/usr/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/usr/avr/include/util/delay.h **** 
 126:/usr/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/usr/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/usr/avr/include/util/delay.h **** 
 129:/usr/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/usr/avr/include/util/delay.h **** 
 131:/usr/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/usr/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/usr/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/usr/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/usr/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/usr/avr/include/util/delay.h **** 
 137:/usr/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/usr/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/usr/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/usr/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/usr/avr/include/util/delay.h **** 
 142:/usr/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/usr/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/usr/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/usr/avr/include/util/delay.h ****    microseconds of delay.
 146:/usr/avr/include/util/delay.h **** 
 147:/usr/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/usr/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/usr/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/usr/avr/include/util/delay.h ****    respectively.
 151:/usr/avr/include/util/delay.h **** 
 152:/usr/avr/include/util/delay.h ****    \note
 153:/usr/avr/include/util/delay.h **** 
 154:/usr/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/usr/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/usr/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/usr/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/usr/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/usr/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/usr/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/usr/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/usr/avr/include/util/delay.h ****    not available to the compiler then.
 163:/usr/avr/include/util/delay.h **** 
 164:/usr/avr/include/util/delay.h ****  */
 165:/usr/avr/include/util/delay.h **** void
 166:/usr/avr/include/util/delay.h **** _delay_ms(double __ms)
 961               		.loc 2 166 1 view .LVU213
 962               	.LBB140:
 167:/usr/avr/include/util/delay.h **** {
 168:/usr/avr/include/util/delay.h **** 	double __tmp ;
 963               		.loc 2 168 2 view .LVU214
 169:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/usr/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 964               		.loc 2 172 2 view .LVU215
 173:/usr/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 965               		.loc 2 173 2 view .LVU216
 174:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 966               		.loc 2 174 2 view .LVU217
 175:/usr/avr/include/util/delay.h **** 
 176:/usr/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/usr/avr/include/util/delay.h **** 
 179:/usr/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/usr/avr/include/util/delay.h **** 
 182:/usr/avr/include/util/delay.h **** 	#else
 183:/usr/avr/include/util/delay.h **** 		//round up by default
 184:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 967               		.loc 2 184 3 view .LVU218
 185:/usr/avr/include/util/delay.h **** 	#endif
 186:/usr/avr/include/util/delay.h **** 
 187:/usr/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 968               		.loc 2 187 2 view .LVU219
 969 00ec 9FEF      		ldi r25,lo8(3199999)
 970 00ee 23ED      		ldi r18,hi8(3199999)
 971 00f0 80E3      		ldi r24,hlo8(3199999)
 972 00f2 9150      	1:	subi r25,1
 973 00f4 2040      		sbci r18,0
 974 00f6 8040      		sbci r24,0
 975 00f8 01F4      		brne 1b
 976 00fa 00C0      		rjmp .
 977 00fc 0000      		nop
 978               	.LBE140:
 979               	.LBE139:
 240:../../tmk_core/common/command.c ****             break;
 980               		.loc 1 240 13 view .LVU220
 981 00fe 0E94 0000 		call bootloader_jump
 241:../../tmk_core/common/command.c ****         case KC_D:
 982               		.loc 1 241 13 view .LVU221
 983 0102 00C0      		rjmp .L96
 984               	.L56:
 206:../../tmk_core/common/command.c ****             print_eeconfig();
 985               		.loc 1 206 13 view .LVU222
 986               	.LBB141:
 206:../../tmk_core/common/command.c ****             print_eeconfig();
 987               		.loc 1 206 13 view .LVU223
 206:../../tmk_core/common/command.c ****             print_eeconfig();
 988               		.loc 1 206 13 view .LVU224
 989               	.LBE141:
 990 0104 80E0      		ldi r24,lo8(__c.5293)
 991 0106 90E0      		ldi r25,hi8(__c.5293)
 992 0108 0E94 0000 		call xputs
 207:../../tmk_core/common/command.c ****             break;
 993               		.loc 1 207 13 view .LVU225
 994               	.LBB142:
 995               	.LBI142:
 148:../../tmk_core/common/command.c **** {
 996               		.loc 1 148 13 view .LVU226
 997               	.LBB143:
 150:../../tmk_core/common/command.c **** 
 998               		.loc 1 150 5 view .LVU227
 999               	.LBE143:
 1000               	.LBE142:
 150:../../tmk_core/common/command.c **** 
 1001               		.loc 1 150 5 view .LVU228
 150:../../tmk_core/common/command.c **** 
 1002               		.loc 1 150 5 view .LVU229
 1003               	.LBB189:
 1004               	.LBB144:
 1005 010c 80E0      		ldi r24,lo8(__c.5197)
 1006 010e 90E0      		ldi r25,hi8(__c.5197)
 1007 0110 0E94 0000 		call xputs
 150:../../tmk_core/common/command.c **** 
 1008               		.loc 1 150 31 view .LVU230
 1009 0114 0E94 0000 		call eeconfig_read_default_layer
 1010               	.LBE144:
 1011               	.LBE189:
 150:../../tmk_core/common/command.c **** 
 1012               		.loc 1 150 31 view .LVU231
 150:../../tmk_core/common/command.c **** 
 1013               		.loc 1 150 31 view .LVU232
 1014               	.LBB190:
 1015               	.LBB145:
 1016 0118 1F92      		push __zero_reg__
 1017               	.LCFI54:
 1018               		.cfi_def_cfa_offset 4
 1019 011a 8F93      		push r24
 1020               	.LCFI55:
 1021               		.cfi_def_cfa_offset 5
 1022 011c 80E0      		ldi r24,lo8(__c.5199)
 1023 011e 90E0      		ldi r25,hi8(__c.5199)
 1024 0120 9F93      		push r25
 1025               	.LCFI56:
 1026               		.cfi_def_cfa_offset 6
 1027 0122 8F93      		push r24
 1028               	.LCFI57:
 1029               		.cfi_def_cfa_offset 7
 1030 0124 0E94 0000 		call __xprintf
 150:../../tmk_core/common/command.c **** 
 1031               		.loc 1 150 73 view .LVU233
 1032               	.LBE145:
 1033               	.LBE190:
 150:../../tmk_core/common/command.c **** 
 1034               		.loc 1 150 73 view .LVU234
 150:../../tmk_core/common/command.c **** 
 1035               		.loc 1 150 73 view .LVU235
 1036               	.LBB191:
 1037               	.LBB146:
 1038 0128 80E0      		ldi r24,lo8(__c.5201)
 1039 012a 90E0      		ldi r25,hi8(__c.5201)
 1040 012c 0E94 0000 		call xputs
 152:../../tmk_core/common/command.c ****     dc.raw = eeconfig_read_debug();
 1041               		.loc 1 152 5 view .LVU236
 153:../../tmk_core/common/command.c ****     print("debug_config.raw: "); print_hex8(dc.raw); print("\n");
 1042               		.loc 1 153 5 view .LVU237
 153:../../tmk_core/common/command.c ****     print("debug_config.raw: "); print_hex8(dc.raw); print("\n");
 1043               		.loc 1 153 14 is_stmt 0 view .LVU238
 1044 0130 0E94 0000 		call eeconfig_read_debug
 1045 0134 C82F      		mov r28,r24
 154:../../tmk_core/common/command.c ****     print(".enable: "); print_dec(dc.enable); print("\n");
 1046               		.loc 1 154 5 is_stmt 1 view .LVU239
 1047               	.LBE146:
 1048               	.LBE191:
 154:../../tmk_core/common/command.c ****     print(".enable: "); print_dec(dc.enable); print("\n");
 1049               		.loc 1 154 5 view .LVU240
 154:../../tmk_core/common/command.c ****     print(".enable: "); print_dec(dc.enable); print("\n");
 1050               		.loc 1 154 5 view .LVU241
 1051               	.LBB192:
 1052               	.LBB147:
 1053 0136 80E0      		ldi r24,lo8(__c.5204)
 1054 0138 90E0      		ldi r25,hi8(__c.5204)
 1055 013a 0E94 0000 		call xputs
 154:../../tmk_core/common/command.c ****     print(".enable: "); print_dec(dc.enable); print("\n");
 1056               		.loc 1 154 34 view .LVU242
 1057               	.LBE147:
 1058               	.LBE192:
 154:../../tmk_core/common/command.c ****     print(".enable: "); print_dec(dc.enable); print("\n");
 1059               		.loc 1 154 34 view .LVU243
 154:../../tmk_core/common/command.c ****     print(".enable: "); print_dec(dc.enable); print("\n");
 1060               		.loc 1 154 34 view .LVU244
 1061               	.LBB193:
 1062               	.LBB148:
 1063 013e 1F92      		push __zero_reg__
 1064               	.LCFI58:
 1065               		.cfi_def_cfa_offset 8
 1066 0140 CF93      		push r28
 1067               	.LCFI59:
 1068               		.cfi_def_cfa_offset 9
 1069 0142 80E0      		ldi r24,lo8(__c.5206)
 1070 0144 90E0      		ldi r25,hi8(__c.5206)
 1071 0146 9F93      		push r25
 1072               	.LCFI60:
 1073               		.cfi_def_cfa_offset 10
 1074 0148 8F93      		push r24
 1075               	.LCFI61:
 1076               		.cfi_def_cfa_offset 11
 1077 014a 0E94 0000 		call __xprintf
 154:../../tmk_core/common/command.c ****     print(".enable: "); print_dec(dc.enable); print("\n");
 1078               		.loc 1 154 54 view .LVU245
 1079               	.LBE148:
 1080               	.LBE193:
 154:../../tmk_core/common/command.c ****     print(".enable: "); print_dec(dc.enable); print("\n");
 1081               		.loc 1 154 54 view .LVU246
 154:../../tmk_core/common/command.c ****     print(".enable: "); print_dec(dc.enable); print("\n");
 1082               		.loc 1 154 54 view .LVU247
 1083               	.LBB194:
 1084               	.LBB149:
 1085 014e 80E0      		ldi r24,lo8(__c.5208)
 1086 0150 90E0      		ldi r25,hi8(__c.5208)
 1087 0152 0E94 0000 		call xputs
 155:../../tmk_core/common/command.c ****     print(".matrix: "); print_dec(dc.matrix); print("\n");
 1088               		.loc 1 155 5 view .LVU248
 1089               	.LBE149:
 1090               	.LBE194:
 155:../../tmk_core/common/command.c ****     print(".matrix: "); print_dec(dc.matrix); print("\n");
 1091               		.loc 1 155 5 view .LVU249
 155:../../tmk_core/common/command.c ****     print(".matrix: "); print_dec(dc.matrix); print("\n");
 1092               		.loc 1 155 5 view .LVU250
 1093               	.LBB195:
 1094               	.LBB150:
 1095 0156 80E0      		ldi r24,lo8(__c.5210)
 1096 0158 90E0      		ldi r25,hi8(__c.5210)
 1097 015a 0E94 0000 		call xputs
 155:../../tmk_core/common/command.c ****     print(".matrix: "); print_dec(dc.matrix); print("\n");
 1098               		.loc 1 155 25 view .LVU251
 1099               	.LBE150:
 1100               	.LBE195:
 155:../../tmk_core/common/command.c ****     print(".matrix: "); print_dec(dc.matrix); print("\n");
 1101               		.loc 1 155 25 view .LVU252
 155:../../tmk_core/common/command.c ****     print(".matrix: "); print_dec(dc.matrix); print("\n");
 1102               		.loc 1 155 25 view .LVU253
 1103               	.LBB196:
 1104               	.LBB151:
 1105 015e 8C2F      		mov r24,r28
 1106 0160 8170      		andi r24,1
 1107 0162 1F92      		push __zero_reg__
 1108               	.LCFI62:
 1109               		.cfi_def_cfa_offset 12
 1110 0164 8F93      		push r24
 1111               	.LCFI63:
 1112               		.cfi_def_cfa_offset 13
 1113 0166 80E0      		ldi r24,lo8(__c.5212)
 1114 0168 90E0      		ldi r25,hi8(__c.5212)
 1115 016a 9F93      		push r25
 1116               	.LCFI64:
 1117               		.cfi_def_cfa_offset 14
 1118 016c 8F93      		push r24
 1119               	.LCFI65:
 1120               		.cfi_def_cfa_offset 15
 1121 016e 0E94 0000 		call __xprintf
 155:../../tmk_core/common/command.c ****     print(".matrix: "); print_dec(dc.matrix); print("\n");
 1122               		.loc 1 155 47 view .LVU254
 1123               	.LBE151:
 1124               	.LBE196:
 155:../../tmk_core/common/command.c ****     print(".matrix: "); print_dec(dc.matrix); print("\n");
 1125               		.loc 1 155 47 view .LVU255
 155:../../tmk_core/common/command.c ****     print(".matrix: "); print_dec(dc.matrix); print("\n");
 1126               		.loc 1 155 47 view .LVU256
 1127               	.LBB197:
 1128               	.LBB152:
 1129 0172 80E0      		ldi r24,lo8(__c.5214)
 1130 0174 90E0      		ldi r25,hi8(__c.5214)
 1131 0176 0E94 0000 		call xputs
 156:../../tmk_core/common/command.c ****     print(".keyboard: "); print_dec(dc.keyboard); print("\n");
 1132               		.loc 1 156 5 view .LVU257
 1133               	.LBE152:
 1134               	.LBE197:
 156:../../tmk_core/common/command.c ****     print(".keyboard: "); print_dec(dc.keyboard); print("\n");
 1135               		.loc 1 156 5 view .LVU258
 156:../../tmk_core/common/command.c ****     print(".keyboard: "); print_dec(dc.keyboard); print("\n");
 1136               		.loc 1 156 5 view .LVU259
 1137               	.LBB198:
 1138               	.LBB153:
 1139 017a 80E0      		ldi r24,lo8(__c.5216)
 1140 017c 90E0      		ldi r25,hi8(__c.5216)
 1141 017e 0E94 0000 		call xputs
 156:../../tmk_core/common/command.c ****     print(".keyboard: "); print_dec(dc.keyboard); print("\n");
 1142               		.loc 1 156 25 view .LVU260
 1143               	.LBE153:
 1144               	.LBE198:
 156:../../tmk_core/common/command.c ****     print(".keyboard: "); print_dec(dc.keyboard); print("\n");
 1145               		.loc 1 156 25 view .LVU261
 156:../../tmk_core/common/command.c ****     print(".keyboard: "); print_dec(dc.keyboard); print("\n");
 1146               		.loc 1 156 25 view .LVU262
 1147               	.LBB199:
 1148               	.LBB154:
 1149 0182 C1FB      		bst r28,1
 1150 0184 8827      		clr r24
 1151 0186 80F9      		bld r24,0
 1152 0188 1F92      		push __zero_reg__
 1153               	.LCFI66:
 1154               		.cfi_def_cfa_offset 16
 1155 018a 8F93      		push r24
 1156               	.LCFI67:
 1157               		.cfi_def_cfa_offset 17
 1158 018c 80E0      		ldi r24,lo8(__c.5218)
 1159 018e 90E0      		ldi r25,hi8(__c.5218)
 1160 0190 9F93      		push r25
 1161               	.LCFI68:
 1162               		.cfi_def_cfa_offset 18
 1163 0192 8F93      		push r24
 1164               	.LCFI69:
 1165               		.cfi_def_cfa_offset 19
 1166 0194 0E94 0000 		call __xprintf
 156:../../tmk_core/common/command.c ****     print(".keyboard: "); print_dec(dc.keyboard); print("\n");
 1167               		.loc 1 156 47 view .LVU263
 1168               	.LBE154:
 1169               	.LBE199:
 156:../../tmk_core/common/command.c ****     print(".keyboard: "); print_dec(dc.keyboard); print("\n");
 1170               		.loc 1 156 47 view .LVU264
 156:../../tmk_core/common/command.c ****     print(".keyboard: "); print_dec(dc.keyboard); print("\n");
 1171               		.loc 1 156 47 view .LVU265
 1172               	.LBB200:
 1173               	.LBB155:
 1174 0198 80E0      		ldi r24,lo8(__c.5220)
 1175 019a 90E0      		ldi r25,hi8(__c.5220)
 1176 019c 0E94 0000 		call xputs
 157:../../tmk_core/common/command.c ****     print(".mouse: "); print_dec(dc.mouse); print("\n");
 1177               		.loc 1 157 5 view .LVU266
 1178               	.LBE155:
 1179               	.LBE200:
 157:../../tmk_core/common/command.c ****     print(".mouse: "); print_dec(dc.mouse); print("\n");
 1180               		.loc 1 157 5 view .LVU267
 157:../../tmk_core/common/command.c ****     print(".mouse: "); print_dec(dc.mouse); print("\n");
 1181               		.loc 1 157 5 view .LVU268
 1182               	.LBB201:
 1183               	.LBB156:
 1184 01a0 80E0      		ldi r24,lo8(__c.5222)
 1185 01a2 90E0      		ldi r25,hi8(__c.5222)
 1186 01a4 0E94 0000 		call xputs
 157:../../tmk_core/common/command.c ****     print(".mouse: "); print_dec(dc.mouse); print("\n");
 1187               		.loc 1 157 27 view .LVU269
 1188               	.LBE156:
 1189               	.LBE201:
 157:../../tmk_core/common/command.c ****     print(".mouse: "); print_dec(dc.mouse); print("\n");
 1190               		.loc 1 157 27 view .LVU270
 157:../../tmk_core/common/command.c ****     print(".mouse: "); print_dec(dc.mouse); print("\n");
 1191               		.loc 1 157 27 view .LVU271
 1192               	.LBB202:
 1193               	.LBB157:
 1194 01a8 C2FB      		bst r28,2
 1195 01aa 8827      		clr r24
 1196 01ac 80F9      		bld r24,0
 1197 01ae 1F92      		push __zero_reg__
 1198               	.LCFI70:
 1199               		.cfi_def_cfa_offset 20
 1200 01b0 8F93      		push r24
 1201               	.LCFI71:
 1202               		.cfi_def_cfa_offset 21
 1203 01b2 80E0      		ldi r24,lo8(__c.5224)
 1204 01b4 90E0      		ldi r25,hi8(__c.5224)
 1205 01b6 9F93      		push r25
 1206               	.LCFI72:
 1207               		.cfi_def_cfa_offset 22
 1208 01b8 8F93      		push r24
 1209               	.LCFI73:
 1210               		.cfi_def_cfa_offset 23
 1211 01ba 0E94 0000 		call __xprintf
 157:../../tmk_core/common/command.c ****     print(".mouse: "); print_dec(dc.mouse); print("\n");
 1212               		.loc 1 157 51 view .LVU272
 1213               	.LBE157:
 1214               	.LBE202:
 157:../../tmk_core/common/command.c ****     print(".mouse: "); print_dec(dc.mouse); print("\n");
 1215               		.loc 1 157 51 view .LVU273
 157:../../tmk_core/common/command.c ****     print(".mouse: "); print_dec(dc.mouse); print("\n");
 1216               		.loc 1 157 51 view .LVU274
 1217               	.LBB203:
 1218               	.LBB158:
 1219 01be 80E0      		ldi r24,lo8(__c.5226)
 1220 01c0 90E0      		ldi r25,hi8(__c.5226)
 1221 01c2 0E94 0000 		call xputs
 158:../../tmk_core/common/command.c **** 
 1222               		.loc 1 158 5 view .LVU275
 1223               	.LBE158:
 1224               	.LBE203:
 158:../../tmk_core/common/command.c **** 
 1225               		.loc 1 158 5 view .LVU276
 158:../../tmk_core/common/command.c **** 
 1226               		.loc 1 158 5 view .LVU277
 1227               	.LBB204:
 1228               	.LBB159:
 1229 01c6 80E0      		ldi r24,lo8(__c.5228)
 1230 01c8 90E0      		ldi r25,hi8(__c.5228)
 1231 01ca 0E94 0000 		call xputs
 158:../../tmk_core/common/command.c **** 
 1232               		.loc 1 158 24 view .LVU278
 1233               	.LBE159:
 1234               	.LBE204:
 158:../../tmk_core/common/command.c **** 
 1235               		.loc 1 158 24 view .LVU279
 158:../../tmk_core/common/command.c **** 
 1236               		.loc 1 158 24 view .LVU280
 1237               	.LBB205:
 1238               	.LBB160:
 1239 01ce C3FB      		bst r28,3
 1240 01d0 CC27      		clr r28
 1241 01d2 C0F9      		bld r28,0
 1242 01d4 1F92      		push __zero_reg__
 1243               	.LCFI74:
 1244               		.cfi_def_cfa_offset 24
 1245 01d6 CF93      		push r28
 1246               	.LCFI75:
 1247               		.cfi_def_cfa_offset 25
 1248 01d8 80E0      		ldi r24,lo8(__c.5230)
 1249 01da 90E0      		ldi r25,hi8(__c.5230)
 1250 01dc 9F93      		push r25
 1251               	.LCFI76:
 1252               		.cfi_def_cfa_offset 26
 1253 01de 8F93      		push r24
 1254               	.LCFI77:
 1255               		.cfi_def_cfa_offset 27
 1256 01e0 0E94 0000 		call __xprintf
 158:../../tmk_core/common/command.c **** 
 1257               		.loc 1 158 45 view .LVU281
 1258               	.LBE160:
 1259               	.LBE205:
 158:../../tmk_core/common/command.c **** 
 1260               		.loc 1 158 45 view .LVU282
 158:../../tmk_core/common/command.c **** 
 1261               		.loc 1 158 45 view .LVU283
 1262               	.LBB206:
 1263               	.LBB161:
 1264 01e4 80E0      		ldi r24,lo8(__c.5232)
 1265 01e6 90E0      		ldi r25,hi8(__c.5232)
 1266 01e8 0E94 0000 		call xputs
 160:../../tmk_core/common/command.c ****     kc.raw = eeconfig_read_keymap();
 1267               		.loc 1 160 5 view .LVU284
 161:../../tmk_core/common/command.c ****     print("keymap_config.raw: "); print_hex8(kc.raw); print("\n");
 1268               		.loc 1 161 5 view .LVU285
 161:../../tmk_core/common/command.c ****     print("keymap_config.raw: "); print_hex8(kc.raw); print("\n");
 1269               		.loc 1 161 14 is_stmt 0 view .LVU286
 1270 01ec 0E94 0000 		call eeconfig_read_keymap
 1271 01f0 C82F      		mov r28,r24
 162:../../tmk_core/common/command.c ****     print(".swap_control_capslock: "); print_dec(kc.swap_control_capslock); print("\n");
 1272               		.loc 1 162 5 is_stmt 1 view .LVU287
 1273               	.LBE161:
 1274               	.LBE206:
 162:../../tmk_core/common/command.c ****     print(".swap_control_capslock: "); print_dec(kc.swap_control_capslock); print("\n");
 1275               		.loc 1 162 5 view .LVU288
 162:../../tmk_core/common/command.c ****     print(".swap_control_capslock: "); print_dec(kc.swap_control_capslock); print("\n");
 1276               		.loc 1 162 5 view .LVU289
 1277               	.LBB207:
 1278               	.LBB162:
 1279 01f2 80E0      		ldi r24,lo8(__c.5235)
 1280 01f4 90E0      		ldi r25,hi8(__c.5235)
 1281 01f6 0E94 0000 		call xputs
 162:../../tmk_core/common/command.c ****     print(".swap_control_capslock: "); print_dec(kc.swap_control_capslock); print("\n");
 1282               		.loc 1 162 35 view .LVU290
 1283               	.LBE162:
 1284               	.LBE207:
 162:../../tmk_core/common/command.c ****     print(".swap_control_capslock: "); print_dec(kc.swap_control_capslock); print("\n");
 1285               		.loc 1 162 35 view .LVU291
 162:../../tmk_core/common/command.c ****     print(".swap_control_capslock: "); print_dec(kc.swap_control_capslock); print("\n");
 1286               		.loc 1 162 35 view .LVU292
 1287               	.LBB208:
 1288               	.LBB163:
 1289 01fa 1F92      		push __zero_reg__
 1290               	.LCFI78:
 1291               		.cfi_def_cfa_offset 28
 1292 01fc CF93      		push r28
 1293               	.LCFI79:
 1294               		.cfi_def_cfa_offset 29
 1295 01fe 80E0      		ldi r24,lo8(__c.5237)
 1296 0200 90E0      		ldi r25,hi8(__c.5237)
 1297 0202 9F93      		push r25
 1298               	.LCFI80:
 1299               		.cfi_def_cfa_offset 30
 1300 0204 8F93      		push r24
 1301               	.LCFI81:
 1302               		.cfi_def_cfa_offset 31
 1303 0206 0E94 0000 		call __xprintf
 162:../../tmk_core/common/command.c ****     print(".swap_control_capslock: "); print_dec(kc.swap_control_capslock); print("\n");
 1304               		.loc 1 162 55 view .LVU293
 1305               	.LBE163:
 1306               	.LBE208:
 162:../../tmk_core/common/command.c ****     print(".swap_control_capslock: "); print_dec(kc.swap_control_capslock); print("\n");
 1307               		.loc 1 162 55 view .LVU294
 162:../../tmk_core/common/command.c ****     print(".swap_control_capslock: "); print_dec(kc.swap_control_capslock); print("\n");
 1308               		.loc 1 162 55 view .LVU295
 1309               	.LBB209:
 1310               	.LBB164:
 1311 020a 80E0      		ldi r24,lo8(__c.5239)
 1312 020c 90E0      		ldi r25,hi8(__c.5239)
 1313 020e 0E94 0000 		call xputs
 163:../../tmk_core/common/command.c ****     print(".capslock_to_control: "); print_dec(kc.capslock_to_control); print("\n");
 1314               		.loc 1 163 5 view .LVU296
 1315               	.LBE164:
 1316               	.LBE209:
 163:../../tmk_core/common/command.c ****     print(".capslock_to_control: "); print_dec(kc.capslock_to_control); print("\n");
 1317               		.loc 1 163 5 view .LVU297
 163:../../tmk_core/common/command.c ****     print(".capslock_to_control: "); print_dec(kc.capslock_to_control); print("\n");
 1318               		.loc 1 163 5 view .LVU298
 1319               	.LBB210:
 1320               	.LBB165:
 1321 0212 80E0      		ldi r24,lo8(__c.5241)
 1322 0214 90E0      		ldi r25,hi8(__c.5241)
 1323 0216 0E94 0000 		call xputs
 163:../../tmk_core/common/command.c ****     print(".capslock_to_control: "); print_dec(kc.capslock_to_control); print("\n");
 1324               		.loc 1 163 40 view .LVU299
 1325               	.LBE165:
 1326               	.LBE210:
 163:../../tmk_core/common/command.c ****     print(".capslock_to_control: "); print_dec(kc.capslock_to_control); print("\n");
 1327               		.loc 1 163 40 view .LVU300
 163:../../tmk_core/common/command.c ****     print(".capslock_to_control: "); print_dec(kc.capslock_to_control); print("\n");
 1328               		.loc 1 163 40 view .LVU301
 1329               	.LBB211:
 1330               	.LBB166:
 1331 021a 8C2F      		mov r24,r28
 1332 021c 8170      		andi r24,1
 1333 021e 1F92      		push __zero_reg__
 1334               	.LCFI82:
 1335               		.cfi_def_cfa_offset 32
 1336 0220 8F93      		push r24
 1337               	.LCFI83:
 1338               		.cfi_def_cfa_offset 33
 1339 0222 80E0      		ldi r24,lo8(__c.5243)
 1340 0224 90E0      		ldi r25,hi8(__c.5243)
 1341 0226 9F93      		push r25
 1342               	.LCFI84:
 1343               		.cfi_def_cfa_offset 34
 1344 0228 8F93      		push r24
 1345               	.LCFI85:
 1346               		.cfi_def_cfa_offset 35
 1347 022a 0E94 0000 		call __xprintf
 163:../../tmk_core/common/command.c ****     print(".capslock_to_control: "); print_dec(kc.capslock_to_control); print("\n");
 1348               		.loc 1 163 77 view .LVU302
 1349               	.LBE166:
 1350               	.LBE211:
 163:../../tmk_core/common/command.c ****     print(".capslock_to_control: "); print_dec(kc.capslock_to_control); print("\n");
 1351               		.loc 1 163 77 view .LVU303
 163:../../tmk_core/common/command.c ****     print(".capslock_to_control: "); print_dec(kc.capslock_to_control); print("\n");
 1352               		.loc 1 163 77 view .LVU304
 1353               	.LBB212:
 1354               	.LBB167:
 1355 022e 8DB7      		in r24,__SP_L__
 1356 0230 9EB7      		in r25,__SP_H__
 1357 0232 8096      		adiw r24,32
 1358 0234 0FB6      		in __tmp_reg__,__SREG__
 1359 0236 F894      		cli
 1360 0238 9EBF      		out __SP_H__,r25
 1361 023a 0FBE      		out __SREG__,__tmp_reg__
 1362 023c 8DBF      		out __SP_L__,r24
 1363               	.LCFI86:
 1364               		.cfi_def_cfa_offset 3
 1365 023e 80E0      		ldi r24,lo8(__c.5245)
 1366 0240 90E0      		ldi r25,hi8(__c.5245)
 1367 0242 0E94 0000 		call xputs
 164:../../tmk_core/common/command.c ****     print(".swap_lalt_lgui: "); print_dec(kc.swap_lalt_lgui); print("\n");
 1368               		.loc 1 164 5 view .LVU305
 1369               	.LBE167:
 1370               	.LBE212:
 164:../../tmk_core/common/command.c ****     print(".swap_lalt_lgui: "); print_dec(kc.swap_lalt_lgui); print("\n");
 1371               		.loc 1 164 5 view .LVU306
 164:../../tmk_core/common/command.c ****     print(".swap_lalt_lgui: "); print_dec(kc.swap_lalt_lgui); print("\n");
 1372               		.loc 1 164 5 view .LVU307
 1373               	.LBB213:
 1374               	.LBB168:
 1375 0246 80E0      		ldi r24,lo8(__c.5247)
 1376 0248 90E0      		ldi r25,hi8(__c.5247)
 1377 024a 0E94 0000 		call xputs
 164:../../tmk_core/common/command.c ****     print(".swap_lalt_lgui: "); print_dec(kc.swap_lalt_lgui); print("\n");
 1378               		.loc 1 164 38 view .LVU308
 1379               	.LBE168:
 1380               	.LBE213:
 164:../../tmk_core/common/command.c ****     print(".swap_lalt_lgui: "); print_dec(kc.swap_lalt_lgui); print("\n");
 1381               		.loc 1 164 38 view .LVU309
 164:../../tmk_core/common/command.c ****     print(".swap_lalt_lgui: "); print_dec(kc.swap_lalt_lgui); print("\n");
 1382               		.loc 1 164 38 view .LVU310
 1383               	.LBB214:
 1384               	.LBB169:
 1385 024e C1FB      		bst r28,1
 1386 0250 8827      		clr r24
 1387 0252 80F9      		bld r24,0
 1388 0254 1F92      		push __zero_reg__
 1389               	.LCFI87:
 1390               		.cfi_def_cfa_offset 4
 1391 0256 8F93      		push r24
 1392               	.LCFI88:
 1393               		.cfi_def_cfa_offset 5
 1394 0258 80E0      		ldi r24,lo8(__c.5249)
 1395 025a 90E0      		ldi r25,hi8(__c.5249)
 1396 025c 9F93      		push r25
 1397               	.LCFI89:
 1398               		.cfi_def_cfa_offset 6
 1399 025e 8F93      		push r24
 1400               	.LCFI90:
 1401               		.cfi_def_cfa_offset 7
 1402 0260 0E94 0000 		call __xprintf
 164:../../tmk_core/common/command.c ****     print(".swap_lalt_lgui: "); print_dec(kc.swap_lalt_lgui); print("\n");
 1403               		.loc 1 164 73 view .LVU311
 1404               	.LBE169:
 1405               	.LBE214:
 164:../../tmk_core/common/command.c ****     print(".swap_lalt_lgui: "); print_dec(kc.swap_lalt_lgui); print("\n");
 1406               		.loc 1 164 73 view .LVU312
 164:../../tmk_core/common/command.c ****     print(".swap_lalt_lgui: "); print_dec(kc.swap_lalt_lgui); print("\n");
 1407               		.loc 1 164 73 view .LVU313
 1408               	.LBB215:
 1409               	.LBB170:
 1410 0264 80E0      		ldi r24,lo8(__c.5251)
 1411 0266 90E0      		ldi r25,hi8(__c.5251)
 1412 0268 0E94 0000 		call xputs
 165:../../tmk_core/common/command.c ****     print(".swap_ralt_rgui: "); print_dec(kc.swap_ralt_rgui); print("\n");
 1413               		.loc 1 165 5 view .LVU314
 1414               	.LBE170:
 1415               	.LBE215:
 165:../../tmk_core/common/command.c ****     print(".swap_ralt_rgui: "); print_dec(kc.swap_ralt_rgui); print("\n");
 1416               		.loc 1 165 5 view .LVU315
 165:../../tmk_core/common/command.c ****     print(".swap_ralt_rgui: "); print_dec(kc.swap_ralt_rgui); print("\n");
 1417               		.loc 1 165 5 view .LVU316
 1418               	.LBB216:
 1419               	.LBB171:
 1420 026c 80E0      		ldi r24,lo8(__c.5253)
 1421 026e 90E0      		ldi r25,hi8(__c.5253)
 1422 0270 0E94 0000 		call xputs
 165:../../tmk_core/common/command.c ****     print(".swap_ralt_rgui: "); print_dec(kc.swap_ralt_rgui); print("\n");
 1423               		.loc 1 165 33 view .LVU317
 1424               	.LBE171:
 1425               	.LBE216:
 165:../../tmk_core/common/command.c ****     print(".swap_ralt_rgui: "); print_dec(kc.swap_ralt_rgui); print("\n");
 1426               		.loc 1 165 33 view .LVU318
 165:../../tmk_core/common/command.c ****     print(".swap_ralt_rgui: "); print_dec(kc.swap_ralt_rgui); print("\n");
 1427               		.loc 1 165 33 view .LVU319
 1428               	.LBB217:
 1429               	.LBB172:
 1430 0274 C2FB      		bst r28,2
 1431 0276 8827      		clr r24
 1432 0278 80F9      		bld r24,0
 1433 027a 1F92      		push __zero_reg__
 1434               	.LCFI91:
 1435               		.cfi_def_cfa_offset 8
 1436 027c 8F93      		push r24
 1437               	.LCFI92:
 1438               		.cfi_def_cfa_offset 9
 1439 027e 80E0      		ldi r24,lo8(__c.5255)
 1440 0280 90E0      		ldi r25,hi8(__c.5255)
 1441 0282 9F93      		push r25
 1442               	.LCFI93:
 1443               		.cfi_def_cfa_offset 10
 1444 0284 8F93      		push r24
 1445               	.LCFI94:
 1446               		.cfi_def_cfa_offset 11
 1447 0286 0E94 0000 		call __xprintf
 165:../../tmk_core/common/command.c ****     print(".swap_ralt_rgui: "); print_dec(kc.swap_ralt_rgui); print("\n");
 1448               		.loc 1 165 63 view .LVU320
 1449               	.LBE172:
 1450               	.LBE217:
 165:../../tmk_core/common/command.c ****     print(".swap_ralt_rgui: "); print_dec(kc.swap_ralt_rgui); print("\n");
 1451               		.loc 1 165 63 view .LVU321
 165:../../tmk_core/common/command.c ****     print(".swap_ralt_rgui: "); print_dec(kc.swap_ralt_rgui); print("\n");
 1452               		.loc 1 165 63 view .LVU322
 1453               	.LBB218:
 1454               	.LBB173:
 1455 028a 80E0      		ldi r24,lo8(__c.5257)
 1456 028c 90E0      		ldi r25,hi8(__c.5257)
 1457 028e 0E94 0000 		call xputs
 166:../../tmk_core/common/command.c ****     print(".no_gui: "); print_dec(kc.no_gui); print("\n");
 1458               		.loc 1 166 5 view .LVU323
 1459               	.LBE173:
 1460               	.LBE218:
 166:../../tmk_core/common/command.c ****     print(".no_gui: "); print_dec(kc.no_gui); print("\n");
 1461               		.loc 1 166 5 view .LVU324
 166:../../tmk_core/common/command.c ****     print(".no_gui: "); print_dec(kc.no_gui); print("\n");
 1462               		.loc 1 166 5 view .LVU325
 1463               	.LBB219:
 1464               	.LBB174:
 1465 0292 80E0      		ldi r24,lo8(__c.5259)
 1466 0294 90E0      		ldi r25,hi8(__c.5259)
 1467 0296 0E94 0000 		call xputs
 166:../../tmk_core/common/command.c ****     print(".no_gui: "); print_dec(kc.no_gui); print("\n");
 1468               		.loc 1 166 33 view .LVU326
 1469               	.LBE174:
 1470               	.LBE219:
 166:../../tmk_core/common/command.c ****     print(".no_gui: "); print_dec(kc.no_gui); print("\n");
 1471               		.loc 1 166 33 view .LVU327
 166:../../tmk_core/common/command.c ****     print(".no_gui: "); print_dec(kc.no_gui); print("\n");
 1472               		.loc 1 166 33 view .LVU328
 1473               	.LBB220:
 1474               	.LBB175:
 1475 029a C3FB      		bst r28,3
 1476 029c 8827      		clr r24
 1477 029e 80F9      		bld r24,0
 1478 02a0 1F92      		push __zero_reg__
 1479               	.LCFI95:
 1480               		.cfi_def_cfa_offset 12
 1481 02a2 8F93      		push r24
 1482               	.LCFI96:
 1483               		.cfi_def_cfa_offset 13
 1484 02a4 80E0      		ldi r24,lo8(__c.5261)
 1485 02a6 90E0      		ldi r25,hi8(__c.5261)
 1486 02a8 9F93      		push r25
 1487               	.LCFI97:
 1488               		.cfi_def_cfa_offset 14
 1489 02aa 8F93      		push r24
 1490               	.LCFI98:
 1491               		.cfi_def_cfa_offset 15
 1492 02ac 0E94 0000 		call __xprintf
 166:../../tmk_core/common/command.c ****     print(".no_gui: "); print_dec(kc.no_gui); print("\n");
 1493               		.loc 1 166 63 view .LVU329
 1494               	.LBE175:
 1495               	.LBE220:
 166:../../tmk_core/common/command.c ****     print(".no_gui: "); print_dec(kc.no_gui); print("\n");
 1496               		.loc 1 166 63 view .LVU330
 166:../../tmk_core/common/command.c ****     print(".no_gui: "); print_dec(kc.no_gui); print("\n");
 1497               		.loc 1 166 63 view .LVU331
 1498               	.LBB221:
 1499               	.LBB176:
 1500 02b0 80E0      		ldi r24,lo8(__c.5263)
 1501 02b2 90E0      		ldi r25,hi8(__c.5263)
 1502 02b4 0E94 0000 		call xputs
 167:../../tmk_core/common/command.c ****     print(".swap_grave_esc: "); print_dec(kc.swap_grave_esc); print("\n");
 1503               		.loc 1 167 5 view .LVU332
 1504               	.LBE176:
 1505               	.LBE221:
 167:../../tmk_core/common/command.c ****     print(".swap_grave_esc: "); print_dec(kc.swap_grave_esc); print("\n");
 1506               		.loc 1 167 5 view .LVU333
 167:../../tmk_core/common/command.c ****     print(".swap_grave_esc: "); print_dec(kc.swap_grave_esc); print("\n");
 1507               		.loc 1 167 5 view .LVU334
 1508               	.LBB222:
 1509               	.LBB177:
 1510 02b8 80E0      		ldi r24,lo8(__c.5265)
 1511 02ba 90E0      		ldi r25,hi8(__c.5265)
 1512 02bc 0E94 0000 		call xputs
 167:../../tmk_core/common/command.c ****     print(".swap_grave_esc: "); print_dec(kc.swap_grave_esc); print("\n");
 1513               		.loc 1 167 25 view .LVU335
 1514               	.LBE177:
 1515               	.LBE222:
 167:../../tmk_core/common/command.c ****     print(".swap_grave_esc: "); print_dec(kc.swap_grave_esc); print("\n");
 1516               		.loc 1 167 25 view .LVU336
 167:../../tmk_core/common/command.c ****     print(".swap_grave_esc: "); print_dec(kc.swap_grave_esc); print("\n");
 1517               		.loc 1 167 25 view .LVU337
 1518               	.LBB223:
 1519               	.LBB178:
 1520 02c0 C4FB      		bst r28,4
 1521 02c2 8827      		clr r24
 1522 02c4 80F9      		bld r24,0
 1523 02c6 1F92      		push __zero_reg__
 1524               	.LCFI99:
 1525               		.cfi_def_cfa_offset 16
 1526 02c8 8F93      		push r24
 1527               	.LCFI100:
 1528               		.cfi_def_cfa_offset 17
 1529 02ca 80E0      		ldi r24,lo8(__c.5267)
 1530 02cc 90E0      		ldi r25,hi8(__c.5267)
 1531 02ce 9F93      		push r25
 1532               	.LCFI101:
 1533               		.cfi_def_cfa_offset 18
 1534 02d0 8F93      		push r24
 1535               	.LCFI102:
 1536               		.cfi_def_cfa_offset 19
 1537 02d2 0E94 0000 		call __xprintf
 167:../../tmk_core/common/command.c ****     print(".swap_grave_esc: "); print_dec(kc.swap_grave_esc); print("\n");
 1538               		.loc 1 167 47 view .LVU338
 1539               	.LBE178:
 1540               	.LBE223:
 167:../../tmk_core/common/command.c ****     print(".swap_grave_esc: "); print_dec(kc.swap_grave_esc); print("\n");
 1541               		.loc 1 167 47 view .LVU339
 167:../../tmk_core/common/command.c ****     print(".swap_grave_esc: "); print_dec(kc.swap_grave_esc); print("\n");
 1542               		.loc 1 167 47 view .LVU340
 1543               	.LBB224:
 1544               	.LBB179:
 1545 02d6 80E0      		ldi r24,lo8(__c.5269)
 1546 02d8 90E0      		ldi r25,hi8(__c.5269)
 1547 02da 0E94 0000 		call xputs
 168:../../tmk_core/common/command.c ****     print(".swap_backslash_backspace: "); print_dec(kc.swap_backslash_backspace); print("\n");
 1548               		.loc 1 168 5 view .LVU341
 1549               	.LBE179:
 1550               	.LBE224:
 168:../../tmk_core/common/command.c ****     print(".swap_backslash_backspace: "); print_dec(kc.swap_backslash_backspace); print("\n");
 1551               		.loc 1 168 5 view .LVU342
 168:../../tmk_core/common/command.c ****     print(".swap_backslash_backspace: "); print_dec(kc.swap_backslash_backspace); print("\n");
 1552               		.loc 1 168 5 view .LVU343
 1553               	.LBB225:
 1554               	.LBB180:
 1555 02de 80E0      		ldi r24,lo8(__c.5271)
 1556 02e0 90E0      		ldi r25,hi8(__c.5271)
 1557 02e2 0E94 0000 		call xputs
 168:../../tmk_core/common/command.c ****     print(".swap_backslash_backspace: "); print_dec(kc.swap_backslash_backspace); print("\n");
 1558               		.loc 1 168 33 view .LVU344
 1559               	.LBE180:
 1560               	.LBE225:
 168:../../tmk_core/common/command.c ****     print(".swap_backslash_backspace: "); print_dec(kc.swap_backslash_backspace); print("\n");
 1561               		.loc 1 168 33 view .LVU345
 168:../../tmk_core/common/command.c ****     print(".swap_backslash_backspace: "); print_dec(kc.swap_backslash_backspace); print("\n");
 1562               		.loc 1 168 33 view .LVU346
 1563               	.LBB226:
 1564               	.LBB181:
 1565 02e6 C5FB      		bst r28,5
 1566 02e8 8827      		clr r24
 1567 02ea 80F9      		bld r24,0
 1568 02ec 1F92      		push __zero_reg__
 1569               	.LCFI103:
 1570               		.cfi_def_cfa_offset 20
 1571 02ee 8F93      		push r24
 1572               	.LCFI104:
 1573               		.cfi_def_cfa_offset 21
 1574 02f0 80E0      		ldi r24,lo8(__c.5273)
 1575 02f2 90E0      		ldi r25,hi8(__c.5273)
 1576 02f4 9F93      		push r25
 1577               	.LCFI105:
 1578               		.cfi_def_cfa_offset 22
 1579 02f6 8F93      		push r24
 1580               	.LCFI106:
 1581               		.cfi_def_cfa_offset 23
 1582 02f8 0E94 0000 		call __xprintf
 168:../../tmk_core/common/command.c ****     print(".swap_backslash_backspace: "); print_dec(kc.swap_backslash_backspace); print("\n");
 1583               		.loc 1 168 63 view .LVU347
 1584               	.LBE181:
 1585               	.LBE226:
 168:../../tmk_core/common/command.c ****     print(".swap_backslash_backspace: "); print_dec(kc.swap_backslash_backspace); print("\n");
 1586               		.loc 1 168 63 view .LVU348
 168:../../tmk_core/common/command.c ****     print(".swap_backslash_backspace: "); print_dec(kc.swap_backslash_backspace); print("\n");
 1587               		.loc 1 168 63 view .LVU349
 1588               	.LBB227:
 1589               	.LBB182:
 1590 02fc 80E0      		ldi r24,lo8(__c.5275)
 1591 02fe 90E0      		ldi r25,hi8(__c.5275)
 1592 0300 0E94 0000 		call xputs
 169:../../tmk_core/common/command.c ****     print(".nkro: "); print_dec(kc.nkro); print("\n");
 1593               		.loc 1 169 5 view .LVU350
 1594               	.LBE182:
 1595               	.LBE227:
 169:../../tmk_core/common/command.c ****     print(".nkro: "); print_dec(kc.nkro); print("\n");
 1596               		.loc 1 169 5 view .LVU351
 169:../../tmk_core/common/command.c ****     print(".nkro: "); print_dec(kc.nkro); print("\n");
 1597               		.loc 1 169 5 view .LVU352
 1598               	.LBB228:
 1599               	.LBB183:
 1600 0304 80E0      		ldi r24,lo8(__c.5277)
 1601 0306 90E0      		ldi r25,hi8(__c.5277)
 1602 0308 0E94 0000 		call xputs
 169:../../tmk_core/common/command.c ****     print(".nkro: "); print_dec(kc.nkro); print("\n");
 1603               		.loc 1 169 43 view .LVU353
 1604               	.LBE183:
 1605               	.LBE228:
 169:../../tmk_core/common/command.c ****     print(".nkro: "); print_dec(kc.nkro); print("\n");
 1606               		.loc 1 169 43 view .LVU354
 169:../../tmk_core/common/command.c ****     print(".nkro: "); print_dec(kc.nkro); print("\n");
 1607               		.loc 1 169 43 view .LVU355
 1608               	.LBB229:
 1609               	.LBB184:
 1610 030c C6FB      		bst r28,6
 1611 030e 8827      		clr r24
 1612 0310 80F9      		bld r24,0
 1613 0312 1F92      		push __zero_reg__
 1614               	.LCFI107:
 1615               		.cfi_def_cfa_offset 24
 1616 0314 8F93      		push r24
 1617               	.LCFI108:
 1618               		.cfi_def_cfa_offset 25
 1619 0316 80E0      		ldi r24,lo8(__c.5279)
 1620 0318 90E0      		ldi r25,hi8(__c.5279)
 1621 031a 9F93      		push r25
 1622               	.LCFI109:
 1623               		.cfi_def_cfa_offset 26
 1624 031c 8F93      		push r24
 1625               	.LCFI110:
 1626               		.cfi_def_cfa_offset 27
 1627 031e 0E94 0000 		call __xprintf
 169:../../tmk_core/common/command.c ****     print(".nkro: "); print_dec(kc.nkro); print("\n");
 1628               		.loc 1 169 83 view .LVU356
 1629               	.LBE184:
 1630               	.LBE229:
 169:../../tmk_core/common/command.c ****     print(".nkro: "); print_dec(kc.nkro); print("\n");
 1631               		.loc 1 169 83 view .LVU357
 169:../../tmk_core/common/command.c ****     print(".nkro: "); print_dec(kc.nkro); print("\n");
 1632               		.loc 1 169 83 view .LVU358
 1633               	.LBB230:
 1634               	.LBB185:
 1635 0322 80E0      		ldi r24,lo8(__c.5281)
 1636 0324 90E0      		ldi r25,hi8(__c.5281)
 1637 0326 0E94 0000 		call xputs
 170:../../tmk_core/common/command.c **** 
 1638               		.loc 1 170 5 view .LVU359
 1639               	.LBE185:
 1640               	.LBE230:
 170:../../tmk_core/common/command.c **** 
 1641               		.loc 1 170 5 view .LVU360
 170:../../tmk_core/common/command.c **** 
 1642               		.loc 1 170 5 view .LVU361
 1643               	.LBB231:
 1644               	.LBB186:
 1645 032a 80E0      		ldi r24,lo8(__c.5283)
 1646 032c 90E0      		ldi r25,hi8(__c.5283)
 1647 032e 0E94 0000 		call xputs
 170:../../tmk_core/common/command.c **** 
 1648               		.loc 1 170 23 view .LVU362
 1649               	.LBE186:
 1650               	.LBE231:
 170:../../tmk_core/common/command.c **** 
 1651               		.loc 1 170 23 view .LVU363
 170:../../tmk_core/common/command.c **** 
 1652               		.loc 1 170 23 view .LVU364
 1653               	.LBB232:
 1654               	.LBB187:
 1655 0332 C7FB      		bst r28,7
 1656 0334 CC27      		clr r28
 1657 0336 C0F9      		bld r28,0
 1658 0338 1F92      		push __zero_reg__
 1659               	.LCFI111:
 1660               		.cfi_def_cfa_offset 28
 1661 033a CF93      		push r28
 1662               	.LCFI112:
 1663               		.cfi_def_cfa_offset 29
 1664 033c 80E0      		ldi r24,lo8(__c.5285)
 1665 033e 90E0      		ldi r25,hi8(__c.5285)
 1666 0340 9F93      		push r25
 1667               	.LCFI113:
 1668               		.cfi_def_cfa_offset 30
 1669 0342 8F93      		push r24
 1670               	.LCFI114:
 1671               		.cfi_def_cfa_offset 31
 1672 0344 0E94 0000 		call __xprintf
 170:../../tmk_core/common/command.c **** 
 1673               		.loc 1 170 43 view .LVU365
 1674               	.LBE187:
 1675               	.LBE232:
 170:../../tmk_core/common/command.c **** 
 1676               		.loc 1 170 43 view .LVU366
 170:../../tmk_core/common/command.c **** 
 1677               		.loc 1 170 43 view .LVU367
 1678               	.LBB233:
 1679               	.LBB188:
 1680 0348 80E0      		ldi r24,lo8(__c.5287)
 1681 034a 90E0      		ldi r25,hi8(__c.5287)
 1682 034c 0E94 0000 		call xputs
 1683 0350 8DB7      		in r24,__SP_L__
 1684 0352 9EB7      		in r25,__SP_H__
 1685 0354 4C96      		adiw r24,28
 1686 0356 0FB6      		in __tmp_reg__,__SREG__
 1687 0358 F894      		cli
 1688 035a 9EBF      		out __SP_H__,r25
 1689 035c 0FBE      		out __SREG__,__tmp_reg__
 1690 035e 8DBF      		out __SP_L__,r24
 1691               	.LCFI115:
 1692               		.cfi_def_cfa_offset 3
 1693               	.L96:
 1694               	.LBE188:
 1695               	.LBE233:
 380:../../tmk_core/common/command.c ****         default:
 1696               		.loc 1 380 13 view .LVU368
 385:../../tmk_core/common/command.c **** }
 1697               		.loc 1 385 12 is_stmt 0 view .LVU369
 1698 0360 C1E0      		ldi r28,lo8(1)
 380:../../tmk_core/common/command.c ****         default:
 1699               		.loc 1 380 13 view .LVU370
 1700 0362 00C0      		rjmp .L47
 1701               	.L54:
 228:../../tmk_core/common/command.c ****             debug_keyboard = false;
 1702               		.loc 1 228 13 is_stmt 1 view .LVU371
 229:../../tmk_core/common/command.c ****             debug_mouse    = false;
 1703               		.loc 1 229 13 view .LVU372
 230:../../tmk_core/common/command.c ****             debug_enable   = false;
 1704               		.loc 1 230 13 view .LVU373
 231:../../tmk_core/common/command.c ****             command_console_help();
 1705               		.loc 1 231 13 view .LVU374
 231:../../tmk_core/common/command.c ****             command_console_help();
 1706               		.loc 1 231 28 is_stmt 0 view .LVU375
 1707 0364 8091 0000 		lds r24,debug_config
 1708 0368 807F      		andi r24,lo8(-16)
 1709 036a 8093 0000 		sts debug_config,r24
 232:../../tmk_core/common/command.c ****             print("C> ");
 1710               		.loc 1 232 13 is_stmt 1 view .LVU376
 1711               	.LBB234:
 1712               	.LBI234:
 392:../../tmk_core/common/command.c **** {
 1713               		.loc 1 392 13 view .LVU377
 1714               	.LBB235:
 394:../../tmk_core/common/command.c ****           "ESC/q:	quit\n"
 1715               		.loc 1 394 5 view .LVU378
 1716               	.LBE235:
 1717               	.LBE234:
 394:../../tmk_core/common/command.c ****           "ESC/q:	quit\n"
 1718               		.loc 1 394 5 view .LVU379
 394:../../tmk_core/common/command.c ****           "ESC/q:	quit\n"
 1719               		.loc 1 394 5 view .LVU380
 1720               	.LBB237:
 1721               	.LBB236:
 1722 036e 80E0      		ldi r24,lo8(__c.5367)
 1723 0370 90E0      		ldi r25,hi8(__c.5367)
 1724 0372 0E94 0000 		call xputs
 1725               	.LBE236:
 1726               	.LBE237:
 233:../../tmk_core/common/command.c ****             command_state = CONSOLE;
 1727               		.loc 1 233 13 view .LVU381
 1728               	.LBB238:
 233:../../tmk_core/common/command.c ****             command_state = CONSOLE;
 1729               		.loc 1 233 13 view .LVU382
 233:../../tmk_core/common/command.c ****             command_state = CONSOLE;
 1730               		.loc 1 233 13 view .LVU383
 1731               	.LBE238:
 1732 0376 80E0      		ldi r24,lo8(__c.5299)
 1733 0378 90E0      		ldi r25,hi8(__c.5299)
 1734 037a 0E94 0000 		call xputs
 234:../../tmk_core/common/command.c ****             break;
 1735               		.loc 1 234 13 view .LVU384
 234:../../tmk_core/common/command.c ****             break;
 1736               		.loc 1 234 27 is_stmt 0 view .LVU385
 1737 037e 81E0      		ldi r24,lo8(1)
 1738 0380 8093 0000 		sts command_state,r24
 235:../../tmk_core/common/command.c ****         case KC_PAUSE:
 1739               		.loc 1 235 13 is_stmt 1 view .LVU386
 1740 0384 00C0      		rjmp .L96
 1741               	.L52:
 243:../../tmk_core/common/command.c ****                 print("\ndebug: off\n");
 1742               		.loc 1 243 13 view .LVU387
 243:../../tmk_core/common/command.c ****                 print("\ndebug: off\n");
 1743               		.loc 1 243 17 is_stmt 0 view .LVU388
 1744 0386 8091 0000 		lds r24,debug_config
 243:../../tmk_core/common/command.c ****                 print("\ndebug: off\n");
 1745               		.loc 1 243 16 view .LVU389
 1746 038a 80FF      		sbrs r24,0
 1747 038c 00C0      		rjmp .L71
 244:../../tmk_core/common/command.c ****                 debug_matrix   = false;
 1748               		.loc 1 244 17 is_stmt 1 view .LVU390
 1749               	.LBB239:
 244:../../tmk_core/common/command.c ****                 debug_matrix   = false;
 1750               		.loc 1 244 17 view .LVU391
 244:../../tmk_core/common/command.c ****                 debug_matrix   = false;
 1751               		.loc 1 244 17 view .LVU392
 1752               	.LBE239:
 1753 038e 80E0      		ldi r24,lo8(__c.5305)
 1754 0390 90E0      		ldi r25,hi8(__c.5305)
 1755 0392 0E94 0000 		call xputs
 245:../../tmk_core/common/command.c ****                 debug_keyboard = false;
 1756               		.loc 1 245 17 view .LVU393
 246:../../tmk_core/common/command.c ****                 debug_mouse    = false;
 1757               		.loc 1 246 17 view .LVU394
 247:../../tmk_core/common/command.c ****                 debug_enable   = false;
 1758               		.loc 1 247 17 view .LVU395
 248:../../tmk_core/common/command.c ****             } else {
 1759               		.loc 1 248 17 view .LVU396
 248:../../tmk_core/common/command.c ****             } else {
 1760               		.loc 1 248 32 is_stmt 0 view .LVU397
 1761 0396 8091 0000 		lds r24,debug_config
 1762 039a 807F      		andi r24,lo8(-16)
 1763               	.L98:
 276:../../tmk_core/common/command.c ****             } else {
 1764               		.loc 1 276 30 view .LVU398
 1765 039c 8093 0000 		sts debug_config,r24
 1766 03a0 00C0      		rjmp .L96
 1767               	.L71:
 250:../../tmk_core/common/command.c ****                 debug_enable   = true;
 1768               		.loc 1 250 17 is_stmt 1 view .LVU399
 1769               	.LBB240:
 250:../../tmk_core/common/command.c ****                 debug_enable   = true;
 1770               		.loc 1 250 17 view .LVU400
 250:../../tmk_core/common/command.c ****                 debug_enable   = true;
 1771               		.loc 1 250 17 view .LVU401
 1772               	.LBE240:
 1773 03a2 80E0      		ldi r24,lo8(__c.5307)
 1774 03a4 90E0      		ldi r25,hi8(__c.5307)
 1775               	.L99:
 275:../../tmk_core/common/command.c ****                 debug_enable = true;
 1776               		.loc 1 275 17 is_stmt 0 view .LVU402
 1777 03a6 0E94 0000 		call xputs
 276:../../tmk_core/common/command.c ****             } else {
 1778               		.loc 1 276 17 is_stmt 1 view .LVU403
 276:../../tmk_core/common/command.c ****             } else {
 1779               		.loc 1 276 30 is_stmt 0 view .LVU404
 1780 03aa 8091 0000 		lds r24,debug_config
 1781 03ae 8160      		ori r24,lo8(1<<0)
 1782 03b0 00C0      		rjmp .L98
 1783               	.L48:
 255:../../tmk_core/common/command.c ****             if (debug_matrix) {
 1784               		.loc 1 255 13 is_stmt 1 view .LVU405
 255:../../tmk_core/common/command.c ****             if (debug_matrix) {
 1785               		.loc 1 255 29 is_stmt 0 view .LVU406
 1786 03b2 9091 0000 		lds r25,debug_config
 255:../../tmk_core/common/command.c ****             if (debug_matrix) {
 1787               		.loc 1 255 26 view .LVU407
 1788 03b6 892F      		mov r24,r25
 1789 03b8 8D7F      		andi r24,~(1<<1)
 1790 03ba 91FF      		sbrs r25,1
 1791 03bc 8260      		ori r24,1<<1
 1792 03be 8093 0000 		sts debug_config,r24
 256:../../tmk_core/common/command.c ****                 print("\nmatrix: on\n");
 1793               		.loc 1 256 13 is_stmt 1 view .LVU408
 256:../../tmk_core/common/command.c ****                 print("\nmatrix: on\n");
 1794               		.loc 1 256 16 is_stmt 0 view .LVU409
 1795 03c2 81FF      		sbrs r24,1
 1796 03c4 00C0      		rjmp .L72
 257:../../tmk_core/common/command.c ****                 debug_enable = true;
 1797               		.loc 1 257 17 is_stmt 1 view .LVU410
 1798               	.LBB241:
 257:../../tmk_core/common/command.c ****                 debug_enable = true;
 1799               		.loc 1 257 17 view .LVU411
 257:../../tmk_core/common/command.c ****                 debug_enable = true;
 1800               		.loc 1 257 17 view .LVU412
 1801               	.LBE241:
 1802 03c6 80E0      		ldi r24,lo8(__c.5310)
 1803 03c8 90E0      		ldi r25,hi8(__c.5310)
 1804 03ca 00C0      		rjmp .L99
 1805               	.L72:
 260:../../tmk_core/common/command.c ****             }
 1806               		.loc 1 260 17 view .LVU413
 1807               	.LBB242:
 260:../../tmk_core/common/command.c ****             }
 1808               		.loc 1 260 17 view .LVU414
 260:../../tmk_core/common/command.c ****             }
 1809               		.loc 1 260 17 view .LVU415
 1810               	.LBE242:
 1811 03cc 80E0      		ldi r24,lo8(__c.5312)
 1812 03ce 90E0      		ldi r25,hi8(__c.5312)
 1813 03d0 00C0      		rjmp .L97
 1814               	.L50:
 264:../../tmk_core/common/command.c ****             if (debug_keyboard) {
 1815               		.loc 1 264 13 view .LVU416
 264:../../tmk_core/common/command.c ****             if (debug_keyboard) {
 1816               		.loc 1 264 31 is_stmt 0 view .LVU417
 1817 03d2 9091 0000 		lds r25,debug_config
 264:../../tmk_core/common/command.c ****             if (debug_keyboard) {
 1818               		.loc 1 264 28 view .LVU418
 1819 03d6 892F      		mov r24,r25
 1820 03d8 8B7F      		andi r24,~(1<<2)
 1821 03da 92FF      		sbrs r25,2
 1822 03dc 8460      		ori r24,1<<2
 1823 03de 8093 0000 		sts debug_config,r24
 265:../../tmk_core/common/command.c ****                 print("\nkeyboard: on\n");
 1824               		.loc 1 265 13 is_stmt 1 view .LVU419
 265:../../tmk_core/common/command.c ****                 print("\nkeyboard: on\n");
 1825               		.loc 1 265 16 is_stmt 0 view .LVU420
 1826 03e2 82FF      		sbrs r24,2
 1827 03e4 00C0      		rjmp .L73
 266:../../tmk_core/common/command.c ****                 debug_enable = true;
 1828               		.loc 1 266 17 is_stmt 1 view .LVU421
 1829               	.LBB243:
 266:../../tmk_core/common/command.c ****                 debug_enable = true;
 1830               		.loc 1 266 17 view .LVU422
 266:../../tmk_core/common/command.c ****                 debug_enable = true;
 1831               		.loc 1 266 17 view .LVU423
 1832               	.LBE243:
 1833 03e6 80E0      		ldi r24,lo8(__c.5315)
 1834 03e8 90E0      		ldi r25,hi8(__c.5315)
 1835 03ea 00C0      		rjmp .L99
 1836               	.L73:
 269:../../tmk_core/common/command.c ****             }
 1837               		.loc 1 269 17 view .LVU424
 1838               	.LBB244:
 269:../../tmk_core/common/command.c ****             }
 1839               		.loc 1 269 17 view .LVU425
 269:../../tmk_core/common/command.c ****             }
 1840               		.loc 1 269 17 view .LVU426
 1841               	.LBE244:
 1842 03ec 80E0      		ldi r24,lo8(__c.5317)
 1843 03ee 90E0      		ldi r25,hi8(__c.5317)
 1844 03f0 00C0      		rjmp .L97
 1845               	.L74:
 278:../../tmk_core/common/command.c ****             }
 1846               		.loc 1 278 17 view .LVU427
 1847               	.LBB245:
 278:../../tmk_core/common/command.c ****             }
 1848               		.loc 1 278 17 view .LVU428
 278:../../tmk_core/common/command.c ****             }
 1849               		.loc 1 278 17 view .LVU429
 1850               	.LBE245:
 1851 03f2 80E0      		ldi r24,lo8(__c.5322)
 1852 03f4 90E0      		ldi r25,hi8(__c.5322)
 1853 03f6 00C0      		rjmp .L97
 1854               	.L61:
 335:../../tmk_core/common/command.c ****             print_val_hex8(host_keyboard_leds());
 1855               		.loc 1 335 13 view .LVU430
 1856               	.LBB246:
 335:../../tmk_core/common/command.c ****             print_val_hex8(host_keyboard_leds());
 1857               		.loc 1 335 13 view .LVU431
 335:../../tmk_core/common/command.c ****             print_val_hex8(host_keyboard_leds());
 1858               		.loc 1 335 13 view .LVU432
 1859               	.LBE246:
 1860 03f8 80E0      		ldi r24,lo8(__c.5338)
 1861 03fa 90E0      		ldi r25,hi8(__c.5338)
 1862 03fc 0E94 0000 		call xputs
 336:../../tmk_core/common/command.c ****             print_val_hex8(keyboard_protocol);
 1863               		.loc 1 336 13 view .LVU433
 1864 0400 0E94 0000 		call host_keyboard_leds
 1865               	.LBB247:
 336:../../tmk_core/common/command.c ****             print_val_hex8(keyboard_protocol);
 1866               		.loc 1 336 13 view .LVU434
 336:../../tmk_core/common/command.c ****             print_val_hex8(keyboard_protocol);
 1867               		.loc 1 336 13 view .LVU435
 1868               	.LBE247:
 1869 0404 1F92      		push __zero_reg__
 1870               	.LCFI116:
 1871               		.cfi_def_cfa_offset 4
 1872 0406 8F93      		push r24
 1873               	.LCFI117:
 1874               		.cfi_def_cfa_offset 5
 1875 0408 80E0      		ldi r24,lo8(__c.5340)
 1876 040a 90E0      		ldi r25,hi8(__c.5340)
 1877 040c 9F93      		push r25
 1878               	.LCFI118:
 1879               		.cfi_def_cfa_offset 6
 1880 040e 8F93      		push r24
 1881               	.LCFI119:
 1882               		.cfi_def_cfa_offset 7
 1883 0410 0E94 0000 		call __xprintf
 337:../../tmk_core/common/command.c ****             print_val_hex8(keyboard_idle);
 1884               		.loc 1 337 13 view .LVU436
 1885               	.LBB248:
 337:../../tmk_core/common/command.c ****             print_val_hex8(keyboard_idle);
 1886               		.loc 1 337 13 view .LVU437
 337:../../tmk_core/common/command.c ****             print_val_hex8(keyboard_idle);
 1887               		.loc 1 337 13 view .LVU438
 1888               	.LBE248:
 1889 0414 8091 0000 		lds r24,keyboard_protocol
 1890 0418 1F92      		push __zero_reg__
 1891               	.LCFI120:
 1892               		.cfi_def_cfa_offset 8
 1893 041a 8F93      		push r24
 1894               	.LCFI121:
 1895               		.cfi_def_cfa_offset 9
 1896 041c 80E0      		ldi r24,lo8(__c.5342)
 1897 041e 90E0      		ldi r25,hi8(__c.5342)
 1898 0420 9F93      		push r25
 1899               	.LCFI122:
 1900               		.cfi_def_cfa_offset 10
 1901 0422 8F93      		push r24
 1902               	.LCFI123:
 1903               		.cfi_def_cfa_offset 11
 1904 0424 0E94 0000 		call __xprintf
 338:../../tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 1905               		.loc 1 338 13 view .LVU439
 1906               	.LBB249:
 338:../../tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 1907               		.loc 1 338 13 view .LVU440
 338:../../tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 1908               		.loc 1 338 13 view .LVU441
 1909               	.LBE249:
 1910 0428 8091 0000 		lds r24,keyboard_idle
 1911 042c 1F92      		push __zero_reg__
 1912               	.LCFI124:
 1913               		.cfi_def_cfa_offset 12
 1914 042e 8F93      		push r24
 1915               	.LCFI125:
 1916               		.cfi_def_cfa_offset 13
 1917 0430 80E0      		ldi r24,lo8(__c.5344)
 1918 0432 90E0      		ldi r25,hi8(__c.5344)
 1919 0434 9F93      		push r25
 1920               	.LCFI126:
 1921               		.cfi_def_cfa_offset 14
 1922 0436 8F93      		push r24
 1923               	.LCFI127:
 1924               		.cfi_def_cfa_offset 15
 1925 0438 0E94 0000 		call __xprintf
 340:../../tmk_core/common/command.c **** #endif
 1926               		.loc 1 340 13 view .LVU442
 1927               	.LBB250:
 340:../../tmk_core/common/command.c **** #endif
 1928               		.loc 1 340 13 view .LVU443
 340:../../tmk_core/common/command.c **** #endif
 1929               		.loc 1 340 13 view .LVU444
 1930               	.LBE250:
 1931 043c 8091 0000 		lds r24,keyboard_nkro
 1932 0440 1F92      		push __zero_reg__
 1933               	.LCFI128:
 1934               		.cfi_def_cfa_offset 16
 1935 0442 8F93      		push r24
 1936               	.LCFI129:
 1937               		.cfi_def_cfa_offset 17
 1938 0444 80E0      		ldi r24,lo8(__c.5346)
 1939 0446 90E0      		ldi r25,hi8(__c.5346)
 1940 0448 9F93      		push r25
 1941               	.LCFI130:
 1942               		.cfi_def_cfa_offset 18
 1943 044a 8F93      		push r24
 1944               	.LCFI131:
 1945               		.cfi_def_cfa_offset 19
 1946 044c 0E94 0000 		call __xprintf
 342:../../tmk_core/common/command.c **** 
 1947               		.loc 1 342 13 view .LVU445
 1948 0450 0E94 0000 		call timer_read32
 1949               	.LBB251:
 342:../../tmk_core/common/command.c **** 
 1950               		.loc 1 342 13 view .LVU446
 342:../../tmk_core/common/command.c **** 
 1951               		.loc 1 342 13 view .LVU447
 1952               	.LBE251:
 1953 0454 9F93      		push r25
 1954               	.LCFI132:
 1955               		.cfi_def_cfa_offset 20
 1956 0456 8F93      		push r24
 1957               	.LCFI133:
 1958               		.cfi_def_cfa_offset 21
 1959 0458 7F93      		push r23
 1960               	.LCFI134:
 1961               		.cfi_def_cfa_offset 22
 1962 045a 6F93      		push r22
 1963               	.LCFI135:
 1964               		.cfi_def_cfa_offset 23
 1965 045c 80E0      		ldi r24,lo8(__c.5348)
 1966 045e 90E0      		ldi r25,hi8(__c.5348)
 1967 0460 9F93      		push r25
 1968               	.LCFI136:
 1969               		.cfi_def_cfa_offset 24
 1970 0462 8F93      		push r24
 1971               	.LCFI137:
 1972               		.cfi_def_cfa_offset 25
 1973 0464 0E94 0000 		call __xprintf
 357:../../tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 1974               		.loc 1 357 13 view .LVU448
 1975 0468 8DB7      		in r24,__SP_L__
 1976 046a 9EB7      		in r25,__SP_H__
 1977 046c 4696      		adiw r24,22
 1978 046e 0FB6      		in __tmp_reg__,__SREG__
 1979 0470 F894      		cli
 1980 0472 9EBF      		out __SP_H__,r25
 1981 0474 0FBE      		out __SREG__,__tmp_reg__
 1982 0476 8DBF      		out __SP_L__,r24
 1983               	.LCFI138:
 1984               		.cfi_def_cfa_offset 3
 1985 0478 00C0      		rjmp .L96
 1986               	.L58:
 360:../../tmk_core/common/command.c ****             keyboard_nkro = !keyboard_nkro;
 1987               		.loc 1 360 13 view .LVU449
 1988 047a 0E94 0000 		call clear_keyboard
 361:../../tmk_core/common/command.c ****             if (keyboard_nkro) {
 1989               		.loc 1 361 13 view .LVU450
 1990 047e C091 0000 		lds r28,keyboard_nkro
 1991 0482 81E0      		ldi r24,lo8(1)
 1992 0484 C827      		eor r28,r24
 361:../../tmk_core/common/command.c ****             if (keyboard_nkro) {
 1993               		.loc 1 361 27 is_stmt 0 view .LVU451
 1994 0486 C093 0000 		sts keyboard_nkro,r28
 362:../../tmk_core/common/command.c ****                 print("NKRO: on\n");
 1995               		.loc 1 362 13 is_stmt 1 view .LVU452
 362:../../tmk_core/common/command.c ****                 print("NKRO: on\n");
 1996               		.loc 1 362 16 is_stmt 0 view .LVU453
 1997 048a CC23      		tst r28
 1998 048c 01F0      		breq .L75
 363:../../tmk_core/common/command.c ****             } else {
 1999               		.loc 1 363 17 is_stmt 1 view .LVU454
 2000               	.LBB252:
 363:../../tmk_core/common/command.c ****             } else {
 2001               		.loc 1 363 17 view .LVU455
 363:../../tmk_core/common/command.c ****             } else {
 2002               		.loc 1 363 17 view .LVU456
 2003               	.LBE252:
 2004 048e 80E0      		ldi r24,lo8(__c.5351)
 2005 0490 90E0      		ldi r25,hi8(__c.5351)
 2006 0492 0E94 0000 		call xputs
 2007               	.L47:
 386:../../tmk_core/common/command.c **** 
 2008               		.loc 1 386 1 is_stmt 0 view .LVU457
 2009 0496 8C2F      		mov r24,r28
 2010               	/* epilogue start */
 2011 0498 CF91      		pop r28
 2012 049a 0895      		ret
 2013               	.L75:
 365:../../tmk_core/common/command.c ****             }
 2014               		.loc 1 365 17 is_stmt 1 view .LVU458
 2015               	.LBB253:
 365:../../tmk_core/common/command.c ****             }
 2016               		.loc 1 365 17 view .LVU459
 365:../../tmk_core/common/command.c ****             }
 2017               		.loc 1 365 17 view .LVU460
 2018               	.LBE253:
 2019 049c 80E0      		ldi r24,lo8(__c.5353)
 2020 049e 90E0      		ldi r25,hi8(__c.5353)
 2021 04a0 00C0      		rjmp .L97
 2022               	.L68:
 379:../../tmk_core/common/command.c ****             break;
 2023               		.loc 1 379 13 view .LVU461
 2024 04a2 8953      		subi r24,lo8(-(-57))
 2025 04a4 00C0      		rjmp .L95
 2026               		.cfi_endproc
 2027               	.LFE108:
 2029               		.section	.text.command_extra,"ax",@progbits
 2030               		.weak	command_extra
 2032               	command_extra:
 2033               	.LVL47:
 2034               	.LFB104:
 100:../../tmk_core/common/command.c ****     (void)code;
 2035               		.loc 1 100 1 view -0
 2036               		.cfi_startproc
 2037               	/* prologue: function */
 2038               	/* frame size = 0 */
 2039               	/* stack size = 0 */
 2040               	.L__stack_usage = 0
 101:../../tmk_core/common/command.c ****     return false;
 2041               		.loc 1 101 5 view .LVU463
 102:../../tmk_core/common/command.c **** }
 2042               		.loc 1 102 5 view .LVU464
 103:../../tmk_core/common/command.c **** 
 2043               		.loc 1 103 1 is_stmt 0 view .LVU465
 2044 0000 80E0      		ldi r24,0
 2045               	.LVL48:
 2046               	/* epilogue start */
 103:../../tmk_core/common/command.c **** 
 2047               		.loc 1 103 1 view .LVU466
 2048 0002 0895      		ret
 2049               		.cfi_endproc
 2050               	.LFE104:
 2052               		.set	command_extra.localalias.0,command_extra
 2053               		.section	.text.command_console_extra,"ax",@progbits
 2054               		.weak	command_console_extra
 2056               	command_console_extra:
 2057               	.LFB119:
 2058               		.cfi_startproc
 2059               	/* prologue: function */
 2060               	/* frame size = 0 */
 2061               	/* stack size = 0 */
 2062               	.L__stack_usage = 0
 2063 0000 0C94 0000 		jmp command_extra.localalias.0
 2064               		.cfi_endproc
 2065               	.LFE119:
 2067               		.section	.text.command_proc,"ax",@progbits
 2068               	.global	command_proc
 2070               	command_proc:
 2071               	.LFB103:
  71:../../tmk_core/common/command.c ****     switch (command_state) {
 2072               		.loc 1 71 1 is_stmt 1 view -0
 2073               		.cfi_startproc
  71:../../tmk_core/common/command.c ****     switch (command_state) {
 2074               		.loc 1 71 1 is_stmt 0 view .LVU468
 2075 0000 CF93      		push r28
 2076               	.LCFI139:
 2077               		.cfi_def_cfa_offset 3
 2078               		.cfi_offset 28, -2
 2079               	/* prologue: function */
 2080               	/* frame size = 0 */
 2081               	/* stack size = 1 */
 2082               	.L__stack_usage = 1
 2083 0002 C82F      		mov r28,r24
  72:../../tmk_core/common/command.c ****         case ONESHOT:
 2084               		.loc 1 72 5 is_stmt 1 view .LVU469
 2085 0004 8091 0000 		lds r24,command_state
 2086 0008 8130      		cpi r24,lo8(1)
 2087 000a 01F0      		breq .L103
 2088 000c 8823      		tst r24
 2089 000e 01F0      		breq .L104
 2090 0010 8230      		cpi r24,lo8(2)
 2091 0012 01F4      		brne .+2
 2092 0014 00C0      		rjmp .L105
  90:../../tmk_core/common/command.c ****             return false;
 2093               		.loc 1 90 13 view .LVU470
  90:../../tmk_core/common/command.c ****             return false;
 2094               		.loc 1 90 27 is_stmt 0 view .LVU471
 2095 0016 1092 0000 		sts command_state,__zero_reg__
  91:../../tmk_core/common/command.c ****     }
 2096               		.loc 1 91 13 is_stmt 1 view .LVU472
 2097               	.L133:
  75:../../tmk_core/common/command.c ****             return (command_extra(code) || command_common(code));
 2098               		.loc 1 75 24 is_stmt 0 view .LVU473
 2099 001a 80E0      		ldi r24,0
 2100 001c 00C0      		rjmp .L102
 2101               	.L104:
  74:../../tmk_core/common/command.c ****                 return false;
 2102               		.loc 1 74 13 is_stmt 1 view .LVU474
  74:../../tmk_core/common/command.c ****                 return false;
 2103               		.loc 1 74 18 is_stmt 0 view .LVU475
 2104 001e E091 0000 		lds r30,keyboard_report
 2105 0022 F091 0000 		lds r31,keyboard_report+1
  74:../../tmk_core/common/command.c ****                 return false;
 2106               		.loc 1 74 17 view .LVU476
 2107 0026 8081      		ld r24,Z
 2108 0028 8152      		subi r24,lo8(-(-33))
  74:../../tmk_core/common/command.c ****                 return false;
 2109               		.loc 1 74 16 view .LVU477
 2110 002a 8230      		cpi r24,lo8(2)
 2111 002c 00F4      		brsh .L133
 2112               	.L166:
  80:../../tmk_core/common/command.c ****             else
 2113               		.loc 1 80 17 is_stmt 1 view .LVU478
  80:../../tmk_core/common/command.c ****             else
 2114               		.loc 1 80 25 is_stmt 0 view .LVU479
 2115 002e 8C2F      		mov r24,r28
 2116 0030 0E94 0000 		call command_extra
  80:../../tmk_core/common/command.c ****             else
 2117               		.loc 1 80 45 view .LVU480
 2118 0034 8111      		cpse r24,__zero_reg__
 2119 0036 00C0      		rjmp .L135
  80:../../tmk_core/common/command.c ****             else
 2120               		.loc 1 80 48 discriminator 2 view .LVU481
 2121 0038 8C2F      		mov r24,r28
 2122 003a 0E94 0000 		call command_common
 2123               	.L111:
  82:../../tmk_core/common/command.c ****             break;
 2124               		.loc 1 82 53 discriminator 6 view .LVU482
 2125 003e 8170      		andi r24,lo8(1)
 2126               	.L102:
 2127               	/* epilogue start */
  94:../../tmk_core/common/command.c **** 
 2128               		.loc 1 94 1 view .LVU483
 2129 0040 CF91      		pop r28
 2130 0042 0895      		ret
 2131               	.L103:
  77:../../tmk_core/common/command.c ****         case CONSOLE:
 2132               		.loc 1 77 13 is_stmt 1 view .LVU484
  79:../../tmk_core/common/command.c ****                 return (command_extra(code) || command_common(code));
 2133               		.loc 1 79 13 view .LVU485
  79:../../tmk_core/common/command.c ****                 return (command_extra(code) || command_common(code));
 2134               		.loc 1 79 17 is_stmt 0 view .LVU486
 2135 0044 E091 0000 		lds r30,keyboard_report
 2136 0048 F091 0000 		lds r31,keyboard_report+1
 2137 004c 8081      		ld r24,Z
 2138 004e 8152      		subi r24,lo8(-(-33))
  79:../../tmk_core/common/command.c ****                 return (command_extra(code) || command_common(code));
 2139               		.loc 1 79 16 view .LVU487
 2140 0050 8230      		cpi r24,lo8(2)
 2141 0052 00F0      		brlo .L166
  82:../../tmk_core/common/command.c ****             break;
 2142               		.loc 1 82 17 is_stmt 1 view .LVU488
  82:../../tmk_core/common/command.c ****             break;
 2143               		.loc 1 82 25 is_stmt 0 view .LVU489
 2144 0054 8C2F      		mov r24,r28
 2145 0056 0E94 0000 		call command_console_extra
  82:../../tmk_core/common/command.c ****             break;
 2146               		.loc 1 82 53 view .LVU490
 2147 005a 8111      		cpse r24,__zero_reg__
 2148 005c 00C0      		rjmp .L136
 2149               	.LBB292:
 2150               	.LBI292:
 402:../../tmk_core/common/command.c **** {
 2151               		.loc 1 402 13 is_stmt 1 view .LVU491
 2152               	.LBB293:
 404:../../tmk_core/common/command.c ****         case KC_H:
 2153               		.loc 1 404 5 view .LVU492
 2154 005e C431      		cpi r28,lo8(20)
 2155 0060 01F0      		breq .L112
 2156 0062 00F4      		brsh .L113
 2157 0064 CB30      		cpi r28,lo8(11)
 2158 0066 01F0      		breq .L114
 2159 0068 C031      		cpi r28,lo8(16)
 2160 006a 01F0      		breq .L115
 2161               	.L116:
 421:../../tmk_core/common/command.c ****             return false;
 2162               		.loc 1 421 13 view .LVU493
 2163               	.LBE293:
 2164               	.LBE292:
 421:../../tmk_core/common/command.c ****             return false;
 2165               		.loc 1 421 13 view .LVU494
 421:../../tmk_core/common/command.c ****             return false;
 2166               		.loc 1 421 13 view .LVU495
 2167               	.LBB305:
 2168               	.LBB298:
 2169 006c 80E0      		ldi r24,lo8(__c.5381)
 2170 006e 90E0      		ldi r25,hi8(__c.5381)
 2171 0070 0E94 0000 		call xputs
 2172 0074 00C0      		rjmp .L159
 2173               	.L135:
 2174               	.LBE298:
 2175               	.LBE305:
  80:../../tmk_core/common/command.c ****             else
 2176               		.loc 1 80 45 is_stmt 0 view .LVU496
 2177 0076 81E0      		ldi r24,lo8(1)
 2178 0078 90E0      		ldi r25,0
 2179 007a 00C0      		rjmp .L111
 2180               	.L113:
 2181               	.LBB306:
 2182               	.LBB299:
 404:../../tmk_core/common/command.c ****         case KC_H:
 2183               		.loc 1 404 5 view .LVU497
 2184 007c C932      		cpi r28,lo8(41)
 2185 007e 01F0      		breq .L112
 2186 0080 C833      		cpi r28,lo8(56)
 2187 0082 01F4      		brne .L116
 2188               	.L114:
 407:../../tmk_core/common/command.c ****             break;
 2189               		.loc 1 407 13 is_stmt 1 view .LVU498
 2190               	.LBB294:
 2191               	.LBI294:
 392:../../tmk_core/common/command.c **** {
 2192               		.loc 1 392 13 view .LVU499
 2193               	.LBB295:
 394:../../tmk_core/common/command.c ****           "ESC/q:	quit\n"
 2194               		.loc 1 394 5 view .LVU500
 2195               	.LBE295:
 2196               	.LBE294:
 2197               	.LBE299:
 2198               	.LBE306:
 394:../../tmk_core/common/command.c ****           "ESC/q:	quit\n"
 2199               		.loc 1 394 5 view .LVU501
 394:../../tmk_core/common/command.c ****           "ESC/q:	quit\n"
 2200               		.loc 1 394 5 view .LVU502
 2201               	.LBB307:
 2202               	.LBB300:
 2203               	.LBB297:
 2204               	.LBB296:
 2205 0084 80E0      		ldi r24,lo8(__c.5367)
 2206 0086 90E0      		ldi r25,hi8(__c.5367)
 2207 0088 0E94 0000 		call xputs
 2208               	.LBE296:
 2209               	.LBE297:
 408:../../tmk_core/common/command.c ****         case KC_Q:
 2210               		.loc 1 408 13 view .LVU503
 424:../../tmk_core/common/command.c ****     return true;
 2211               		.loc 1 424 5 view .LVU504
 2212               	.LBE300:
 2213               	.LBE307:
 424:../../tmk_core/common/command.c ****     return true;
 2214               		.loc 1 424 5 view .LVU505
 424:../../tmk_core/common/command.c ****     return true;
 2215               		.loc 1 424 5 view .LVU506
 2216               	.LBB308:
 2217               	.LBB301:
 2218 008c 80E0      		ldi r24,lo8(__c.5383)
 2219 008e 90E0      		ldi r25,hi8(__c.5383)
 2220 0090 0E94 0000 		call xputs
 425:../../tmk_core/common/command.c **** }
 2221               		.loc 1 425 5 view .LVU507
 2222               	.L136:
 2223               	.LBE301:
 2224               	.LBE308:
  82:../../tmk_core/common/command.c ****             break;
 2225               		.loc 1 82 53 is_stmt 0 view .LVU508
 2226 0094 81E0      		ldi r24,lo8(1)
 2227 0096 00C0      		rjmp .L111
 2228               	.L112:
 2229               	.LBB309:
 2230               	.LBB302:
 411:../../tmk_core/common/command.c ****             return false;
 2231               		.loc 1 411 13 is_stmt 1 view .LVU509
 411:../../tmk_core/common/command.c ****             return false;
 2232               		.loc 1 411 27 is_stmt 0 view .LVU510
 2233 0098 1092 0000 		sts command_state,__zero_reg__
 412:../../tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
 2234               		.loc 1 412 13 is_stmt 1 view .LVU511
 2235               	.L159:
 422:../../tmk_core/common/command.c ****     }
 2236               		.loc 1 422 13 view .LVU512
 2237               	.LBE302:
 2238               	.LBE309:
  82:../../tmk_core/common/command.c ****             break;
 2239               		.loc 1 82 53 is_stmt 0 view .LVU513
 2240 009c 80E0      		ldi r24,0
 2241 009e 00C0      		rjmp .L111
 2242               	.L115:
 2243               	.LBB310:
 2244               	.LBB303:
 415:../../tmk_core/common/command.c ****             print("M> ");
 2245               		.loc 1 415 13 is_stmt 1 view .LVU514
 2246 00a0 0E94 0000 		call mousekey_console_help
 416:../../tmk_core/common/command.c ****             command_state = MOUSEKEY;
 2247               		.loc 1 416 13 view .LVU515
 2248               	.LBE303:
 2249               	.LBE310:
 416:../../tmk_core/common/command.c ****             command_state = MOUSEKEY;
 2250               		.loc 1 416 13 view .LVU516
 416:../../tmk_core/common/command.c ****             command_state = MOUSEKEY;
 2251               		.loc 1 416 13 view .LVU517
 2252               	.LBB311:
 2253               	.LBB304:
 2254 00a4 80E0      		ldi r24,lo8(__c.5378)
 2255 00a6 90E0      		ldi r25,hi8(__c.5378)
 2256 00a8 0E94 0000 		call xputs
 417:../../tmk_core/common/command.c ****             return true;
 2257               		.loc 1 417 13 view .LVU518
 417:../../tmk_core/common/command.c ****             return true;
 2258               		.loc 1 417 27 is_stmt 0 view .LVU519
 2259 00ac 82E0      		ldi r24,lo8(2)
 2260 00ae 8093 0000 		sts command_state,r24
 418:../../tmk_core/common/command.c **** #endif
 2261               		.loc 1 418 13 is_stmt 1 view .LVU520
 2262 00b2 00C0      		rjmp .L136
 2263               	.L105:
 2264               	.LBE304:
 2265               	.LBE311:
  83:../../tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
 2266               		.loc 1 83 13 view .LVU521
  86:../../tmk_core/common/command.c ****             break;
 2267               		.loc 1 86 13 view .LVU522
 2268               	.LBB312:
 2269               	.LBI312:
 567:../../tmk_core/common/command.c **** {
 2270               		.loc 1 567 13 view .LVU523
 2271               	.LBB313:
 569:../../tmk_core/common/command.c ****         case KC_H:
 2272               		.loc 1 569 5 view .LVU524
 2273 00b4 C432      		cpi r28,lo8(36)
 2274 00b6 00F4      		brsh .L117
 2275 00b8 CE31      		cpi r28,lo8(30)
 2276 00ba 00F0      		brlo .+2
 2277 00bc 00C0      		rjmp .L118
 2278 00be CB30      		cpi r28,lo8(11)
 2279 00c0 01F0      		breq .L119
 2280 00c2 00F4      		brsh .L120
 2281 00c4 C730      		cpi r28,lo8(7)
 2282 00c6 01F4      		brne .+2
 2283 00c8 00C0      		rjmp .L121
 2284               	.L122:
 617:../../tmk_core/common/command.c ****             return false;
 2285               		.loc 1 617 13 view .LVU525
 2286               	.LBE313:
 2287               	.LBE312:
 617:../../tmk_core/common/command.c ****             return false;
 2288               		.loc 1 617 13 view .LVU526
 617:../../tmk_core/common/command.c ****             return false;
 2289               		.loc 1 617 13 view .LVU527
 2290               	.LBB381:
 2291               	.LBB355:
 2292 00ca 80E0      		ldi r24,lo8(__c.5505)
 2293 00cc 90E0      		ldi r25,hi8(__c.5505)
 2294               	.L163:
 623:../../tmk_core/common/command.c ****     }
 2295               		.loc 1 623 9 is_stmt 0 view .LVU528
 2296 00ce 0E94 0000 		call xputs
 2297 00d2 00C0      		rjmp .L162
 2298               	.L120:
 569:../../tmk_core/common/command.c ****         case KC_H:
 2299               		.loc 1 569 5 view .LVU529
 2300 00d4 C331      		cpi r28,lo8(19)
 2301 00d6 01F0      		breq .L123
 2302 00d8 C431      		cpi r28,lo8(20)
 2303 00da 01F4      		brne .L122
 2304               	.L124:
 576:../../tmk_core/common/command.c ****                 mousekey_param = 0;
 2305               		.loc 1 576 13 is_stmt 1 view .LVU530
 576:../../tmk_core/common/command.c ****                 mousekey_param = 0;
 2306               		.loc 1 576 16 is_stmt 0 view .LVU531
 2307 00dc 8091 0000 		lds r24,mousekey_param
 2308 00e0 8823      		tst r24
 2309 00e2 01F0      		breq .L131
 577:../../tmk_core/common/command.c ****             } else {
 2310               		.loc 1 577 17 is_stmt 1 view .LVU532
 577:../../tmk_core/common/command.c ****             } else {
 2311               		.loc 1 577 32 is_stmt 0 view .LVU533
 2312 00e4 1092 0000 		sts mousekey_param,__zero_reg__
 583:../../tmk_core/common/command.c ****         case KC_P:
 2313               		.loc 1 583 13 is_stmt 1 view .LVU534
 2314 00e8 00C0      		rjmp .L130
 2315               	.L117:
 569:../../tmk_core/common/command.c ****         case KC_H:
 2316               		.loc 1 569 5 is_stmt 0 view .LVU535
 2317 00ea CB34      		cpi r28,lo8(75)
 2318 00ec 01F4      		brne .+2
 2319 00ee 00C0      		rjmp .L125
 2320 00f0 00F4      		brsh .L126
 2321 00f2 C932      		cpi r28,lo8(41)
 2322 00f4 01F0      		breq .L124
 2323 00f6 C833      		cpi r28,lo8(56)
 2324 00f8 01F4      		brne .L122
 2325               	.L119:
 572:../../tmk_core/common/command.c ****             break;
 2326               		.loc 1 572 13 is_stmt 1 view .LVU536
 2327 00fa 0E94 0000 		call mousekey_console_help
 573:../../tmk_core/common/command.c ****         case KC_Q:
 2328               		.loc 1 573 13 view .LVU537
 2329               	.L130:
 620:../../tmk_core/common/command.c ****         xprintf("M%d> ", mousekey_param);
 2330               		.loc 1 620 5 view .LVU538
 620:../../tmk_core/common/command.c ****         xprintf("M%d> ", mousekey_param);
 2331               		.loc 1 620 9 is_stmt 0 view .LVU539
 2332 00fe 8091 0000 		lds r24,mousekey_param
 620:../../tmk_core/common/command.c ****         xprintf("M%d> ", mousekey_param);
 2333               		.loc 1 620 8 view .LVU540
 2334 0102 8823      		tst r24
 2335 0104 01F4      		brne .+2
 2336 0106 00C0      		rjmp .L132
 621:../../tmk_core/common/command.c ****     } else {
 2337               		.loc 1 621 9 is_stmt 1 view .LVU541
 2338               	.LBE355:
 2339               	.LBE381:
 621:../../tmk_core/common/command.c ****     } else {
 2340               		.loc 1 621 9 view .LVU542
 621:../../tmk_core/common/command.c ****     } else {
 2341               		.loc 1 621 9 view .LVU543
 2342               	.LBB382:
 2343               	.LBB356:
 2344 0108 1F92      		push __zero_reg__
 2345               	.LCFI140:
 2346               		.cfi_def_cfa_offset 4
 2347 010a 8F93      		push r24
 2348               	.LCFI141:
 2349               		.cfi_def_cfa_offset 5
 2350 010c 80E0      		ldi r24,lo8(__c.5507)
 2351 010e 90E0      		ldi r25,hi8(__c.5507)
 2352 0110 9F93      		push r25
 2353               	.LCFI142:
 2354               		.cfi_def_cfa_offset 6
 2355 0112 8F93      		push r24
 2356               	.LCFI143:
 2357               		.cfi_def_cfa_offset 7
 2358 0114 0E94 0000 		call __xprintf
 2359 0118 0F90      		pop __tmp_reg__
 2360 011a 0F90      		pop __tmp_reg__
 2361 011c 0F90      		pop __tmp_reg__
 2362 011e 0F90      		pop __tmp_reg__
 2363               	.LCFI144:
 2364               		.cfi_def_cfa_offset 3
 2365               	.L162:
 2366               	.LBE356:
 2367               	.LBE382:
  93:../../tmk_core/common/command.c **** }
 2368               		.loc 1 93 12 is_stmt 0 view .LVU544
 2369 0120 81E0      		ldi r24,lo8(1)
 2370 0122 00C0      		rjmp .L102
 2371               	.L126:
 2372               	.LBB383:
 2373               	.LBB357:
 569:../../tmk_core/common/command.c ****         case KC_H:
 2374               		.loc 1 569 5 view .LVU545
 2375 0124 C135      		cpi r28,lo8(81)
 2376 0126 01F4      		brne .+2
 2377 0128 00C0      		rjmp .L127
 2378 012a C235      		cpi r28,lo8(82)
 2379 012c 01F4      		brne .+2
 2380 012e 00C0      		rjmp .L128
 2381 0130 CE34      		cpi r28,lo8(78)
 2382 0132 01F4      		brne .L122
 605:../../tmk_core/common/command.c ****             break;
 2383               		.loc 1 605 13 is_stmt 1 view .LVU546
 2384 0134 6AE0      		ldi r22,lo8(10)
 2385 0136 00C0      		rjmp .L161
 2386               	.L131:
 579:../../tmk_core/common/command.c ****                 command_state = CONSOLE;
 2387               		.loc 1 579 17 view .LVU547
 2388               	.LBE357:
 2389               	.LBE383:
 579:../../tmk_core/common/command.c ****                 command_state = CONSOLE;
 2390               		.loc 1 579 17 view .LVU548
 579:../../tmk_core/common/command.c ****                 command_state = CONSOLE;
 2391               		.loc 1 579 17 view .LVU549
 2392               	.LBB384:
 2393               	.LBB358:
 2394 0138 80E0      		ldi r24,lo8(__c.5488)
 2395 013a 90E0      		ldi r25,hi8(__c.5488)
 2396 013c 0E94 0000 		call xputs
 580:../../tmk_core/common/command.c ****                 return false;
 2397               		.loc 1 580 17 view .LVU550
 580:../../tmk_core/common/command.c ****                 return false;
 2398               		.loc 1 580 31 is_stmt 0 view .LVU551
 2399 0140 81E0      		ldi r24,lo8(1)
 2400 0142 8093 0000 		sts command_state,r24
 581:../../tmk_core/common/command.c ****             }
 2401               		.loc 1 581 17 is_stmt 1 view .LVU552
 2402 0146 00C0      		rjmp .L102
 2403               	.L123:
 585:../../tmk_core/common/command.c ****             break;
 2404               		.loc 1 585 13 view .LVU553
 2405               	.LBB314:
 2406               	.LBI314:
 435:../../tmk_core/common/command.c **** {
 2407               		.loc 1 435 13 view .LVU554
 2408               	.LBB315:
 437:../../tmk_core/common/command.c ****     print("1: delay(*10ms): "); pdec(mk_delay); print("\n");
 2409               		.loc 1 437 5 view .LVU555
 2410               	.LBE315:
 2411               	.LBE314:
 2412               	.LBE358:
 2413               	.LBE384:
 437:../../tmk_core/common/command.c ****     print("1: delay(*10ms): "); pdec(mk_delay); print("\n");
 2414               		.loc 1 437 5 view .LVU556
 437:../../tmk_core/common/command.c ****     print("1: delay(*10ms): "); pdec(mk_delay); print("\n");
 2415               		.loc 1 437 5 view .LVU557
 2416               	.LBB385:
 2417               	.LBB359:
 2418               	.LBB335:
 2419               	.LBB316:
 2420 0148 80E0      		ldi r24,lo8(__c.5389)
 2421 014a 90E0      		ldi r25,hi8(__c.5389)
 2422 014c 0E94 0000 		call xputs
 438:../../tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 2423               		.loc 1 438 5 view .LVU558
 2424               	.LBE316:
 2425               	.LBE335:
 2426               	.LBE359:
 2427               	.LBE385:
 438:../../tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 2428               		.loc 1 438 5 view .LVU559
 438:../../tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 2429               		.loc 1 438 5 view .LVU560
 2430               	.LBB386:
 2431               	.LBB360:
 2432               	.LBB336:
 2433               	.LBB317:
 2434 0150 80E0      		ldi r24,lo8(__c.5391)
 2435 0152 90E0      		ldi r25,hi8(__c.5391)
 2436 0154 0E94 0000 		call xputs
 438:../../tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 2437               		.loc 1 438 33 view .LVU561
 2438               	.LBE317:
 2439               	.LBE336:
 2440               	.LBE360:
 2441               	.LBE386:
 438:../../tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 2442               		.loc 1 438 33 view .LVU562
 438:../../tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 2443               		.loc 1 438 33 view .LVU563
 2444               	.LBB387:
 2445               	.LBB361:
 2446               	.LBB337:
 2447               	.LBB318:
 2448 0158 8091 0000 		lds r24,mk_delay
 2449 015c 1F92      		push __zero_reg__
 2450               	.LCFI145:
 2451               		.cfi_def_cfa_offset 4
 2452 015e 8F93      		push r24
 2453               	.LCFI146:
 2454               		.cfi_def_cfa_offset 5
 2455 0160 80E0      		ldi r24,lo8(__c.5393)
 2456 0162 90E0      		ldi r25,hi8(__c.5393)
 2457 0164 9F93      		push r25
 2458               	.LCFI147:
 2459               		.cfi_def_cfa_offset 6
 2460 0166 8F93      		push r24
 2461               	.LCFI148:
 2462               		.cfi_def_cfa_offset 7
 2463 0168 0E94 0000 		call __xprintf
 438:../../tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 2464               		.loc 1 438 49 view .LVU564
 2465               	.LBE318:
 2466               	.LBE337:
 2467               	.LBE361:
 2468               	.LBE387:
 438:../../tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 2469               		.loc 1 438 49 view .LVU565
 438:../../tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 2470               		.loc 1 438 49 view .LVU566
 2471               	.LBB388:
 2472               	.LBB362:
 2473               	.LBB338:
 2474               	.LBB319:
 2475 016c 80E0      		ldi r24,lo8(__c.5395)
 2476 016e 90E0      		ldi r25,hi8(__c.5395)
 2477 0170 0E94 0000 		call xputs
 439:../../tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 2478               		.loc 1 439 5 view .LVU567
 2479               	.LBE319:
 2480               	.LBE338:
 2481               	.LBE362:
 2482               	.LBE388:
 439:../../tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 2483               		.loc 1 439 5 view .LVU568
 439:../../tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 2484               		.loc 1 439 5 view .LVU569
 2485               	.LBB389:
 2486               	.LBB363:
 2487               	.LBB339:
 2488               	.LBB320:
 2489 0174 80E0      		ldi r24,lo8(__c.5397)
 2490 0176 90E0      		ldi r25,hi8(__c.5397)
 2491 0178 0E94 0000 		call xputs
 439:../../tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 2492               		.loc 1 439 33 view .LVU570
 2493               	.LBE320:
 2494               	.LBE339:
 2495               	.LBE363:
 2496               	.LBE389:
 439:../../tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 2497               		.loc 1 439 33 view .LVU571
 439:../../tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 2498               		.loc 1 439 33 view .LVU572
 2499               	.LBB390:
 2500               	.LBB364:
 2501               	.LBB340:
 2502               	.LBB321:
 2503 017c 8091 0000 		lds r24,mk_interval
 2504 0180 1F92      		push __zero_reg__
 2505               	.LCFI149:
 2506               		.cfi_def_cfa_offset 8
 2507 0182 8F93      		push r24
 2508               	.LCFI150:
 2509               		.cfi_def_cfa_offset 9
 2510 0184 80E0      		ldi r24,lo8(__c.5399)
 2511 0186 90E0      		ldi r25,hi8(__c.5399)
 2512 0188 9F93      		push r25
 2513               	.LCFI151:
 2514               		.cfi_def_cfa_offset 10
 2515 018a 8F93      		push r24
 2516               	.LCFI152:
 2517               		.cfi_def_cfa_offset 11
 2518 018c 0E94 0000 		call __xprintf
 439:../../tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 2519               		.loc 1 439 52 view .LVU573
 2520               	.LBE321:
 2521               	.LBE340:
 2522               	.LBE364:
 2523               	.LBE390:
 439:../../tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 2524               		.loc 1 439 52 view .LVU574
 439:../../tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 2525               		.loc 1 439 52 view .LVU575
 2526               	.LBB391:
 2527               	.LBB365:
 2528               	.LBB341:
 2529               	.LBB322:
 2530 0190 80E0      		ldi r24,lo8(__c.5401)
 2531 0192 90E0      		ldi r25,hi8(__c.5401)
 2532 0194 0E94 0000 		call xputs
 440:../../tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 2533               		.loc 1 440 5 view .LVU576
 2534               	.LBE322:
 2535               	.LBE341:
 2536               	.LBE365:
 2537               	.LBE391:
 440:../../tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 2538               		.loc 1 440 5 view .LVU577
 440:../../tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 2539               		.loc 1 440 5 view .LVU578
 2540               	.LBB392:
 2541               	.LBB366:
 2542               	.LBB342:
 2543               	.LBB323:
 2544 0198 80E0      		ldi r24,lo8(__c.5403)
 2545 019a 90E0      		ldi r25,hi8(__c.5403)
 2546 019c 0E94 0000 		call xputs
 440:../../tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 2547               		.loc 1 440 30 view .LVU579
 2548               	.LBE323:
 2549               	.LBE342:
 2550               	.LBE366:
 2551               	.LBE392:
 440:../../tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 2552               		.loc 1 440 30 view .LVU580
 440:../../tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 2553               		.loc 1 440 30 view .LVU581
 2554               	.LBB393:
 2555               	.LBB367:
 2556               	.LBB343:
 2557               	.LBB324:
 2558 01a0 8091 0000 		lds r24,mk_max_speed
 2559 01a4 1F92      		push __zero_reg__
 2560               	.LCFI153:
 2561               		.cfi_def_cfa_offset 12
 2562 01a6 8F93      		push r24
 2563               	.LCFI154:
 2564               		.cfi_def_cfa_offset 13
 2565 01a8 80E0      		ldi r24,lo8(__c.5405)
 2566 01aa 90E0      		ldi r25,hi8(__c.5405)
 2567 01ac 9F93      		push r25
 2568               	.LCFI155:
 2569               		.cfi_def_cfa_offset 14
 2570 01ae 8F93      		push r24
 2571               	.LCFI156:
 2572               		.cfi_def_cfa_offset 15
 2573 01b0 0E94 0000 		call __xprintf
 440:../../tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 2574               		.loc 1 440 50 view .LVU582
 2575               	.LBE324:
 2576               	.LBE343:
 2577               	.LBE367:
 2578               	.LBE393:
 440:../../tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 2579               		.loc 1 440 50 view .LVU583
 440:../../tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 2580               		.loc 1 440 50 view .LVU584
 2581               	.LBB394:
 2582               	.LBB368:
 2583               	.LBB344:
 2584               	.LBB325:
 2585 01b4 80E0      		ldi r24,lo8(__c.5407)
 2586 01b6 90E0      		ldi r25,hi8(__c.5407)
 2587 01b8 0E94 0000 		call xputs
 441:../../tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 2588               		.loc 1 441 5 view .LVU585
 2589               	.LBE325:
 2590               	.LBE344:
 2591               	.LBE368:
 2592               	.LBE394:
 441:../../tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 2593               		.loc 1 441 5 view .LVU586
 441:../../tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 2594               		.loc 1 441 5 view .LVU587
 2595               	.LBB395:
 2596               	.LBB369:
 2597               	.LBB345:
 2598               	.LBB326:
 2599 01bc 80E0      		ldi r24,lo8(__c.5409)
 2600 01be 90E0      		ldi r25,hi8(__c.5409)
 2601 01c0 0E94 0000 		call xputs
 441:../../tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 2602               		.loc 1 441 32 view .LVU588
 2603               	.LBE326:
 2604               	.LBE345:
 2605               	.LBE369:
 2606               	.LBE395:
 441:../../tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 2607               		.loc 1 441 32 view .LVU589
 441:../../tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 2608               		.loc 1 441 32 view .LVU590
 2609               	.LBB396:
 2610               	.LBB370:
 2611               	.LBB346:
 2612               	.LBB327:
 2613 01c4 8091 0000 		lds r24,mk_time_to_max
 2614 01c8 1F92      		push __zero_reg__
 2615               	.LCFI157:
 2616               		.cfi_def_cfa_offset 16
 2617 01ca 8F93      		push r24
 2618               	.LCFI158:
 2619               		.cfi_def_cfa_offset 17
 2620 01cc 80E0      		ldi r24,lo8(__c.5411)
 2621 01ce 90E0      		ldi r25,hi8(__c.5411)
 2622 01d0 9F93      		push r25
 2623               	.LCFI159:
 2624               		.cfi_def_cfa_offset 18
 2625 01d2 8F93      		push r24
 2626               	.LCFI160:
 2627               		.cfi_def_cfa_offset 19
 2628 01d4 0E94 0000 		call __xprintf
 441:../../tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 2629               		.loc 1 441 54 view .LVU591
 2630               	.LBE327:
 2631               	.LBE346:
 2632               	.LBE370:
 2633               	.LBE396:
 441:../../tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 2634               		.loc 1 441 54 view .LVU592
 441:../../tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 2635               		.loc 1 441 54 view .LVU593
 2636               	.LBB397:
 2637               	.LBB371:
 2638               	.LBB347:
 2639               	.LBB328:
 2640 01d8 80E0      		ldi r24,lo8(__c.5413)
 2641 01da 90E0      		ldi r25,hi8(__c.5413)
 2642 01dc 0E94 0000 		call xputs
 442:../../tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 2643               		.loc 1 442 5 view .LVU594
 2644               	.LBE328:
 2645               	.LBE347:
 2646               	.LBE371:
 2647               	.LBE397:
 442:../../tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 2648               		.loc 1 442 5 view .LVU595
 442:../../tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 2649               		.loc 1 442 5 view .LVU596
 2650               	.LBB398:
 2651               	.LBB372:
 2652               	.LBB348:
 2653               	.LBB329:
 2654 01e0 80E0      		ldi r24,lo8(__c.5415)
 2655 01e2 90E0      		ldi r25,hi8(__c.5415)
 2656 01e4 0E94 0000 		call xputs
 442:../../tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 2657               		.loc 1 442 36 view .LVU597
 2658               	.LBE329:
 2659               	.LBE348:
 2660               	.LBE372:
 2661               	.LBE398:
 442:../../tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 2662               		.loc 1 442 36 view .LVU598
 442:../../tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 2663               		.loc 1 442 36 view .LVU599
 2664               	.LBB399:
 2665               	.LBB373:
 2666               	.LBB349:
 2667               	.LBB330:
 2668 01e8 8091 0000 		lds r24,mk_wheel_max_speed
 2669 01ec 1F92      		push __zero_reg__
 2670               	.LCFI161:
 2671               		.cfi_def_cfa_offset 20
 2672 01ee 8F93      		push r24
 2673               	.LCFI162:
 2674               		.cfi_def_cfa_offset 21
 2675 01f0 80E0      		ldi r24,lo8(__c.5417)
 2676 01f2 90E0      		ldi r25,hi8(__c.5417)
 2677 01f4 9F93      		push r25
 2678               	.LCFI163:
 2679               		.cfi_def_cfa_offset 22
 2680 01f6 8F93      		push r24
 2681               	.LCFI164:
 2682               		.cfi_def_cfa_offset 23
 2683 01f8 0E94 0000 		call __xprintf
 442:../../tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 2684               		.loc 1 442 62 view .LVU600
 2685               	.LBE330:
 2686               	.LBE349:
 2687               	.LBE373:
 2688               	.LBE399:
 442:../../tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 2689               		.loc 1 442 62 view .LVU601
 442:../../tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 2690               		.loc 1 442 62 view .LVU602
 2691               	.LBB400:
 2692               	.LBB374:
 2693               	.LBB350:
 2694               	.LBB331:
 2695 01fc 80E0      		ldi r24,lo8(__c.5419)
 2696 01fe 90E0      		ldi r25,hi8(__c.5419)
 2697 0200 0E94 0000 		call xputs
 443:../../tmk_core/common/command.c **** }
 2698               		.loc 1 443 5 view .LVU603
 2699               	.LBE331:
 2700               	.LBE350:
 2701               	.LBE374:
 2702               	.LBE400:
 443:../../tmk_core/common/command.c **** }
 2703               		.loc 1 443 5 view .LVU604
 443:../../tmk_core/common/command.c **** }
 2704               		.loc 1 443 5 view .LVU605
 2705               	.LBB401:
 2706               	.LBB375:
 2707               	.LBB351:
 2708               	.LBB332:
 2709 0204 80E0      		ldi r24,lo8(__c.5421)
 2710 0206 90E0      		ldi r25,hi8(__c.5421)
 2711 0208 0E94 0000 		call xputs
 443:../../tmk_core/common/command.c **** }
 2712               		.loc 1 443 38 view .LVU606
 2713               	.LBE332:
 2714               	.LBE351:
 2715               	.LBE375:
 2716               	.LBE401:
 443:../../tmk_core/common/command.c **** }
 2717               		.loc 1 443 38 view .LVU607
 443:../../tmk_core/common/command.c **** }
 2718               		.loc 1 443 38 view .LVU608
 2719               	.LBB402:
 2720               	.LBB376:
 2721               	.LBB352:
 2722               	.LBB333:
 2723 020c 8091 0000 		lds r24,mk_wheel_time_to_max
 2724 0210 1F92      		push __zero_reg__
 2725               	.LCFI165:
 2726               		.cfi_def_cfa_offset 24
 2727 0212 8F93      		push r24
 2728               	.LCFI166:
 2729               		.cfi_def_cfa_offset 25
 2730 0214 80E0      		ldi r24,lo8(__c.5423)
 2731 0216 90E0      		ldi r25,hi8(__c.5423)
 2732 0218 9F93      		push r25
 2733               	.LCFI167:
 2734               		.cfi_def_cfa_offset 26
 2735 021a 8F93      		push r24
 2736               	.LCFI168:
 2737               		.cfi_def_cfa_offset 27
 2738 021c 0E94 0000 		call __xprintf
 443:../../tmk_core/common/command.c **** }
 2739               		.loc 1 443 66 view .LVU609
 2740               	.LBE333:
 2741               	.LBE352:
 2742               	.LBE376:
 2743               	.LBE402:
 443:../../tmk_core/common/command.c **** }
 2744               		.loc 1 443 66 view .LVU610
 443:../../tmk_core/common/command.c **** }
 2745               		.loc 1 443 66 view .LVU611
 2746               	.LBB403:
 2747               	.LBB377:
 2748               	.LBB353:
 2749               	.LBB334:
 2750 0220 80E0      		ldi r24,lo8(__c.5425)
 2751 0222 90E0      		ldi r25,hi8(__c.5425)
 2752 0224 0E94 0000 		call xputs
 2753 0228 8DB7      		in r24,__SP_L__
 2754 022a 9EB7      		in r25,__SP_H__
 2755 022c 4896      		adiw r24,24
 2756 022e 0FB6      		in __tmp_reg__,__SREG__
 2757 0230 F894      		cli
 2758 0232 9EBF      		out __SP_H__,r25
 2759 0234 0FBE      		out __SREG__,__tmp_reg__
 2760 0236 8DBF      		out __SP_L__,r24
 2761               	.LCFI169:
 2762               		.cfi_def_cfa_offset 3
 2763 0238 00C0      		rjmp .L130
 2764               	.L118:
 2765               	.LBE334:
 2766               	.LBE353:
 593:../../tmk_core/common/command.c ****             break;
 2767               		.loc 1 593 13 view .LVU612
 2768               	.LBB354:
 2769               	.LBI354:
 634:../../tmk_core/common/command.c **** {
 2770               		.loc 1 634 16 view .LVU613
 2771               	.LBE354:
 2772               	.LBE377:
 2773               	.LBE403:
 636:../../tmk_core/common/command.c ****         case KC_1: return 1;
 2774               		.loc 1 636 5 view .LVU614
 2775               	.LBB404:
 2776               	.LBB378:
 593:../../tmk_core/common/command.c ****             break;
 2777               		.loc 1 593 28 is_stmt 0 view .LVU615
 2778 023a CE51      		subi r28,lo8(-(-30))
 2779 023c EC2F      		mov r30,r28
 2780 023e F0E0      		ldi r31,0
 2781 0240 E050      		subi r30,lo8(-(CSWTCH.60))
 2782 0242 F040      		sbci r31,hi8(-(CSWTCH.60))
 2783 0244 8081      		ld r24,Z
 2784 0246 8093 0000 		sts mousekey_param,r24
 594:../../tmk_core/common/command.c ****         case KC_UP:
 2785               		.loc 1 594 13 is_stmt 1 view .LVU616
 2786 024a 00C0      		rjmp .L130
 2787               	.L128:
 596:../../tmk_core/common/command.c ****             break;
 2788               		.loc 1 596 13 view .LVU617
 2789 024c 61E0      		ldi r22,lo8(1)
 2790               	.L160:
 602:../../tmk_core/common/command.c ****             break;
 2791               		.loc 1 602 13 is_stmt 0 view .LVU618
 2792 024e 8091 0000 		lds r24,mousekey_param
 2793 0252 0E94 0000 		call mousekey_param_inc
 603:../../tmk_core/common/command.c ****         case KC_PGDN:
 2794               		.loc 1 603 13 is_stmt 1 view .LVU619
 2795 0256 00C0      		rjmp .L130
 2796               	.L127:
 599:../../tmk_core/common/command.c ****             break;
 2797               		.loc 1 599 13 view .LVU620
 2798 0258 61E0      		ldi r22,lo8(1)
 2799               	.L161:
 605:../../tmk_core/common/command.c ****             break;
 2800               		.loc 1 605 13 is_stmt 0 view .LVU621
 2801 025a 8091 0000 		lds r24,mousekey_param
 2802 025e 0E94 0000 		call mousekey_param_dec
 606:../../tmk_core/common/command.c ****         case KC_D:
 2803               		.loc 1 606 13 is_stmt 1 view .LVU622
 2804 0262 00C0      		rjmp .L130
 2805               	.L125:
 602:../../tmk_core/common/command.c ****             break;
 2806               		.loc 1 602 13 view .LVU623
 2807 0264 6AE0      		ldi r22,lo8(10)
 2808 0266 00C0      		rjmp .L160
 2809               	.L121:
 608:../../tmk_core/common/command.c ****             mk_interval = MOUSEKEY_INTERVAL;
 2810               		.loc 1 608 13 view .LVU624
 608:../../tmk_core/common/command.c ****             mk_interval = MOUSEKEY_INTERVAL;
 2811               		.loc 1 608 22 is_stmt 0 view .LVU625
 2812 0268 8EE1      		ldi r24,lo8(30)
 2813 026a 8093 0000 		sts mk_delay,r24
 609:../../tmk_core/common/command.c ****             mk_max_speed = MOUSEKEY_MAX_SPEED;
 2814               		.loc 1 609 13 is_stmt 1 view .LVU626
 609:../../tmk_core/common/command.c ****             mk_max_speed = MOUSEKEY_MAX_SPEED;
 2815               		.loc 1 609 25 is_stmt 0 view .LVU627
 2816 026e 82E3      		ldi r24,lo8(50)
 2817 0270 8093 0000 		sts mk_interval,r24
 610:../../tmk_core/common/command.c ****             mk_time_to_max = MOUSEKEY_TIME_TO_MAX;
 2818               		.loc 1 610 13 is_stmt 1 view .LVU628
 610:../../tmk_core/common/command.c ****             mk_time_to_max = MOUSEKEY_TIME_TO_MAX;
 2819               		.loc 1 610 26 is_stmt 0 view .LVU629
 2820 0274 8AE0      		ldi r24,lo8(10)
 2821 0276 8093 0000 		sts mk_max_speed,r24
 611:../../tmk_core/common/command.c ****             mk_wheel_max_speed = MOUSEKEY_WHEEL_MAX_SPEED;
 2822               		.loc 1 611 13 is_stmt 1 view .LVU630
 611:../../tmk_core/common/command.c ****             mk_wheel_max_speed = MOUSEKEY_WHEEL_MAX_SPEED;
 2823               		.loc 1 611 28 is_stmt 0 view .LVU631
 2824 027a 84E1      		ldi r24,lo8(20)
 2825 027c 8093 0000 		sts mk_time_to_max,r24
 612:../../tmk_core/common/command.c ****             mk_wheel_time_to_max = MOUSEKEY_WHEEL_TIME_TO_MAX;
 2826               		.loc 1 612 13 is_stmt 1 view .LVU632
 612:../../tmk_core/common/command.c ****             mk_wheel_time_to_max = MOUSEKEY_WHEEL_TIME_TO_MAX;
 2827               		.loc 1 612 32 is_stmt 0 view .LVU633
 2828 0280 88E0      		ldi r24,lo8(8)
 2829 0282 8093 0000 		sts mk_wheel_max_speed,r24
 613:../../tmk_core/common/command.c ****             print("set default\n");
 2830               		.loc 1 613 13 is_stmt 1 view .LVU634
 613:../../tmk_core/common/command.c ****             print("set default\n");
 2831               		.loc 1 613 34 is_stmt 0 view .LVU635
 2832 0286 88E2      		ldi r24,lo8(40)
 2833 0288 8093 0000 		sts mk_wheel_time_to_max,r24
 614:../../tmk_core/common/command.c ****             break;
 2834               		.loc 1 614 13 is_stmt 1 view .LVU636
 2835               	.LBE378:
 2836               	.LBE404:
 614:../../tmk_core/common/command.c ****             break;
 2837               		.loc 1 614 13 view .LVU637
 614:../../tmk_core/common/command.c ****             break;
 2838               		.loc 1 614 13 view .LVU638
 2839               	.LBB405:
 2840               	.LBB379:
 2841 028c 80E0      		ldi r24,lo8(__c.5502)
 2842 028e 90E0      		ldi r25,hi8(__c.5502)
 2843 0290 0E94 0000 		call xputs
 615:../../tmk_core/common/command.c ****         default:
 2844               		.loc 1 615 13 view .LVU639
 2845 0294 00C0      		rjmp .L130
 2846               	.L132:
 623:../../tmk_core/common/command.c ****     }
 2847               		.loc 1 623 9 view .LVU640
 2848               	.LBE379:
 2849               	.LBE405:
 623:../../tmk_core/common/command.c ****     }
 2850               		.loc 1 623 9 view .LVU641
 623:../../tmk_core/common/command.c ****     }
 2851               		.loc 1 623 9 view .LVU642
 2852               	.LBB406:
 2853               	.LBB380:
 2854 0296 80E0      		ldi r24,lo8(__c.5509)
 2855 0298 90E0      		ldi r25,hi8(__c.5509)
 2856 029a 00C0      		rjmp .L163
 2857               	.LBE380:
 2858               	.LBE406:
 2859               		.cfi_endproc
 2860               	.LFE103:
 2862               		.section	.rodata.CSWTCH.60,"a"
 2865               	CSWTCH.60:
 2866 0000 01        		.byte	1
 2867 0001 02        		.byte	2
 2868 0002 03        		.byte	3
 2869 0003 04        		.byte	4
 2870 0004 05        		.byte	5
 2871 0005 06        		.byte	6
 2872 0006 07        		.byte	7
 2873 0007 08        		.byte	8
 2874 0008 09        		.byte	9
 2875 0009 00        		.byte	0
 2876               		.section	.progmem.data.__c.5471,"a"
 2879               	__c.5471:
 2880 0000 6D6B 5F77 		.string	"mk_wheel_time_to_max = %d\n"
 2880      6865 656C 
 2880      5F74 696D 
 2880      655F 746F 
 2880      5F6D 6178 
 2881               		.section	.progmem.data.__c.5468,"a"
 2884               	__c.5468:
 2885 0000 6D6B 5F77 		.string	"mk_wheel_max_speed = %d\n"
 2885      6865 656C 
 2885      5F6D 6178 
 2885      5F73 7065 
 2885      6564 203D 
 2886               		.section	.progmem.data.__c.5465,"a"
 2889               	__c.5465:
 2890 0000 6D6B 5F74 		.string	"mk_time_to_max = %d\n"
 2890      696D 655F 
 2890      746F 5F6D 
 2890      6178 203D 
 2890      2025 640A 
 2891               		.section	.progmem.data.__c.5462,"a"
 2894               	__c.5462:
 2895 0000 6D6B 5F6D 		.string	"mk_max_speed = %d\n"
 2895      6178 5F73 
 2895      7065 6564 
 2895      203D 2025 
 2895      640A 00
 2896               		.section	.progmem.data.__c.5459,"a"
 2899               	__c.5459:
 2900 0000 6D6B 5F69 		.string	"mk_interval = %d\n"
 2900      6E74 6572 
 2900      7661 6C20 
 2900      3D20 2564 
 2900      0A00 
 2901               		.section	.progmem.data.__c.5455,"a"
 2904               	__c.5455:
 2905 0000 6D6B 5F64 		.string	"mk_delay = %d\n"
 2905      656C 6179 
 2905      203D 2025 
 2905      640A 00
 2906               		.section	.progmem.data.__c.5448,"a"
 2909               	__c.5448:
 2910 0000 6D6B 5F77 		.string	"mk_wheel_time_to_max = %d\n"
 2910      6865 656C 
 2910      5F74 696D 
 2910      655F 746F 
 2910      5F6D 6178 
 2911               		.section	.progmem.data.__c.5445,"a"
 2914               	__c.5445:
 2915 0000 6D6B 5F77 		.string	"mk_wheel_max_speed = %d\n"
 2915      6865 656C 
 2915      5F6D 6178 
 2915      5F73 7065 
 2915      6564 203D 
 2916               		.section	.progmem.data.__c.5442,"a"
 2919               	__c.5442:
 2920 0000 6D6B 5F74 		.string	"mk_time_to_max = %d\n"
 2920      696D 655F 
 2920      746F 5F6D 
 2920      6178 203D 
 2920      2025 640A 
 2921               		.section	.progmem.data.__c.5439,"a"
 2924               	__c.5439:
 2925 0000 6D6B 5F6D 		.string	"mk_max_speed = %d\n"
 2925      6178 5F73 
 2925      7065 6564 
 2925      203D 2025 
 2925      640A 00
 2926               		.section	.progmem.data.__c.5436,"a"
 2929               	__c.5436:
 2930 0000 6D6B 5F69 		.string	"mk_interval = %d\n"
 2930      6E74 6572 
 2930      7661 6C20 
 2930      3D20 2564 
 2930      0A00 
 2931               		.section	.progmem.data.__c.5432,"a"
 2934               	__c.5432:
 2935 0000 6D6B 5F64 		.string	"mk_delay = %d\n"
 2935      656C 6179 
 2935      203D 2025 
 2935      640A 00
 2936               		.section	.progmem.data.__c.5425,"a"
 2939               	__c.5425:
 2940 0000 0A00      		.string	"\n"
 2941               		.section	.progmem.data.__c.5423,"a"
 2944               	__c.5423:
 2945 0000 2575 00   		.string	"%u"
 2946               		.section	.progmem.data.__c.5421,"a"
 2949               	__c.5421:
 2950 0000 363A 2077 		.string	"6: wheel_time_to_max: "
 2950      6865 656C 
 2950      5F74 696D 
 2950      655F 746F 
 2950      5F6D 6178 
 2951               		.section	.progmem.data.__c.5419,"a"
 2954               	__c.5419:
 2955 0000 0A00      		.string	"\n"
 2956               		.section	.progmem.data.__c.5417,"a"
 2959               	__c.5417:
 2960 0000 2575 00   		.string	"%u"
 2961               		.section	.progmem.data.__c.5415,"a"
 2964               	__c.5415:
 2965 0000 353A 2077 		.string	"5: wheel_max_speed: "
 2965      6865 656C 
 2965      5F6D 6178 
 2965      5F73 7065 
 2965      6564 3A20 
 2966               		.section	.progmem.data.__c.5413,"a"
 2969               	__c.5413:
 2970 0000 0A00      		.string	"\n"
 2971               		.section	.progmem.data.__c.5411,"a"
 2974               	__c.5411:
 2975 0000 2575 00   		.string	"%u"
 2976               		.section	.progmem.data.__c.5409,"a"
 2979               	__c.5409:
 2980 0000 343A 2074 		.string	"4: time_to_max: "
 2980      696D 655F 
 2980      746F 5F6D 
 2980      6178 3A20 
 2980      00
 2981               		.section	.progmem.data.__c.5407,"a"
 2984               	__c.5407:
 2985 0000 0A00      		.string	"\n"
 2986               		.section	.progmem.data.__c.5405,"a"
 2989               	__c.5405:
 2990 0000 2575 00   		.string	"%u"
 2991               		.section	.progmem.data.__c.5403,"a"
 2994               	__c.5403:
 2995 0000 333A 206D 		.string	"3: max_speed: "
 2995      6178 5F73 
 2995      7065 6564 
 2995      3A20 00
 2996               		.section	.progmem.data.__c.5401,"a"
 2999               	__c.5401:
 3000 0000 0A00      		.string	"\n"
 3001               		.section	.progmem.data.__c.5399,"a"
 3004               	__c.5399:
 3005 0000 2575 00   		.string	"%u"
 3006               		.section	.progmem.data.__c.5397,"a"
 3009               	__c.5397:
 3010 0000 323A 2069 		.string	"2: interval(ms): "
 3010      6E74 6572 
 3010      7661 6C28 
 3010      6D73 293A 
 3010      2000 
 3011               		.section	.progmem.data.__c.5395,"a"
 3014               	__c.5395:
 3015 0000 0A00      		.string	"\n"
 3016               		.section	.progmem.data.__c.5393,"a"
 3019               	__c.5393:
 3020 0000 2575 00   		.string	"%u"
 3021               		.section	.progmem.data.__c.5391,"a"
 3024               	__c.5391:
 3025 0000 313A 2064 		.string	"1: delay(*10ms): "
 3025      656C 6179 
 3025      282A 3130 
 3025      6D73 293A 
 3025      2000 
 3026               		.section	.progmem.data.__c.5389,"a"
 3029               	__c.5389:
 3030 0000 0A09 2D20 		.string	"\n\t- Values -\n"
 3030      5661 6C75 
 3030      6573 202D 
 3030      0A00 
 3031               		.section	.progmem.data.__c.5509,"a"
 3034               	__c.5509:
 3035 0000 4D3E 00   		.string	"M>"
 3036               		.section	.progmem.data.__c.5507,"a"
 3039               	__c.5507:
 3040 0000 4D25 643E 		.string	"M%d> "
 3040      2000 
 3041               		.section	.progmem.data.__c.5505,"a"
 3044               	__c.5505:
 3045 0000 3F00      		.string	"?"
 3046               		.section	.progmem.data.__c.5502,"a"
 3049               	__c.5502:
 3050 0000 7365 7420 		.string	"set default\n"
 3050      6465 6661 
 3050      756C 740A 
 3050      00
 3051               		.section	.progmem.data.__c.5488,"a"
 3054               	__c.5488:
 3055 0000 433E 2000 		.string	"C> "
 3056               		.section	.progmem.data.__c.5478,"a"
 3059               	__c.5478:
 3060 0000 7768 6572 		.string	"where delta: cursor=%d, wheel=%d\nSee http://en.wikipedia.org/wiki/Mouse_keys\n"
 3060      6520 6465 
 3060      6C74 613A 
 3060      2063 7572 
 3060      736F 723D 
 3061               		.section	.progmem.data.__c.5476,"a"
 3064               	__c.5476:
 3065 0000 0A09 2D20 		.string	"\n\t- Mousekey -\nESC/q:\tquit\n1:\tdelay(*10ms)\n2:\tinterval(ms)\n3:\tmax_speed\n4:\tti
 3065      4D6F 7573 
 3065      656B 6579 
 3065      202D 0A45 
 3065      5343 2F71 
 3066               		.section	.progmem.data.__c.5381,"a"
 3069               	__c.5381:
 3070 0000 3F00      		.string	"?"
 3071               		.section	.progmem.data.__c.5378,"a"
 3074               	__c.5378:
 3075 0000 4D3E 2000 		.string	"M> "
 3076               		.section	.progmem.data.__c.5383,"a"
 3079               	__c.5383:
 3080 0000 433E 2000 		.string	"C> "
 3081               		.section	.progmem.data.__c.5527,"a"
 3084               	__c.5527:
 3085 0000 4C25 640A 		.string	"L%d\n"
 3085      00
 3086               		.section	.progmem.data.__c.5367,"a"
 3089               	__c.5367:
 3090 0000 0A09 2D20 		.string	"\n\t- Console -\nESC/q:\tquit\nm:\tmousekey\n"
 3090      436F 6E73 
 3090      6F6C 6520 
 3090      2D0A 4553 
 3090      432F 713A 
 3091               		.section	.progmem.data.__c.5192,"a"
 3094               	__c.5192:
 3095 0000 0A09 2D20 		.string	"\n\t- Magic -\nd:\tdebug\nx:\tdebug matrix\nk:\tdebug keyboard\nm:\tdebug mouse\nv:\tvers
 3095      4D61 6769 
 3095      6320 2D0A 
 3095      643A 0964 
 3095      6562 7567 
 3096               		.section	.progmem.data.__c.5287,"a"
 3099               	__c.5287:
 3100 0000 0A00      		.string	"\n"
 3101               		.section	.progmem.data.__c.5285,"a"
 3104               	__c.5285:
 3105 0000 2575 00   		.string	"%u"
 3106               		.section	.progmem.data.__c.5283,"a"
 3109               	__c.5283:
 3110 0000 2E6E 6B72 		.string	".nkro: "
 3110      6F3A 2000 
 3111               		.section	.progmem.data.__c.5281,"a"
 3114               	__c.5281:
 3115 0000 0A00      		.string	"\n"
 3116               		.section	.progmem.data.__c.5279,"a"
 3119               	__c.5279:
 3120 0000 2575 00   		.string	"%u"
 3121               		.section	.progmem.data.__c.5277,"a"
 3124               	__c.5277:
 3125 0000 2E73 7761 		.string	".swap_backslash_backspace: "
 3125      705F 6261 
 3125      636B 736C 
 3125      6173 685F 
 3125      6261 636B 
 3126               		.section	.progmem.data.__c.5275,"a"
 3129               	__c.5275:
 3130 0000 0A00      		.string	"\n"
 3131               		.section	.progmem.data.__c.5273,"a"
 3134               	__c.5273:
 3135 0000 2575 00   		.string	"%u"
 3136               		.section	.progmem.data.__c.5271,"a"
 3139               	__c.5271:
 3140 0000 2E73 7761 		.string	".swap_grave_esc: "
 3140      705F 6772 
 3140      6176 655F 
 3140      6573 633A 
 3140      2000 
 3141               		.section	.progmem.data.__c.5269,"a"
 3144               	__c.5269:
 3145 0000 0A00      		.string	"\n"
 3146               		.section	.progmem.data.__c.5267,"a"
 3149               	__c.5267:
 3150 0000 2575 00   		.string	"%u"
 3151               		.section	.progmem.data.__c.5265,"a"
 3154               	__c.5265:
 3155 0000 2E6E 6F5F 		.string	".no_gui: "
 3155      6775 693A 
 3155      2000 
 3156               		.section	.progmem.data.__c.5263,"a"
 3159               	__c.5263:
 3160 0000 0A00      		.string	"\n"
 3161               		.section	.progmem.data.__c.5261,"a"
 3164               	__c.5261:
 3165 0000 2575 00   		.string	"%u"
 3166               		.section	.progmem.data.__c.5259,"a"
 3169               	__c.5259:
 3170 0000 2E73 7761 		.string	".swap_ralt_rgui: "
 3170      705F 7261 
 3170      6C74 5F72 
 3170      6775 693A 
 3170      2000 
 3171               		.section	.progmem.data.__c.5257,"a"
 3174               	__c.5257:
 3175 0000 0A00      		.string	"\n"
 3176               		.section	.progmem.data.__c.5255,"a"
 3179               	__c.5255:
 3180 0000 2575 00   		.string	"%u"
 3181               		.section	.progmem.data.__c.5253,"a"
 3184               	__c.5253:
 3185 0000 2E73 7761 		.string	".swap_lalt_lgui: "
 3185      705F 6C61 
 3185      6C74 5F6C 
 3185      6775 693A 
 3185      2000 
 3186               		.section	.progmem.data.__c.5251,"a"
 3189               	__c.5251:
 3190 0000 0A00      		.string	"\n"
 3191               		.section	.progmem.data.__c.5249,"a"
 3194               	__c.5249:
 3195 0000 2575 00   		.string	"%u"
 3196               		.section	.progmem.data.__c.5247,"a"
 3199               	__c.5247:
 3200 0000 2E63 6170 		.string	".capslock_to_control: "
 3200      736C 6F63 
 3200      6B5F 746F 
 3200      5F63 6F6E 
 3200      7472 6F6C 
 3201               		.section	.progmem.data.__c.5245,"a"
 3204               	__c.5245:
 3205 0000 0A00      		.string	"\n"
 3206               		.section	.progmem.data.__c.5243,"a"
 3209               	__c.5243:
 3210 0000 2575 00   		.string	"%u"
 3211               		.section	.progmem.data.__c.5241,"a"
 3214               	__c.5241:
 3215 0000 2E73 7761 		.string	".swap_control_capslock: "
 3215      705F 636F 
 3215      6E74 726F 
 3215      6C5F 6361 
 3215      7073 6C6F 
 3216               		.section	.progmem.data.__c.5239,"a"
 3219               	__c.5239:
 3220 0000 0A00      		.string	"\n"
 3221               		.section	.progmem.data.__c.5237,"a"
 3224               	__c.5237:
 3225 0000 2530 3258 		.string	"%02X"
 3225      00
 3226               		.section	.progmem.data.__c.5235,"a"
 3229               	__c.5235:
 3230 0000 6B65 796D 		.string	"keymap_config.raw: "
 3230      6170 5F63 
 3230      6F6E 6669 
 3230      672E 7261 
 3230      773A 2000 
 3231               		.section	.progmem.data.__c.5232,"a"
 3234               	__c.5232:
 3235 0000 0A00      		.string	"\n"
 3236               		.section	.progmem.data.__c.5230,"a"
 3239               	__c.5230:
 3240 0000 2575 00   		.string	"%u"
 3241               		.section	.progmem.data.__c.5228,"a"
 3244               	__c.5228:
 3245 0000 2E6D 6F75 		.string	".mouse: "
 3245      7365 3A20 
 3245      00
 3246               		.section	.progmem.data.__c.5226,"a"
 3249               	__c.5226:
 3250 0000 0A00      		.string	"\n"
 3251               		.section	.progmem.data.__c.5224,"a"
 3254               	__c.5224:
 3255 0000 2575 00   		.string	"%u"
 3256               		.section	.progmem.data.__c.5222,"a"
 3259               	__c.5222:
 3260 0000 2E6B 6579 		.string	".keyboard: "
 3260      626F 6172 
 3260      643A 2000 
 3261               		.section	.progmem.data.__c.5220,"a"
 3264               	__c.5220:
 3265 0000 0A00      		.string	"\n"
 3266               		.section	.progmem.data.__c.5218,"a"
 3269               	__c.5218:
 3270 0000 2575 00   		.string	"%u"
 3271               		.section	.progmem.data.__c.5216,"a"
 3274               	__c.5216:
 3275 0000 2E6D 6174 		.string	".matrix: "
 3275      7269 783A 
 3275      2000 
 3276               		.section	.progmem.data.__c.5214,"a"
 3279               	__c.5214:
 3280 0000 0A00      		.string	"\n"
 3281               		.section	.progmem.data.__c.5212,"a"
 3284               	__c.5212:
 3285 0000 2575 00   		.string	"%u"
 3286               		.section	.progmem.data.__c.5210,"a"
 3289               	__c.5210:
 3290 0000 2E65 6E61 		.string	".enable: "
 3290      626C 653A 
 3290      2000 
 3291               		.section	.progmem.data.__c.5208,"a"
 3294               	__c.5208:
 3295 0000 0A00      		.string	"\n"
 3296               		.section	.progmem.data.__c.5206,"a"
 3299               	__c.5206:
 3300 0000 2530 3258 		.string	"%02X"
 3300      00
 3301               		.section	.progmem.data.__c.5204,"a"
 3304               	__c.5204:
 3305 0000 6465 6275 		.string	"debug_config.raw: "
 3305      675F 636F 
 3305      6E66 6967 
 3305      2E72 6177 
 3305      3A20 00
 3306               		.section	.progmem.data.__c.5201,"a"
 3309               	__c.5201:
 3310 0000 0A00      		.string	"\n"
 3311               		.section	.progmem.data.__c.5199,"a"
 3314               	__c.5199:
 3315 0000 2575 00   		.string	"%u"
 3316               		.section	.progmem.data.__c.5197,"a"
 3319               	__c.5197:
 3320 0000 6465 6661 		.string	"default_layer: "
 3320      756C 745F 
 3320      6C61 7965 
 3320      723A 2000 
 3321               		.section	.progmem.data.__c.5362,"a"
 3324               	__c.5362:
 3325 0000 3F00      		.string	"?"
 3326               		.section	.progmem.data.__c.5353,"a"
 3329               	__c.5353:
 3330 0000 4E4B 524F 		.string	"NKRO: off\n"
 3330      3A20 6F66 
 3330      660A 00
 3331               		.section	.progmem.data.__c.5351,"a"
 3334               	__c.5351:
 3335 0000 4E4B 524F 		.string	"NKRO: on\n"
 3335      3A20 6F6E 
 3335      0A00 
 3336               		.section	.progmem.data.__c.5348,"a"
 3339               	__c.5348:
 3340 0000 7469 6D65 		.string	"timer_read32(): %04lX\n"
 3340      725F 7265 
 3340      6164 3332 
 3340      2829 3A20 
 3340      2530 346C 
 3341               		.section	.progmem.data.__c.5346,"a"
 3344               	__c.5346:
 3345 0000 6B65 7962 		.string	"keyboard_nkro: %X\n"
 3345      6F61 7264 
 3345      5F6E 6B72 
 3345      6F3A 2025 
 3345      580A 00
 3346               		.section	.progmem.data.__c.5344,"a"
 3349               	__c.5344:
 3350 0000 6B65 7962 		.string	"keyboard_idle: %X\n"
 3350      6F61 7264 
 3350      5F69 646C 
 3350      653A 2025 
 3350      580A 00
 3351               		.section	.progmem.data.__c.5342,"a"
 3354               	__c.5342:
 3355 0000 6B65 7962 		.string	"keyboard_protocol: %X\n"
 3355      6F61 7264 
 3355      5F70 726F 
 3355      746F 636F 
 3355      6C3A 2025 
 3356               		.section	.progmem.data.__c.5340,"a"
 3359               	__c.5340:
 3360 0000 686F 7374 		.string	"host_keyboard_leds(): %X\n"
 3360      5F6B 6579 
 3360      626F 6172 
 3360      645F 6C65 
 3360      6473 2829 
 3361               		.section	.progmem.data.__c.5338,"a"
 3364               	__c.5338:
 3365 0000 0A09 2D20 		.string	"\n\t- Status -\n"
 3365      5374 6174 
 3365      7573 202D 
 3365      0A00 
 3366               		.section	.progmem.data.__c.5335,"a"
 3369               	__c.5335:
 3370 0000 4743 433A 		.string	"GCC: 8.3.0 AVR-LIBC: 2.0.0 AVR_ARCH: avr5\n"
 3370      2038 2E33 
 3370      2E30 2041 
 3370      5652 2D4C 
 3370      4942 433A 
 3371               		.section	.progmem.data.__c.5333,"a"
 3374               	__c.5333:
 3375 0000 4F50 5449 		.string	"OPTIONS: LUFA BOOTMAGIC MOUSEKEY EXTRAKEY CONSOLE COMMAND NKRO 4096\n"
 3375      4F4E 533A 
 3375      204C 5546 
 3375      4120 424F 
 3375      4F54 4D41 
 3376               		.section	.progmem.data.__c.5331,"a"
 3379               	__c.5331:
 3380 0000 4255 494C 		.string	"BUILD: 8f86d125 (15:59:19 Dec 13 2020)\n"
 3380      443A 2038 
 3380      6638 3664 
 3380      3132 3520 
 3380      2831 353A 
 3381               		.section	.progmem.data.__c.5329,"a"
 3384               	__c.5329:
 3385 0000 5649 443A 		.string	"VID: 0xFEED(t.m.k.) PID: 0x5021(SONY NEWS keyboard converter) VER: 0x0001\n"
 3385      2030 7846 
 3385      4545 4428 
 3385      742E 6D2E 
 3385      6B2E 2920 
 3386               		.section	.progmem.data.__c.5327,"a"
 3389               	__c.5327:
 3390 0000 4445 5343 		.string	"DESC: converts SONY NEWS protocol into USB\n"
 3390      3A20 636F 
 3390      6E76 6572 
 3390      7473 2053 
 3390      4F4E 5920 
 3391               		.section	.progmem.data.__c.5325,"a"
 3394               	__c.5325:
 3395 0000 0A09 2D20 		.string	"\n\t- Version -\n"
 3395      5665 7273 
 3395      696F 6E20 
 3395      2D0A 00
 3396               		.section	.progmem.data.__c.5322,"a"
 3399               	__c.5322:
 3400 0000 0A6D 6F75 		.string	"\nmouse: off\n"
 3400      7365 3A20 
 3400      6F66 660A 
 3400      00
 3401               		.section	.progmem.data.__c.5320,"a"
 3404               	__c.5320:
 3405 0000 0A6D 6F75 		.string	"\nmouse: on\n"
 3405      7365 3A20 
 3405      6F6E 0A00 
 3406               		.section	.progmem.data.__c.5317,"a"
 3409               	__c.5317:
 3410 0000 0A6B 6579 		.string	"\nkeyboard: off\n"
 3410      626F 6172 
 3410      643A 206F 
 3410      6666 0A00 
 3411               		.section	.progmem.data.__c.5315,"a"
 3414               	__c.5315:
 3415 0000 0A6B 6579 		.string	"\nkeyboard: on\n"
 3415      626F 6172 
 3415      643A 206F 
 3415      6E0A 00
 3416               		.section	.progmem.data.__c.5312,"a"
 3419               	__c.5312:
 3420 0000 0A6D 6174 		.string	"\nmatrix: off\n"
 3420      7269 783A 
 3420      206F 6666 
 3420      0A00 
 3421               		.section	.progmem.data.__c.5310,"a"
 3424               	__c.5310:
 3425 0000 0A6D 6174 		.string	"\nmatrix: on\n"
 3425      7269 783A 
 3425      206F 6E0A 
 3425      00
 3426               		.section	.progmem.data.__c.5307,"a"
 3429               	__c.5307:
 3430 0000 0A64 6562 		.string	"\ndebug: on\n"
 3430      7567 3A20 
 3430      6F6E 0A00 
 3431               		.section	.progmem.data.__c.5305,"a"
 3434               	__c.5305:
 3435 0000 0A64 6562 		.string	"\ndebug: off\n"
 3435      7567 3A20 
 3435      6F66 660A 
 3435      00
 3436               		.section	.progmem.data.__c.5302,"a"
 3439               	__c.5302:
 3440 0000 0A0A 626F 		.string	"\n\nbootloader... "
 3440      6F74 6C6F 
 3440      6164 6572 
 3440      2E2E 2E20 
 3440      00
 3441               		.section	.progmem.data.__c.5299,"a"
 3444               	__c.5299:
 3445 0000 433E 2000 		.string	"C> "
 3446               		.section	.progmem.data.__c.5293,"a"
 3449               	__c.5293:
 3450 0000 6565 636F 		.string	"eeconfig:\n"
 3450      6E66 6967 
 3450      3A0A 00
 3451               		.section	.bss.mousekey_param,"aw",@nobits
 3454               	mousekey_param:
 3455 0000 00        		.zero	1
 3456               	.global	command_state
 3457               		.section	.bss.command_state,"aw",@nobits
 3460               	command_state:
 3461 0000 00        		.zero	1
 3462               		.text
 3463               	.Letext0:
 3464               		.file 3 "/usr/avr/include/stdint.h"
 3465               		.file 4 "../../tmk_core/protocol/lufa/lufa-abcminiuser/LUFA/Drivers/USB/Core/AVR8/../StdRequestTyp
 3466               		.file 5 "../../tmk_core/protocol/lufa/lufa-abcminiuser/LUFA/Drivers/USB/Core/AVR8/../DeviceStandar
 3467               		.file 6 "../../tmk_core/protocol/lufa/lufa-abcminiuser/LUFA/Drivers/USB/Core/USBTask.h"
 3468               		.file 7 "../../tmk_core/protocol/lufa/lufa-abcminiuser/LUFA/Drivers/USB/Core/HostStandardReq.h"
 3469               		.file 8 "/usr/avr/include/stdio.h"
 3470               		.file 9 "../../tmk_core/common/report.h"
 3471               		.file 10 "../../tmk_core/common/host.h"
 3472               		.file 11 "../../tmk_core/common/keymap.h"
 3473               		.file 12 "../../tmk_core/common/avr/xprintf.h"
 3474               		.file 13 "../../tmk_core/common/debug.h"
 3475               		.file 14 "../../tmk_core/common/timer.h"
 3476               		.file 15 "../../tmk_core/common/action_layer.h"
 3477               		.file 16 "../../tmk_core/common/action_util.h"
 3478               		.file 17 "../../tmk_core/common/command.h"
 3479               		.file 18 "../../tmk_core/common/mousekey.h"
 3480               		.file 19 "../../tmk_core/common/action.h"
 3481               		.file 20 "../../tmk_core/common/keycode.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 command.c
     /tmp/ccA629hd.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccA629hd.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccA629hd.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccA629hd.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccA629hd.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccA629hd.s:12     .text.mousekey_console_help:0000000000000000 mousekey_console_help
     /tmp/ccA629hd.s:3064   .progmem.data.__c.5476:0000000000000000 __c.5476
     /tmp/ccA629hd.s:3059   .progmem.data.__c.5478:0000000000000000 __c.5478
     /tmp/ccA629hd.s:75     .text.mousekey_param_inc:0000000000000000 mousekey_param_inc
     /tmp/ccA629hd.s:2934   .progmem.data.__c.5432:0000000000000000 __c.5432
     /tmp/ccA629hd.s:2929   .progmem.data.__c.5436:0000000000000000 __c.5436
     /tmp/ccA629hd.s:2924   .progmem.data.__c.5439:0000000000000000 __c.5439
     /tmp/ccA629hd.s:2919   .progmem.data.__c.5442:0000000000000000 __c.5442
     /tmp/ccA629hd.s:2914   .progmem.data.__c.5445:0000000000000000 __c.5445
     /tmp/ccA629hd.s:2909   .progmem.data.__c.5448:0000000000000000 __c.5448
     /tmp/ccA629hd.s:406    .text.mousekey_param_dec:0000000000000000 mousekey_param_dec
     /tmp/ccA629hd.s:2904   .progmem.data.__c.5455:0000000000000000 __c.5455
     /tmp/ccA629hd.s:2899   .progmem.data.__c.5459:0000000000000000 __c.5459
     /tmp/ccA629hd.s:2894   .progmem.data.__c.5462:0000000000000000 __c.5462
     /tmp/ccA629hd.s:2889   .progmem.data.__c.5465:0000000000000000 __c.5465
     /tmp/ccA629hd.s:2884   .progmem.data.__c.5468:0000000000000000 __c.5468
     /tmp/ccA629hd.s:2879   .progmem.data.__c.5471:0000000000000000 __c.5471
     /tmp/ccA629hd.s:677    .text.switch_default_layer:0000000000000000 switch_default_layer
     /tmp/ccA629hd.s:3084   .progmem.data.__c.5527:0000000000000000 __c.5527
     /tmp/ccA629hd.s:750    .text.command_common:0000000000000000 command_common
     /tmp/ccA629hd.s:3324   .progmem.data.__c.5362:0000000000000000 __c.5362
     /tmp/ccA629hd.s:3094   .progmem.data.__c.5192:0000000000000000 __c.5192
     /tmp/ccA629hd.s:3404   .progmem.data.__c.5320:0000000000000000 __c.5320
     /tmp/ccA629hd.s:3394   .progmem.data.__c.5325:0000000000000000 __c.5325
     /tmp/ccA629hd.s:3389   .progmem.data.__c.5327:0000000000000000 __c.5327
     /tmp/ccA629hd.s:3384   .progmem.data.__c.5329:0000000000000000 __c.5329
     /tmp/ccA629hd.s:3379   .progmem.data.__c.5331:0000000000000000 __c.5331
     /tmp/ccA629hd.s:3374   .progmem.data.__c.5333:0000000000000000 __c.5333
     /tmp/ccA629hd.s:3369   .progmem.data.__c.5335:0000000000000000 __c.5335
     /tmp/ccA629hd.s:3439   .progmem.data.__c.5302:0000000000000000 __c.5302
     /tmp/ccA629hd.s:3449   .progmem.data.__c.5293:0000000000000000 __c.5293
     /tmp/ccA629hd.s:3319   .progmem.data.__c.5197:0000000000000000 __c.5197
     /tmp/ccA629hd.s:3314   .progmem.data.__c.5199:0000000000000000 __c.5199
     /tmp/ccA629hd.s:3309   .progmem.data.__c.5201:0000000000000000 __c.5201
     /tmp/ccA629hd.s:3304   .progmem.data.__c.5204:0000000000000000 __c.5204
     /tmp/ccA629hd.s:3299   .progmem.data.__c.5206:0000000000000000 __c.5206
     /tmp/ccA629hd.s:3294   .progmem.data.__c.5208:0000000000000000 __c.5208
     /tmp/ccA629hd.s:3289   .progmem.data.__c.5210:0000000000000000 __c.5210
     /tmp/ccA629hd.s:3284   .progmem.data.__c.5212:0000000000000000 __c.5212
     /tmp/ccA629hd.s:3279   .progmem.data.__c.5214:0000000000000000 __c.5214
     /tmp/ccA629hd.s:3274   .progmem.data.__c.5216:0000000000000000 __c.5216
     /tmp/ccA629hd.s:3269   .progmem.data.__c.5218:0000000000000000 __c.5218
     /tmp/ccA629hd.s:3264   .progmem.data.__c.5220:0000000000000000 __c.5220
     /tmp/ccA629hd.s:3259   .progmem.data.__c.5222:0000000000000000 __c.5222
     /tmp/ccA629hd.s:3254   .progmem.data.__c.5224:0000000000000000 __c.5224
     /tmp/ccA629hd.s:3249   .progmem.data.__c.5226:0000000000000000 __c.5226
     /tmp/ccA629hd.s:3244   .progmem.data.__c.5228:0000000000000000 __c.5228
     /tmp/ccA629hd.s:3239   .progmem.data.__c.5230:0000000000000000 __c.5230
     /tmp/ccA629hd.s:3234   .progmem.data.__c.5232:0000000000000000 __c.5232
     /tmp/ccA629hd.s:3229   .progmem.data.__c.5235:0000000000000000 __c.5235
     /tmp/ccA629hd.s:3224   .progmem.data.__c.5237:0000000000000000 __c.5237
     /tmp/ccA629hd.s:3219   .progmem.data.__c.5239:0000000000000000 __c.5239
     /tmp/ccA629hd.s:3214   .progmem.data.__c.5241:0000000000000000 __c.5241
     /tmp/ccA629hd.s:3209   .progmem.data.__c.5243:0000000000000000 __c.5243
     /tmp/ccA629hd.s:3204   .progmem.data.__c.5245:0000000000000000 __c.5245
     /tmp/ccA629hd.s:3199   .progmem.data.__c.5247:0000000000000000 __c.5247
     /tmp/ccA629hd.s:3194   .progmem.data.__c.5249:0000000000000000 __c.5249
     /tmp/ccA629hd.s:3189   .progmem.data.__c.5251:0000000000000000 __c.5251
     /tmp/ccA629hd.s:3184   .progmem.data.__c.5253:0000000000000000 __c.5253
     /tmp/ccA629hd.s:3179   .progmem.data.__c.5255:0000000000000000 __c.5255
     /tmp/ccA629hd.s:3174   .progmem.data.__c.5257:0000000000000000 __c.5257
     /tmp/ccA629hd.s:3169   .progmem.data.__c.5259:0000000000000000 __c.5259
     /tmp/ccA629hd.s:3164   .progmem.data.__c.5261:0000000000000000 __c.5261
     /tmp/ccA629hd.s:3159   .progmem.data.__c.5263:0000000000000000 __c.5263
     /tmp/ccA629hd.s:3154   .progmem.data.__c.5265:0000000000000000 __c.5265
     /tmp/ccA629hd.s:3149   .progmem.data.__c.5267:0000000000000000 __c.5267
     /tmp/ccA629hd.s:3144   .progmem.data.__c.5269:0000000000000000 __c.5269
     /tmp/ccA629hd.s:3139   .progmem.data.__c.5271:0000000000000000 __c.5271
     /tmp/ccA629hd.s:3134   .progmem.data.__c.5273:0000000000000000 __c.5273
     /tmp/ccA629hd.s:3129   .progmem.data.__c.5275:0000000000000000 __c.5275
     /tmp/ccA629hd.s:3124   .progmem.data.__c.5277:0000000000000000 __c.5277
     /tmp/ccA629hd.s:3119   .progmem.data.__c.5279:0000000000000000 __c.5279
     /tmp/ccA629hd.s:3114   .progmem.data.__c.5281:0000000000000000 __c.5281
     /tmp/ccA629hd.s:3109   .progmem.data.__c.5283:0000000000000000 __c.5283
     /tmp/ccA629hd.s:3104   .progmem.data.__c.5285:0000000000000000 __c.5285
     /tmp/ccA629hd.s:3099   .progmem.data.__c.5287:0000000000000000 __c.5287
     /tmp/ccA629hd.s:3089   .progmem.data.__c.5367:0000000000000000 __c.5367
     /tmp/ccA629hd.s:3444   .progmem.data.__c.5299:0000000000000000 __c.5299
     /tmp/ccA629hd.s:3460   .bss.command_state:0000000000000000 command_state
     /tmp/ccA629hd.s:3434   .progmem.data.__c.5305:0000000000000000 __c.5305
     /tmp/ccA629hd.s:3429   .progmem.data.__c.5307:0000000000000000 __c.5307
     /tmp/ccA629hd.s:3424   .progmem.data.__c.5310:0000000000000000 __c.5310
     /tmp/ccA629hd.s:3419   .progmem.data.__c.5312:0000000000000000 __c.5312
     /tmp/ccA629hd.s:3414   .progmem.data.__c.5315:0000000000000000 __c.5315
     /tmp/ccA629hd.s:3409   .progmem.data.__c.5317:0000000000000000 __c.5317
     /tmp/ccA629hd.s:3399   .progmem.data.__c.5322:0000000000000000 __c.5322
     /tmp/ccA629hd.s:3364   .progmem.data.__c.5338:0000000000000000 __c.5338
     /tmp/ccA629hd.s:3359   .progmem.data.__c.5340:0000000000000000 __c.5340
     /tmp/ccA629hd.s:3354   .progmem.data.__c.5342:0000000000000000 __c.5342
     /tmp/ccA629hd.s:3349   .progmem.data.__c.5344:0000000000000000 __c.5344
     /tmp/ccA629hd.s:3344   .progmem.data.__c.5346:0000000000000000 __c.5346
     /tmp/ccA629hd.s:3339   .progmem.data.__c.5348:0000000000000000 __c.5348
     /tmp/ccA629hd.s:3334   .progmem.data.__c.5351:0000000000000000 __c.5351
     /tmp/ccA629hd.s:3329   .progmem.data.__c.5353:0000000000000000 __c.5353
     /tmp/ccA629hd.s:2032   .text.command_extra:0000000000000000 command_extra
     /tmp/ccA629hd.s:2032   .text.command_extra:0000000000000000 command_extra.localalias.0
     /tmp/ccA629hd.s:2056   .text.command_console_extra:0000000000000000 command_console_extra
     /tmp/ccA629hd.s:2070   .text.command_proc:0000000000000000 command_proc
     /tmp/ccA629hd.s:3069   .progmem.data.__c.5381:0000000000000000 __c.5381
     /tmp/ccA629hd.s:3079   .progmem.data.__c.5383:0000000000000000 __c.5383
     /tmp/ccA629hd.s:3074   .progmem.data.__c.5378:0000000000000000 __c.5378
     /tmp/ccA629hd.s:3044   .progmem.data.__c.5505:0000000000000000 __c.5505
     /tmp/ccA629hd.s:3454   .bss.mousekey_param:0000000000000000 mousekey_param
     /tmp/ccA629hd.s:3039   .progmem.data.__c.5507:0000000000000000 __c.5507
     /tmp/ccA629hd.s:3054   .progmem.data.__c.5488:0000000000000000 __c.5488
     /tmp/ccA629hd.s:3029   .progmem.data.__c.5389:0000000000000000 __c.5389
     /tmp/ccA629hd.s:3024   .progmem.data.__c.5391:0000000000000000 __c.5391
     /tmp/ccA629hd.s:3019   .progmem.data.__c.5393:0000000000000000 __c.5393
     /tmp/ccA629hd.s:3014   .progmem.data.__c.5395:0000000000000000 __c.5395
     /tmp/ccA629hd.s:3009   .progmem.data.__c.5397:0000000000000000 __c.5397
     /tmp/ccA629hd.s:3004   .progmem.data.__c.5399:0000000000000000 __c.5399
     /tmp/ccA629hd.s:2999   .progmem.data.__c.5401:0000000000000000 __c.5401
     /tmp/ccA629hd.s:2994   .progmem.data.__c.5403:0000000000000000 __c.5403
     /tmp/ccA629hd.s:2989   .progmem.data.__c.5405:0000000000000000 __c.5405
     /tmp/ccA629hd.s:2984   .progmem.data.__c.5407:0000000000000000 __c.5407
     /tmp/ccA629hd.s:2979   .progmem.data.__c.5409:0000000000000000 __c.5409
     /tmp/ccA629hd.s:2974   .progmem.data.__c.5411:0000000000000000 __c.5411
     /tmp/ccA629hd.s:2969   .progmem.data.__c.5413:0000000000000000 __c.5413
     /tmp/ccA629hd.s:2964   .progmem.data.__c.5415:0000000000000000 __c.5415
     /tmp/ccA629hd.s:2959   .progmem.data.__c.5417:0000000000000000 __c.5417
     /tmp/ccA629hd.s:2954   .progmem.data.__c.5419:0000000000000000 __c.5419
     /tmp/ccA629hd.s:2949   .progmem.data.__c.5421:0000000000000000 __c.5421
     /tmp/ccA629hd.s:2944   .progmem.data.__c.5423:0000000000000000 __c.5423
     /tmp/ccA629hd.s:2939   .progmem.data.__c.5425:0000000000000000 __c.5425
     /tmp/ccA629hd.s:2865   .rodata.CSWTCH.60:0000000000000000 CSWTCH.60
     /tmp/ccA629hd.s:3049   .progmem.data.__c.5502:0000000000000000 __c.5502
     /tmp/ccA629hd.s:3034   .progmem.data.__c.5509:0000000000000000 __c.5509

UNDEFINED SYMBOLS
xputs
__xprintf
mk_delay
mk_interval
mk_max_speed
mk_time_to_max
mk_wheel_max_speed
mk_wheel_time_to_max
default_layer_set
clear_keyboard
debug_config
bootloader_jump
eeconfig_read_default_layer
eeconfig_read_debug
eeconfig_read_keymap
host_keyboard_leds
keyboard_protocol
keyboard_idle
keyboard_nkro
timer_read32
keyboard_report
__do_copy_data
__do_clear_bss
