   1               		.file	"action.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.action_exec,"ax",@progbits
  11               	.global	action_exec
  13               	action_exec:
  14               	.LFB103:
  15               		.file 1 "../../tmk_core/common/action.c"
   1:../../tmk_core/common/action.c **** /*
   2:../../tmk_core/common/action.c **** Copyright 2012,2013 Jun Wako <wakojun@gmail.com>
   3:../../tmk_core/common/action.c **** 
   4:../../tmk_core/common/action.c **** This program is free software: you can redistribute it and/or modify
   5:../../tmk_core/common/action.c **** it under the terms of the GNU General Public License as published by
   6:../../tmk_core/common/action.c **** the Free Software Foundation, either version 2 of the License, or
   7:../../tmk_core/common/action.c **** (at your option) any later version.
   8:../../tmk_core/common/action.c **** 
   9:../../tmk_core/common/action.c **** This program is distributed in the hope that it will be useful,
  10:../../tmk_core/common/action.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:../../tmk_core/common/action.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:../../tmk_core/common/action.c **** GNU General Public License for more details.
  13:../../tmk_core/common/action.c **** 
  14:../../tmk_core/common/action.c **** You should have received a copy of the GNU General Public License
  15:../../tmk_core/common/action.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:../../tmk_core/common/action.c **** */
  17:../../tmk_core/common/action.c **** #include "host.h"
  18:../../tmk_core/common/action.c **** #include "keycode.h"
  19:../../tmk_core/common/action.c **** #include "keyboard.h"
  20:../../tmk_core/common/action.c **** #include "mousekey.h"
  21:../../tmk_core/common/action.c **** #include "command.h"
  22:../../tmk_core/common/action.c **** #include "led.h"
  23:../../tmk_core/common/action.c **** #include "backlight.h"
  24:../../tmk_core/common/action.c **** #include "action_layer.h"
  25:../../tmk_core/common/action.c **** #include "action_tapping.h"
  26:../../tmk_core/common/action.c **** #include "action_macro.h"
  27:../../tmk_core/common/action.c **** #include "action_util.h"
  28:../../tmk_core/common/action.c **** #include "action.h"
  29:../../tmk_core/common/action.c **** #include "hook.h"
  30:../../tmk_core/common/action.c **** #include "wait.h"
  31:../../tmk_core/common/action.c **** #include "bootloader.h"
  32:../../tmk_core/common/action.c **** 
  33:../../tmk_core/common/action.c **** #ifdef DEBUG_ACTION
  34:../../tmk_core/common/action.c **** #include "debug.h"
  35:../../tmk_core/common/action.c **** #else
  36:../../tmk_core/common/action.c **** #include "nodebug.h"
  37:../../tmk_core/common/action.c **** #endif
  38:../../tmk_core/common/action.c **** 
  39:../../tmk_core/common/action.c **** 
  40:../../tmk_core/common/action.c **** void action_exec(keyevent_t event)
  41:../../tmk_core/common/action.c **** {
  16               		.loc 1 41 1 view -0
  17               		.cfi_startproc
  18 0000 CF93      		push r28
  19               	.LCFI0:
  20               		.cfi_def_cfa_offset 3
  21               		.cfi_offset 28, -2
  22 0002 DF93      		push r29
  23               	.LCFI1:
  24               		.cfi_def_cfa_offset 4
  25               		.cfi_offset 29, -3
  26 0004 CDB7      		in r28,__SP_L__
  27 0006 DEB7      		in r29,__SP_H__
  28               	.LCFI2:
  29               		.cfi_def_cfa_register 28
  30 0008 2B97      		sbiw r28,11
  31               	.LCFI3:
  32               		.cfi_def_cfa_offset 15
  33 000a 0FB6      		in __tmp_reg__,__SREG__
  34 000c F894      		cli
  35 000e DEBF      		out __SP_H__,r29
  36 0010 0FBE      		out __SREG__,__tmp_reg__
  37 0012 CDBF      		out __SP_L__,r28
  38               	/* prologue: function */
  39               	/* frame size = 11 */
  40               	/* stack size = 13 */
  41               	.L__stack_usage = 13
  42 0014 4F83      		std Y+7,r20
  43 0016 5887      		std Y+8,r21
  44 0018 6987      		std Y+9,r22
  45 001a 7A87      		std Y+10,r23
  46 001c 8B87      		std Y+11,r24
  47               	.LVL0:
  42:../../tmk_core/common/action.c ****     if (!IS_NOEVENT(event)) {
  48               		.loc 1 42 5 view .LVU1
  49               	.LBB10:
  50               	.LBI10:
  51               		.file 2 "../../tmk_core/common/keyboard.h"
   1:../../tmk_core/common/keyboard.h **** /*
   2:../../tmk_core/common/keyboard.h **** Copyright 2011,2012,2013 Jun Wako <wakojun@gmail.com>
   3:../../tmk_core/common/keyboard.h **** 
   4:../../tmk_core/common/keyboard.h **** This program is free software: you can redistribute it and/or modify
   5:../../tmk_core/common/keyboard.h **** it under the terms of the GNU General Public License as published by
   6:../../tmk_core/common/keyboard.h **** the Free Software Foundation, either version 2 of the License, or
   7:../../tmk_core/common/keyboard.h **** (at your option) any later version.
   8:../../tmk_core/common/keyboard.h **** 
   9:../../tmk_core/common/keyboard.h **** This program is distributed in the hope that it will be useful,
  10:../../tmk_core/common/keyboard.h **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:../../tmk_core/common/keyboard.h **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:../../tmk_core/common/keyboard.h **** GNU General Public License for more details.
  13:../../tmk_core/common/keyboard.h **** 
  14:../../tmk_core/common/keyboard.h **** You should have received a copy of the GNU General Public License
  15:../../tmk_core/common/keyboard.h **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:../../tmk_core/common/keyboard.h **** */
  17:../../tmk_core/common/keyboard.h **** 
  18:../../tmk_core/common/keyboard.h **** #ifndef KEYBOARD_H
  19:../../tmk_core/common/keyboard.h **** #define KEYBOARD_H
  20:../../tmk_core/common/keyboard.h **** 
  21:../../tmk_core/common/keyboard.h **** #include <stdbool.h>
  22:../../tmk_core/common/keyboard.h **** #include <stdint.h>
  23:../../tmk_core/common/keyboard.h **** 
  24:../../tmk_core/common/keyboard.h **** 
  25:../../tmk_core/common/keyboard.h **** #ifdef __cplusplus
  26:../../tmk_core/common/keyboard.h **** extern "C" {
  27:../../tmk_core/common/keyboard.h **** #endif
  28:../../tmk_core/common/keyboard.h **** 
  29:../../tmk_core/common/keyboard.h **** /* key matrix position */
  30:../../tmk_core/common/keyboard.h **** typedef struct {
  31:../../tmk_core/common/keyboard.h ****     uint8_t col;
  32:../../tmk_core/common/keyboard.h ****     uint8_t row;
  33:../../tmk_core/common/keyboard.h **** } keypos_t;
  34:../../tmk_core/common/keyboard.h **** 
  35:../../tmk_core/common/keyboard.h **** /* key event */
  36:../../tmk_core/common/keyboard.h **** typedef struct {
  37:../../tmk_core/common/keyboard.h ****     keypos_t key;
  38:../../tmk_core/common/keyboard.h ****     bool     pressed;
  39:../../tmk_core/common/keyboard.h ****     uint16_t time;
  40:../../tmk_core/common/keyboard.h **** } keyevent_t;
  41:../../tmk_core/common/keyboard.h **** 
  42:../../tmk_core/common/keyboard.h **** /* equivalent test of keypos_t */
  43:../../tmk_core/common/keyboard.h **** #define KEYEQ(keya, keyb)       ((keya).row == (keyb).row && (keya).col == (keyb).col)
  44:../../tmk_core/common/keyboard.h **** 
  45:../../tmk_core/common/keyboard.h **** /* Rules for No Event:
  46:../../tmk_core/common/keyboard.h ****  * 1) (time == 0) to handle (keyevent_t){} as empty event
  47:../../tmk_core/common/keyboard.h ****  * 2) Matrix(255, 255) to make TICK event available
  48:../../tmk_core/common/keyboard.h ****  */
  49:../../tmk_core/common/keyboard.h **** static inline bool IS_NOEVENT(keyevent_t event) { return event.time == 0 || (event.key.row == 255 &
  52               		.loc 2 49 20 view .LVU2
  53               	.LBB11:
  54               		.loc 2 49 51 view .LVU3
  55               		.loc 2 49 74 is_stmt 0 view .LVU4
  56 001e 8A85      		ldd r24,Y+10
  57 0020 9B85      		ldd r25,Y+11
  58 0022 892B      		or r24,r25
  59 0024 01F0      		breq .L2
  60 0026 852F      		mov r24,r21
  61 0028 8423      		and r24,r20
  62 002a 8F3F      		cpi r24,lo8(-1)
  63 002c 01F4      		brne .L3
  64               	.LVL1:
  65               	.L2:
  66               		.loc 2 49 74 view .LVU5
  67               	.LBE11:
  68               	.LBE10:
  43:../../tmk_core/common/action.c ****         dprint("\n---- action_exec: start -----\n");
  44:../../tmk_core/common/action.c ****         dprint("EVENT: "); debug_event(event); dprintln();
  45:../../tmk_core/common/action.c ****         hook_matrix_change(event);
  46:../../tmk_core/common/action.c ****     }
  47:../../tmk_core/common/action.c **** 
  48:../../tmk_core/common/action.c ****     keyrecord_t record = { .event = event };
  69               		.loc 1 48 5 is_stmt 1 view .LVU6
  70               		.loc 1 48 17 is_stmt 0 view .LVU7
  71 002e 1E82      		std Y+6,__zero_reg__
  72 0030 1D82      		std Y+5,__zero_reg__
  73 0032 85E0      		ldi r24,lo8(5)
  74 0034 FE01      		movw r30,r28
  75 0036 3796      		adiw r30,7
  76 0038 DE01      		movw r26,r28
  77 003a 1196      		adiw r26,1
  78               		0:
  79 003c 0190      		ld r0,Z+
  80 003e 0D92      		st X+,r0
  81 0040 8A95      		dec r24
  82 0042 01F4      		brne 0b
  49:../../tmk_core/common/action.c **** 
  50:../../tmk_core/common/action.c **** #ifndef NO_ACTION_TAPPING
  51:../../tmk_core/common/action.c ****     action_tapping_process(record);
  83               		.loc 1 51 5 is_stmt 1 view .LVU8
  84 0044 4981      		ldd r20,Y+1
  85 0046 5A81      		ldd r21,Y+2
  86 0048 6B81      		ldd r22,Y+3
  87 004a 7C81      		ldd r23,Y+4
  88 004c 8D81      		ldd r24,Y+5
  89 004e 9E81      		ldd r25,Y+6
  90               	/* epilogue start */
  52:../../tmk_core/common/action.c **** #else
  53:../../tmk_core/common/action.c ****     process_action(&record);
  54:../../tmk_core/common/action.c ****     if (!IS_NOEVENT(record.event)) {
  55:../../tmk_core/common/action.c ****         dprint("processed: "); debug_record(record); dprintln();
  56:../../tmk_core/common/action.c ****     }
  57:../../tmk_core/common/action.c **** #endif
  58:../../tmk_core/common/action.c **** }
  91               		.loc 1 58 1 is_stmt 0 view .LVU9
  92 0050 2B96      		adiw r28,11
  93 0052 0FB6      		in __tmp_reg__,__SREG__
  94 0054 F894      		cli
  95 0056 DEBF      		out __SP_H__,r29
  96 0058 0FBE      		out __SREG__,__tmp_reg__
  97 005a CDBF      		out __SP_L__,r28
  98 005c DF91      		pop r29
  99 005e CF91      		pop r28
  51:../../tmk_core/common/action.c **** #else
 100               		.loc 1 51 5 view .LVU10
 101 0060 0C94 0000 		jmp action_tapping_process
 102               	.LVL2:
 103               	.L3:
  43:../../tmk_core/common/action.c ****         dprint("EVENT: "); debug_event(event); dprintln();
 104               		.loc 1 43 9 is_stmt 1 view .LVU11
  44:../../tmk_core/common/action.c ****         hook_matrix_change(event);
 105               		.loc 1 44 9 view .LVU12
  44:../../tmk_core/common/action.c ****         hook_matrix_change(event);
 106               		.loc 1 44 28 view .LVU13
  44:../../tmk_core/common/action.c ****         hook_matrix_change(event);
 107               		.loc 1 44 48 view .LVU14
  45:../../tmk_core/common/action.c ****     }
 108               		.loc 1 45 9 view .LVU15
 109 0064 6985      		ldd r22,Y+9
 110 0066 7A85      		ldd r23,Y+10
 111 0068 8B85      		ldd r24,Y+11
 112 006a 0E94 0000 		call hook_matrix_change
 113               	.LVL3:
  45:../../tmk_core/common/action.c ****     }
 114               		.loc 1 45 9 is_stmt 0 view .LVU16
 115 006e 00C0      		rjmp .L2
 116               		.cfi_endproc
 117               	.LFE103:
 119               		.section	.text.register_code,"ax",@progbits
 120               	.global	register_code
 122               	register_code:
 123               	.LVL4:
 124               	.LFB105:
  59:../../tmk_core/common/action.c **** 
  60:../../tmk_core/common/action.c **** void process_action(keyrecord_t *record)
  61:../../tmk_core/common/action.c **** {
  62:../../tmk_core/common/action.c ****     if (hook_process_action(record)) return;
  63:../../tmk_core/common/action.c **** 
  64:../../tmk_core/common/action.c ****     keyevent_t event = record->event;
  65:../../tmk_core/common/action.c **** #ifndef NO_ACTION_TAPPING
  66:../../tmk_core/common/action.c ****     uint8_t tap_count = record->tap.count;
  67:../../tmk_core/common/action.c **** #endif
  68:../../tmk_core/common/action.c **** 
  69:../../tmk_core/common/action.c ****     if (IS_NOEVENT(event)) { return; }
  70:../../tmk_core/common/action.c **** 
  71:../../tmk_core/common/action.c ****     action_t action = layer_switch_get_action(event);
  72:../../tmk_core/common/action.c ****     dprint("ACTION: "); debug_action(action);
  73:../../tmk_core/common/action.c **** #ifndef NO_ACTION_LAYER
  74:../../tmk_core/common/action.c ****     dprint(" layer_state: "); layer_debug();
  75:../../tmk_core/common/action.c ****     dprint(" default_layer_state: "); default_layer_debug();
  76:../../tmk_core/common/action.c **** #endif
  77:../../tmk_core/common/action.c ****     dprintln();
  78:../../tmk_core/common/action.c **** 
  79:../../tmk_core/common/action.c ****     switch (action.kind.id) {
  80:../../tmk_core/common/action.c ****         /* Key and Mods */
  81:../../tmk_core/common/action.c ****         case ACT_LMODS:
  82:../../tmk_core/common/action.c ****         case ACT_RMODS:
  83:../../tmk_core/common/action.c ****             {
  84:../../tmk_core/common/action.c ****                 uint8_t mods = (action.kind.id == ACT_LMODS) ?  action.key.mods :
  85:../../tmk_core/common/action.c ****                                                                 action.key.mods<<4;
  86:../../tmk_core/common/action.c ****                 if (event.pressed) {
  87:../../tmk_core/common/action.c ****                     if (mods) {
  88:../../tmk_core/common/action.c ****                         add_weak_mods(mods);
  89:../../tmk_core/common/action.c ****                         send_keyboard_report();
  90:../../tmk_core/common/action.c ****                     }
  91:../../tmk_core/common/action.c ****                     register_code(action.key.code);
  92:../../tmk_core/common/action.c ****                 } else {
  93:../../tmk_core/common/action.c ****                     unregister_code(action.key.code);
  94:../../tmk_core/common/action.c ****                     if (mods) {
  95:../../tmk_core/common/action.c ****                         del_weak_mods(mods);
  96:../../tmk_core/common/action.c ****                         send_keyboard_report();
  97:../../tmk_core/common/action.c ****                     }
  98:../../tmk_core/common/action.c ****                 }
  99:../../tmk_core/common/action.c ****             }
 100:../../tmk_core/common/action.c ****             break;
 101:../../tmk_core/common/action.c **** #ifndef NO_ACTION_TAPPING
 102:../../tmk_core/common/action.c ****         case ACT_LMODS_TAP:
 103:../../tmk_core/common/action.c ****         case ACT_RMODS_TAP:
 104:../../tmk_core/common/action.c ****             {
 105:../../tmk_core/common/action.c ****                 uint8_t mods = (action.kind.id == ACT_LMODS_TAP) ?  action.key.mods :
 106:../../tmk_core/common/action.c ****                                                                     action.key.mods<<4;
 107:../../tmk_core/common/action.c ****                 switch (action.key.code) {
 108:../../tmk_core/common/action.c ****     #ifndef NO_ACTION_ONESHOT
 109:../../tmk_core/common/action.c ****                     case MODS_ONESHOT:
 110:../../tmk_core/common/action.c ****                         // Oneshot modifier
 111:../../tmk_core/common/action.c ****                         if (event.pressed) {
 112:../../tmk_core/common/action.c ****                             if (tap_count == 0) {
 113:../../tmk_core/common/action.c ****                                 register_mods(mods);
 114:../../tmk_core/common/action.c ****                             }
 115:../../tmk_core/common/action.c ****                             else if (tap_count == 1) {
 116:../../tmk_core/common/action.c ****                                 dprint("MODS_TAP: Oneshot: start\n");
 117:../../tmk_core/common/action.c ****                                 set_oneshot_mods(mods);
 118:../../tmk_core/common/action.c ****                             }
 119:../../tmk_core/common/action.c ****                             else {
 120:../../tmk_core/common/action.c ****                                 register_mods(mods);
 121:../../tmk_core/common/action.c ****                             }
 122:../../tmk_core/common/action.c ****                         } else {
 123:../../tmk_core/common/action.c ****                             if (tap_count == 0) {
 124:../../tmk_core/common/action.c ****                                 clear_oneshot_mods();
 125:../../tmk_core/common/action.c ****                                 unregister_mods(mods);
 126:../../tmk_core/common/action.c ****                             }
 127:../../tmk_core/common/action.c ****                             else if (tap_count == 1) {
 128:../../tmk_core/common/action.c ****                                 // Retain Oneshot mods
 129:../../tmk_core/common/action.c ****                             }
 130:../../tmk_core/common/action.c ****                             else {
 131:../../tmk_core/common/action.c ****                                 clear_oneshot_mods();
 132:../../tmk_core/common/action.c ****                                 unregister_mods(mods);
 133:../../tmk_core/common/action.c ****                             }
 134:../../tmk_core/common/action.c ****                         }
 135:../../tmk_core/common/action.c ****                         break;
 136:../../tmk_core/common/action.c ****     #endif
 137:../../tmk_core/common/action.c ****                     case MODS_TAP_TOGGLE:
 138:../../tmk_core/common/action.c ****                         if (event.pressed) {
 139:../../tmk_core/common/action.c ****                             if (tap_count <= TAPPING_TOGGLE) {
 140:../../tmk_core/common/action.c ****                                 if (mods & get_mods()) {
 141:../../tmk_core/common/action.c ****                                     dprint("MODS_TAP_TOGGLE: toggle mods off\n");
 142:../../tmk_core/common/action.c ****                                     unregister_mods(mods);
 143:../../tmk_core/common/action.c ****                                 } else {
 144:../../tmk_core/common/action.c ****                                     dprint("MODS_TAP_TOGGLE: toggle mods on\n");
 145:../../tmk_core/common/action.c ****                                     register_mods(mods);
 146:../../tmk_core/common/action.c ****                                 }
 147:../../tmk_core/common/action.c ****                             }
 148:../../tmk_core/common/action.c ****                         } else {
 149:../../tmk_core/common/action.c ****                             if (tap_count < TAPPING_TOGGLE) {
 150:../../tmk_core/common/action.c ****                                 dprint("MODS_TAP_TOGGLE: release : unregister_mods\n");
 151:../../tmk_core/common/action.c ****                                 unregister_mods(mods);
 152:../../tmk_core/common/action.c ****                             }
 153:../../tmk_core/common/action.c ****                         }
 154:../../tmk_core/common/action.c ****                         break;
 155:../../tmk_core/common/action.c ****                     default:
 156:../../tmk_core/common/action.c ****                         if (event.pressed) {
 157:../../tmk_core/common/action.c ****                             if (tap_count > 0) {
 158:../../tmk_core/common/action.c ****                                 if (record->tap.interrupted) {
 159:../../tmk_core/common/action.c ****                                     dprint("MODS_TAP: Tap: Cancel: add_mods\n");
 160:../../tmk_core/common/action.c ****                                     // ad hoc: set 0 to cancel tap
 161:../../tmk_core/common/action.c ****                                     record->tap.count = 0;
 162:../../tmk_core/common/action.c ****                                     register_mods(mods);
 163:../../tmk_core/common/action.c ****                                 } else {
 164:../../tmk_core/common/action.c ****                                     dprint("MODS_TAP: Tap: register_code\n");
 165:../../tmk_core/common/action.c ****                                     register_code(action.key.code);
 166:../../tmk_core/common/action.c ****                                 }
 167:../../tmk_core/common/action.c ****                             } else {
 168:../../tmk_core/common/action.c ****                                 dprint("MODS_TAP: No tap: add_mods\n");
 169:../../tmk_core/common/action.c ****                                 register_mods(mods);
 170:../../tmk_core/common/action.c ****                             }
 171:../../tmk_core/common/action.c ****                         } else {
 172:../../tmk_core/common/action.c ****                             if (tap_count > 0) {
 173:../../tmk_core/common/action.c ****                                 dprint("MODS_TAP: Tap: unregister_code\n");
 174:../../tmk_core/common/action.c ****                                 unregister_code(action.key.code);
 175:../../tmk_core/common/action.c ****                             } else {
 176:../../tmk_core/common/action.c ****                                 dprint("MODS_TAP: No tap: add_mods\n");
 177:../../tmk_core/common/action.c ****                                 unregister_mods(mods);
 178:../../tmk_core/common/action.c ****                             }
 179:../../tmk_core/common/action.c ****                         }
 180:../../tmk_core/common/action.c ****                         break;
 181:../../tmk_core/common/action.c ****                 }
 182:../../tmk_core/common/action.c ****             }
 183:../../tmk_core/common/action.c ****             break;
 184:../../tmk_core/common/action.c **** #endif
 185:../../tmk_core/common/action.c **** #ifdef EXTRAKEY_ENABLE
 186:../../tmk_core/common/action.c ****         /* other HID usage */
 187:../../tmk_core/common/action.c ****         case ACT_USAGE:
 188:../../tmk_core/common/action.c ****             switch (action.usage.page) {
 189:../../tmk_core/common/action.c ****                 case PAGE_SYSTEM:
 190:../../tmk_core/common/action.c ****                     if (event.pressed) {
 191:../../tmk_core/common/action.c ****                         host_system_send(action.usage.code);
 192:../../tmk_core/common/action.c ****                     } else {
 193:../../tmk_core/common/action.c ****                         host_system_send(0);
 194:../../tmk_core/common/action.c ****                     }
 195:../../tmk_core/common/action.c ****                     break;
 196:../../tmk_core/common/action.c ****                 case PAGE_CONSUMER:
 197:../../tmk_core/common/action.c ****                     if (event.pressed) {
 198:../../tmk_core/common/action.c ****                         host_consumer_send(action.usage.code);
 199:../../tmk_core/common/action.c ****                     } else {
 200:../../tmk_core/common/action.c ****                         host_consumer_send(0);
 201:../../tmk_core/common/action.c ****                     }
 202:../../tmk_core/common/action.c ****                     break;
 203:../../tmk_core/common/action.c ****             }
 204:../../tmk_core/common/action.c ****             break;
 205:../../tmk_core/common/action.c **** #endif
 206:../../tmk_core/common/action.c **** #ifdef MOUSEKEY_ENABLE
 207:../../tmk_core/common/action.c ****         /* Mouse key */
 208:../../tmk_core/common/action.c ****         case ACT_MOUSEKEY:
 209:../../tmk_core/common/action.c ****             if (event.pressed) {
 210:../../tmk_core/common/action.c ****                 mousekey_on(action.key.code);
 211:../../tmk_core/common/action.c ****                 mousekey_send();
 212:../../tmk_core/common/action.c ****             } else {
 213:../../tmk_core/common/action.c ****                 mousekey_off(action.key.code);
 214:../../tmk_core/common/action.c ****                 mousekey_send();
 215:../../tmk_core/common/action.c ****             }
 216:../../tmk_core/common/action.c ****             break;
 217:../../tmk_core/common/action.c **** #endif
 218:../../tmk_core/common/action.c **** #ifndef NO_ACTION_LAYER
 219:../../tmk_core/common/action.c ****         case ACT_LAYER:
 220:../../tmk_core/common/action.c ****             if (action.layer_bitop.on == 0) {
 221:../../tmk_core/common/action.c ****                 /* Default Layer Bitwise Operation */
 222:../../tmk_core/common/action.c ****                 if (!event.pressed) {
 223:../../tmk_core/common/action.c ****                     uint8_t shift = action.layer_bitop.part*4;
 224:../../tmk_core/common/action.c ****                     uint32_t bits = ((uint32_t)action.layer_bitop.bits)<<shift;
 225:../../tmk_core/common/action.c ****                     uint32_t mask = (action.layer_bitop.xbit) ? ~(((uint32_t)0xf)<<shift) : 0;
 226:../../tmk_core/common/action.c ****                     switch (action.layer_bitop.op) {
 227:../../tmk_core/common/action.c ****                         case OP_BIT_AND: default_layer_and(bits | mask); break;
 228:../../tmk_core/common/action.c ****                         case OP_BIT_OR:  default_layer_or(bits | mask);  break;
 229:../../tmk_core/common/action.c ****                         case OP_BIT_XOR: default_layer_xor(bits | mask); break;
 230:../../tmk_core/common/action.c ****                         case OP_BIT_SET: default_layer_and(mask); default_layer_or(bits); break;
 231:../../tmk_core/common/action.c ****                     }
 232:../../tmk_core/common/action.c ****                 }
 233:../../tmk_core/common/action.c ****             } else {
 234:../../tmk_core/common/action.c ****                 /* Layer Bitwise Operation */
 235:../../tmk_core/common/action.c ****                 if (event.pressed ? (action.layer_bitop.on & ON_PRESS) :
 236:../../tmk_core/common/action.c ****                                     (action.layer_bitop.on & ON_RELEASE)) {
 237:../../tmk_core/common/action.c ****                     uint8_t shift = action.layer_bitop.part*4;
 238:../../tmk_core/common/action.c ****                     uint32_t bits = ((uint32_t)action.layer_bitop.bits)<<shift;
 239:../../tmk_core/common/action.c ****                     uint32_t mask = (action.layer_bitop.xbit) ? ~(((uint32_t)0xf)<<shift) : 0;
 240:../../tmk_core/common/action.c ****                     switch (action.layer_bitop.op) {
 241:../../tmk_core/common/action.c ****                         case OP_BIT_AND: layer_and(bits | mask); break;
 242:../../tmk_core/common/action.c ****                         case OP_BIT_OR:  layer_or(bits | mask);  break;
 243:../../tmk_core/common/action.c ****                         case OP_BIT_XOR: layer_xor(bits | mask); break;
 244:../../tmk_core/common/action.c ****                         case OP_BIT_SET: layer_and(mask); layer_or(bits); break;
 245:../../tmk_core/common/action.c ****                     }
 246:../../tmk_core/common/action.c ****                 }
 247:../../tmk_core/common/action.c ****             }
 248:../../tmk_core/common/action.c ****             break;
 249:../../tmk_core/common/action.c ****     #ifndef NO_ACTION_TAPPING
 250:../../tmk_core/common/action.c ****         case ACT_LAYER_TAP:
 251:../../tmk_core/common/action.c ****         case ACT_LAYER_TAP_EXT:
 252:../../tmk_core/common/action.c ****             switch (action.layer_tap.code) {
 253:../../tmk_core/common/action.c ****                 case 0xc0 ... 0xdf:
 254:../../tmk_core/common/action.c ****                     /* layer On/Off with modifiers */
 255:../../tmk_core/common/action.c ****                     if (event.pressed) {
 256:../../tmk_core/common/action.c ****                         layer_on(action.layer_tap.val);
 257:../../tmk_core/common/action.c ****                         register_mods((action.layer_tap.code & 0x10) ?
 258:../../tmk_core/common/action.c ****                                 (action.layer_tap.code & 0x0f) << 4 :
 259:../../tmk_core/common/action.c ****                                 (action.layer_tap.code & 0x0f));
 260:../../tmk_core/common/action.c ****                     } else {
 261:../../tmk_core/common/action.c ****                         layer_off(action.layer_tap.val);
 262:../../tmk_core/common/action.c ****                         unregister_mods((action.layer_tap.code & 0x10) ?
 263:../../tmk_core/common/action.c ****                                 (action.layer_tap.code & 0x0f) << 4 :
 264:../../tmk_core/common/action.c ****                                 (action.layer_tap.code & 0x0f));
 265:../../tmk_core/common/action.c ****                     }
 266:../../tmk_core/common/action.c ****                     break;
 267:../../tmk_core/common/action.c ****                 case OP_TAP_TOGGLE:
 268:../../tmk_core/common/action.c ****                     /* tap toggle */
 269:../../tmk_core/common/action.c ****                     if (event.pressed) {
 270:../../tmk_core/common/action.c ****                         if (tap_count < TAPPING_TOGGLE) {
 271:../../tmk_core/common/action.c ****                             layer_invert(action.layer_tap.val);
 272:../../tmk_core/common/action.c ****                         }
 273:../../tmk_core/common/action.c ****                     } else {
 274:../../tmk_core/common/action.c ****                         if (tap_count <= TAPPING_TOGGLE) {
 275:../../tmk_core/common/action.c ****                             layer_invert(action.layer_tap.val);
 276:../../tmk_core/common/action.c ****                         }
 277:../../tmk_core/common/action.c ****                     }
 278:../../tmk_core/common/action.c ****                     break;
 279:../../tmk_core/common/action.c ****                 case OP_ON_OFF:
 280:../../tmk_core/common/action.c ****                     event.pressed ? layer_on(action.layer_tap.val) :
 281:../../tmk_core/common/action.c ****                                     layer_off(action.layer_tap.val);
 282:../../tmk_core/common/action.c ****                     break;
 283:../../tmk_core/common/action.c ****                 case OP_OFF_ON:
 284:../../tmk_core/common/action.c ****                     event.pressed ? layer_off(action.layer_tap.val) :
 285:../../tmk_core/common/action.c ****                                     layer_on(action.layer_tap.val);
 286:../../tmk_core/common/action.c ****                     break;
 287:../../tmk_core/common/action.c ****                 case OP_SET_CLEAR:
 288:../../tmk_core/common/action.c ****                     event.pressed ? layer_move(action.layer_tap.val) :
 289:../../tmk_core/common/action.c ****                                     layer_clear();
 290:../../tmk_core/common/action.c ****                     break;
 291:../../tmk_core/common/action.c ****                 default:
 292:../../tmk_core/common/action.c ****                     /* tap key */
 293:../../tmk_core/common/action.c ****                     if (event.pressed) {
 294:../../tmk_core/common/action.c ****                         if (tap_count > 0) {
 295:../../tmk_core/common/action.c ****                             dprint("KEYMAP_TAP_KEY: Tap: register_code\n");
 296:../../tmk_core/common/action.c ****                             register_code(action.layer_tap.code);
 297:../../tmk_core/common/action.c ****                         } else {
 298:../../tmk_core/common/action.c ****                             dprint("KEYMAP_TAP_KEY: No tap: On on press\n");
 299:../../tmk_core/common/action.c ****                             layer_on(action.layer_tap.val);
 300:../../tmk_core/common/action.c ****                         }
 301:../../tmk_core/common/action.c ****                     } else {
 302:../../tmk_core/common/action.c ****                         if (tap_count > 0) {
 303:../../tmk_core/common/action.c ****                             dprint("KEYMAP_TAP_KEY: Tap: unregister_code\n");
 304:../../tmk_core/common/action.c ****                             unregister_code(action.layer_tap.code);
 305:../../tmk_core/common/action.c ****                         } else {
 306:../../tmk_core/common/action.c ****                             dprint("KEYMAP_TAP_KEY: No tap: Off on release\n");
 307:../../tmk_core/common/action.c ****                             layer_off(action.layer_tap.val);
 308:../../tmk_core/common/action.c ****                         }
 309:../../tmk_core/common/action.c ****                     }
 310:../../tmk_core/common/action.c ****                     break;
 311:../../tmk_core/common/action.c ****             }
 312:../../tmk_core/common/action.c ****             break;
 313:../../tmk_core/common/action.c ****     #endif
 314:../../tmk_core/common/action.c **** #endif
 315:../../tmk_core/common/action.c ****         /* Extentions */
 316:../../tmk_core/common/action.c **** #ifndef NO_ACTION_MACRO
 317:../../tmk_core/common/action.c ****         case ACT_MACRO:
 318:../../tmk_core/common/action.c ****             action_macro_play(action_get_macro(record, action.func.id, action.func.opt));
 319:../../tmk_core/common/action.c ****             break;
 320:../../tmk_core/common/action.c **** #endif
 321:../../tmk_core/common/action.c **** #ifdef BACKLIGHT_ENABLE
 322:../../tmk_core/common/action.c ****         case ACT_BACKLIGHT:
 323:../../tmk_core/common/action.c ****             if (!event.pressed) {
 324:../../tmk_core/common/action.c ****                 switch (action.backlight.opt) {
 325:../../tmk_core/common/action.c ****                     case BACKLIGHT_INCREASE:
 326:../../tmk_core/common/action.c ****                         backlight_increase();
 327:../../tmk_core/common/action.c ****                         break;
 328:../../tmk_core/common/action.c ****                     case BACKLIGHT_DECREASE:
 329:../../tmk_core/common/action.c ****                         backlight_decrease();
 330:../../tmk_core/common/action.c ****                         break;
 331:../../tmk_core/common/action.c ****                     case BACKLIGHT_TOGGLE:
 332:../../tmk_core/common/action.c ****                         backlight_toggle();
 333:../../tmk_core/common/action.c ****                         break;
 334:../../tmk_core/common/action.c ****                     case BACKLIGHT_STEP:
 335:../../tmk_core/common/action.c ****                         backlight_step();
 336:../../tmk_core/common/action.c ****                         break;
 337:../../tmk_core/common/action.c ****                     case BACKLIGHT_LEVEL:
 338:../../tmk_core/common/action.c ****                         backlight_level(action.backlight.level);
 339:../../tmk_core/common/action.c ****                         break;
 340:../../tmk_core/common/action.c ****                 }
 341:../../tmk_core/common/action.c ****             }
 342:../../tmk_core/common/action.c ****             break;
 343:../../tmk_core/common/action.c **** #endif
 344:../../tmk_core/common/action.c ****         case ACT_COMMAND:
 345:../../tmk_core/common/action.c ****             switch (action.command.id) {
 346:../../tmk_core/common/action.c ****                 case COMMAND_BOOTLOADER:
 347:../../tmk_core/common/action.c ****                     if (event.pressed) {
 348:../../tmk_core/common/action.c ****                         clear_keyboard();
 349:../../tmk_core/common/action.c ****                         wait_ms(50);
 350:../../tmk_core/common/action.c ****                         bootloader_jump();
 351:../../tmk_core/common/action.c ****                     }
 352:../../tmk_core/common/action.c ****                     break;
 353:../../tmk_core/common/action.c ****             }
 354:../../tmk_core/common/action.c ****             break;
 355:../../tmk_core/common/action.c **** #ifndef NO_ACTION_FUNCTION
 356:../../tmk_core/common/action.c ****         case ACT_FUNCTION:
 357:../../tmk_core/common/action.c ****             action_function(record, action.func.id, action.func.opt);
 358:../../tmk_core/common/action.c ****             break;
 359:../../tmk_core/common/action.c **** #endif
 360:../../tmk_core/common/action.c ****         default:
 361:../../tmk_core/common/action.c ****             break;
 362:../../tmk_core/common/action.c ****     }
 363:../../tmk_core/common/action.c **** }
 364:../../tmk_core/common/action.c **** 
 365:../../tmk_core/common/action.c **** 
 366:../../tmk_core/common/action.c **** 
 367:../../tmk_core/common/action.c **** 
 368:../../tmk_core/common/action.c **** /*
 369:../../tmk_core/common/action.c ****  * Utilities for actions.
 370:../../tmk_core/common/action.c ****  */
 371:../../tmk_core/common/action.c **** void register_code(uint8_t code)
 372:../../tmk_core/common/action.c **** {
 125               		.loc 1 372 1 is_stmt 1 view -0
 126               		.cfi_startproc
 127               		.loc 1 372 1 is_stmt 0 view .LVU18
 128 0000 CF93      		push r28
 129               	.LCFI4:
 130               		.cfi_def_cfa_offset 3
 131               		.cfi_offset 28, -2
 132               	/* prologue: function */
 133               	/* frame size = 0 */
 134               	/* stack size = 1 */
 135               	.L__stack_usage = 1
 136 0002 C82F      		mov r28,r24
 373:../../tmk_core/common/action.c ****     if (code == KC_NO) {
 137               		.loc 1 373 5 is_stmt 1 view .LVU19
 138               		.loc 1 373 8 is_stmt 0 view .LVU20
 139 0004 8823      		tst r24
 140 0006 01F4      		brne .+2
 141 0008 00C0      		rjmp .L7
 374:../../tmk_core/common/action.c ****         return;
 375:../../tmk_core/common/action.c ****     }
 376:../../tmk_core/common/action.c **** 
 377:../../tmk_core/common/action.c **** #ifdef LOCKING_SUPPORT_ENABLE
 378:../../tmk_core/common/action.c ****     else if (KC_LOCKING_CAPS == code) {
 379:../../tmk_core/common/action.c **** #ifdef LOCKING_RESYNC_ENABLE
 380:../../tmk_core/common/action.c ****         // Resync: ignore if caps lock already is on
 381:../../tmk_core/common/action.c ****         if (host_keyboard_leds() & (1<<USB_LED_CAPS_LOCK)) return;
 382:../../tmk_core/common/action.c **** #endif
 383:../../tmk_core/common/action.c ****         add_key(KC_CAPSLOCK);
 384:../../tmk_core/common/action.c ****         send_keyboard_report();
 385:../../tmk_core/common/action.c ****         wait_ms(100);
 386:../../tmk_core/common/action.c ****         del_key(KC_CAPSLOCK);
 387:../../tmk_core/common/action.c ****         send_keyboard_report();
 388:../../tmk_core/common/action.c ****     }
 389:../../tmk_core/common/action.c **** 
 390:../../tmk_core/common/action.c ****     else if (KC_LOCKING_NUM == code) {
 391:../../tmk_core/common/action.c **** #ifdef LOCKING_RESYNC_ENABLE
 392:../../tmk_core/common/action.c ****         if (host_keyboard_leds() & (1<<USB_LED_NUM_LOCK)) return;
 393:../../tmk_core/common/action.c **** #endif
 394:../../tmk_core/common/action.c ****         add_key(KC_NUMLOCK);
 395:../../tmk_core/common/action.c ****         send_keyboard_report();
 396:../../tmk_core/common/action.c ****         wait_ms(100);
 397:../../tmk_core/common/action.c ****         del_key(KC_NUMLOCK);
 398:../../tmk_core/common/action.c ****         send_keyboard_report();
 399:../../tmk_core/common/action.c ****     }
 400:../../tmk_core/common/action.c **** 
 401:../../tmk_core/common/action.c ****     else if (KC_LOCKING_SCROLL == code) {
 402:../../tmk_core/common/action.c **** #ifdef LOCKING_RESYNC_ENABLE
 403:../../tmk_core/common/action.c ****         if (host_keyboard_leds() & (1<<USB_LED_SCROLL_LOCK)) return;
 404:../../tmk_core/common/action.c **** #endif
 405:../../tmk_core/common/action.c ****         add_key(KC_SCROLLLOCK);
 406:../../tmk_core/common/action.c ****         send_keyboard_report();
 407:../../tmk_core/common/action.c ****         wait_ms(100);
 408:../../tmk_core/common/action.c ****         del_key(KC_SCROLLLOCK);
 409:../../tmk_core/common/action.c ****         send_keyboard_report();
 410:../../tmk_core/common/action.c ****     }
 411:../../tmk_core/common/action.c **** #endif
 412:../../tmk_core/common/action.c **** 
 413:../../tmk_core/common/action.c ****     else if IS_KEY(code) {
 142               		.loc 1 413 10 is_stmt 1 view .LVU21
 143               		.loc 1 413 13 is_stmt 0 view .LVU22
 144 000a 8CEF      		ldi r24,lo8(-4)
 145               	.LVL5:
 146               		.loc 1 413 13 view .LVU23
 147 000c 8C0F      		add r24,r28
 148 000e 813A      		cpi r24,lo8(-95)
 149 0010 00F4      		brsh .L10
 414:../../tmk_core/common/action.c ****         // TODO: should push command_proc out of this block?
 415:../../tmk_core/common/action.c ****         if (command_proc(code)) return;
 150               		.loc 1 415 9 is_stmt 1 view .LVU24
 151               		.loc 1 415 13 is_stmt 0 view .LVU25
 152 0012 8C2F      		mov r24,r28
 153 0014 0E94 0000 		call command_proc
 154               	.LVL6:
 155               		.loc 1 415 12 view .LVU26
 156 0018 8111      		cpse r24,__zero_reg__
 157 001a 00C0      		rjmp .L7
 416:../../tmk_core/common/action.c **** 
 417:../../tmk_core/common/action.c **** #ifndef NO_ACTION_ONESHOT
 418:../../tmk_core/common/action.c **** /* TODO: remove
 419:../../tmk_core/common/action.c ****         if (oneshot_state.mods && !oneshot_state.disabled) {
 420:../../tmk_core/common/action.c ****             uint8_t tmp_mods = get_mods();
 421:../../tmk_core/common/action.c ****             add_mods(oneshot_state.mods);
 422:../../tmk_core/common/action.c **** 
 423:../../tmk_core/common/action.c ****             add_key(code);
 424:../../tmk_core/common/action.c ****             send_keyboard_report();
 425:../../tmk_core/common/action.c **** 
 426:../../tmk_core/common/action.c ****             set_mods(tmp_mods);
 427:../../tmk_core/common/action.c ****             send_keyboard_report();
 428:../../tmk_core/common/action.c ****             oneshot_cancel();
 429:../../tmk_core/common/action.c ****         } else 
 430:../../tmk_core/common/action.c **** */
 431:../../tmk_core/common/action.c **** #endif
 432:../../tmk_core/common/action.c ****         {
 433:../../tmk_core/common/action.c ****             add_key(code);
 158               		.loc 1 433 13 is_stmt 1 view .LVU27
 159 001c 8C2F      		mov r24,r28
 160 001e 0E94 0000 		call add_key
 161               	.LVL7:
 434:../../tmk_core/common/action.c ****             send_keyboard_report();
 162               		.loc 1 434 13 view .LVU28
 163               	.L39:
 435:../../tmk_core/common/action.c ****         }
 436:../../tmk_core/common/action.c ****     }
 437:../../tmk_core/common/action.c ****     else if IS_MOD(code) {
 438:../../tmk_core/common/action.c ****         add_mods(MOD_BIT(code));
 439:../../tmk_core/common/action.c ****         send_keyboard_report();
 164               		.loc 1 439 9 view .LVU29
 165               	/* epilogue start */
 440:../../tmk_core/common/action.c ****     }
 441:../../tmk_core/common/action.c ****     else if IS_SYSTEM(code) {
 442:../../tmk_core/common/action.c ****         host_system_send(KEYCODE2SYSTEM(code));
 443:../../tmk_core/common/action.c ****     }
 444:../../tmk_core/common/action.c ****     else if IS_CONSUMER(code) {
 445:../../tmk_core/common/action.c ****         host_consumer_send(KEYCODE2CONSUMER(code));
 446:../../tmk_core/common/action.c ****     }
 447:../../tmk_core/common/action.c **** }
 166               		.loc 1 447 1 is_stmt 0 view .LVU30
 167 0022 CF91      		pop r28
 439:../../tmk_core/common/action.c ****     }
 168               		.loc 1 439 9 view .LVU31
 169 0024 0C94 0000 		jmp send_keyboard_report
 170               	.LVL8:
 171               	.L10:
 437:../../tmk_core/common/action.c ****         add_mods(MOD_BIT(code));
 172               		.loc 1 437 10 is_stmt 1 view .LVU32
 437:../../tmk_core/common/action.c ****         add_mods(MOD_BIT(code));
 173               		.loc 1 437 13 is_stmt 0 view .LVU33
 174 0028 80E2      		ldi r24,lo8(32)
 175 002a 8C0F      		add r24,r28
 176 002c 8830      		cpi r24,lo8(8)
 177 002e 00F4      		brsh .L12
 438:../../tmk_core/common/action.c ****         send_keyboard_report();
 178               		.loc 1 438 9 is_stmt 1 view .LVU34
 438:../../tmk_core/common/action.c ****         send_keyboard_report();
 179               		.loc 1 438 18 is_stmt 0 view .LVU35
 180 0030 C770      		andi r28,lo8(7)
 181               	.LVL9:
 438:../../tmk_core/common/action.c ****         send_keyboard_report();
 182               		.loc 1 438 9 view .LVU36
 183 0032 81E0      		ldi r24,lo8(1)
 184 0034 00C0      		rjmp 2f
 185               		1:
 186 0036 880F      		lsl r24
 187               		2:
 188 0038 CA95      		dec r28
 189 003a 02F4      		brpl 1b
 190 003c 0E94 0000 		call add_mods
 191               	.LVL10:
 192 0040 00C0      		rjmp .L39
 193               	.LVL11:
 194               	.L12:
 441:../../tmk_core/common/action.c ****         host_system_send(KEYCODE2SYSTEM(code));
 195               		.loc 1 441 10 is_stmt 1 view .LVU37
 441:../../tmk_core/common/action.c ****         host_system_send(KEYCODE2SYSTEM(code));
 196               		.loc 1 441 13 is_stmt 0 view .LVU38
 197 0042 8BE5      		ldi r24,lo8(91)
 198 0044 8C0F      		add r24,r28
 199 0046 8330      		cpi r24,lo8(3)
 200 0048 00F4      		brsh .L13
 442:../../tmk_core/common/action.c ****     }
 201               		.loc 1 442 9 is_stmt 1 view .LVU39
 202 004a 81E8      		ldi r24,lo8(-127)
 203 004c 90E0      		ldi r25,0
 204 004e C53A      		cpi r28,lo8(-91)
 205 0050 01F0      		breq .L14
 442:../../tmk_core/common/action.c ****     }
 206               		.loc 1 442 26 is_stmt 0 discriminator 1 view .LVU40
 207 0052 83E8      		ldi r24,lo8(-125)
 208 0054 90E0      		ldi r25,0
 209 0056 C63A      		cpi r28,lo8(-90)
 210 0058 01F4      		brne .L14
 442:../../tmk_core/common/action.c ****     }
 211               		.loc 1 442 26 view .LVU41
 212 005a 82E8      		ldi r24,lo8(-126)
 213 005c 90E0      		ldi r25,0
 214               	.L14:
 215               	/* epilogue start */
 216               		.loc 1 447 1 discriminator 12 view .LVU42
 217 005e CF91      		pop r28
 218               	.LVL12:
 442:../../tmk_core/common/action.c ****     }
 219               		.loc 1 442 9 discriminator 12 view .LVU43
 220 0060 0C94 0000 		jmp host_system_send
 221               	.LVL13:
 222               	.L13:
 444:../../tmk_core/common/action.c ****         host_consumer_send(KEYCODE2CONSUMER(code));
 223               		.loc 1 444 10 is_stmt 1 view .LVU44
 444:../../tmk_core/common/action.c ****         host_consumer_send(KEYCODE2CONSUMER(code));
 224               		.loc 1 444 13 is_stmt 0 view .LVU45
 225 0064 88E5      		ldi r24,lo8(88)
 226 0066 8C0F      		add r24,r28
 227 0068 8531      		cpi r24,lo8(21)
 228 006a 00F0      		brlo .+2
 229 006c 00C0      		rjmp .L7
 445:../../tmk_core/common/action.c ****     }
 230               		.loc 1 445 9 is_stmt 1 view .LVU46
 231 006e 82EE      		ldi r24,lo8(-30)
 232 0070 90E0      		ldi r25,0
 233 0072 C83A      		cpi r28,lo8(-88)
 234 0074 01F4      		brne .+2
 235 0076 00C0      		rjmp .L15
 445:../../tmk_core/common/action.c ****     }
 236               		.loc 1 445 28 is_stmt 0 discriminator 1 view .LVU47
 237 0078 89EE      		ldi r24,lo8(-23)
 238 007a 90E0      		ldi r25,0
 239 007c C93A      		cpi r28,lo8(-87)
 240 007e 01F4      		brne .+2
 241 0080 00C0      		rjmp .L15
 445:../../tmk_core/common/action.c ****     }
 242               		.loc 1 445 28 discriminator 3 view .LVU48
 243 0082 8AEE      		ldi r24,lo8(-22)
 244 0084 90E0      		ldi r25,0
 245 0086 CA3A      		cpi r28,lo8(-86)
 246 0088 01F4      		brne .+2
 247 008a 00C0      		rjmp .L15
 445:../../tmk_core/common/action.c ****     }
 248               		.loc 1 445 28 discriminator 5 view .LVU49
 249 008c 85EB      		ldi r24,lo8(-75)
 250 008e 90E0      		ldi r25,0
 251 0090 CB3A      		cpi r28,lo8(-85)
 252 0092 01F4      		brne .+2
 253 0094 00C0      		rjmp .L15
 445:../../tmk_core/common/action.c ****     }
 254               		.loc 1 445 28 discriminator 7 view .LVU50
 255 0096 86EB      		ldi r24,lo8(-74)
 256 0098 90E0      		ldi r25,0
 257 009a CC3A      		cpi r28,lo8(-84)
 258 009c 01F4      		brne .+2
 259 009e 00C0      		rjmp .L15
 445:../../tmk_core/common/action.c ****     }
 260               		.loc 1 445 28 discriminator 9 view .LVU51
 261 00a0 83EB      		ldi r24,lo8(-77)
 262 00a2 90E0      		ldi r25,0
 263 00a4 CD3A      		cpi r28,lo8(-83)
 264 00a6 01F0      		breq .L15
 445:../../tmk_core/common/action.c ****     }
 265               		.loc 1 445 28 discriminator 11 view .LVU52
 266 00a8 84EB      		ldi r24,lo8(-76)
 267 00aa 90E0      		ldi r25,0
 268 00ac CE3A      		cpi r28,lo8(-82)
 269 00ae 01F0      		breq .L15
 445:../../tmk_core/common/action.c ****     }
 270               		.loc 1 445 28 discriminator 13 view .LVU53
 271 00b0 87EB      		ldi r24,lo8(-73)
 272 00b2 90E0      		ldi r25,0
 273 00b4 CF3A      		cpi r28,lo8(-81)
 274 00b6 01F0      		breq .L15
 445:../../tmk_core/common/action.c ****     }
 275               		.loc 1 445 28 discriminator 15 view .LVU54
 276 00b8 8CEC      		ldi r24,lo8(-52)
 277 00ba 90E0      		ldi r25,0
 278 00bc C13B      		cpi r28,lo8(-79)
 279 00be 01F0      		breq .L15
 445:../../tmk_core/common/action.c ****     }
 280               		.loc 1 445 28 discriminator 17 view .LVU55
 281 00c0 8DEC      		ldi r24,lo8(-51)
 282 00c2 90E0      		ldi r25,0
 283 00c4 C03B      		cpi r28,lo8(-80)
 284 00c6 01F0      		breq .L15
 445:../../tmk_core/common/action.c ****     }
 285               		.loc 1 445 28 discriminator 19 view .LVU56
 286 00c8 83E8      		ldi r24,lo8(-125)
 287 00ca 91E0      		ldi r25,lo8(1)
 288 00cc C23B      		cpi r28,lo8(-78)
 289 00ce 01F0      		breq .L15
 445:../../tmk_core/common/action.c ****     }
 290               		.loc 1 445 28 discriminator 21 view .LVU57
 291 00d0 8AE8      		ldi r24,lo8(-118)
 292 00d2 91E0      		ldi r25,lo8(1)
 293 00d4 C33B      		cpi r28,lo8(-77)
 294 00d6 01F0      		breq .L15
 445:../../tmk_core/common/action.c ****     }
 295               		.loc 1 445 28 discriminator 23 view .LVU58
 296 00d8 82E9      		ldi r24,lo8(-110)
 297 00da 91E0      		ldi r25,lo8(1)
 298 00dc C43B      		cpi r28,lo8(-76)
 299 00de 01F0      		breq .L15
 445:../../tmk_core/common/action.c ****     }
 300               		.loc 1 445 28 discriminator 25 view .LVU59
 301 00e0 84E9      		ldi r24,lo8(-108)
 302 00e2 91E0      		ldi r25,lo8(1)
 303 00e4 C53B      		cpi r28,lo8(-75)
 304 00e6 01F0      		breq .L15
 445:../../tmk_core/common/action.c ****     }
 305               		.loc 1 445 28 discriminator 27 view .LVU60
 306 00e8 81E2      		ldi r24,lo8(33)
 307 00ea 92E0      		ldi r25,lo8(2)
 308 00ec C63B      		cpi r28,lo8(-74)
 309 00ee 01F0      		breq .L15
 445:../../tmk_core/common/action.c ****     }
 310               		.loc 1 445 28 discriminator 29 view .LVU61
 311 00f0 83E2      		ldi r24,lo8(35)
 312 00f2 92E0      		ldi r25,lo8(2)
 313 00f4 C73B      		cpi r28,lo8(-73)
 314 00f6 01F0      		breq .L15
 445:../../tmk_core/common/action.c ****     }
 315               		.loc 1 445 28 discriminator 31 view .LVU62
 316 00f8 84E2      		ldi r24,lo8(36)
 317 00fa 92E0      		ldi r25,lo8(2)
 318 00fc C83B      		cpi r28,lo8(-72)
 319 00fe 01F0      		breq .L15
 445:../../tmk_core/common/action.c ****     }
 320               		.loc 1 445 28 discriminator 33 view .LVU63
 321 0100 85E2      		ldi r24,lo8(37)
 322 0102 92E0      		ldi r25,lo8(2)
 323 0104 C93B      		cpi r28,lo8(-71)
 324 0106 01F0      		breq .L15
 445:../../tmk_core/common/action.c ****     }
 325               		.loc 1 445 28 discriminator 35 view .LVU64
 326 0108 86E2      		ldi r24,lo8(38)
 327 010a 92E0      		ldi r25,lo8(2)
 328 010c CA3B      		cpi r28,lo8(-70)
 329 010e 01F0      		breq .L15
 445:../../tmk_core/common/action.c ****     }
 330               		.loc 1 445 28 discriminator 37 view .LVU65
 331 0110 87E2      		ldi r24,lo8(39)
 332 0112 92E0      		ldi r25,lo8(2)
 333 0114 CB3B      		cpi r28,lo8(-69)
 334 0116 01F0      		breq .L15
 445:../../tmk_core/common/action.c ****     }
 335               		.loc 1 445 28 discriminator 39 view .LVU66
 336 0118 90E0      		ldi r25,0
 337 011a 80E0      		ldi r24,0
 338 011c CC3B      		cpi r28,lo8(-68)
 339 011e 01F4      		brne .L15
 445:../../tmk_core/common/action.c ****     }
 340               		.loc 1 445 28 view .LVU67
 341 0120 8AE2      		ldi r24,lo8(42)
 342 0122 92E0      		ldi r25,lo8(2)
 343               	.L15:
 344               	/* epilogue start */
 345               		.loc 1 447 1 discriminator 84 view .LVU68
 346 0124 CF91      		pop r28
 347               	.LVL14:
 445:../../tmk_core/common/action.c ****     }
 348               		.loc 1 445 9 discriminator 84 view .LVU69
 349 0126 0C94 0000 		jmp host_consumer_send
 350               	.LVL15:
 351               	.L7:
 352               	/* epilogue start */
 353               		.loc 1 447 1 view .LVU70
 354 012a CF91      		pop r28
 355               	.LVL16:
 356               		.loc 1 447 1 view .LVU71
 357 012c 0895      		ret
 358               		.cfi_endproc
 359               	.LFE105:
 361               		.section	.text.unregister_code,"ax",@progbits
 362               	.global	unregister_code
 364               	unregister_code:
 365               	.LVL17:
 366               	.LFB106:
 448:../../tmk_core/common/action.c **** 
 449:../../tmk_core/common/action.c **** void unregister_code(uint8_t code)
 450:../../tmk_core/common/action.c **** {
 367               		.loc 1 450 1 is_stmt 1 view -0
 368               		.cfi_startproc
 369               	/* prologue: function */
 370               	/* frame size = 0 */
 371               	/* stack size = 0 */
 372               	.L__stack_usage = 0
 451:../../tmk_core/common/action.c ****     if (code == KC_NO) {
 373               		.loc 1 451 5 view .LVU73
 374               		.loc 1 451 8 is_stmt 0 view .LVU74
 375 0000 8823      		tst r24
 376 0002 01F0      		breq .L40
 452:../../tmk_core/common/action.c ****         return;
 453:../../tmk_core/common/action.c ****     }
 454:../../tmk_core/common/action.c **** 
 455:../../tmk_core/common/action.c **** #ifdef LOCKING_SUPPORT_ENABLE
 456:../../tmk_core/common/action.c ****     else if (KC_LOCKING_CAPS == code) {
 457:../../tmk_core/common/action.c **** #ifdef LOCKING_RESYNC_ENABLE
 458:../../tmk_core/common/action.c ****         // Resync: ignore if caps lock already is off
 459:../../tmk_core/common/action.c ****         if (!(host_keyboard_leds() & (1<<USB_LED_CAPS_LOCK))) return;
 460:../../tmk_core/common/action.c **** #endif
 461:../../tmk_core/common/action.c ****         add_key(KC_CAPSLOCK);
 462:../../tmk_core/common/action.c ****         send_keyboard_report();
 463:../../tmk_core/common/action.c ****         wait_ms(100);
 464:../../tmk_core/common/action.c ****         del_key(KC_CAPSLOCK);
 465:../../tmk_core/common/action.c ****         send_keyboard_report();
 466:../../tmk_core/common/action.c ****     }
 467:../../tmk_core/common/action.c **** 
 468:../../tmk_core/common/action.c ****     else if (KC_LOCKING_NUM == code) {
 469:../../tmk_core/common/action.c **** #ifdef LOCKING_RESYNC_ENABLE
 470:../../tmk_core/common/action.c ****         if (!(host_keyboard_leds() & (1<<USB_LED_NUM_LOCK))) return;
 471:../../tmk_core/common/action.c **** #endif
 472:../../tmk_core/common/action.c ****         add_key(KC_NUMLOCK);
 473:../../tmk_core/common/action.c ****         send_keyboard_report();
 474:../../tmk_core/common/action.c ****         wait_ms(100);
 475:../../tmk_core/common/action.c ****         del_key(KC_NUMLOCK);
 476:../../tmk_core/common/action.c ****         send_keyboard_report();
 477:../../tmk_core/common/action.c ****     }
 478:../../tmk_core/common/action.c **** 
 479:../../tmk_core/common/action.c ****     else if (KC_LOCKING_SCROLL == code) {
 480:../../tmk_core/common/action.c **** #ifdef LOCKING_RESYNC_ENABLE
 481:../../tmk_core/common/action.c ****         if (!(host_keyboard_leds() & (1<<USB_LED_SCROLL_LOCK))) return;
 482:../../tmk_core/common/action.c **** #endif
 483:../../tmk_core/common/action.c ****         add_key(KC_SCROLLLOCK);
 484:../../tmk_core/common/action.c ****         send_keyboard_report();
 485:../../tmk_core/common/action.c ****         wait_ms(100);
 486:../../tmk_core/common/action.c ****         del_key(KC_SCROLLLOCK);
 487:../../tmk_core/common/action.c ****         send_keyboard_report();
 488:../../tmk_core/common/action.c ****     }
 489:../../tmk_core/common/action.c **** #endif
 490:../../tmk_core/common/action.c **** 
 491:../../tmk_core/common/action.c ****     else if IS_KEY(code) {
 377               		.loc 1 491 10 is_stmt 1 view .LVU75
 378               		.loc 1 491 13 is_stmt 0 view .LVU76
 379 0004 9CEF      		ldi r25,lo8(-4)
 380 0006 980F      		add r25,r24
 381 0008 913A      		cpi r25,lo8(-95)
 382 000a 00F4      		brsh .L42
 492:../../tmk_core/common/action.c ****         del_key(code);
 383               		.loc 1 492 9 is_stmt 1 view .LVU77
 384 000c 0E94 0000 		call del_key
 385               	.LVL18:
 493:../../tmk_core/common/action.c ****         send_keyboard_report();
 386               		.loc 1 493 9 view .LVU78
 387               	.L48:
 494:../../tmk_core/common/action.c ****     }
 495:../../tmk_core/common/action.c ****     else if IS_MOD(code) {
 496:../../tmk_core/common/action.c ****         del_mods(MOD_BIT(code));
 497:../../tmk_core/common/action.c ****         send_keyboard_report();
 388               		.loc 1 497 9 view .LVU79
 389 0010 0C94 0000 		jmp send_keyboard_report
 390               	.LVL19:
 391               	.L42:
 495:../../tmk_core/common/action.c ****         del_mods(MOD_BIT(code));
 392               		.loc 1 495 10 view .LVU80
 495:../../tmk_core/common/action.c ****         del_mods(MOD_BIT(code));
 393               		.loc 1 495 13 is_stmt 0 view .LVU81
 394 0014 90E2      		ldi r25,lo8(32)
 395 0016 980F      		add r25,r24
 396 0018 9830      		cpi r25,lo8(8)
 397 001a 00F4      		brsh .L43
 496:../../tmk_core/common/action.c ****         send_keyboard_report();
 398               		.loc 1 496 9 is_stmt 1 view .LVU82
 496:../../tmk_core/common/action.c ****         send_keyboard_report();
 399               		.loc 1 496 18 is_stmt 0 view .LVU83
 400 001c 8770      		andi r24,lo8(7)
 401               	.LVL20:
 496:../../tmk_core/common/action.c ****         send_keyboard_report();
 402               		.loc 1 496 9 view .LVU84
 403 001e 91E0      		ldi r25,lo8(1)
 404 0020 00C0      		rjmp 2f
 405               		1:
 406 0022 990F      		lsl r25
 407               		2:
 408 0024 8A95      		dec r24
 409 0026 02F4      		brpl 1b
 410 0028 892F      		mov r24,r25
 411 002a 0E94 0000 		call del_mods
 412               	.LVL21:
 413 002e 00C0      		rjmp .L48
 414               	.LVL22:
 415               	.L43:
 498:../../tmk_core/common/action.c ****     }
 499:../../tmk_core/common/action.c ****     else if IS_SYSTEM(code) {
 416               		.loc 1 499 10 is_stmt 1 view .LVU85
 417               		.loc 1 499 13 is_stmt 0 view .LVU86
 418 0030 9BE5      		ldi r25,lo8(91)
 419 0032 980F      		add r25,r24
 420 0034 9330      		cpi r25,lo8(3)
 421 0036 00F4      		brsh .L44
 500:../../tmk_core/common/action.c ****         host_system_send(0);
 422               		.loc 1 500 9 is_stmt 1 view .LVU87
 423 0038 90E0      		ldi r25,0
 424 003a 80E0      		ldi r24,0
 425               	.LVL23:
 426               		.loc 1 500 9 is_stmt 0 view .LVU88
 427 003c 0C94 0000 		jmp host_system_send
 428               	.LVL24:
 429               	.L44:
 501:../../tmk_core/common/action.c ****     }
 502:../../tmk_core/common/action.c ****     else if IS_CONSUMER(code) {
 430               		.loc 1 502 10 is_stmt 1 view .LVU89
 431               		.loc 1 502 13 is_stmt 0 view .LVU90
 432 0040 885A      		subi r24,lo8(-(88))
 433               	.LVL25:
 434               		.loc 1 502 13 view .LVU91
 435 0042 8531      		cpi r24,lo8(21)
 436 0044 00F4      		brsh .L40
 503:../../tmk_core/common/action.c ****         host_consumer_send(0);
 437               		.loc 1 503 9 is_stmt 1 view .LVU92
 438 0046 90E0      		ldi r25,0
 439 0048 80E0      		ldi r24,0
 440               	.LVL26:
 441               		.loc 1 503 9 is_stmt 0 view .LVU93
 442 004a 0C94 0000 		jmp host_consumer_send
 443               	.LVL27:
 444               	.L40:
 445               	/* epilogue start */
 504:../../tmk_core/common/action.c ****     }
 505:../../tmk_core/common/action.c **** }
 446               		.loc 1 505 1 view .LVU94
 447 004e 0895      		ret
 448               		.cfi_endproc
 449               	.LFE106:
 451               		.section	.text.type_code,"ax",@progbits
 452               	.global	type_code
 454               	type_code:
 455               	.LVL28:
 456               	.LFB107:
 506:../../tmk_core/common/action.c **** 
 507:../../tmk_core/common/action.c **** void type_code(uint8_t code)
 508:../../tmk_core/common/action.c **** {
 457               		.loc 1 508 1 is_stmt 1 view -0
 458               		.cfi_startproc
 459               		.loc 1 508 1 is_stmt 0 view .LVU96
 460 0000 CF93      		push r28
 461               	.LCFI5:
 462               		.cfi_def_cfa_offset 3
 463               		.cfi_offset 28, -2
 464               	/* prologue: function */
 465               	/* frame size = 0 */
 466               	/* stack size = 1 */
 467               	.L__stack_usage = 1
 468 0002 C82F      		mov r28,r24
 509:../../tmk_core/common/action.c ****     register_code(code);
 469               		.loc 1 509 5 is_stmt 1 view .LVU97
 470 0004 0E94 0000 		call register_code
 471               	.LVL29:
 510:../../tmk_core/common/action.c ****     unregister_code(code);
 472               		.loc 1 510 5 view .LVU98
 473 0008 8C2F      		mov r24,r28
 474               	/* epilogue start */
 511:../../tmk_core/common/action.c **** }
 475               		.loc 1 511 1 is_stmt 0 view .LVU99
 476 000a CF91      		pop r28
 477               	.LVL30:
 510:../../tmk_core/common/action.c ****     unregister_code(code);
 478               		.loc 1 510 5 view .LVU100
 479 000c 0C94 0000 		jmp unregister_code
 480               	.LVL31:
 510:../../tmk_core/common/action.c ****     unregister_code(code);
 481               		.loc 1 510 5 view .LVU101
 482               		.cfi_endproc
 483               	.LFE107:
 485               		.section	.text.register_mods,"ax",@progbits
 486               	.global	register_mods
 488               	register_mods:
 489               	.LVL32:
 490               	.LFB108:
 512:../../tmk_core/common/action.c **** 
 513:../../tmk_core/common/action.c **** void register_mods(uint8_t mods)
 514:../../tmk_core/common/action.c **** {
 491               		.loc 1 514 1 is_stmt 1 view -0
 492               		.cfi_startproc
 493               	/* prologue: function */
 494               	/* frame size = 0 */
 495               	/* stack size = 0 */
 496               	.L__stack_usage = 0
 515:../../tmk_core/common/action.c ****     if (mods) {
 497               		.loc 1 515 5 view .LVU103
 498               		.loc 1 515 8 is_stmt 0 view .LVU104
 499 0000 8823      		tst r24
 500 0002 01F0      		breq .L50
 516:../../tmk_core/common/action.c ****         add_mods(mods);
 501               		.loc 1 516 9 is_stmt 1 view .LVU105
 502 0004 0E94 0000 		call add_mods
 503               	.LVL33:
 517:../../tmk_core/common/action.c ****         send_keyboard_report();
 504               		.loc 1 517 9 view .LVU106
 505 0008 0C94 0000 		jmp send_keyboard_report
 506               	.LVL34:
 507               	.L50:
 508               	/* epilogue start */
 518:../../tmk_core/common/action.c ****     }
 519:../../tmk_core/common/action.c **** }
 509               		.loc 1 519 1 is_stmt 0 view .LVU107
 510 000c 0895      		ret
 511               		.cfi_endproc
 512               	.LFE108:
 514               		.section	.text.unregister_mods,"ax",@progbits
 515               	.global	unregister_mods
 517               	unregister_mods:
 518               	.LVL35:
 519               	.LFB109:
 520:../../tmk_core/common/action.c **** 
 521:../../tmk_core/common/action.c **** void unregister_mods(uint8_t mods)
 522:../../tmk_core/common/action.c **** {
 520               		.loc 1 522 1 is_stmt 1 view -0
 521               		.cfi_startproc
 522               	/* prologue: function */
 523               	/* frame size = 0 */
 524               	/* stack size = 0 */
 525               	.L__stack_usage = 0
 523:../../tmk_core/common/action.c ****     if (mods) {
 526               		.loc 1 523 5 view .LVU109
 527               		.loc 1 523 8 is_stmt 0 view .LVU110
 528 0000 8823      		tst r24
 529 0002 01F0      		breq .L52
 524:../../tmk_core/common/action.c ****         del_mods(mods);
 530               		.loc 1 524 9 is_stmt 1 view .LVU111
 531 0004 0E94 0000 		call del_mods
 532               	.LVL36:
 525:../../tmk_core/common/action.c ****         send_keyboard_report();
 533               		.loc 1 525 9 view .LVU112
 534 0008 0C94 0000 		jmp send_keyboard_report
 535               	.LVL37:
 536               	.L52:
 537               	/* epilogue start */
 526:../../tmk_core/common/action.c ****     }
 527:../../tmk_core/common/action.c **** }
 538               		.loc 1 527 1 is_stmt 0 view .LVU113
 539 000c 0895      		ret
 540               		.cfi_endproc
 541               	.LFE109:
 543               		.section	.text.clear_keyboard_but_mods,"ax",@progbits
 544               	.global	clear_keyboard_but_mods
 546               	clear_keyboard_but_mods:
 547               	.LFB111:
 528:../../tmk_core/common/action.c **** 
 529:../../tmk_core/common/action.c **** void clear_keyboard(void)
 530:../../tmk_core/common/action.c **** {
 531:../../tmk_core/common/action.c ****     clear_mods();
 532:../../tmk_core/common/action.c ****     clear_keyboard_but_mods();
 533:../../tmk_core/common/action.c **** }
 534:../../tmk_core/common/action.c **** 
 535:../../tmk_core/common/action.c **** void clear_keyboard_but_mods(void)
 536:../../tmk_core/common/action.c **** {
 548               		.loc 1 536 1 is_stmt 1 view -0
 549               		.cfi_startproc
 550               	/* prologue: function */
 551               	/* frame size = 0 */
 552               	/* stack size = 0 */
 553               	.L__stack_usage = 0
 537:../../tmk_core/common/action.c ****     clear_weak_mods();
 554               		.loc 1 537 5 view .LVU115
 555 0000 0E94 0000 		call clear_weak_mods
 556               	.LVL38:
 538:../../tmk_core/common/action.c ****     clear_keys();
 557               		.loc 1 538 5 view .LVU116
 558 0004 0E94 0000 		call clear_keys
 559               	.LVL39:
 539:../../tmk_core/common/action.c ****     send_keyboard_report();
 560               		.loc 1 539 5 view .LVU117
 561 0008 0E94 0000 		call send_keyboard_report
 562               	.LVL40:
 540:../../tmk_core/common/action.c **** #ifdef MOUSEKEY_ENABLE
 541:../../tmk_core/common/action.c ****     mousekey_clear();
 563               		.loc 1 541 5 view .LVU118
 564 000c 0E94 0000 		call mousekey_clear
 565               	.LVL41:
 542:../../tmk_core/common/action.c ****     mousekey_send();
 566               		.loc 1 542 5 view .LVU119
 567 0010 0E94 0000 		call mousekey_send
 568               	.LVL42:
 543:../../tmk_core/common/action.c **** #endif
 544:../../tmk_core/common/action.c **** #ifdef EXTRAKEY_ENABLE
 545:../../tmk_core/common/action.c ****     host_system_send(0);
 569               		.loc 1 545 5 view .LVU120
 570 0014 90E0      		ldi r25,0
 571 0016 80E0      		ldi r24,0
 572 0018 0E94 0000 		call host_system_send
 573               	.LVL43:
 546:../../tmk_core/common/action.c ****     host_consumer_send(0);
 574               		.loc 1 546 5 view .LVU121
 575 001c 90E0      		ldi r25,0
 576 001e 80E0      		ldi r24,0
 577 0020 0C94 0000 		jmp host_consumer_send
 578               	.LVL44:
 579               		.cfi_endproc
 580               	.LFE111:
 582               		.section	.text.clear_keyboard,"ax",@progbits
 583               	.global	clear_keyboard
 585               	clear_keyboard:
 586               	.LFB110:
 530:../../tmk_core/common/action.c ****     clear_mods();
 587               		.loc 1 530 1 view -0
 588               		.cfi_startproc
 589               	/* prologue: function */
 590               	/* frame size = 0 */
 591               	/* stack size = 0 */
 592               	.L__stack_usage = 0
 531:../../tmk_core/common/action.c ****     clear_keyboard_but_mods();
 593               		.loc 1 531 5 view .LVU123
 594 0000 0E94 0000 		call clear_mods
 595               	.LVL45:
 532:../../tmk_core/common/action.c **** }
 596               		.loc 1 532 5 view .LVU124
 597 0004 0C94 0000 		jmp clear_keyboard_but_mods
 598               	.LVL46:
 599               		.cfi_endproc
 600               	.LFE110:
 602               		.section	.text.process_action,"ax",@progbits
 603               	.global	process_action
 605               	process_action:
 606               	.LVL47:
 607               	.LFB104:
  61:../../tmk_core/common/action.c ****     if (hook_process_action(record)) return;
 608               		.loc 1 61 1 view -0
 609               		.cfi_startproc
  61:../../tmk_core/common/action.c ****     if (hook_process_action(record)) return;
 610               		.loc 1 61 1 is_stmt 0 view .LVU126
 611 0000 AF92      		push r10
 612               	.LCFI6:
 613               		.cfi_def_cfa_offset 3
 614               		.cfi_offset 10, -2
 615 0002 BF92      		push r11
 616               	.LCFI7:
 617               		.cfi_def_cfa_offset 4
 618               		.cfi_offset 11, -3
 619 0004 CF92      		push r12
 620               	.LCFI8:
 621               		.cfi_def_cfa_offset 5
 622               		.cfi_offset 12, -4
 623 0006 DF92      		push r13
 624               	.LCFI9:
 625               		.cfi_def_cfa_offset 6
 626               		.cfi_offset 13, -5
 627 0008 EF92      		push r14
 628               	.LCFI10:
 629               		.cfi_def_cfa_offset 7
 630               		.cfi_offset 14, -6
 631 000a FF92      		push r15
 632               	.LCFI11:
 633               		.cfi_def_cfa_offset 8
 634               		.cfi_offset 15, -7
 635 000c 0F93      		push r16
 636               	.LCFI12:
 637               		.cfi_def_cfa_offset 9
 638               		.cfi_offset 16, -8
 639 000e 1F93      		push r17
 640               	.LCFI13:
 641               		.cfi_def_cfa_offset 10
 642               		.cfi_offset 17, -9
 643 0010 CF93      		push r28
 644               	.LCFI14:
 645               		.cfi_def_cfa_offset 11
 646               		.cfi_offset 28, -10
 647 0012 DF93      		push r29
 648               	.LCFI15:
 649               		.cfi_def_cfa_offset 12
 650               		.cfi_offset 29, -11
 651 0014 00D0      		rcall .
 652 0016 00D0      		rcall .
 653 0018 0F92      		push __tmp_reg__
 654               	.LCFI16:
 655               		.cfi_def_cfa_offset 17
 656 001a CDB7      		in r28,__SP_L__
 657 001c DEB7      		in r29,__SP_H__
 658               	.LCFI17:
 659               		.cfi_def_cfa_register 28
 660               	/* prologue: function */
 661               	/* frame size = 5 */
 662               	/* stack size = 15 */
 663               	.L__stack_usage = 15
 664 001e 5C01      		movw r10,r24
  62:../../tmk_core/common/action.c **** 
 665               		.loc 1 62 5 is_stmt 1 view .LVU127
  62:../../tmk_core/common/action.c **** 
 666               		.loc 1 62 9 is_stmt 0 view .LVU128
 667 0020 0E94 0000 		call hook_process_action
 668               	.LVL48:
  62:../../tmk_core/common/action.c **** 
 669               		.loc 1 62 8 view .LVU129
 670 0024 8111      		cpse r24,__zero_reg__
 671 0026 00C0      		rjmp .L56
  64:../../tmk_core/common/action.c **** #ifndef NO_ACTION_TAPPING
 672               		.loc 1 64 5 is_stmt 1 view .LVU130
  64:../../tmk_core/common/action.c **** #ifndef NO_ACTION_TAPPING
 673               		.loc 1 64 16 is_stmt 0 view .LVU131
 674 0028 85E0      		ldi r24,lo8(5)
 675 002a F501      		movw r30,r10
 676 002c DE01      		movw r26,r28
 677 002e 1196      		adiw r26,1
 678               		0:
 679 0030 0190      		ld r0,Z+
 680 0032 0D92      		st X+,r0
 681 0034 8A95      		dec r24
 682 0036 01F4      		brne 0b
 683               	.LVL49:
  64:../../tmk_core/common/action.c **** #ifndef NO_ACTION_TAPPING
 684               		.loc 1 64 16 view .LVU132
 685 0038 F501      		movw r30,r10
 686 003a 8381      		ldd r24,Z+3
 687 003c 9481      		ldd r25,Z+4
 688               	.LVL50:
  66:../../tmk_core/common/action.c **** #endif
 689               		.loc 1 66 5 is_stmt 1 view .LVU133
  69:../../tmk_core/common/action.c **** 
 690               		.loc 1 69 5 view .LVU134
 691               	.LBB20:
 692               	.LBI20:
 693               		.loc 2 49 20 view .LVU135
 694               	.LBB21:
 695               		.loc 2 49 51 view .LVU136
 696               		.loc 2 49 74 is_stmt 0 view .LVU137
 697 003e 0097      		sbiw r24,0
 698 0040 01F0      		breq .L56
 699               	.LBE21:
 700               	.LBE20:
  64:../../tmk_core/common/action.c **** #ifndef NO_ACTION_TAPPING
 701               		.loc 1 64 16 view .LVU138
 702 0042 4081      		ld r20,Z
 703 0044 5181      		ldd r21,Z+1
 704               	.LBB23:
 705               	.LBB22:
 706               		.loc 2 49 74 view .LVU139
 707 0046 242F      		mov r18,r20
 708 0048 2523      		and r18,r21
 709 004a 2F3F      		cpi r18,lo8(-1)
 710 004c 01F0      		breq .+2
 711 004e 00C0      		rjmp .L152
 712               	.LVL51:
 713               	.L56:
 714               	/* epilogue start */
 715               		.loc 2 49 74 view .LVU140
 716               	.LBE22:
 717               	.LBE23:
 363:../../tmk_core/common/action.c **** 
 718               		.loc 1 363 1 view .LVU141
 719 0050 0F90      		pop __tmp_reg__
 720 0052 0F90      		pop __tmp_reg__
 721 0054 0F90      		pop __tmp_reg__
 722 0056 0F90      		pop __tmp_reg__
 723 0058 0F90      		pop __tmp_reg__
 724 005a DF91      		pop r29
 725 005c CF91      		pop r28
 726 005e 1F91      		pop r17
 727               	.LVL52:
 363:../../tmk_core/common/action.c **** 
 728               		.loc 1 363 1 view .LVU142
 729 0060 0F91      		pop r16
 363:../../tmk_core/common/action.c **** 
 730               		.loc 1 363 1 view .LVU143
 731 0062 FF90      		pop r15
 732 0064 EF90      		pop r14
 733 0066 DF90      		pop r13
 734 0068 CF90      		pop r12
 735 006a BF90      		pop r11
 736 006c AF90      		pop r10
 737               	.LVL53:
 363:../../tmk_core/common/action.c **** 
 738               		.loc 1 363 1 view .LVU144
 739 006e 0895      		ret
 740               	.LVL54:
 741               	.L59:
 742               	.LBB24:
  84:../../tmk_core/common/action.c ****                                                                 action.key.mods<<4;
 743               		.loc 1 84 17 is_stmt 1 view .LVU145
 744 0070 F12F      		mov r31,r17
 745 0072 FF70      		andi r31,lo8(15)
 746 0074 EF2E      		mov r14,r31
  84:../../tmk_core/common/action.c ****                                                                 action.key.mods<<4;
 747               		.loc 1 84 48 is_stmt 0 view .LVU146
 748 0076 107F      		andi r17,lo8(-16)
  84:../../tmk_core/common/action.c ****                                                                 action.key.mods<<4;
 749               		.loc 1 84 25 view .LVU147
 750 0078 01F0      		breq .L60
  84:../../tmk_core/common/action.c ****                                                                 action.key.mods<<4;
 751               		.loc 1 84 25 discriminator 2 view .LVU148
 752 007a E294      		swap r14
 753 007c 40EF      		ldi r20,lo8(-16)
 754 007e E422      		and r14,r20
 755               	.L60:
 756               	.LVL55:
  86:../../tmk_core/common/action.c ****                     if (mods) {
 757               		.loc 1 86 17 is_stmt 1 discriminator 4 view .LVU149
  86:../../tmk_core/common/action.c ****                     if (mods) {
 758               		.loc 1 86 20 is_stmt 0 discriminator 4 view .LVU150
 759 0080 FF20      		tst r15
 760 0082 01F0      		breq .L61
  87:../../tmk_core/common/action.c ****                         add_weak_mods(mods);
 761               		.loc 1 87 21 is_stmt 1 view .LVU151
  87:../../tmk_core/common/action.c ****                         add_weak_mods(mods);
 762               		.loc 1 87 24 is_stmt 0 view .LVU152
 763 0084 EE20      		tst r14
 764 0086 01F0      		breq .L159
  88:../../tmk_core/common/action.c ****                         send_keyboard_report();
 765               		.loc 1 88 25 is_stmt 1 view .LVU153
 766 0088 8E2D      		mov r24,r14
 767 008a 0E94 0000 		call add_weak_mods
 768               	.LVL56:
  89:../../tmk_core/common/action.c ****                     }
 769               		.loc 1 89 25 view .LVU154
 770 008e 0E94 0000 		call send_keyboard_report
 771               	.LVL57:
  91:../../tmk_core/common/action.c ****                 } else {
 772               		.loc 1 91 21 view .LVU155
 773               	.L159:
  91:../../tmk_core/common/action.c ****                 } else {
 774               		.loc 1 91 21 is_stmt 0 view .LVU156
 775               	.LBE24:
 295:../../tmk_core/common/action.c ****                             register_code(action.layer_tap.code);
 776               		.loc 1 295 29 is_stmt 1 view .LVU157
 296:../../tmk_core/common/action.c ****                         } else {
 777               		.loc 1 296 29 view .LVU158
 778 0092 802F      		mov r24,r16
 779               	/* epilogue start */
 363:../../tmk_core/common/action.c **** 
 780               		.loc 1 363 1 is_stmt 0 view .LVU159
 781 0094 0F90      		pop __tmp_reg__
 782 0096 0F90      		pop __tmp_reg__
 783 0098 0F90      		pop __tmp_reg__
 784 009a 0F90      		pop __tmp_reg__
 785 009c 0F90      		pop __tmp_reg__
 786 009e DF91      		pop r29
 787 00a0 CF91      		pop r28
 788               	.LVL58:
 363:../../tmk_core/common/action.c **** 
 789               		.loc 1 363 1 view .LVU160
 790 00a2 1F91      		pop r17
 791               	.LVL59:
 363:../../tmk_core/common/action.c **** 
 792               		.loc 1 363 1 view .LVU161
 793 00a4 0F91      		pop r16
 794               	.LVL60:
 363:../../tmk_core/common/action.c **** 
 795               		.loc 1 363 1 view .LVU162
 796 00a6 FF90      		pop r15
 797               	.LVL61:
 363:../../tmk_core/common/action.c **** 
 798               		.loc 1 363 1 view .LVU163
 799 00a8 EF90      		pop r14
 800               	.LVL62:
 363:../../tmk_core/common/action.c **** 
 801               		.loc 1 363 1 view .LVU164
 802 00aa DF90      		pop r13
 803               	.LVL63:
 363:../../tmk_core/common/action.c **** 
 804               		.loc 1 363 1 view .LVU165
 805 00ac CF90      		pop r12
 806               	.LVL64:
 363:../../tmk_core/common/action.c **** 
 807               		.loc 1 363 1 view .LVU166
 808 00ae BF90      		pop r11
 809               	.LVL65:
 363:../../tmk_core/common/action.c **** 
 810               		.loc 1 363 1 view .LVU167
 811 00b0 AF90      		pop r10
 812               	.LVL66:
 296:../../tmk_core/common/action.c ****                         } else {
 813               		.loc 1 296 29 view .LVU168
 814 00b2 0C94 0000 		jmp register_code
 815               	.LVL67:
 816               	.L61:
 817               	.LBB25:
  93:../../tmk_core/common/action.c ****                     if (mods) {
 818               		.loc 1 93 21 is_stmt 1 view .LVU169
  93:../../tmk_core/common/action.c ****                     if (mods) {
 819               		.loc 1 93 21 is_stmt 0 view .LVU170
 820 00b6 802F      		mov r24,r16
 821 00b8 0E94 0000 		call unregister_code
 822               	.LVL68:
  94:../../tmk_core/common/action.c ****                         del_weak_mods(mods);
 823               		.loc 1 94 21 is_stmt 1 view .LVU171
  94:../../tmk_core/common/action.c ****                         del_weak_mods(mods);
 824               		.loc 1 94 24 is_stmt 0 view .LVU172
 825 00bc EE20      		tst r14
 826 00be 01F0      		breq .L56
  95:../../tmk_core/common/action.c ****                         send_keyboard_report();
 827               		.loc 1 95 25 is_stmt 1 view .LVU173
 828 00c0 8E2D      		mov r24,r14
 829 00c2 0E94 0000 		call del_weak_mods
 830               	.LVL69:
  96:../../tmk_core/common/action.c ****                     }
 831               		.loc 1 96 25 view .LVU174
 832               	/* epilogue start */
 833               	.LBE25:
 363:../../tmk_core/common/action.c **** 
 834               		.loc 1 363 1 is_stmt 0 view .LVU175
 835 00c6 0F90      		pop __tmp_reg__
 836 00c8 0F90      		pop __tmp_reg__
 837 00ca 0F90      		pop __tmp_reg__
 838 00cc 0F90      		pop __tmp_reg__
 839 00ce 0F90      		pop __tmp_reg__
 840 00d0 DF91      		pop r29
 841 00d2 CF91      		pop r28
 842               	.LVL70:
 363:../../tmk_core/common/action.c **** 
 843               		.loc 1 363 1 view .LVU176
 844 00d4 1F91      		pop r17
 845               	.LVL71:
 363:../../tmk_core/common/action.c **** 
 846               		.loc 1 363 1 view .LVU177
 847 00d6 0F91      		pop r16
 848               	.LVL72:
 363:../../tmk_core/common/action.c **** 
 849               		.loc 1 363 1 view .LVU178
 850 00d8 FF90      		pop r15
 851               	.LVL73:
 363:../../tmk_core/common/action.c **** 
 852               		.loc 1 363 1 view .LVU179
 853 00da EF90      		pop r14
 854               	.LVL74:
 363:../../tmk_core/common/action.c **** 
 855               		.loc 1 363 1 view .LVU180
 856 00dc DF90      		pop r13
 857               	.LVL75:
 363:../../tmk_core/common/action.c **** 
 858               		.loc 1 363 1 view .LVU181
 859 00de CF90      		pop r12
 860               	.LVL76:
 363:../../tmk_core/common/action.c **** 
 861               		.loc 1 363 1 view .LVU182
 862 00e0 BF90      		pop r11
 863               	.LVL77:
 363:../../tmk_core/common/action.c **** 
 864               		.loc 1 363 1 view .LVU183
 865 00e2 AF90      		pop r10
 866               	.LVL78:
 867               	.LBB26:
  96:../../tmk_core/common/action.c ****                     }
 868               		.loc 1 96 25 view .LVU184
 869 00e4 0C94 0000 		jmp send_keyboard_report
 870               	.LVL79:
 871               	.L65:
  96:../../tmk_core/common/action.c ****                     }
 872               		.loc 1 96 25 view .LVU185
 873               	.LBE26:
 874               	.LBB27:
 105:../../tmk_core/common/action.c ****                                                                     action.key.mods<<4;
 875               		.loc 1 105 17 is_stmt 1 view .LVU186
 876 00e8 212F      		mov r18,r17
 877 00ea 2F70      		andi r18,lo8(15)
 878 00ec D22E      		mov r13,r18
 105:../../tmk_core/common/action.c ****                                                                     action.key.mods<<4;
 879               		.loc 1 105 48 is_stmt 0 view .LVU187
 880 00ee 107F      		andi r17,lo8(-16)
 105:../../tmk_core/common/action.c ****                                                                     action.key.mods<<4;
 881               		.loc 1 105 25 view .LVU188
 882 00f0 1032      		cpi r17,lo8(32)
 883 00f2 01F0      		breq .L66
 105:../../tmk_core/common/action.c ****                                                                     action.key.mods<<4;
 884               		.loc 1 105 25 discriminator 2 view .LVU189
 885 00f4 D294      		swap r13
 886 00f6 30EF      		ldi r19,lo8(-16)
 887 00f8 D322      		and r13,r19
 888               	.L66:
 889               	.LVL80:
 107:../../tmk_core/common/action.c ****     #ifndef NO_ACTION_ONESHOT
 890               		.loc 1 107 17 is_stmt 1 discriminator 4 view .LVU190
 107:../../tmk_core/common/action.c ****     #ifndef NO_ACTION_ONESHOT
 891               		.loc 1 107 17 is_stmt 0 discriminator 4 view .LVU191
 892 00fa 0023      		tst r16
 893 00fc 01F0      		breq .L67
 894 00fe 0130      		cpi r16,lo8(1)
 895 0100 01F4      		brne .+2
 896 0102 00C0      		rjmp .L68
 156:../../tmk_core/common/action.c ****                             if (tap_count > 0) {
 897               		.loc 1 156 25 is_stmt 1 view .LVU192
 156:../../tmk_core/common/action.c ****                             if (tap_count > 0) {
 898               		.loc 1 156 28 is_stmt 0 view .LVU193
 899 0104 FF20      		tst r15
 900 0106 01F4      		brne .+2
 901 0108 00C0      		rjmp .L77
 157:../../tmk_core/common/action.c ****                                 if (record->tap.interrupted) {
 902               		.loc 1 157 29 is_stmt 1 view .LVU194
 157:../../tmk_core/common/action.c ****                                 if (record->tap.interrupted) {
 903               		.loc 1 157 32 is_stmt 0 view .LVU195
 904 010a EE20      		tst r14
 905 010c 01F0      		breq .L158
 158:../../tmk_core/common/action.c ****                                     dprint("MODS_TAP: Tap: Cancel: add_mods\n");
 906               		.loc 1 158 33 is_stmt 1 view .LVU196
 158:../../tmk_core/common/action.c ****                                     dprint("MODS_TAP: Tap: Cancel: add_mods\n");
 907               		.loc 1 158 37 is_stmt 0 view .LVU197
 908 010e F501      		movw r30,r10
 909 0110 8581      		ldd r24,Z+5
 158:../../tmk_core/common/action.c ****                                     dprint("MODS_TAP: Tap: Cancel: add_mods\n");
 910               		.loc 1 158 36 view .LVU198
 911 0112 80FF      		sbrs r24,0
 912 0114 00C0      		rjmp .L159
 159:../../tmk_core/common/action.c ****                                     // ad hoc: set 0 to cancel tap
 913               		.loc 1 159 37 is_stmt 1 view .LVU199
 161:../../tmk_core/common/action.c ****                                     register_mods(mods);
 914               		.loc 1 161 37 view .LVU200
 161:../../tmk_core/common/action.c ****                                     register_mods(mods);
 915               		.loc 1 161 55 is_stmt 0 view .LVU201
 916 0116 8F70      		andi r24,lo8(15)
 917 0118 8583      		std Z+5,r24
 918 011a 00C0      		rjmp .L158
 919               	.L67:
 111:../../tmk_core/common/action.c ****                             if (tap_count == 0) {
 920               		.loc 1 111 25 is_stmt 1 view .LVU202
 111:../../tmk_core/common/action.c ****                             if (tap_count == 0) {
 921               		.loc 1 111 28 is_stmt 0 view .LVU203
 922 011c FF20      		tst r15
 923 011e 01F0      		breq .L70
 112:../../tmk_core/common/action.c ****                                 register_mods(mods);
 924               		.loc 1 112 29 is_stmt 1 view .LVU204
 112:../../tmk_core/common/action.c ****                                 register_mods(mods);
 925               		.loc 1 112 32 is_stmt 0 view .LVU205
 926 0120 E110      		cpse r14,__zero_reg__
 927 0122 00C0      		rjmp .L71
 928               	.L158:
 162:../../tmk_core/common/action.c ****                                 } else {
 929               		.loc 1 162 37 is_stmt 1 view .LVU206
 930 0124 8D2D      		mov r24,r13
 931               	.LVL81:
 932               	.L163:
 933               	/* epilogue start */
 162:../../tmk_core/common/action.c ****                                 } else {
 934               		.loc 1 162 37 is_stmt 0 view .LVU207
 935               	.LBE27:
 363:../../tmk_core/common/action.c **** 
 936               		.loc 1 363 1 view .LVU208
 937 0126 0F90      		pop __tmp_reg__
 938 0128 0F90      		pop __tmp_reg__
 939 012a 0F90      		pop __tmp_reg__
 940 012c 0F90      		pop __tmp_reg__
 941 012e 0F90      		pop __tmp_reg__
 942 0130 DF91      		pop r29
 943 0132 CF91      		pop r28
 944               	.LVL82:
 363:../../tmk_core/common/action.c **** 
 945               		.loc 1 363 1 view .LVU209
 946 0134 1F91      		pop r17
 947               	.LVL83:
 363:../../tmk_core/common/action.c **** 
 948               		.loc 1 363 1 view .LVU210
 949 0136 0F91      		pop r16
 950               	.LVL84:
 363:../../tmk_core/common/action.c **** 
 951               		.loc 1 363 1 view .LVU211
 952 0138 FF90      		pop r15
 953               	.LVL85:
 363:../../tmk_core/common/action.c **** 
 954               		.loc 1 363 1 view .LVU212
 955 013a EF90      		pop r14
 956               	.LVL86:
 363:../../tmk_core/common/action.c **** 
 957               		.loc 1 363 1 view .LVU213
 958 013c DF90      		pop r13
 959               	.LVL87:
 363:../../tmk_core/common/action.c **** 
 960               		.loc 1 363 1 view .LVU214
 961 013e CF90      		pop r12
 962               	.LVL88:
 363:../../tmk_core/common/action.c **** 
 963               		.loc 1 363 1 view .LVU215
 964 0140 BF90      		pop r11
 965               	.LVL89:
 363:../../tmk_core/common/action.c **** 
 966               		.loc 1 363 1 view .LVU216
 967 0142 AF90      		pop r10
 968               	.LVL90:
 969               	.LBB28:
 162:../../tmk_core/common/action.c ****                                 } else {
 970               		.loc 1 162 37 view .LVU217
 971 0144 0C94 0000 		jmp register_mods
 972               	.LVL91:
 973               	.L71:
 115:../../tmk_core/common/action.c ****                                 dprint("MODS_TAP: Oneshot: start\n");
 974               		.loc 1 115 34 is_stmt 1 view .LVU218
 115:../../tmk_core/common/action.c ****                                 dprint("MODS_TAP: Oneshot: start\n");
 975               		.loc 1 115 37 is_stmt 0 view .LVU219
 976 0148 81E0      		ldi r24,lo8(1)
 977 014a E812      		cpse r14,r24
 978 014c 00C0      		rjmp .L158
 116:../../tmk_core/common/action.c ****                                 set_oneshot_mods(mods);
 979               		.loc 1 116 33 is_stmt 1 view .LVU220
 117:../../tmk_core/common/action.c ****                             }
 980               		.loc 1 117 33 view .LVU221
 981 014e 8D2D      		mov r24,r13
 982               	/* epilogue start */
 983               	.LBE28:
 363:../../tmk_core/common/action.c **** 
 984               		.loc 1 363 1 is_stmt 0 view .LVU222
 985 0150 0F90      		pop __tmp_reg__
 986 0152 0F90      		pop __tmp_reg__
 987 0154 0F90      		pop __tmp_reg__
 988 0156 0F90      		pop __tmp_reg__
 989 0158 0F90      		pop __tmp_reg__
 990 015a DF91      		pop r29
 991 015c CF91      		pop r28
 992               	.LVL92:
 363:../../tmk_core/common/action.c **** 
 993               		.loc 1 363 1 view .LVU223
 994 015e 1F91      		pop r17
 995               	.LVL93:
 363:../../tmk_core/common/action.c **** 
 996               		.loc 1 363 1 view .LVU224
 997 0160 0F91      		pop r16
 998               	.LVL94:
 363:../../tmk_core/common/action.c **** 
 999               		.loc 1 363 1 view .LVU225
 1000 0162 FF90      		pop r15
 1001               	.LVL95:
 363:../../tmk_core/common/action.c **** 
 1002               		.loc 1 363 1 view .LVU226
 1003 0164 EF90      		pop r14
 1004               	.LVL96:
 363:../../tmk_core/common/action.c **** 
 1005               		.loc 1 363 1 view .LVU227
 1006 0166 DF90      		pop r13
 1007               	.LVL97:
 363:../../tmk_core/common/action.c **** 
 1008               		.loc 1 363 1 view .LVU228
 1009 0168 CF90      		pop r12
 1010               	.LVL98:
 363:../../tmk_core/common/action.c **** 
 1011               		.loc 1 363 1 view .LVU229
 1012 016a BF90      		pop r11
 1013               	.LVL99:
 363:../../tmk_core/common/action.c **** 
 1014               		.loc 1 363 1 view .LVU230
 1015 016c AF90      		pop r10
 1016               	.LVL100:
 1017               	.LBB29:
 117:../../tmk_core/common/action.c ****                             }
 1018               		.loc 1 117 33 view .LVU231
 1019 016e 0C94 0000 		jmp set_oneshot_mods
 1020               	.LVL101:
 1021               	.L70:
 123:../../tmk_core/common/action.c ****                                 clear_oneshot_mods();
 1022               		.loc 1 123 29 is_stmt 1 view .LVU232
 123:../../tmk_core/common/action.c ****                                 clear_oneshot_mods();
 1023               		.loc 1 123 32 is_stmt 0 view .LVU233
 1024 0172 E110      		cpse r14,__zero_reg__
 1025 0174 00C0      		rjmp .L73
 1026               	.L155:
 131:../../tmk_core/common/action.c ****                                 unregister_mods(mods);
 1027               		.loc 1 131 33 is_stmt 1 view .LVU234
 1028 0176 0E94 0000 		call clear_oneshot_mods
 1029               	.LVL102:
 132:../../tmk_core/common/action.c ****                             }
 1030               		.loc 1 132 33 view .LVU235
 1031               	.L80:
 176:../../tmk_core/common/action.c ****                                 unregister_mods(mods);
 1032               		.loc 1 176 33 view .LVU236
 177:../../tmk_core/common/action.c ****                             }
 1033               		.loc 1 177 33 view .LVU237
 1034 017a 8D2D      		mov r24,r13
 1035               	.LVL103:
 1036               	.L112:
 1037               	/* epilogue start */
 177:../../tmk_core/common/action.c ****                             }
 1038               		.loc 1 177 33 is_stmt 0 view .LVU238
 1039               	.LBE29:
 363:../../tmk_core/common/action.c **** 
 1040               		.loc 1 363 1 discriminator 4 view .LVU239
 1041 017c 0F90      		pop __tmp_reg__
 1042 017e 0F90      		pop __tmp_reg__
 1043 0180 0F90      		pop __tmp_reg__
 1044 0182 0F90      		pop __tmp_reg__
 1045 0184 0F90      		pop __tmp_reg__
 1046 0186 DF91      		pop r29
 1047 0188 CF91      		pop r28
 1048               	.LVL104:
 363:../../tmk_core/common/action.c **** 
 1049               		.loc 1 363 1 discriminator 4 view .LVU240
 1050 018a 1F91      		pop r17
 1051               	.LVL105:
 363:../../tmk_core/common/action.c **** 
 1052               		.loc 1 363 1 discriminator 4 view .LVU241
 1053 018c 0F91      		pop r16
 1054               	.LVL106:
 363:../../tmk_core/common/action.c **** 
 1055               		.loc 1 363 1 discriminator 4 view .LVU242
 1056 018e FF90      		pop r15
 1057               	.LVL107:
 363:../../tmk_core/common/action.c **** 
 1058               		.loc 1 363 1 discriminator 4 view .LVU243
 1059 0190 EF90      		pop r14
 1060               	.LVL108:
 363:../../tmk_core/common/action.c **** 
 1061               		.loc 1 363 1 discriminator 4 view .LVU244
 1062 0192 DF90      		pop r13
 1063               	.LVL109:
 363:../../tmk_core/common/action.c **** 
 1064               		.loc 1 363 1 discriminator 4 view .LVU245
 1065 0194 CF90      		pop r12
 1066               	.LVL110:
 363:../../tmk_core/common/action.c **** 
 1067               		.loc 1 363 1 discriminator 4 view .LVU246
 1068 0196 BF90      		pop r11
 1069               	.LVL111:
 363:../../tmk_core/common/action.c **** 
 1070               		.loc 1 363 1 discriminator 4 view .LVU247
 1071 0198 AF90      		pop r10
 1072               	.LVL112:
 262:../../tmk_core/common/action.c ****                                 (action.layer_tap.code & 0x0f) << 4 :
 1073               		.loc 1 262 25 discriminator 4 view .LVU248
 1074 019a 0C94 0000 		jmp unregister_mods
 1075               	.LVL113:
 1076               	.L73:
 1077               	.LBB30:
 127:../../tmk_core/common/action.c ****                                 // Retain Oneshot mods
 1078               		.loc 1 127 34 is_stmt 1 view .LVU249
 127:../../tmk_core/common/action.c ****                                 // Retain Oneshot mods
 1079               		.loc 1 127 37 is_stmt 0 view .LVU250
 1080 019e 91E0      		ldi r25,lo8(1)
 1081 01a0 E916      		cp r14,r25
 1082 01a2 01F4      		brne .+2
 1083 01a4 00C0      		rjmp .L56
 1084 01a6 00C0      		rjmp .L155
 1085               	.L68:
 138:../../tmk_core/common/action.c ****                             if (tap_count <= TAPPING_TOGGLE) {
 1086               		.loc 1 138 25 is_stmt 1 view .LVU251
 138:../../tmk_core/common/action.c ****                             if (tap_count <= TAPPING_TOGGLE) {
 1087               		.loc 1 138 28 is_stmt 0 view .LVU252
 1088 01a8 FF20      		tst r15
 1089 01aa 01F0      		breq .L75
 139:../../tmk_core/common/action.c ****                                 if (mods & get_mods()) {
 1090               		.loc 1 139 29 is_stmt 1 view .LVU253
 139:../../tmk_core/common/action.c ****                                 if (mods & get_mods()) {
 1091               		.loc 1 139 32 is_stmt 0 view .LVU254
 1092 01ac E5E0      		ldi r30,lo8(5)
 1093 01ae EE15      		cp r30,r14
 1094 01b0 00F4      		brsh .+2
 1095 01b2 00C0      		rjmp .L56
 140:../../tmk_core/common/action.c ****                                     dprint("MODS_TAP_TOGGLE: toggle mods off\n");
 1096               		.loc 1 140 33 is_stmt 1 view .LVU255
 140:../../tmk_core/common/action.c ****                                     dprint("MODS_TAP_TOGGLE: toggle mods off\n");
 1097               		.loc 1 140 44 is_stmt 0 view .LVU256
 1098 01b4 0E94 0000 		call get_mods
 1099               	.LVL114:
 140:../../tmk_core/common/action.c ****                                     dprint("MODS_TAP_TOGGLE: toggle mods off\n");
 1100               		.loc 1 140 37 view .LVU257
 1101 01b8 8D21      		and r24,r13
 140:../../tmk_core/common/action.c ****                                     dprint("MODS_TAP_TOGGLE: toggle mods off\n");
 1102               		.loc 1 140 36 view .LVU258
 1103 01ba 01F4      		brne .+2
 1104 01bc 00C0      		rjmp .L158
 1105 01be 00C0      		rjmp .L80
 1106               	.L75:
 149:../../tmk_core/common/action.c ****                                 dprint("MODS_TAP_TOGGLE: release : unregister_mods\n");
 1107               		.loc 1 149 29 is_stmt 1 view .LVU259
 149:../../tmk_core/common/action.c ****                                 dprint("MODS_TAP_TOGGLE: release : unregister_mods\n");
 1108               		.loc 1 149 32 is_stmt 0 view .LVU260
 1109 01c0 F4E0      		ldi r31,lo8(4)
 1110 01c2 FE15      		cp r31,r14
 1111 01c4 00F4      		brsh .+2
 1112 01c6 00C0      		rjmp .L56
 1113 01c8 00C0      		rjmp .L80
 1114               	.L77:
 172:../../tmk_core/common/action.c ****                                 dprint("MODS_TAP: Tap: unregister_code\n");
 1115               		.loc 1 172 29 is_stmt 1 view .LVU261
 172:../../tmk_core/common/action.c ****                                 dprint("MODS_TAP: Tap: unregister_code\n");
 1116               		.loc 1 172 32 is_stmt 0 view .LVU262
 1117 01ca EE20      		tst r14
 1118 01cc 01F0      		breq .L80
 1119               	.LVL115:
 1120               	.L162:
 172:../../tmk_core/common/action.c ****                                 dprint("MODS_TAP: Tap: unregister_code\n");
 1121               		.loc 1 172 32 view .LVU263
 1122               	.LBE30:
 303:../../tmk_core/common/action.c ****                             unregister_code(action.layer_tap.code);
 1123               		.loc 1 303 29 is_stmt 1 view .LVU264
 304:../../tmk_core/common/action.c ****                         } else {
 1124               		.loc 1 304 29 view .LVU265
 1125 01ce 802F      		mov r24,r16
 1126               	/* epilogue start */
 363:../../tmk_core/common/action.c **** 
 1127               		.loc 1 363 1 is_stmt 0 view .LVU266
 1128 01d0 0F90      		pop __tmp_reg__
 1129 01d2 0F90      		pop __tmp_reg__
 1130 01d4 0F90      		pop __tmp_reg__
 1131 01d6 0F90      		pop __tmp_reg__
 1132 01d8 0F90      		pop __tmp_reg__
 1133 01da DF91      		pop r29
 1134 01dc CF91      		pop r28
 1135               	.LVL116:
 363:../../tmk_core/common/action.c **** 
 1136               		.loc 1 363 1 view .LVU267
 1137 01de 1F91      		pop r17
 1138               	.LVL117:
 363:../../tmk_core/common/action.c **** 
 1139               		.loc 1 363 1 view .LVU268
 1140 01e0 0F91      		pop r16
 1141               	.LVL118:
 363:../../tmk_core/common/action.c **** 
 1142               		.loc 1 363 1 view .LVU269
 1143 01e2 FF90      		pop r15
 1144               	.LVL119:
 363:../../tmk_core/common/action.c **** 
 1145               		.loc 1 363 1 view .LVU270
 1146 01e4 EF90      		pop r14
 1147               	.LVL120:
 363:../../tmk_core/common/action.c **** 
 1148               		.loc 1 363 1 view .LVU271
 1149 01e6 DF90      		pop r13
 1150               	.LVL121:
 363:../../tmk_core/common/action.c **** 
 1151               		.loc 1 363 1 view .LVU272
 1152 01e8 CF90      		pop r12
 1153               	.LVL122:
 363:../../tmk_core/common/action.c **** 
 1154               		.loc 1 363 1 view .LVU273
 1155 01ea BF90      		pop r11
 1156               	.LVL123:
 363:../../tmk_core/common/action.c **** 
 1157               		.loc 1 363 1 view .LVU274
 1158 01ec AF90      		pop r10
 1159               	.LVL124:
 304:../../tmk_core/common/action.c ****                         } else {
 1160               		.loc 1 304 29 view .LVU275
 1161 01ee 0C94 0000 		jmp unregister_code
 1162               	.LVL125:
 1163               	.L81:
 188:../../tmk_core/common/action.c ****                 case PAGE_SYSTEM:
 1164               		.loc 1 188 13 is_stmt 1 view .LVU276
 188:../../tmk_core/common/action.c ****                 case PAGE_SYSTEM:
 1165               		.loc 1 188 33 is_stmt 0 view .LVU277
 1166 01f2 812F      		mov r24,r17
 1167 01f4 8695      		lsr r24
 1168 01f6 8695      		lsr r24
 1169 01f8 8370      		andi r24,lo8(3)
 1170 01fa 01F0      		breq .L82
 1171 01fc 8130      		cpi r24,lo8(1)
 1172 01fe 01F0      		breq .+2
 1173 0200 00C0      		rjmp .L56
 197:../../tmk_core/common/action.c ****                         host_consumer_send(action.usage.code);
 1174               		.loc 1 197 21 is_stmt 1 view .LVU278
 198:../../tmk_core/common/action.c ****                     } else {
 1175               		.loc 1 198 25 is_stmt 0 view .LVU279
 1176 0202 C801      		movw r24,r16
 1177 0204 9370      		andi r25,lo8(3)
 197:../../tmk_core/common/action.c ****                         host_consumer_send(action.usage.code);
 1178               		.loc 1 197 24 view .LVU280
 1179 0206 F110      		cpse r15,__zero_reg__
 1180 0208 00C0      		rjmp .L165
 200:../../tmk_core/common/action.c ****                     }
 1181               		.loc 1 200 25 is_stmt 1 view .LVU281
 1182 020a 90E0      		ldi r25,0
 1183 020c 80E0      		ldi r24,0
 1184               	.L165:
 1185               	/* epilogue start */
 363:../../tmk_core/common/action.c **** 
 1186               		.loc 1 363 1 is_stmt 0 view .LVU282
 1187 020e 0F90      		pop __tmp_reg__
 1188 0210 0F90      		pop __tmp_reg__
 1189 0212 0F90      		pop __tmp_reg__
 1190 0214 0F90      		pop __tmp_reg__
 1191 0216 0F90      		pop __tmp_reg__
 1192 0218 DF91      		pop r29
 1193 021a CF91      		pop r28
 1194               	.LVL126:
 363:../../tmk_core/common/action.c **** 
 1195               		.loc 1 363 1 view .LVU283
 1196 021c 1F91      		pop r17
 1197               	.LVL127:
 363:../../tmk_core/common/action.c **** 
 1198               		.loc 1 363 1 view .LVU284
 1199 021e 0F91      		pop r16
 1200               	.LVL128:
 363:../../tmk_core/common/action.c **** 
 1201               		.loc 1 363 1 view .LVU285
 1202 0220 FF90      		pop r15
 1203               	.LVL129:
 363:../../tmk_core/common/action.c **** 
 1204               		.loc 1 363 1 view .LVU286
 1205 0222 EF90      		pop r14
 1206               	.LVL130:
 363:../../tmk_core/common/action.c **** 
 1207               		.loc 1 363 1 view .LVU287
 1208 0224 DF90      		pop r13
 1209               	.LVL131:
 363:../../tmk_core/common/action.c **** 
 1210               		.loc 1 363 1 view .LVU288
 1211 0226 CF90      		pop r12
 1212               	.LVL132:
 363:../../tmk_core/common/action.c **** 
 1213               		.loc 1 363 1 view .LVU289
 1214 0228 BF90      		pop r11
 1215               	.LVL133:
 363:../../tmk_core/common/action.c **** 
 1216               		.loc 1 363 1 view .LVU290
 1217 022a AF90      		pop r10
 1218               	.LVL134:
 200:../../tmk_core/common/action.c ****                     }
 1219               		.loc 1 200 25 view .LVU291
 1220 022c 0C94 0000 		jmp host_consumer_send
 1221               	.LVL135:
 1222               	.L82:
 190:../../tmk_core/common/action.c ****                         host_system_send(action.usage.code);
 1223               		.loc 1 190 21 is_stmt 1 view .LVU292
 191:../../tmk_core/common/action.c ****                     } else {
 1224               		.loc 1 191 25 is_stmt 0 view .LVU293
 1225 0230 C801      		movw r24,r16
 1226 0232 9370      		andi r25,lo8(3)
 190:../../tmk_core/common/action.c ****                         host_system_send(action.usage.code);
 1227               		.loc 1 190 24 view .LVU294
 1228 0234 F110      		cpse r15,__zero_reg__
 1229 0236 00C0      		rjmp .L164
 193:../../tmk_core/common/action.c ****                     }
 1230               		.loc 1 193 25 is_stmt 1 view .LVU295
 1231 0238 90E0      		ldi r25,0
 1232 023a 80E0      		ldi r24,0
 1233               	.L164:
 1234               	/* epilogue start */
 363:../../tmk_core/common/action.c **** 
 1235               		.loc 1 363 1 is_stmt 0 view .LVU296
 1236 023c 0F90      		pop __tmp_reg__
 1237 023e 0F90      		pop __tmp_reg__
 1238 0240 0F90      		pop __tmp_reg__
 1239 0242 0F90      		pop __tmp_reg__
 1240 0244 0F90      		pop __tmp_reg__
 1241 0246 DF91      		pop r29
 1242 0248 CF91      		pop r28
 1243               	.LVL136:
 363:../../tmk_core/common/action.c **** 
 1244               		.loc 1 363 1 view .LVU297
 1245 024a 1F91      		pop r17
 1246               	.LVL137:
 363:../../tmk_core/common/action.c **** 
 1247               		.loc 1 363 1 view .LVU298
 1248 024c 0F91      		pop r16
 1249               	.LVL138:
 363:../../tmk_core/common/action.c **** 
 1250               		.loc 1 363 1 view .LVU299
 1251 024e FF90      		pop r15
 1252               	.LVL139:
 363:../../tmk_core/common/action.c **** 
 1253               		.loc 1 363 1 view .LVU300
 1254 0250 EF90      		pop r14
 1255               	.LVL140:
 363:../../tmk_core/common/action.c **** 
 1256               		.loc 1 363 1 view .LVU301
 1257 0252 DF90      		pop r13
 1258               	.LVL141:
 363:../../tmk_core/common/action.c **** 
 1259               		.loc 1 363 1 view .LVU302
 1260 0254 CF90      		pop r12
 1261               	.LVL142:
 363:../../tmk_core/common/action.c **** 
 1262               		.loc 1 363 1 view .LVU303
 1263 0256 BF90      		pop r11
 1264               	.LVL143:
 363:../../tmk_core/common/action.c **** 
 1265               		.loc 1 363 1 view .LVU304
 1266 0258 AF90      		pop r10
 1267               	.LVL144:
 193:../../tmk_core/common/action.c ****                     }
 1268               		.loc 1 193 25 view .LVU305
 1269 025a 0C94 0000 		jmp host_system_send
 1270               	.LVL145:
 1271               	.L86:
 209:../../tmk_core/common/action.c ****                 mousekey_on(action.key.code);
 1272               		.loc 1 209 13 is_stmt 1 view .LVU306
 210:../../tmk_core/common/action.c ****                 mousekey_send();
 1273               		.loc 1 210 17 is_stmt 0 view .LVU307
 1274 025e 802F      		mov r24,r16
 209:../../tmk_core/common/action.c ****                 mousekey_on(action.key.code);
 1275               		.loc 1 209 16 view .LVU308
 1276 0260 FF20      		tst r15
 1277 0262 01F0      		breq .L87
 210:../../tmk_core/common/action.c ****                 mousekey_send();
 1278               		.loc 1 210 17 is_stmt 1 view .LVU309
 1279 0264 0E94 0000 		call mousekey_on
 1280               	.LVL146:
 211:../../tmk_core/common/action.c ****             } else {
 1281               		.loc 1 211 17 view .LVU310
 1282               	.L167:
 214:../../tmk_core/common/action.c ****             }
 1283               		.loc 1 214 17 view .LVU311
 1284               	/* epilogue start */
 363:../../tmk_core/common/action.c **** 
 1285               		.loc 1 363 1 is_stmt 0 view .LVU312
 1286 0268 0F90      		pop __tmp_reg__
 1287 026a 0F90      		pop __tmp_reg__
 1288 026c 0F90      		pop __tmp_reg__
 1289 026e 0F90      		pop __tmp_reg__
 1290 0270 0F90      		pop __tmp_reg__
 1291 0272 DF91      		pop r29
 1292 0274 CF91      		pop r28
 1293               	.LVL147:
 363:../../tmk_core/common/action.c **** 
 1294               		.loc 1 363 1 view .LVU313
 1295 0276 1F91      		pop r17
 1296               	.LVL148:
 363:../../tmk_core/common/action.c **** 
 1297               		.loc 1 363 1 view .LVU314
 1298 0278 0F91      		pop r16
 1299               	.LVL149:
 363:../../tmk_core/common/action.c **** 
 1300               		.loc 1 363 1 view .LVU315
 1301 027a FF90      		pop r15
 1302               	.LVL150:
 363:../../tmk_core/common/action.c **** 
 1303               		.loc 1 363 1 view .LVU316
 1304 027c EF90      		pop r14
 1305               	.LVL151:
 363:../../tmk_core/common/action.c **** 
 1306               		.loc 1 363 1 view .LVU317
 1307 027e DF90      		pop r13
 1308               	.LVL152:
 363:../../tmk_core/common/action.c **** 
 1309               		.loc 1 363 1 view .LVU318
 1310 0280 CF90      		pop r12
 1311               	.LVL153:
 363:../../tmk_core/common/action.c **** 
 1312               		.loc 1 363 1 view .LVU319
 1313 0282 BF90      		pop r11
 1314               	.LVL154:
 363:../../tmk_core/common/action.c **** 
 1315               		.loc 1 363 1 view .LVU320
 1316 0284 AF90      		pop r10
 1317               	.LVL155:
 214:../../tmk_core/common/action.c ****             }
 1318               		.loc 1 214 17 view .LVU321
 1319 0286 0C94 0000 		jmp mousekey_send
 1320               	.LVL156:
 1321               	.L87:
 213:../../tmk_core/common/action.c ****                 mousekey_send();
 1322               		.loc 1 213 17 is_stmt 1 view .LVU322
 1323 028a 0E94 0000 		call mousekey_off
 1324               	.LVL157:
 1325 028e 00C0      		rjmp .L167
 1326               	.LVL158:
 1327               	.L88:
 220:../../tmk_core/common/action.c ****                 /* Default Layer Bitwise Operation */
 1328               		.loc 1 220 13 view .LVU323
 220:../../tmk_core/common/action.c ****                 /* Default Layer Bitwise Operation */
 1329               		.loc 1 220 39 is_stmt 0 view .LVU324
 1330 0290 812F      		mov r24,r17
 1331 0292 8370      		andi r24,lo8(3)
 220:../../tmk_core/common/action.c ****                 /* Default Layer Bitwise Operation */
 1332               		.loc 1 220 16 view .LVU325
 1333 0294 01F0      		breq .+2
 1334 0296 00C0      		rjmp .L89
 222:../../tmk_core/common/action.c ****                     uint8_t shift = action.layer_bitop.part*4;
 1335               		.loc 1 222 17 is_stmt 1 view .LVU326
 222:../../tmk_core/common/action.c ****                     uint8_t shift = action.layer_bitop.part*4;
 1336               		.loc 1 222 20 is_stmt 0 view .LVU327
 1337 0298 F110      		cpse r15,__zero_reg__
 1338 029a 00C0      		rjmp .L56
 1339               	.LBB31:
 223:../../tmk_core/common/action.c ****                     uint32_t bits = ((uint32_t)action.layer_bitop.bits)<<shift;
 1340               		.loc 1 223 21 is_stmt 1 view .LVU328
 1341               	.LVL159:
 224:../../tmk_core/common/action.c ****                     uint32_t mask = (action.layer_bitop.xbit) ? ~(((uint32_t)0xf)<<shift) : 0;
 1342               		.loc 1 224 21 view .LVU329
 223:../../tmk_core/common/action.c ****                     uint32_t bits = ((uint32_t)action.layer_bitop.bits)<<shift;
 1343               		.loc 1 223 55 is_stmt 0 view .LVU330
 1344 029c 202F      		mov r18,r16
 1345 029e 2295      		swap r18
 1346 02a0 2695      		lsr r18
 1347 02a2 2770      		andi r18,lo8(7)
 223:../../tmk_core/common/action.c ****                     uint32_t bits = ((uint32_t)action.layer_bitop.bits)<<shift;
 1348               		.loc 1 223 29 view .LVU331
 1349 02a4 220F      		lsl r18
 1350 02a6 220F      		lsl r18
 224:../../tmk_core/common/action.c ****                     uint32_t mask = (action.layer_bitop.xbit) ? ~(((uint32_t)0xf)<<shift) : 0;
 1351               		.loc 1 224 66 view .LVU332
 1352 02a8 602F      		mov r22,r16
 1353 02aa 6F70      		andi r22,lo8(15)
 224:../../tmk_core/common/action.c ****                     uint32_t mask = (action.layer_bitop.xbit) ? ~(((uint32_t)0xf)<<shift) : 0;
 1354               		.loc 1 224 38 view .LVU333
 1355 02ac C62E      		mov r12,r22
 1356 02ae D12C      		mov r13,__zero_reg__
 1357 02b0 F12C      		mov r15,__zero_reg__
 1358 02b2 E12C      		mov r14,__zero_reg__
 224:../../tmk_core/common/action.c ****                     uint32_t mask = (action.layer_bitop.xbit) ? ~(((uint32_t)0xf)<<shift) : 0;
 1359               		.loc 1 224 30 view .LVU334
 1360 02b4 022E      		mov r0,r18
 1361 02b6 00C0      		rjmp 2f
 1362               		1:
 1363 02b8 CC0C      		lsl r12
 1364 02ba DD1C      		rol r13
 1365 02bc EE1C      		rol r14
 1366 02be FF1C      		rol r15
 1367               		2:
 1368 02c0 0A94      		dec r0
 1369 02c2 02F4      		brpl 1b
 1370               	.LVL160:
 225:../../tmk_core/common/action.c ****                     switch (action.layer_bitop.op) {
 1371               		.loc 1 225 21 is_stmt 1 view .LVU335
 225:../../tmk_core/common/action.c ****                     switch (action.layer_bitop.op) {
 1372               		.loc 1 225 91 is_stmt 0 view .LVU336
 1373 02c4 60E0      		ldi r22,0
 1374 02c6 70E0      		ldi r23,0
 1375 02c8 CB01      		movw r24,r22
 1376 02ca 04FF      		sbrs r16,4
 1377 02cc 00C0      		rjmp .L90
 225:../../tmk_core/common/action.c ****                     switch (action.layer_bitop.op) {
 1378               		.loc 1 225 82 discriminator 1 view .LVU337
 1379 02ce 6FE0      		ldi r22,lo8(15)
 1380 02d0 70E0      		ldi r23,0
 1381 02d2 80E0      		ldi r24,0
 1382 02d4 90E0      		ldi r25,0
 1383 02d6 00C0      		rjmp 2f
 1384               		1:
 1385 02d8 660F      		lsl r22
 1386 02da 771F      		rol r23
 1387 02dc 881F      		rol r24
 1388 02de 991F      		rol r25
 1389               		2:
 1390 02e0 2A95      		dec r18
 1391 02e2 02F4      		brpl 1b
 225:../../tmk_core/common/action.c ****                     switch (action.layer_bitop.op) {
 1392               		.loc 1 225 91 discriminator 1 view .LVU338
 1393 02e4 6095      		com r22
 1394 02e6 7095      		com r23
 1395 02e8 8095      		com r24
 1396 02ea 9095      		com r25
 1397               	.L90:
 1398               	.LVL161:
 226:../../tmk_core/common/action.c ****                         case OP_BIT_AND: default_layer_and(bits | mask); break;
 1399               		.loc 1 226 21 is_stmt 1 discriminator 4 view .LVU339
 226:../../tmk_core/common/action.c ****                         case OP_BIT_AND: default_layer_and(bits | mask); break;
 1400               		.loc 1 226 47 is_stmt 0 discriminator 4 view .LVU340
 1401 02ec 1695      		lsr r17
 1402 02ee 1695      		lsr r17
 1403               	.LVL162:
 226:../../tmk_core/common/action.c ****                         case OP_BIT_AND: default_layer_and(bits | mask); break;
 1404               		.loc 1 226 47 discriminator 4 view .LVU341
 1405 02f0 1370      		andi r17,lo8(3)
 1406 02f2 1230      		cpi r17,lo8(2)
 1407 02f4 01F0      		breq .L91
 1408 02f6 00F4      		brsh .L92
 1409 02f8 6C29      		or r22,r12
 1410               	.LVL163:
 226:../../tmk_core/common/action.c ****                         case OP_BIT_AND: default_layer_and(bits | mask); break;
 1411               		.loc 1 226 47 discriminator 4 view .LVU342
 1412 02fa 7D29      		or r23,r13
 1413 02fc 8E29      		or r24,r14
 1414 02fe 9F29      		or r25,r15
 1415 0300 1130      		cpi r17,lo8(1)
 1416 0302 01F0      		breq .L168
 227:../../tmk_core/common/action.c ****                         case OP_BIT_OR:  default_layer_or(bits | mask);  break;
 1417               		.loc 1 227 42 is_stmt 1 view .LVU343
 1418               	/* epilogue start */
 1419               	.LBE31:
 363:../../tmk_core/common/action.c **** 
 1420               		.loc 1 363 1 is_stmt 0 view .LVU344
 1421 0304 0F90      		pop __tmp_reg__
 1422 0306 0F90      		pop __tmp_reg__
 1423 0308 0F90      		pop __tmp_reg__
 1424 030a 0F90      		pop __tmp_reg__
 1425 030c 0F90      		pop __tmp_reg__
 1426 030e DF91      		pop r29
 1427 0310 CF91      		pop r28
 1428               	.LVL164:
 363:../../tmk_core/common/action.c **** 
 1429               		.loc 1 363 1 view .LVU345
 1430 0312 1F91      		pop r17
 1431               	.LVL165:
 363:../../tmk_core/common/action.c **** 
 1432               		.loc 1 363 1 view .LVU346
 1433 0314 0F91      		pop r16
 1434               	.LVL166:
 363:../../tmk_core/common/action.c **** 
 1435               		.loc 1 363 1 view .LVU347
 1436 0316 FF90      		pop r15
 1437               	.LVL167:
 363:../../tmk_core/common/action.c **** 
 1438               		.loc 1 363 1 view .LVU348
 1439 0318 EF90      		pop r14
 1440               	.LVL168:
 363:../../tmk_core/common/action.c **** 
 1441               		.loc 1 363 1 view .LVU349
 1442 031a DF90      		pop r13
 1443               	.LVL169:
 363:../../tmk_core/common/action.c **** 
 1444               		.loc 1 363 1 view .LVU350
 1445 031c CF90      		pop r12
 1446               	.LVL170:
 363:../../tmk_core/common/action.c **** 
 1447               		.loc 1 363 1 view .LVU351
 1448 031e BF90      		pop r11
 1449               	.LVL171:
 363:../../tmk_core/common/action.c **** 
 1450               		.loc 1 363 1 view .LVU352
 1451 0320 AF90      		pop r10
 1452               	.LVL172:
 1453               	.LBB32:
 227:../../tmk_core/common/action.c ****                         case OP_BIT_OR:  default_layer_or(bits | mask);  break;
 1454               		.loc 1 227 42 view .LVU353
 1455 0322 0C94 0000 		jmp default_layer_and
 1456               	.LVL173:
 1457               	.L91:
 229:../../tmk_core/common/action.c ****                         case OP_BIT_SET: default_layer_and(mask); default_layer_or(bits); break;
 1458               		.loc 1 229 42 is_stmt 1 view .LVU354
 1459 0326 6C29      		or r22,r12
 1460               	.LVL174:
 229:../../tmk_core/common/action.c ****                         case OP_BIT_SET: default_layer_and(mask); default_layer_or(bits); break;
 1461               		.loc 1 229 42 is_stmt 0 view .LVU355
 1462 0328 7D29      		or r23,r13
 1463 032a 8E29      		or r24,r14
 1464 032c 9F29      		or r25,r15
 1465               	/* epilogue start */
 1466               	.LBE32:
 363:../../tmk_core/common/action.c **** 
 1467               		.loc 1 363 1 view .LVU356
 1468 032e 0F90      		pop __tmp_reg__
 1469 0330 0F90      		pop __tmp_reg__
 1470 0332 0F90      		pop __tmp_reg__
 1471 0334 0F90      		pop __tmp_reg__
 1472 0336 0F90      		pop __tmp_reg__
 1473 0338 DF91      		pop r29
 1474 033a CF91      		pop r28
 1475               	.LVL175:
 363:../../tmk_core/common/action.c **** 
 1476               		.loc 1 363 1 view .LVU357
 1477 033c 1F91      		pop r17
 1478               	.LVL176:
 363:../../tmk_core/common/action.c **** 
 1479               		.loc 1 363 1 view .LVU358
 1480 033e 0F91      		pop r16
 1481               	.LVL177:
 363:../../tmk_core/common/action.c **** 
 1482               		.loc 1 363 1 view .LVU359
 1483 0340 FF90      		pop r15
 1484               	.LVL178:
 363:../../tmk_core/common/action.c **** 
 1485               		.loc 1 363 1 view .LVU360
 1486 0342 EF90      		pop r14
 1487               	.LVL179:
 363:../../tmk_core/common/action.c **** 
 1488               		.loc 1 363 1 view .LVU361
 1489 0344 DF90      		pop r13
 1490               	.LVL180:
 363:../../tmk_core/common/action.c **** 
 1491               		.loc 1 363 1 view .LVU362
 1492 0346 CF90      		pop r12
 1493               	.LVL181:
 363:../../tmk_core/common/action.c **** 
 1494               		.loc 1 363 1 view .LVU363
 1495 0348 BF90      		pop r11
 1496               	.LVL182:
 363:../../tmk_core/common/action.c **** 
 1497               		.loc 1 363 1 view .LVU364
 1498 034a AF90      		pop r10
 1499               	.LVL183:
 1500               	.LBB33:
 229:../../tmk_core/common/action.c ****                         case OP_BIT_SET: default_layer_and(mask); default_layer_or(bits); break;
 1501               		.loc 1 229 42 view .LVU365
 1502 034c 0C94 0000 		jmp default_layer_xor
 1503               	.LVL184:
 1504               	.L92:
 230:../../tmk_core/common/action.c ****                     }
 1505               		.loc 1 230 42 is_stmt 1 view .LVU366
 1506 0350 0E94 0000 		call default_layer_and
 1507               	.LVL185:
 230:../../tmk_core/common/action.c ****                     }
 1508               		.loc 1 230 67 view .LVU367
 1509 0354 C701      		movw r24,r14
 1510 0356 B601      		movw r22,r12
 1511               	.L168:
 1512               	/* epilogue start */
 1513               	.LBE33:
 363:../../tmk_core/common/action.c **** 
 1514               		.loc 1 363 1 is_stmt 0 view .LVU368
 1515 0358 0F90      		pop __tmp_reg__
 1516 035a 0F90      		pop __tmp_reg__
 1517 035c 0F90      		pop __tmp_reg__
 1518 035e 0F90      		pop __tmp_reg__
 1519 0360 0F90      		pop __tmp_reg__
 1520 0362 DF91      		pop r29
 1521 0364 CF91      		pop r28
 1522               	.LVL186:
 363:../../tmk_core/common/action.c **** 
 1523               		.loc 1 363 1 view .LVU369
 1524 0366 1F91      		pop r17
 1525               	.LVL187:
 363:../../tmk_core/common/action.c **** 
 1526               		.loc 1 363 1 view .LVU370
 1527 0368 0F91      		pop r16
 1528               	.LVL188:
 363:../../tmk_core/common/action.c **** 
 1529               		.loc 1 363 1 view .LVU371
 1530 036a FF90      		pop r15
 1531               	.LVL189:
 363:../../tmk_core/common/action.c **** 
 1532               		.loc 1 363 1 view .LVU372
 1533 036c EF90      		pop r14
 1534               	.LVL190:
 363:../../tmk_core/common/action.c **** 
 1535               		.loc 1 363 1 view .LVU373
 1536 036e DF90      		pop r13
 1537               	.LVL191:
 363:../../tmk_core/common/action.c **** 
 1538               		.loc 1 363 1 view .LVU374
 1539 0370 CF90      		pop r12
 1540               	.LVL192:
 363:../../tmk_core/common/action.c **** 
 1541               		.loc 1 363 1 view .LVU375
 1542 0372 BF90      		pop r11
 1543               	.LVL193:
 363:../../tmk_core/common/action.c **** 
 1544               		.loc 1 363 1 view .LVU376
 1545 0374 AF90      		pop r10
 1546               	.LVL194:
 1547               	.LBB34:
 230:../../tmk_core/common/action.c ****                     }
 1548               		.loc 1 230 67 view .LVU377
 1549 0376 0C94 0000 		jmp default_layer_or
 1550               	.LVL195:
 1551               	.L89:
 230:../../tmk_core/common/action.c ****                     }
 1552               		.loc 1 230 67 view .LVU378
 1553               	.LBE34:
 235:../../tmk_core/common/action.c ****                                     (action.layer_bitop.on & ON_RELEASE)) {
 1554               		.loc 1 235 17 is_stmt 1 view .LVU379
 235:../../tmk_core/common/action.c ****                                     (action.layer_bitop.on & ON_RELEASE)) {
 1555               		.loc 1 235 21 is_stmt 0 view .LVU380
 1556 037a 8695      		lsr r24
 1557 037c FF20      		tst r15
 1558 037e 01F0      		breq .L95
 235:../../tmk_core/common/action.c ****                                     (action.layer_bitop.on & ON_RELEASE)) {
 1559               		.loc 1 235 21 discriminator 1 view .LVU381
 1560 0380 812F      		mov r24,r17
 1561 0382 8170      		andi r24,lo8(1)
 1562               	.L95:
 235:../../tmk_core/common/action.c ****                                     (action.layer_bitop.on & ON_RELEASE)) {
 1563               		.loc 1 235 20 discriminator 4 view .LVU382
 1564 0384 8823      		tst r24
 1565 0386 01F4      		brne .+2
 1566 0388 00C0      		rjmp .L56
 1567               	.LBB35:
 237:../../tmk_core/common/action.c ****                     uint32_t bits = ((uint32_t)action.layer_bitop.bits)<<shift;
 1568               		.loc 1 237 21 is_stmt 1 view .LVU383
 1569               	.LVL196:
 238:../../tmk_core/common/action.c ****                     uint32_t mask = (action.layer_bitop.xbit) ? ~(((uint32_t)0xf)<<shift) : 0;
 1570               		.loc 1 238 21 view .LVU384
 237:../../tmk_core/common/action.c ****                     uint32_t bits = ((uint32_t)action.layer_bitop.bits)<<shift;
 1571               		.loc 1 237 55 is_stmt 0 view .LVU385
 1572 038a 202F      		mov r18,r16
 1573 038c 2295      		swap r18
 1574 038e 2695      		lsr r18
 1575 0390 2770      		andi r18,lo8(7)
 237:../../tmk_core/common/action.c ****                     uint32_t bits = ((uint32_t)action.layer_bitop.bits)<<shift;
 1576               		.loc 1 237 29 view .LVU386
 1577 0392 220F      		lsl r18
 1578 0394 220F      		lsl r18
 238:../../tmk_core/common/action.c ****                     uint32_t mask = (action.layer_bitop.xbit) ? ~(((uint32_t)0xf)<<shift) : 0;
 1579               		.loc 1 238 66 view .LVU387
 1580 0396 602F      		mov r22,r16
 1581 0398 6F70      		andi r22,lo8(15)
 238:../../tmk_core/common/action.c ****                     uint32_t mask = (action.layer_bitop.xbit) ? ~(((uint32_t)0xf)<<shift) : 0;
 1582               		.loc 1 238 38 view .LVU388
 1583 039a C62E      		mov r12,r22
 1584 039c D12C      		mov r13,__zero_reg__
 1585 039e F12C      		mov r15,__zero_reg__
 1586 03a0 E12C      		mov r14,__zero_reg__
 238:../../tmk_core/common/action.c ****                     uint32_t mask = (action.layer_bitop.xbit) ? ~(((uint32_t)0xf)<<shift) : 0;
 1587               		.loc 1 238 30 view .LVU389
 1588 03a2 022E      		mov r0,r18
 1589 03a4 00C0      		rjmp 2f
 1590               		1:
 1591 03a6 CC0C      		lsl r12
 1592 03a8 DD1C      		rol r13
 1593 03aa EE1C      		rol r14
 1594 03ac FF1C      		rol r15
 1595               		2:
 1596 03ae 0A94      		dec r0
 1597 03b0 02F4      		brpl 1b
 1598               	.LVL197:
 239:../../tmk_core/common/action.c ****                     switch (action.layer_bitop.op) {
 1599               		.loc 1 239 21 is_stmt 1 view .LVU390
 239:../../tmk_core/common/action.c ****                     switch (action.layer_bitop.op) {
 1600               		.loc 1 239 91 is_stmt 0 view .LVU391
 1601 03b2 60E0      		ldi r22,0
 1602 03b4 70E0      		ldi r23,0
 1603 03b6 CB01      		movw r24,r22
 1604 03b8 04FF      		sbrs r16,4
 1605 03ba 00C0      		rjmp .L96
 239:../../tmk_core/common/action.c ****                     switch (action.layer_bitop.op) {
 1606               		.loc 1 239 82 discriminator 1 view .LVU392
 1607 03bc 6FE0      		ldi r22,lo8(15)
 1608 03be 70E0      		ldi r23,0
 1609 03c0 80E0      		ldi r24,0
 1610 03c2 90E0      		ldi r25,0
 1611 03c4 00C0      		rjmp 2f
 1612               		1:
 1613 03c6 660F      		lsl r22
 1614 03c8 771F      		rol r23
 1615 03ca 881F      		rol r24
 1616 03cc 991F      		rol r25
 1617               		2:
 1618 03ce 2A95      		dec r18
 1619 03d0 02F4      		brpl 1b
 239:../../tmk_core/common/action.c ****                     switch (action.layer_bitop.op) {
 1620               		.loc 1 239 91 discriminator 1 view .LVU393
 1621 03d2 6095      		com r22
 1622 03d4 7095      		com r23
 1623 03d6 8095      		com r24
 1624 03d8 9095      		com r25
 1625               	.L96:
 1626               	.LVL198:
 240:../../tmk_core/common/action.c ****                         case OP_BIT_AND: layer_and(bits | mask); break;
 1627               		.loc 1 240 21 is_stmt 1 discriminator 4 view .LVU394
 240:../../tmk_core/common/action.c ****                         case OP_BIT_AND: layer_and(bits | mask); break;
 1628               		.loc 1 240 47 is_stmt 0 discriminator 4 view .LVU395
 1629 03da 1695      		lsr r17
 1630 03dc 1695      		lsr r17
 1631               	.LVL199:
 240:../../tmk_core/common/action.c ****                         case OP_BIT_AND: layer_and(bits | mask); break;
 1632               		.loc 1 240 47 discriminator 4 view .LVU396
 1633 03de 1370      		andi r17,lo8(3)
 1634 03e0 1230      		cpi r17,lo8(2)
 1635 03e2 01F0      		breq .L97
 1636 03e4 00F4      		brsh .L98
 1637 03e6 6C29      		or r22,r12
 1638               	.LVL200:
 240:../../tmk_core/common/action.c ****                         case OP_BIT_AND: layer_and(bits | mask); break;
 1639               		.loc 1 240 47 discriminator 4 view .LVU397
 1640 03e8 7D29      		or r23,r13
 1641 03ea 8E29      		or r24,r14
 1642 03ec 9F29      		or r25,r15
 1643 03ee 1130      		cpi r17,lo8(1)
 1644 03f0 01F0      		breq .L166
 241:../../tmk_core/common/action.c ****                         case OP_BIT_OR:  layer_or(bits | mask);  break;
 1645               		.loc 1 241 42 is_stmt 1 view .LVU398
 1646               	/* epilogue start */
 1647               	.LBE35:
 363:../../tmk_core/common/action.c **** 
 1648               		.loc 1 363 1 is_stmt 0 view .LVU399
 1649 03f2 0F90      		pop __tmp_reg__
 1650 03f4 0F90      		pop __tmp_reg__
 1651 03f6 0F90      		pop __tmp_reg__
 1652 03f8 0F90      		pop __tmp_reg__
 1653 03fa 0F90      		pop __tmp_reg__
 1654 03fc DF91      		pop r29
 1655 03fe CF91      		pop r28
 1656               	.LVL201:
 363:../../tmk_core/common/action.c **** 
 1657               		.loc 1 363 1 view .LVU400
 1658 0400 1F91      		pop r17
 1659               	.LVL202:
 363:../../tmk_core/common/action.c **** 
 1660               		.loc 1 363 1 view .LVU401
 1661 0402 0F91      		pop r16
 1662               	.LVL203:
 363:../../tmk_core/common/action.c **** 
 1663               		.loc 1 363 1 view .LVU402
 1664 0404 FF90      		pop r15
 1665               	.LVL204:
 363:../../tmk_core/common/action.c **** 
 1666               		.loc 1 363 1 view .LVU403
 1667 0406 EF90      		pop r14
 1668               	.LVL205:
 363:../../tmk_core/common/action.c **** 
 1669               		.loc 1 363 1 view .LVU404
 1670 0408 DF90      		pop r13
 1671               	.LVL206:
 363:../../tmk_core/common/action.c **** 
 1672               		.loc 1 363 1 view .LVU405
 1673 040a CF90      		pop r12
 1674               	.LVL207:
 363:../../tmk_core/common/action.c **** 
 1675               		.loc 1 363 1 view .LVU406
 1676 040c BF90      		pop r11
 1677               	.LVL208:
 363:../../tmk_core/common/action.c **** 
 1678               		.loc 1 363 1 view .LVU407
 1679 040e AF90      		pop r10
 1680               	.LVL209:
 1681               	.LBB36:
 241:../../tmk_core/common/action.c ****                         case OP_BIT_OR:  layer_or(bits | mask);  break;
 1682               		.loc 1 241 42 view .LVU408
 1683 0410 0C94 0000 		jmp layer_and
 1684               	.LVL210:
 1685               	.L97:
 243:../../tmk_core/common/action.c ****                         case OP_BIT_SET: layer_and(mask); layer_or(bits); break;
 1686               		.loc 1 243 42 is_stmt 1 view .LVU409
 1687 0414 6C29      		or r22,r12
 1688               	.LVL211:
 243:../../tmk_core/common/action.c ****                         case OP_BIT_SET: layer_and(mask); layer_or(bits); break;
 1689               		.loc 1 243 42 is_stmt 0 view .LVU410
 1690 0416 7D29      		or r23,r13
 1691 0418 8E29      		or r24,r14
 1692 041a 9F29      		or r25,r15
 1693               	/* epilogue start */
 1694               	.LBE36:
 363:../../tmk_core/common/action.c **** 
 1695               		.loc 1 363 1 view .LVU411
 1696 041c 0F90      		pop __tmp_reg__
 1697 041e 0F90      		pop __tmp_reg__
 1698 0420 0F90      		pop __tmp_reg__
 1699 0422 0F90      		pop __tmp_reg__
 1700 0424 0F90      		pop __tmp_reg__
 1701 0426 DF91      		pop r29
 1702 0428 CF91      		pop r28
 1703               	.LVL212:
 363:../../tmk_core/common/action.c **** 
 1704               		.loc 1 363 1 view .LVU412
 1705 042a 1F91      		pop r17
 1706               	.LVL213:
 363:../../tmk_core/common/action.c **** 
 1707               		.loc 1 363 1 view .LVU413
 1708 042c 0F91      		pop r16
 1709               	.LVL214:
 363:../../tmk_core/common/action.c **** 
 1710               		.loc 1 363 1 view .LVU414
 1711 042e FF90      		pop r15
 1712               	.LVL215:
 363:../../tmk_core/common/action.c **** 
 1713               		.loc 1 363 1 view .LVU415
 1714 0430 EF90      		pop r14
 1715               	.LVL216:
 363:../../tmk_core/common/action.c **** 
 1716               		.loc 1 363 1 view .LVU416
 1717 0432 DF90      		pop r13
 1718               	.LVL217:
 363:../../tmk_core/common/action.c **** 
 1719               		.loc 1 363 1 view .LVU417
 1720 0434 CF90      		pop r12
 1721               	.LVL218:
 363:../../tmk_core/common/action.c **** 
 1722               		.loc 1 363 1 view .LVU418
 1723 0436 BF90      		pop r11
 1724               	.LVL219:
 363:../../tmk_core/common/action.c **** 
 1725               		.loc 1 363 1 view .LVU419
 1726 0438 AF90      		pop r10
 1727               	.LVL220:
 1728               	.LBB37:
 243:../../tmk_core/common/action.c ****                         case OP_BIT_SET: layer_and(mask); layer_or(bits); break;
 1729               		.loc 1 243 42 view .LVU420
 1730 043a 0C94 0000 		jmp layer_xor
 1731               	.LVL221:
 1732               	.L98:
 244:../../tmk_core/common/action.c ****                     }
 1733               		.loc 1 244 42 is_stmt 1 view .LVU421
 1734 043e 0E94 0000 		call layer_and
 1735               	.LVL222:
 244:../../tmk_core/common/action.c ****                     }
 1736               		.loc 1 244 59 view .LVU422
 1737 0442 C701      		movw r24,r14
 1738 0444 B601      		movw r22,r12
 1739               	.L166:
 1740               	/* epilogue start */
 1741               	.LBE37:
 363:../../tmk_core/common/action.c **** 
 1742               		.loc 1 363 1 is_stmt 0 view .LVU423
 1743 0446 0F90      		pop __tmp_reg__
 1744 0448 0F90      		pop __tmp_reg__
 1745 044a 0F90      		pop __tmp_reg__
 1746 044c 0F90      		pop __tmp_reg__
 1747 044e 0F90      		pop __tmp_reg__
 1748 0450 DF91      		pop r29
 1749 0452 CF91      		pop r28
 1750               	.LVL223:
 363:../../tmk_core/common/action.c **** 
 1751               		.loc 1 363 1 view .LVU424
 1752 0454 1F91      		pop r17
 1753               	.LVL224:
 363:../../tmk_core/common/action.c **** 
 1754               		.loc 1 363 1 view .LVU425
 1755 0456 0F91      		pop r16
 1756               	.LVL225:
 363:../../tmk_core/common/action.c **** 
 1757               		.loc 1 363 1 view .LVU426
 1758 0458 FF90      		pop r15
 1759               	.LVL226:
 363:../../tmk_core/common/action.c **** 
 1760               		.loc 1 363 1 view .LVU427
 1761 045a EF90      		pop r14
 1762               	.LVL227:
 363:../../tmk_core/common/action.c **** 
 1763               		.loc 1 363 1 view .LVU428
 1764 045c DF90      		pop r13
 1765               	.LVL228:
 363:../../tmk_core/common/action.c **** 
 1766               		.loc 1 363 1 view .LVU429
 1767 045e CF90      		pop r12
 1768               	.LVL229:
 363:../../tmk_core/common/action.c **** 
 1769               		.loc 1 363 1 view .LVU430
 1770 0460 BF90      		pop r11
 1771               	.LVL230:
 363:../../tmk_core/common/action.c **** 
 1772               		.loc 1 363 1 view .LVU431
 1773 0462 AF90      		pop r10
 1774               	.LVL231:
 1775               	.LBB38:
 244:../../tmk_core/common/action.c ****                     }
 1776               		.loc 1 244 59 view .LVU432
 1777 0464 0C94 0000 		jmp layer_or
 1778               	.LVL232:
 1779               	.L100:
 244:../../tmk_core/common/action.c ****                     }
 1780               		.loc 1 244 59 view .LVU433
 1781               	.LBE38:
 252:../../tmk_core/common/action.c ****                 case 0xc0 ... 0xdf:
 1782               		.loc 1 252 13 is_stmt 1 view .LVU434
 252:../../tmk_core/common/action.c ****                 case 0xc0 ... 0xdf:
 1783               		.loc 1 252 13 is_stmt 0 view .LVU435
 1784 0468 003F      		cpi r16,lo8(-16)
 1785 046a 01F4      		brne .+2
 1786 046c 00C0      		rjmp .L101
 1787 046e 00F4      		brsh .L102
 1788 0470 80E4      		ldi r24,lo8(64)
 1789 0472 800F      		add r24,r16
 1790 0474 8032      		cpi r24,lo8(32)
 1791 0476 00F0      		brlo .L154
 1792               	.L103:
 293:../../tmk_core/common/action.c ****                         if (tap_count > 0) {
 1793               		.loc 1 293 21 is_stmt 1 view .LVU436
 293:../../tmk_core/common/action.c ****                         if (tap_count > 0) {
 1794               		.loc 1 293 24 is_stmt 0 view .LVU437
 1795 0478 FF20      		tst r15
 1796 047a 01F4      		brne .+2
 1797 047c 00C0      		rjmp .L118
 294:../../tmk_core/common/action.c ****                             dprint("KEYMAP_TAP_KEY: Tap: register_code\n");
 1798               		.loc 1 294 25 is_stmt 1 view .LVU438
 294:../../tmk_core/common/action.c ****                             dprint("KEYMAP_TAP_KEY: Tap: register_code\n");
 1799               		.loc 1 294 28 is_stmt 0 view .LVU439
 1800 047e E110      		cpse r14,__zero_reg__
 1801 0480 00C0      		rjmp .L159
 298:../../tmk_core/common/action.c ****                             layer_on(action.layer_tap.val);
 1802               		.loc 1 298 29 is_stmt 1 view .LVU440
 299:../../tmk_core/common/action.c ****                         }
 1803               		.loc 1 299 29 view .LVU441
 1804 0482 812F      		mov r24,r17
 1805 0484 8F71      		andi r24,lo8(31)
 1806 0486 00C0      		rjmp .L160
 1807               	.L102:
 1808 0488 023F      		cpi r16,lo8(-14)
 1809 048a 01F4      		brne .+2
 1810 048c 00C0      		rjmp .L105
 1811 048e 00F4      		brsh .+2
 1812 0490 00C0      		rjmp .L106
 1813 0492 033F      		cpi r16,lo8(-13)
 1814 0494 01F4      		brne .L103
 288:../../tmk_core/common/action.c ****                                     layer_clear();
 1815               		.loc 1 288 21 view .LVU442
 288:../../tmk_core/common/action.c ****                                     layer_clear();
 1816               		.loc 1 288 70 is_stmt 0 view .LVU443
 1817 0496 FF20      		tst r15
 1818 0498 01F4      		brne .+2
 1819 049a 00C0      		rjmp .L117
 288:../../tmk_core/common/action.c ****                                     layer_clear();
 1820               		.loc 1 288 37 discriminator 1 view .LVU444
 1821 049c 812F      		mov r24,r17
 1822 049e 8F71      		andi r24,lo8(31)
 1823               	/* epilogue start */
 363:../../tmk_core/common/action.c **** 
 1824               		.loc 1 363 1 discriminator 1 view .LVU445
 1825 04a0 0F90      		pop __tmp_reg__
 1826 04a2 0F90      		pop __tmp_reg__
 1827 04a4 0F90      		pop __tmp_reg__
 1828 04a6 0F90      		pop __tmp_reg__
 1829 04a8 0F90      		pop __tmp_reg__
 1830 04aa DF91      		pop r29
 1831 04ac CF91      		pop r28
 1832               	.LVL233:
 363:../../tmk_core/common/action.c **** 
 1833               		.loc 1 363 1 discriminator 1 view .LVU446
 1834 04ae 1F91      		pop r17
 1835               	.LVL234:
 363:../../tmk_core/common/action.c **** 
 1836               		.loc 1 363 1 discriminator 1 view .LVU447
 1837 04b0 0F91      		pop r16
 1838               	.LVL235:
 363:../../tmk_core/common/action.c **** 
 1839               		.loc 1 363 1 discriminator 1 view .LVU448
 1840 04b2 FF90      		pop r15
 1841               	.LVL236:
 363:../../tmk_core/common/action.c **** 
 1842               		.loc 1 363 1 discriminator 1 view .LVU449
 1843 04b4 EF90      		pop r14
 1844               	.LVL237:
 363:../../tmk_core/common/action.c **** 
 1845               		.loc 1 363 1 discriminator 1 view .LVU450
 1846 04b6 DF90      		pop r13
 1847               	.LVL238:
 363:../../tmk_core/common/action.c **** 
 1848               		.loc 1 363 1 discriminator 1 view .LVU451
 1849 04b8 CF90      		pop r12
 1850               	.LVL239:
 363:../../tmk_core/common/action.c **** 
 1851               		.loc 1 363 1 discriminator 1 view .LVU452
 1852 04ba BF90      		pop r11
 1853               	.LVL240:
 363:../../tmk_core/common/action.c **** 
 1854               		.loc 1 363 1 discriminator 1 view .LVU453
 1855 04bc AF90      		pop r10
 1856               	.LVL241:
 288:../../tmk_core/common/action.c ****                                     layer_clear();
 1857               		.loc 1 288 37 discriminator 1 view .LVU454
 1858 04be 0C94 0000 		jmp layer_move
 1859               	.LVL242:
 1860               	.L154:
 255:../../tmk_core/common/action.c ****                         layer_on(action.layer_tap.val);
 1861               		.loc 1 255 21 is_stmt 1 view .LVU455
 1862 04c2 812F      		mov r24,r17
 1863 04c4 8F71      		andi r24,lo8(31)
 1864 04c6 102F      		mov r17,r16
 1865               	.LVL243:
 255:../../tmk_core/common/action.c ****                         layer_on(action.layer_tap.val);
 1866               		.loc 1 255 21 is_stmt 0 view .LVU456
 1867 04c8 1071      		andi r17,lo8(16)
 255:../../tmk_core/common/action.c ****                         layer_on(action.layer_tap.val);
 1868               		.loc 1 255 24 view .LVU457
 1869 04ca FF20      		tst r15
 1870 04cc 01F0      		breq .L108
 256:../../tmk_core/common/action.c ****                         register_mods((action.layer_tap.code & 0x10) ?
 1871               		.loc 1 256 25 is_stmt 1 view .LVU458
 1872 04ce 0E94 0000 		call layer_on
 1873               	.LVL244:
 257:../../tmk_core/common/action.c ****                                 (action.layer_tap.code & 0x0f) << 4 :
 1874               		.loc 1 257 25 view .LVU459
 1875 04d2 802F      		mov r24,r16
 257:../../tmk_core/common/action.c ****                                 (action.layer_tap.code & 0x0f) << 4 :
 1876               		.loc 1 257 25 is_stmt 0 view .LVU460
 1877 04d4 8295      		swap r24
 1878 04d6 807F      		andi r24,lo8(-16)
 1879 04d8 1111      		cpse r17,__zero_reg__
 1880 04da 00C0      		rjmp .L163
 257:../../tmk_core/common/action.c ****                                 (action.layer_tap.code & 0x0f) << 4 :
 1881               		.loc 1 257 25 discriminator 2 view .LVU461
 1882 04dc 802F      		mov r24,r16
 1883 04de 8F70      		andi r24,lo8(15)
 1884 04e0 00C0      		rjmp .L163
 1885               	.L108:
 261:../../tmk_core/common/action.c ****                         unregister_mods((action.layer_tap.code & 0x10) ?
 1886               		.loc 1 261 25 is_stmt 1 view .LVU462
 1887 04e2 0E94 0000 		call layer_off
 1888               	.LVL245:
 262:../../tmk_core/common/action.c ****                                 (action.layer_tap.code & 0x0f) << 4 :
 1889               		.loc 1 262 25 view .LVU463
 1890 04e6 802F      		mov r24,r16
 1891 04e8 8295      		swap r24
 1892 04ea 807F      		andi r24,lo8(-16)
 1893 04ec 1111      		cpse r17,__zero_reg__
 1894 04ee 00C0      		rjmp .L112
 262:../../tmk_core/common/action.c ****                                 (action.layer_tap.code & 0x0f) << 4 :
 1895               		.loc 1 262 25 is_stmt 0 discriminator 2 view .LVU464
 1896 04f0 802F      		mov r24,r16
 1897 04f2 8F70      		andi r24,lo8(15)
 1898 04f4 00C0      		rjmp .L112
 1899               	.LVL246:
 1900               	.L101:
 269:../../tmk_core/common/action.c ****                         if (tap_count < TAPPING_TOGGLE) {
 1901               		.loc 1 269 21 is_stmt 1 view .LVU465
 269:../../tmk_core/common/action.c ****                         if (tap_count < TAPPING_TOGGLE) {
 1902               		.loc 1 269 24 is_stmt 0 view .LVU466
 1903 04f6 FF20      		tst r15
 1904 04f8 01F0      		breq .L113
 270:../../tmk_core/common/action.c ****                             layer_invert(action.layer_tap.val);
 1905               		.loc 1 270 25 is_stmt 1 view .LVU467
 270:../../tmk_core/common/action.c ****                             layer_invert(action.layer_tap.val);
 1906               		.loc 1 270 28 is_stmt 0 view .LVU468
 1907 04fa F4E0      		ldi r31,lo8(4)
 1908 04fc FE15      		cp r31,r14
 1909 04fe 00F4      		brsh .+2
 1910 0500 00C0      		rjmp .L56
 1911               	.L114:
 271:../../tmk_core/common/action.c ****                         }
 1912               		.loc 1 271 29 is_stmt 1 view .LVU469
 1913 0502 812F      		mov r24,r17
 1914 0504 8F71      		andi r24,lo8(31)
 1915               	/* epilogue start */
 363:../../tmk_core/common/action.c **** 
 1916               		.loc 1 363 1 is_stmt 0 view .LVU470
 1917 0506 0F90      		pop __tmp_reg__
 1918 0508 0F90      		pop __tmp_reg__
 1919 050a 0F90      		pop __tmp_reg__
 1920 050c 0F90      		pop __tmp_reg__
 1921 050e 0F90      		pop __tmp_reg__
 1922 0510 DF91      		pop r29
 1923 0512 CF91      		pop r28
 1924               	.LVL247:
 363:../../tmk_core/common/action.c **** 
 1925               		.loc 1 363 1 view .LVU471
 1926 0514 1F91      		pop r17
 1927               	.LVL248:
 363:../../tmk_core/common/action.c **** 
 1928               		.loc 1 363 1 view .LVU472
 1929 0516 0F91      		pop r16
 1930               	.LVL249:
 363:../../tmk_core/common/action.c **** 
 1931               		.loc 1 363 1 view .LVU473
 1932 0518 FF90      		pop r15
 1933               	.LVL250:
 363:../../tmk_core/common/action.c **** 
 1934               		.loc 1 363 1 view .LVU474
 1935 051a EF90      		pop r14
 1936               	.LVL251:
 363:../../tmk_core/common/action.c **** 
 1937               		.loc 1 363 1 view .LVU475
 1938 051c DF90      		pop r13
 1939               	.LVL252:
 363:../../tmk_core/common/action.c **** 
 1940               		.loc 1 363 1 view .LVU476
 1941 051e CF90      		pop r12
 1942               	.LVL253:
 363:../../tmk_core/common/action.c **** 
 1943               		.loc 1 363 1 view .LVU477
 1944 0520 BF90      		pop r11
 1945               	.LVL254:
 363:../../tmk_core/common/action.c **** 
 1946               		.loc 1 363 1 view .LVU478
 1947 0522 AF90      		pop r10
 1948               	.LVL255:
 271:../../tmk_core/common/action.c ****                         }
 1949               		.loc 1 271 29 view .LVU479
 1950 0524 0C94 0000 		jmp layer_invert
 1951               	.LVL256:
 1952               	.L113:
 274:../../tmk_core/common/action.c ****                             layer_invert(action.layer_tap.val);
 1953               		.loc 1 274 25 is_stmt 1 view .LVU480
 274:../../tmk_core/common/action.c ****                             layer_invert(action.layer_tap.val);
 1954               		.loc 1 274 28 is_stmt 0 view .LVU481
 1955 0528 25E0      		ldi r18,lo8(5)
 1956 052a 2E15      		cp r18,r14
 1957 052c 00F4      		brsh .+2
 1958 052e 00C0      		rjmp .L56
 1959 0530 00C0      		rjmp .L114
 1960               	.L106:
 280:../../tmk_core/common/action.c ****                                     layer_off(action.layer_tap.val);
 1961               		.loc 1 280 21 is_stmt 1 view .LVU482
 1962 0532 812F      		mov r24,r17
 1963 0534 8F71      		andi r24,lo8(31)
 280:../../tmk_core/common/action.c ****                                     layer_off(action.layer_tap.val);
 1964               		.loc 1 280 68 is_stmt 0 view .LVU483
 1965 0536 FF20      		tst r15
 1966 0538 01F0      		breq .L161
 1967               	.L160:
 1968               	/* epilogue start */
 363:../../tmk_core/common/action.c **** 
 1969               		.loc 1 363 1 view .LVU484
 1970 053a 0F90      		pop __tmp_reg__
 1971 053c 0F90      		pop __tmp_reg__
 1972 053e 0F90      		pop __tmp_reg__
 1973 0540 0F90      		pop __tmp_reg__
 1974 0542 0F90      		pop __tmp_reg__
 1975 0544 DF91      		pop r29
 1976 0546 CF91      		pop r28
 1977               	.LVL257:
 363:../../tmk_core/common/action.c **** 
 1978               		.loc 1 363 1 view .LVU485
 1979 0548 1F91      		pop r17
 1980               	.LVL258:
 363:../../tmk_core/common/action.c **** 
 1981               		.loc 1 363 1 view .LVU486
 1982 054a 0F91      		pop r16
 1983               	.LVL259:
 363:../../tmk_core/common/action.c **** 
 1984               		.loc 1 363 1 view .LVU487
 1985 054c FF90      		pop r15
 1986               	.LVL260:
 363:../../tmk_core/common/action.c **** 
 1987               		.loc 1 363 1 view .LVU488
 1988 054e EF90      		pop r14
 1989               	.LVL261:
 363:../../tmk_core/common/action.c **** 
 1990               		.loc 1 363 1 view .LVU489
 1991 0550 DF90      		pop r13
 1992               	.LVL262:
 363:../../tmk_core/common/action.c **** 
 1993               		.loc 1 363 1 view .LVU490
 1994 0552 CF90      		pop r12
 1995               	.LVL263:
 363:../../tmk_core/common/action.c **** 
 1996               		.loc 1 363 1 view .LVU491
 1997 0554 BF90      		pop r11
 1998               	.LVL264:
 363:../../tmk_core/common/action.c **** 
 1999               		.loc 1 363 1 view .LVU492
 2000 0556 AF90      		pop r10
 2001               	.LVL265:
 299:../../tmk_core/common/action.c ****                         }
 2002               		.loc 1 299 29 view .LVU493
 2003 0558 0C94 0000 		jmp layer_on
 2004               	.LVL266:
 2005               	.L105:
 284:../../tmk_core/common/action.c ****                                     layer_on(action.layer_tap.val);
 2006               		.loc 1 284 21 is_stmt 1 view .LVU494
 2007 055c 812F      		mov r24,r17
 2008 055e 8F71      		andi r24,lo8(31)
 284:../../tmk_core/common/action.c ****                                     layer_on(action.layer_tap.val);
 2009               		.loc 1 284 69 is_stmt 0 view .LVU495
 2010 0560 FF20      		tst r15
 2011 0562 01F0      		breq .L160
 2012               	.L161:
 2013               	/* epilogue start */
 363:../../tmk_core/common/action.c **** 
 2014               		.loc 1 363 1 view .LVU496
 2015 0564 0F90      		pop __tmp_reg__
 2016 0566 0F90      		pop __tmp_reg__
 2017 0568 0F90      		pop __tmp_reg__
 2018 056a 0F90      		pop __tmp_reg__
 2019 056c 0F90      		pop __tmp_reg__
 2020 056e DF91      		pop r29
 2021 0570 CF91      		pop r28
 2022               	.LVL267:
 363:../../tmk_core/common/action.c **** 
 2023               		.loc 1 363 1 view .LVU497
 2024 0572 1F91      		pop r17
 2025               	.LVL268:
 363:../../tmk_core/common/action.c **** 
 2026               		.loc 1 363 1 view .LVU498
 2027 0574 0F91      		pop r16
 2028               	.LVL269:
 363:../../tmk_core/common/action.c **** 
 2029               		.loc 1 363 1 view .LVU499
 2030 0576 FF90      		pop r15
 2031               	.LVL270:
 363:../../tmk_core/common/action.c **** 
 2032               		.loc 1 363 1 view .LVU500
 2033 0578 EF90      		pop r14
 2034               	.LVL271:
 363:../../tmk_core/common/action.c **** 
 2035               		.loc 1 363 1 view .LVU501
 2036 057a DF90      		pop r13
 2037               	.LVL272:
 363:../../tmk_core/common/action.c **** 
 2038               		.loc 1 363 1 view .LVU502
 2039 057c CF90      		pop r12
 2040               	.LVL273:
 363:../../tmk_core/common/action.c **** 
 2041               		.loc 1 363 1 view .LVU503
 2042 057e BF90      		pop r11
 2043               	.LVL274:
 363:../../tmk_core/common/action.c **** 
 2044               		.loc 1 363 1 view .LVU504
 2045 0580 AF90      		pop r10
 2046               	.LVL275:
 307:../../tmk_core/common/action.c ****                         }
 2047               		.loc 1 307 29 view .LVU505
 2048 0582 0C94 0000 		jmp layer_off
 2049               	.LVL276:
 2050               	.L117:
 2051               	/* epilogue start */
 363:../../tmk_core/common/action.c **** 
 2052               		.loc 1 363 1 view .LVU506
 2053 0586 0F90      		pop __tmp_reg__
 2054 0588 0F90      		pop __tmp_reg__
 2055 058a 0F90      		pop __tmp_reg__
 2056 058c 0F90      		pop __tmp_reg__
 2057 058e 0F90      		pop __tmp_reg__
 2058 0590 DF91      		pop r29
 2059 0592 CF91      		pop r28
 2060               	.LVL277:
 363:../../tmk_core/common/action.c **** 
 2061               		.loc 1 363 1 view .LVU507
 2062 0594 1F91      		pop r17
 2063               	.LVL278:
 363:../../tmk_core/common/action.c **** 
 2064               		.loc 1 363 1 view .LVU508
 2065 0596 0F91      		pop r16
 2066               	.LVL279:
 363:../../tmk_core/common/action.c **** 
 2067               		.loc 1 363 1 view .LVU509
 2068 0598 FF90      		pop r15
 2069               	.LVL280:
 363:../../tmk_core/common/action.c **** 
 2070               		.loc 1 363 1 view .LVU510
 2071 059a EF90      		pop r14
 2072               	.LVL281:
 363:../../tmk_core/common/action.c **** 
 2073               		.loc 1 363 1 view .LVU511
 2074 059c DF90      		pop r13
 2075               	.LVL282:
 363:../../tmk_core/common/action.c **** 
 2076               		.loc 1 363 1 view .LVU512
 2077 059e CF90      		pop r12
 2078               	.LVL283:
 363:../../tmk_core/common/action.c **** 
 2079               		.loc 1 363 1 view .LVU513
 2080 05a0 BF90      		pop r11
 2081               	.LVL284:
 363:../../tmk_core/common/action.c **** 
 2082               		.loc 1 363 1 view .LVU514
 2083 05a2 AF90      		pop r10
 2084               	.LVL285:
 289:../../tmk_core/common/action.c ****                     break;
 2085               		.loc 1 289 37 view .LVU515
 2086 05a4 0C94 0000 		jmp layer_clear
 2087               	.LVL286:
 2088               	.L118:
 302:../../tmk_core/common/action.c ****                             dprint("KEYMAP_TAP_KEY: Tap: unregister_code\n");
 2089               		.loc 1 302 25 is_stmt 1 view .LVU516
 302:../../tmk_core/common/action.c ****                             dprint("KEYMAP_TAP_KEY: Tap: unregister_code\n");
 2090               		.loc 1 302 28 is_stmt 0 view .LVU517
 2091 05a8 E110      		cpse r14,__zero_reg__
 2092 05aa 00C0      		rjmp .L162
 306:../../tmk_core/common/action.c ****                             layer_off(action.layer_tap.val);
 2093               		.loc 1 306 29 is_stmt 1 view .LVU518
 307:../../tmk_core/common/action.c ****                         }
 2094               		.loc 1 307 29 view .LVU519
 2095 05ac 812F      		mov r24,r17
 2096 05ae 8F71      		andi r24,lo8(31)
 2097 05b0 00C0      		rjmp .L161
 2098               	.LVL287:
 2099               	.L121:
 318:../../tmk_core/common/action.c ****             break;
 2100               		.loc 1 318 13 view .LVU520
 318:../../tmk_core/common/action.c ****             break;
 2101               		.loc 1 318 83 is_stmt 0 view .LVU521
 2102 05b2 412F      		mov r20,r17
 2103 05b4 4F70      		andi r20,lo8(15)
 2104               	.LVL288:
 318:../../tmk_core/common/action.c ****             break;
 2105               		.loc 1 318 13 view .LVU522
 2106 05b6 602F      		mov r22,r16
 2107 05b8 C501      		movw r24,r10
 2108 05ba 0E94 0000 		call action_get_macro
 2109               	.LVL289:
 2110               	/* epilogue start */
 363:../../tmk_core/common/action.c **** 
 2111               		.loc 1 363 1 view .LVU523
 2112 05be 0F90      		pop __tmp_reg__
 2113 05c0 0F90      		pop __tmp_reg__
 2114 05c2 0F90      		pop __tmp_reg__
 2115 05c4 0F90      		pop __tmp_reg__
 2116 05c6 0F90      		pop __tmp_reg__
 2117 05c8 DF91      		pop r29
 2118 05ca CF91      		pop r28
 2119               	.LVL290:
 363:../../tmk_core/common/action.c **** 
 2120               		.loc 1 363 1 view .LVU524
 2121 05cc 1F91      		pop r17
 2122               	.LVL291:
 363:../../tmk_core/common/action.c **** 
 2123               		.loc 1 363 1 view .LVU525
 2124 05ce 0F91      		pop r16
 2125               	.LVL292:
 363:../../tmk_core/common/action.c **** 
 2126               		.loc 1 363 1 view .LVU526
 2127 05d0 FF90      		pop r15
 2128               	.LVL293:
 363:../../tmk_core/common/action.c **** 
 2129               		.loc 1 363 1 view .LVU527
 2130 05d2 EF90      		pop r14
 2131               	.LVL294:
 363:../../tmk_core/common/action.c **** 
 2132               		.loc 1 363 1 view .LVU528
 2133 05d4 DF90      		pop r13
 2134               	.LVL295:
 363:../../tmk_core/common/action.c **** 
 2135               		.loc 1 363 1 view .LVU529
 2136 05d6 CF90      		pop r12
 2137               	.LVL296:
 363:../../tmk_core/common/action.c **** 
 2138               		.loc 1 363 1 view .LVU530
 2139 05d8 BF90      		pop r11
 2140               	.LVL297:
 363:../../tmk_core/common/action.c **** 
 2141               		.loc 1 363 1 view .LVU531
 2142 05da AF90      		pop r10
 2143               	.LVL298:
 318:../../tmk_core/common/action.c ****             break;
 2144               		.loc 1 318 13 view .LVU532
 2145 05dc 0C94 0000 		jmp action_macro_play
 2146               	.LVL299:
 2147               	.L122:
 345:../../tmk_core/common/action.c ****                 case COMMAND_BOOTLOADER:
 2148               		.loc 1 345 13 is_stmt 1 view .LVU533
 345:../../tmk_core/common/action.c ****                 case COMMAND_BOOTLOADER:
 2149               		.loc 1 345 13 is_stmt 0 view .LVU534
 2150 05e0 0111      		cpse r16,__zero_reg__
 2151 05e2 00C0      		rjmp .L56
 347:../../tmk_core/common/action.c ****                         clear_keyboard();
 2152               		.loc 1 347 21 is_stmt 1 view .LVU535
 347:../../tmk_core/common/action.c ****                         clear_keyboard();
 2153               		.loc 1 347 24 is_stmt 0 view .LVU536
 2154 05e4 FF20      		tst r15
 2155 05e6 01F4      		brne .+2
 2156 05e8 00C0      		rjmp .L56
 348:../../tmk_core/common/action.c ****                         wait_ms(50);
 2157               		.loc 1 348 25 is_stmt 1 view .LVU537
 2158 05ea 0E94 0000 		call clear_keyboard
 2159               	.LVL300:
 349:../../tmk_core/common/action.c ****                         bootloader_jump();
 2160               		.loc 1 349 25 view .LVU538
 2161               	.LBB39:
 2162               	.LBI39:
 2163               		.file 3 "/usr/avr/include/util/delay.h"
   1:/usr/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/avr/include/util/delay.h **** 
   6:/usr/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/avr/include/util/delay.h **** 
   9:/usr/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/avr/include/util/delay.h **** 
  12:/usr/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/avr/include/util/delay.h ****      distribution.
  16:/usr/avr/include/util/delay.h **** 
  17:/usr/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/avr/include/util/delay.h **** 
  21:/usr/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/avr/include/util/delay.h **** 
  33:/usr/avr/include/util/delay.h **** /* $Id: delay.h.in 2506 2016-02-08 10:05:45Z joerg_wunsch $ */
  34:/usr/avr/include/util/delay.h **** 
  35:/usr/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/avr/include/util/delay.h **** 
  38:/usr/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/usr/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/usr/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/usr/avr/include/util/delay.h **** #  endif
  42:/usr/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/usr/avr/include/util/delay.h **** 
  44:/usr/avr/include/util/delay.h **** #include <inttypes.h>
  45:/usr/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/usr/avr/include/util/delay.h **** #include <math.h>
  47:/usr/avr/include/util/delay.h **** 
  48:/usr/avr/include/util/delay.h **** /** \file */
  49:/usr/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/usr/avr/include/util/delay.h ****     \code
  51:/usr/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/usr/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/usr/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/usr/avr/include/util/delay.h ****     \endcode
  55:/usr/avr/include/util/delay.h **** 
  56:/usr/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/usr/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/usr/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/usr/avr/include/util/delay.h ****     used.
  60:/usr/avr/include/util/delay.h **** 
  61:/usr/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/usr/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/usr/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/usr/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/usr/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/usr/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/usr/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/usr/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/usr/avr/include/util/delay.h **** 
  70:/usr/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/usr/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/usr/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/usr/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/usr/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/usr/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/usr/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/usr/avr/include/util/delay.h ****     routines linked into the application.
  78:/usr/avr/include/util/delay.h **** 
  79:/usr/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/usr/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/usr/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/usr/avr/include/util/delay.h **** 
  83:/usr/avr/include/util/delay.h **** */
  84:/usr/avr/include/util/delay.h **** 
  85:/usr/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/usr/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/usr/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/usr/avr/include/util/delay.h **** #endif
  89:/usr/avr/include/util/delay.h **** 
  90:/usr/avr/include/util/delay.h **** #ifndef F_CPU
  91:/usr/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/usr/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/usr/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/usr/avr/include/util/delay.h ****     \def F_CPU
  95:/usr/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/usr/avr/include/util/delay.h **** 
  97:/usr/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/usr/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/usr/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/usr/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/usr/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/usr/avr/include/util/delay.h **** 
 103:/usr/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/usr/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/usr/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/usr/avr/include/util/delay.h ****     integer value.
 107:/usr/avr/include/util/delay.h ****  */
 108:/usr/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/usr/avr/include/util/delay.h **** #endif
 110:/usr/avr/include/util/delay.h **** 
 111:/usr/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/usr/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/usr/avr/include/util/delay.h **** #endif
 114:/usr/avr/include/util/delay.h **** 
 115:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/usr/avr/include/util/delay.h **** #  include <math.h>
 119:/usr/avr/include/util/delay.h **** #endif
 120:/usr/avr/include/util/delay.h **** 
 121:/usr/avr/include/util/delay.h **** /**
 122:/usr/avr/include/util/delay.h ****    \ingroup util_delay
 123:/usr/avr/include/util/delay.h **** 
 124:/usr/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/usr/avr/include/util/delay.h **** 
 126:/usr/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/usr/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/usr/avr/include/util/delay.h **** 
 129:/usr/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/usr/avr/include/util/delay.h **** 
 131:/usr/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/usr/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/usr/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/usr/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/usr/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/usr/avr/include/util/delay.h **** 
 137:/usr/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/usr/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/usr/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/usr/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/usr/avr/include/util/delay.h **** 
 142:/usr/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/usr/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/usr/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/usr/avr/include/util/delay.h ****    microseconds of delay.
 146:/usr/avr/include/util/delay.h **** 
 147:/usr/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/usr/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/usr/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/usr/avr/include/util/delay.h ****    respectively.
 151:/usr/avr/include/util/delay.h **** 
 152:/usr/avr/include/util/delay.h ****    \note
 153:/usr/avr/include/util/delay.h **** 
 154:/usr/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/usr/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/usr/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/usr/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/usr/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/usr/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/usr/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/usr/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/usr/avr/include/util/delay.h ****    not available to the compiler then.
 163:/usr/avr/include/util/delay.h **** 
 164:/usr/avr/include/util/delay.h ****  */
 165:/usr/avr/include/util/delay.h **** void
 166:/usr/avr/include/util/delay.h **** _delay_ms(double __ms)
 2164               		.loc 3 166 1 view .LVU539
 2165               	.LBB40:
 167:/usr/avr/include/util/delay.h **** {
 168:/usr/avr/include/util/delay.h **** 	double __tmp ;
 2166               		.loc 3 168 2 view .LVU540
 169:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/usr/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 2167               		.loc 3 172 2 view .LVU541
 173:/usr/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 2168               		.loc 3 173 2 view .LVU542
 174:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 2169               		.loc 3 174 2 view .LVU543
 175:/usr/avr/include/util/delay.h **** 
 176:/usr/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/usr/avr/include/util/delay.h **** 
 179:/usr/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/usr/avr/include/util/delay.h **** 
 182:/usr/avr/include/util/delay.h **** 	#else
 183:/usr/avr/include/util/delay.h **** 		//round up by default
 184:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 2170               		.loc 3 184 3 view .LVU544
 185:/usr/avr/include/util/delay.h **** 	#endif
 186:/usr/avr/include/util/delay.h **** 
 187:/usr/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 2171               		.loc 3 187 2 view .LVU545
 2172 05ee 8FEF      		ldi r24,lo8(159999)
 2173 05f0 90E7      		ldi r25,hi8(159999)
 2174 05f2 E2E0      		ldi r30,hlo8(159999)
 2175 05f4 8150      	1:	subi r24,1
 2176 05f6 9040      		sbci r25,0
 2177 05f8 E040      		sbci r30,0
 2178 05fa 01F4      		brne 1b
 2179 05fc 00C0      		rjmp .
 2180 05fe 0000      		nop
 2181               	.LVL301:
 2182               		.loc 3 187 2 is_stmt 0 view .LVU546
 2183               	.LBE40:
 2184               	.LBE39:
 350:../../tmk_core/common/action.c ****                     }
 2185               		.loc 1 350 25 is_stmt 1 view .LVU547
 2186               	/* epilogue start */
 363:../../tmk_core/common/action.c **** 
 2187               		.loc 1 363 1 is_stmt 0 view .LVU548
 2188 0600 0F90      		pop __tmp_reg__
 2189 0602 0F90      		pop __tmp_reg__
 2190 0604 0F90      		pop __tmp_reg__
 2191 0606 0F90      		pop __tmp_reg__
 2192 0608 0F90      		pop __tmp_reg__
 2193 060a DF91      		pop r29
 2194 060c CF91      		pop r28
 2195               	.LVL302:
 363:../../tmk_core/common/action.c **** 
 2196               		.loc 1 363 1 view .LVU549
 2197 060e 1F91      		pop r17
 2198               	.LVL303:
 363:../../tmk_core/common/action.c **** 
 2199               		.loc 1 363 1 view .LVU550
 2200 0610 0F91      		pop r16
 2201               	.LVL304:
 363:../../tmk_core/common/action.c **** 
 2202               		.loc 1 363 1 view .LVU551
 2203 0612 FF90      		pop r15
 2204               	.LVL305:
 363:../../tmk_core/common/action.c **** 
 2205               		.loc 1 363 1 view .LVU552
 2206 0614 EF90      		pop r14
 2207               	.LVL306:
 363:../../tmk_core/common/action.c **** 
 2208               		.loc 1 363 1 view .LVU553
 2209 0616 DF90      		pop r13
 2210               	.LVL307:
 363:../../tmk_core/common/action.c **** 
 2211               		.loc 1 363 1 view .LVU554
 2212 0618 CF90      		pop r12
 2213               	.LVL308:
 363:../../tmk_core/common/action.c **** 
 2214               		.loc 1 363 1 view .LVU555
 2215 061a BF90      		pop r11
 2216               	.LVL309:
 363:../../tmk_core/common/action.c **** 
 2217               		.loc 1 363 1 view .LVU556
 2218 061c AF90      		pop r10
 2219               	.LVL310:
 350:../../tmk_core/common/action.c ****                     }
 2220               		.loc 1 350 25 view .LVU557
 2221 061e 0C94 0000 		jmp bootloader_jump
 2222               	.LVL311:
 2223               	.L123:
 357:../../tmk_core/common/action.c ****             break;
 2224               		.loc 1 357 13 is_stmt 1 view .LVU558
 357:../../tmk_core/common/action.c ****             break;
 2225               		.loc 1 357 64 is_stmt 0 view .LVU559
 2226 0622 412F      		mov r20,r17
 2227 0624 4F70      		andi r20,lo8(15)
 2228               	.LVL312:
 357:../../tmk_core/common/action.c ****             break;
 2229               		.loc 1 357 13 view .LVU560
 2230 0626 602F      		mov r22,r16
 2231 0628 C501      		movw r24,r10
 2232               	/* epilogue start */
 363:../../tmk_core/common/action.c **** 
 2233               		.loc 1 363 1 view .LVU561
 2234 062a 0F90      		pop __tmp_reg__
 2235 062c 0F90      		pop __tmp_reg__
 2236 062e 0F90      		pop __tmp_reg__
 2237 0630 0F90      		pop __tmp_reg__
 2238 0632 0F90      		pop __tmp_reg__
 2239 0634 DF91      		pop r29
 2240 0636 CF91      		pop r28
 2241               	.LVL313:
 363:../../tmk_core/common/action.c **** 
 2242               		.loc 1 363 1 view .LVU562
 2243 0638 1F91      		pop r17
 2244               	.LVL314:
 363:../../tmk_core/common/action.c **** 
 2245               		.loc 1 363 1 view .LVU563
 2246 063a 0F91      		pop r16
 2247               	.LVL315:
 363:../../tmk_core/common/action.c **** 
 2248               		.loc 1 363 1 view .LVU564
 2249 063c FF90      		pop r15
 2250               	.LVL316:
 363:../../tmk_core/common/action.c **** 
 2251               		.loc 1 363 1 view .LVU565
 2252 063e EF90      		pop r14
 2253               	.LVL317:
 363:../../tmk_core/common/action.c **** 
 2254               		.loc 1 363 1 view .LVU566
 2255 0640 DF90      		pop r13
 2256               	.LVL318:
 363:../../tmk_core/common/action.c **** 
 2257               		.loc 1 363 1 view .LVU567
 2258 0642 CF90      		pop r12
 2259               	.LVL319:
 363:../../tmk_core/common/action.c **** 
 2260               		.loc 1 363 1 view .LVU568
 2261 0644 BF90      		pop r11
 2262               	.LVL320:
 363:../../tmk_core/common/action.c **** 
 2263               		.loc 1 363 1 view .LVU569
 2264 0646 AF90      		pop r10
 2265               	.LVL321:
 357:../../tmk_core/common/action.c ****             break;
 2266               		.loc 1 357 13 view .LVU570
 2267 0648 0C94 0000 		jmp action_function
 2268               	.LVL322:
 2269               	.L152:
  64:../../tmk_core/common/action.c **** #ifndef NO_ACTION_TAPPING
 2270               		.loc 1 64 16 view .LVU571
 2271 064c F280      		ldd r15,Z+2
  66:../../tmk_core/common/action.c **** #endif
 2272               		.loc 1 66 36 view .LVU572
 2273 064e E580      		ldd r14,Z+5
 2274 0650 E294      		swap r14
 2275 0652 2FE0      		ldi r18,lo8(15)
 2276 0654 E222      		and r14,r18
  71:../../tmk_core/common/action.c ****     dprint("ACTION: "); debug_action(action);
 2277               		.loc 1 71 5 is_stmt 1 view .LVU573
  71:../../tmk_core/common/action.c ****     dprint("ACTION: "); debug_action(action);
 2278               		.loc 1 71 23 is_stmt 0 view .LVU574
 2279 0656 4983      		std Y+1,r20
 2280 0658 5A83      		std Y+2,r21
 2281 065a FB82      		std Y+3,r15
 2282 065c 782F      		mov r23,r24
 2283 065e 9D83      		std Y+5,r25
 2284 0660 8C83      		std Y+4,r24
 2285 0662 6F2D      		mov r22,r15
 2286 0664 8D81      		ldd r24,Y+5
 2287               	.LVL323:
  71:../../tmk_core/common/action.c ****     dprint("ACTION: "); debug_action(action);
 2288               		.loc 1 71 23 view .LVU575
 2289 0666 0E94 0000 		call layer_switch_get_action
 2290               	.LVL324:
  71:../../tmk_core/common/action.c ****     dprint("ACTION: "); debug_action(action);
 2291               		.loc 1 71 23 view .LVU576
 2292 066a 8C01      		movw r16,r24
  72:../../tmk_core/common/action.c **** #ifndef NO_ACTION_LAYER
 2293               		.loc 1 72 5 is_stmt 1 view .LVU577
  72:../../tmk_core/common/action.c **** #ifndef NO_ACTION_LAYER
 2294               		.loc 1 72 25 view .LVU578
  74:../../tmk_core/common/action.c ****     dprint(" default_layer_state: "); default_layer_debug();
 2295               		.loc 1 74 5 view .LVU579
  74:../../tmk_core/common/action.c ****     dprint(" default_layer_state: "); default_layer_debug();
 2296               		.loc 1 74 31 view .LVU580
 2297 066c 0E94 0000 		call layer_debug
 2298               	.LVL325:
  75:../../tmk_core/common/action.c **** #endif
 2299               		.loc 1 75 5 view .LVU581
  75:../../tmk_core/common/action.c **** #endif
 2300               		.loc 1 75 39 view .LVU582
 2301 0670 0E94 0000 		call default_layer_debug
 2302               	.LVL326:
  77:../../tmk_core/common/action.c **** 
 2303               		.loc 1 77 5 view .LVU583
  79:../../tmk_core/common/action.c ****         /* Key and Mods */
 2304               		.loc 1 79 5 view .LVU584
  79:../../tmk_core/common/action.c ****         /* Key and Mods */
 2305               		.loc 1 79 24 is_stmt 0 view .LVU585
 2306 0674 E12F      		mov r30,r17
 2307 0676 E295      		swap r30
 2308 0678 EF70      		andi r30,lo8(15)
  79:../../tmk_core/common/action.c ****         /* Key and Mods */
 2309               		.loc 1 79 5 view .LVU586
 2310 067a F0E0      		ldi r31,0
 2311 067c E050      		subi r30,lo8(-(gs(.L125)))
 2312 067e F040      		sbci r31,hi8(-(gs(.L125)))
 2313 0680 0C94 0000 		jmp __tablejump2__
 2314               		.section	.jumptables.gcc.process_action,"a",@progbits
 2315               		.p2align	1
 2316               	.L125:
 2317 0000 0000      		.word gs(.L59)
 2318 0002 0000      		.word gs(.L59)
 2319 0004 0000      		.word gs(.L65)
 2320 0006 0000      		.word gs(.L65)
 2321 0008 0000      		.word gs(.L81)
 2322 000a 0000      		.word gs(.L86)
 2323 000c 0000      		.word gs(.L56)
 2324 000e 0000      		.word gs(.L56)
 2325 0010 0000      		.word gs(.L88)
 2326 0012 0000      		.word gs(.L56)
 2327 0014 0000      		.word gs(.L100)
 2328 0016 0000      		.word gs(.L100)
 2329 0018 0000      		.word gs(.L121)
 2330 001a 0000      		.word gs(.L56)
 2331 001c 0000      		.word gs(.L122)
 2332 001e 0000      		.word gs(.L123)
 2333               		.section	.text.process_action
 2334               		.cfi_endproc
 2335               	.LFE104:
 2337               		.section	.text.is_tap_key,"ax",@progbits
 2338               	.global	is_tap_key
 2340               	is_tap_key:
 2341               	.LFB112:
 547:../../tmk_core/common/action.c **** #endif
 548:../../tmk_core/common/action.c **** }
 549:../../tmk_core/common/action.c **** 
 550:../../tmk_core/common/action.c **** bool is_tap_key(keyevent_t event)
 551:../../tmk_core/common/action.c **** {
 2342               		.loc 1 551 1 is_stmt 1 view -0
 2343               		.cfi_startproc
 2344 0000 CF93      		push r28
 2345               	.LCFI18:
 2346               		.cfi_def_cfa_offset 3
 2347               		.cfi_offset 28, -2
 2348 0002 DF93      		push r29
 2349               	.LCFI19:
 2350               		.cfi_def_cfa_offset 4
 2351               		.cfi_offset 29, -3
 2352 0004 00D0      		rcall .
 2353 0006 00D0      		rcall .
 2354 0008 0F92      		push __tmp_reg__
 2355               	.LCFI20:
 2356               		.cfi_def_cfa_offset 9
 2357 000a CDB7      		in r28,__SP_L__
 2358 000c DEB7      		in r29,__SP_H__
 2359               	.LCFI21:
 2360               		.cfi_def_cfa_register 28
 2361               	/* prologue: function */
 2362               	/* frame size = 5 */
 2363               	/* stack size = 7 */
 2364               	.L__stack_usage = 7
 2365 000e 6B83      		std Y+3,r22
 2366 0010 7C83      		std Y+4,r23
 2367 0012 8D83      		std Y+5,r24
 552:../../tmk_core/common/action.c ****     if (IS_NOEVENT(event)) { return false; }
 2368               		.loc 1 552 5 view .LVU588
 2369               	.LBB43:
 2370               	.LBI43:
 2371               		.loc 2 49 20 view .LVU589
 2372               	.LBB44:
 2373               		.loc 2 49 51 view .LVU590
 2374               		.loc 2 49 74 is_stmt 0 view .LVU591
 2375 0014 8C81      		ldd r24,Y+4
 2376 0016 9D81      		ldd r25,Y+5
 2377 0018 892B      		or r24,r25
 2378 001a 01F0      		breq .L194
 2379 001c 842F      		mov r24,r20
 2380 001e 8523      		and r24,r21
 2381 0020 8F3F      		cpi r24,lo8(-1)
 2382 0022 01F4      		brne .L192
 2383               	.LVL327:
 2384               	.L194:
 2385               		.loc 2 49 74 view .LVU592
 2386               	.LBE44:
 2387               	.LBE43:
 553:../../tmk_core/common/action.c **** 
 554:../../tmk_core/common/action.c ****     action_t action = layer_switch_get_action(event);
 555:../../tmk_core/common/action.c **** 
 556:../../tmk_core/common/action.c ****     switch (action.kind.id) {
 557:../../tmk_core/common/action.c ****         case ACT_LMODS_TAP:
 558:../../tmk_core/common/action.c ****         case ACT_RMODS_TAP:
 559:../../tmk_core/common/action.c ****             switch (action.key.code) {
 560:../../tmk_core/common/action.c ****                 case MODS_ONESHOT:
 561:../../tmk_core/common/action.c ****                 case MODS_TAP_TOGGLE:
 562:../../tmk_core/common/action.c ****                 case KC_A ... KC_EXSEL:                 // tap key
 563:../../tmk_core/common/action.c ****                 case KC_LCTRL ... KC_RGUI:              // tap key
 564:../../tmk_core/common/action.c ****                     return true;
 565:../../tmk_core/common/action.c ****             }
 566:../../tmk_core/common/action.c ****         case ACT_LAYER_TAP:
 567:../../tmk_core/common/action.c ****         case ACT_LAYER_TAP_EXT:
 568:../../tmk_core/common/action.c ****             switch (action.layer_tap.code) {
 569:../../tmk_core/common/action.c ****                 case 0xc0 ... 0xdf:         // with modifiers
 570:../../tmk_core/common/action.c ****                     return false;
 2388               		.loc 1 570 28 view .LVU593
 2389 0024 80E0      		ldi r24,0
 2390               	.LVL328:
 2391               		.loc 1 570 28 view .LVU594
 2392 0026 00C0      		rjmp .L169
 2393               	.LVL329:
 2394               	.L172:
 2395               		.loc 1 570 28 view .LVU595
 2396 0028 90E2      		ldi r25,lo8(32)
 2397               	.LVL330:
 2398               		.loc 1 570 28 view .LVU596
 2399 002a 980F      		add r25,r24
 2400 002c 9830      		cpi r25,lo8(8)
 2401 002e 00F0      		brlo .L184
 2402               	.LVL331:
 2403               	.L173:
 568:../../tmk_core/common/action.c ****                 case 0xc0 ... 0xdf:         // with modifiers
 2404               		.loc 1 568 13 is_stmt 1 view .LVU597
 2405 0030 883E      		cpi r24,lo8(-24)
 2406 0032 00F4      		brsh .L174
 2407 0034 803E      		cpi r24,lo8(-32)
 2408 0036 00F4      		brsh .L184
 2409 0038 8450      		subi r24,lo8(-(-4))
 2410               	.LVL332:
 568:../../tmk_core/common/action.c ****                 case 0xc0 ... 0xdf:         // with modifiers
 2411               		.loc 1 568 13 is_stmt 0 view .LVU598
 2412 003a 813A      		cpi r24,lo8(-95)
 2413 003c 00F4      		brsh .L194
 2414 003e 00C0      		rjmp .L184
 2415               	.LVL333:
 2416               	.L174:
 568:../../tmk_core/common/action.c ****                 case 0xc0 ... 0xdf:         // with modifiers
 2417               		.loc 1 568 13 view .LVU599
 2418 0040 803F      		cpi r24,lo8(-16)
 2419 0042 01F4      		brne .L194
 2420 0044 00C0      		rjmp .L184
 2421               	.LVL334:
 2422               	.L192:
 554:../../tmk_core/common/action.c **** 
 2423               		.loc 1 554 5 is_stmt 1 view .LVU600
 554:../../tmk_core/common/action.c **** 
 2424               		.loc 1 554 23 is_stmt 0 view .LVU601
 2425 0046 6B81      		ldd r22,Y+3
 2426 0048 7C81      		ldd r23,Y+4
 2427 004a 8D81      		ldd r24,Y+5
 2428 004c 0E94 0000 		call layer_switch_get_action
 2429               	.LVL335:
 556:../../tmk_core/common/action.c ****         case ACT_LMODS_TAP:
 2430               		.loc 1 556 5 is_stmt 1 view .LVU602
 556:../../tmk_core/common/action.c ****         case ACT_LMODS_TAP:
 2431               		.loc 1 556 24 is_stmt 0 view .LVU603
 2432 0050 292F      		mov r18,r25
 2433 0052 2295      		swap r18
 2434 0054 2F70      		andi r18,lo8(15)
 556:../../tmk_core/common/action.c ****         case ACT_LMODS_TAP:
 2435               		.loc 1 556 5 view .LVU604
 2436 0056 2C30      		cpi r18,lo8(12)
 2437 0058 00F4      		brsh .L175
 2438 005a 2A30      		cpi r18,lo8(10)
 2439 005c 00F4      		brsh .L173
 2440 005e 225F      		subi r18,lo8(-(14))
 2441 0060 2F70      		andi r18,lo8(15)
 2442 0062 2230      		cpi r18,lo8(2)
 2443 0064 00F4      		brsh .L194
 559:../../tmk_core/common/action.c ****                 case MODS_ONESHOT:
 2444               		.loc 1 559 13 is_stmt 1 view .LVU605
 2445 0066 853A      		cpi r24,lo8(-91)
 2446 0068 00F4      		brsh .L172
 2447 006a 8430      		cpi r24,lo8(4)
 2448 006c 00F4      		brsh .L184
 2449 006e 8230      		cpi r24,lo8(2)
 2450 0070 00F4      		brsh .L173
 2451               	.LVL336:
 2452               	.L184:
 571:../../tmk_core/common/action.c ****                 case KC_A ... KC_EXSEL:     // tap key
 572:../../tmk_core/common/action.c ****                 case KC_LCTRL ... KC_RGUI:  // tap key
 573:../../tmk_core/common/action.c ****                 case OP_TAP_TOGGLE:
 574:../../tmk_core/common/action.c ****                     return true;
 2453               		.loc 1 574 28 is_stmt 0 view .LVU606
 2454 0072 81E0      		ldi r24,lo8(1)
 2455               	.LVL337:
 2456               		.loc 1 574 28 view .LVU607
 2457 0074 00C0      		rjmp .L169
 2458               	.LVL338:
 2459               	.L175:
 556:../../tmk_core/common/action.c ****         case ACT_LMODS_TAP:
 2460               		.loc 1 556 5 view .LVU608
 2461 0076 2C30      		cpi r18,lo8(12)
 2462 0078 01F0      		breq .L177
 2463 007a 2F30      		cpi r18,lo8(15)
 2464 007c 01F4      		brne .L194
 2465               	.L177:
 575:../../tmk_core/common/action.c ****             }
 576:../../tmk_core/common/action.c ****             return false;
 577:../../tmk_core/common/action.c ****         case ACT_MACRO:
 578:../../tmk_core/common/action.c ****         case ACT_FUNCTION:
 579:../../tmk_core/common/action.c ****             if (action.func.opt & FUNC_TAP) { return true; }
 2466               		.loc 1 579 13 is_stmt 1 view .LVU609
 2467               		.loc 1 579 16 is_stmt 0 view .LVU610
 2468 007e 93FB      		bst r25,3
 2469 0080 8827      		clr r24
 2470 0082 80F9      		bld r24,0
 2471               	.LVL339:
 2472               	.L169:
 2473               	/* epilogue start */
 580:../../tmk_core/common/action.c ****             return false;
 581:../../tmk_core/common/action.c ****     }
 582:../../tmk_core/common/action.c ****     return false;
 583:../../tmk_core/common/action.c **** }
 2474               		.loc 1 583 1 view .LVU611
 2475 0084 0F90      		pop __tmp_reg__
 2476 0086 0F90      		pop __tmp_reg__
 2477 0088 0F90      		pop __tmp_reg__
 2478 008a 0F90      		pop __tmp_reg__
 2479 008c 0F90      		pop __tmp_reg__
 2480 008e DF91      		pop r29
 2481 0090 CF91      		pop r28
 2482 0092 0895      		ret
 2483               		.cfi_endproc
 2484               	.LFE112:
 2486               		.section	.text.debug_event,"ax",@progbits
 2487               	.global	debug_event
 2489               	debug_event:
 2490               	.LFB113:
 584:../../tmk_core/common/action.c **** 
 585:../../tmk_core/common/action.c **** 
 586:../../tmk_core/common/action.c **** /*
 587:../../tmk_core/common/action.c ****  * debug print
 588:../../tmk_core/common/action.c ****  */
 589:../../tmk_core/common/action.c **** void debug_event(keyevent_t event)
 590:../../tmk_core/common/action.c **** {
 2491               		.loc 1 590 1 is_stmt 1 view -0
 2492               		.cfi_startproc
 2493 0000 CF93      		push r28
 2494               	.LCFI22:
 2495               		.cfi_def_cfa_offset 3
 2496               		.cfi_offset 28, -2
 2497 0002 DF93      		push r29
 2498               	.LCFI23:
 2499               		.cfi_def_cfa_offset 4
 2500               		.cfi_offset 29, -3
 2501 0004 00D0      		rcall .
 2502 0006 00D0      		rcall .
 2503 0008 0F92      		push __tmp_reg__
 2504               	.LCFI24:
 2505               		.cfi_def_cfa_offset 9
 2506 000a CDB7      		in r28,__SP_L__
 2507 000c DEB7      		in r29,__SP_H__
 2508               	.LCFI25:
 2509               		.cfi_def_cfa_register 28
 2510               	/* prologue: function */
 2511               	/* frame size = 5 */
 2512               	/* stack size = 7 */
 2513               	.L__stack_usage = 7
 591:../../tmk_core/common/action.c ****     dprintf("%04X%c(%u)", (event.key.row<<8 | event.key.col), (event.pressed ? 'd' : 'u'), event.ti
 2514               		.loc 1 591 5 view .LVU613
 2515               	/* epilogue start */
 592:../../tmk_core/common/action.c **** }
 2516               		.loc 1 592 1 is_stmt 0 view .LVU614
 2517 000e 0F90      		pop __tmp_reg__
 2518 0010 0F90      		pop __tmp_reg__
 2519 0012 0F90      		pop __tmp_reg__
 2520 0014 0F90      		pop __tmp_reg__
 2521 0016 0F90      		pop __tmp_reg__
 2522 0018 DF91      		pop r29
 2523 001a CF91      		pop r28
 2524 001c 0895      		ret
 2525               		.cfi_endproc
 2526               	.LFE113:
 2528               		.section	.text.debug_record,"ax",@progbits
 2529               	.global	debug_record
 2531               	debug_record:
 2532               	.LFB114:
 593:../../tmk_core/common/action.c **** 
 594:../../tmk_core/common/action.c **** void debug_record(keyrecord_t record)
 595:../../tmk_core/common/action.c **** {
 2533               		.loc 1 595 1 is_stmt 1 view -0
 2534               		.cfi_startproc
 2535 0000 CF93      		push r28
 2536               	.LCFI26:
 2537               		.cfi_def_cfa_offset 3
 2538               		.cfi_offset 28, -2
 2539 0002 DF93      		push r29
 2540               	.LCFI27:
 2541               		.cfi_def_cfa_offset 4
 2542               		.cfi_offset 29, -3
 2543 0004 00D0      		rcall .
 2544 0006 00D0      		rcall .
 2545 0008 00D0      		rcall .
 2546               	.LCFI28:
 2547               		.cfi_def_cfa_offset 10
 2548 000a CDB7      		in r28,__SP_L__
 2549 000c DEB7      		in r29,__SP_H__
 2550               	.LCFI29:
 2551               		.cfi_def_cfa_register 28
 2552               	/* prologue: function */
 2553               	/* frame size = 6 */
 2554               	/* stack size = 8 */
 2555               	.L__stack_usage = 8
 596:../../tmk_core/common/action.c ****     debug_event(record.event);
 2556               		.loc 1 596 5 view .LVU616
 597:../../tmk_core/common/action.c **** #ifndef NO_ACTION_TAPPING
 598:../../tmk_core/common/action.c ****     dprintf(":%u%c", record.tap.count, (record.tap.interrupted ? '-' : ' '));
 2557               		.loc 1 598 5 view .LVU617
 2558               	/* epilogue start */
 599:../../tmk_core/common/action.c **** #endif
 600:../../tmk_core/common/action.c **** }
 2559               		.loc 1 600 1 is_stmt 0 view .LVU618
 2560 000e 2696      		adiw r28,6
 2561 0010 0FB6      		in __tmp_reg__,__SREG__
 2562 0012 F894      		cli
 2563 0014 DEBF      		out __SP_H__,r29
 2564 0016 0FBE      		out __SREG__,__tmp_reg__
 2565 0018 CDBF      		out __SP_L__,r28
 2566 001a DF91      		pop r29
 2567 001c CF91      		pop r28
 2568 001e 0895      		ret
 2569               		.cfi_endproc
 2570               	.LFE114:
 2572               		.section	.text.debug_action,"ax",@progbits
 2573               	.global	debug_action
 2575               	debug_action:
 2576               	.LVL340:
 2577               	.LFB115:
 601:../../tmk_core/common/action.c **** 
 602:../../tmk_core/common/action.c **** void debug_action(action_t action)
 603:../../tmk_core/common/action.c **** {
 2578               		.loc 1 603 1 is_stmt 1 view -0
 2579               		.cfi_startproc
 2580               	/* prologue: function */
 2581               	/* frame size = 0 */
 2582               	/* stack size = 0 */
 2583               	.L__stack_usage = 0
 604:../../tmk_core/common/action.c ****     switch (action.kind.id) {
 2584               		.loc 1 604 5 view .LVU620
 605:../../tmk_core/common/action.c ****         case ACT_LMODS:             dprint("ACT_LMODS");             break;
 606:../../tmk_core/common/action.c ****         case ACT_RMODS:             dprint("ACT_RMODS");             break;
 607:../../tmk_core/common/action.c ****         case ACT_LMODS_TAP:         dprint("ACT_LMODS_TAP");         break;
 608:../../tmk_core/common/action.c ****         case ACT_RMODS_TAP:         dprint("ACT_RMODS_TAP");         break;
 609:../../tmk_core/common/action.c ****         case ACT_USAGE:             dprint("ACT_USAGE");             break;
 610:../../tmk_core/common/action.c ****         case ACT_MOUSEKEY:          dprint("ACT_MOUSEKEY");          break;
 611:../../tmk_core/common/action.c ****         case ACT_LAYER:             dprint("ACT_LAYER");             break;
 612:../../tmk_core/common/action.c ****         case ACT_LAYER_TAP:         dprint("ACT_LAYER_TAP");         break;
 613:../../tmk_core/common/action.c ****         case ACT_LAYER_TAP_EXT:     dprint("ACT_LAYER_TAP_EXT");     break;
 614:../../tmk_core/common/action.c ****         case ACT_MACRO:             dprint("ACT_MACRO");             break;
 615:../../tmk_core/common/action.c ****         case ACT_COMMAND:           dprint("ACT_COMMAND");           break;
 616:../../tmk_core/common/action.c ****         case ACT_FUNCTION:          dprint("ACT_FUNCTION");          break;
 617:../../tmk_core/common/action.c ****         default:                    dprint("UNKNOWN");               break;
 618:../../tmk_core/common/action.c ****     }
 619:../../tmk_core/common/action.c ****     dprintf("[%X:%02X]", action.kind.param>>8, action.kind.param&0xff);
 2585               		.loc 1 619 5 view .LVU621
 2586               	/* epilogue start */
 620:../../tmk_core/common/action.c **** }
 2587               		.loc 1 620 1 is_stmt 0 view .LVU622
 2588 0000 0895      		ret
 2589               		.cfi_endproc
 2590               	.LFE115:
 2592               		.text
 2593               	.Letext0:
 2594               		.file 4 "/usr/avr/include/stdint.h"
 2595               		.file 5 "../../tmk_core/common/keycode.h"
 2596               		.file 6 "../../tmk_core/protocol/lufa/lufa-abcminiuser/LUFA/Drivers/USB/Core/AVR8/../StdRequestTyp
 2597               		.file 7 "../../tmk_core/protocol/lufa/lufa-abcminiuser/LUFA/Drivers/USB/Core/AVR8/../DeviceStandar
 2598               		.file 8 "../../tmk_core/protocol/lufa/lufa-abcminiuser/LUFA/Drivers/USB/Core/USBTask.h"
 2599               		.file 9 "../../tmk_core/protocol/lufa/lufa-abcminiuser/LUFA/Drivers/USB/Core/HostStandardReq.h"
 2600               		.file 10 "/usr/avr/include/stdio.h"
 2601               		.file 11 "../../tmk_core/common/report.h"
 2602               		.file 12 "../../tmk_core/common/host.h"
 2603               		.file 13 "../../tmk_core/common/mousekey.h"
 2604               		.file 14 "../../tmk_core/common/command.h"
 2605               		.file 15 "../../tmk_core/common/action_code.h"
 2606               		.file 16 "../../tmk_core/common/action.h"
 2607               		.file 17 "../../tmk_core/common/action_layer.h"
 2608               		.file 18 "../../tmk_core/common/action_util.h"
 2609               		.file 19 "../../tmk_core/common/avr/xprintf.h"
 2610               		.file 20 "../../tmk_core/common/debug.h"
 2611               		.file 21 "../../tmk_core/common/hook.h"
 2612               		.file 22 "../../tmk_core/common/action_macro.h"
 2613               		.file 23 "../../tmk_core/common/bootloader.h"
 2614               		.file 24 "../../tmk_core/common/action_tapping.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 action.c
     /tmp/ccbFFjNq.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccbFFjNq.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccbFFjNq.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccbFFjNq.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccbFFjNq.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccbFFjNq.s:13     .text.action_exec:0000000000000000 action_exec
     /tmp/ccbFFjNq.s:122    .text.register_code:0000000000000000 register_code
     /tmp/ccbFFjNq.s:364    .text.unregister_code:0000000000000000 unregister_code
     /tmp/ccbFFjNq.s:454    .text.type_code:0000000000000000 type_code
     /tmp/ccbFFjNq.s:488    .text.register_mods:0000000000000000 register_mods
     /tmp/ccbFFjNq.s:517    .text.unregister_mods:0000000000000000 unregister_mods
     /tmp/ccbFFjNq.s:546    .text.clear_keyboard_but_mods:0000000000000000 clear_keyboard_but_mods
     /tmp/ccbFFjNq.s:585    .text.clear_keyboard:0000000000000000 clear_keyboard
     /tmp/ccbFFjNq.s:605    .text.process_action:0000000000000000 process_action
     /tmp/ccbFFjNq.s:2340   .text.is_tap_key:0000000000000000 is_tap_key
     /tmp/ccbFFjNq.s:2489   .text.debug_event:0000000000000000 debug_event
     /tmp/ccbFFjNq.s:2531   .text.debug_record:0000000000000000 debug_record
     /tmp/ccbFFjNq.s:2575   .text.debug_action:0000000000000000 debug_action

UNDEFINED SYMBOLS
action_tapping_process
hook_matrix_change
command_proc
add_key
send_keyboard_report
add_mods
host_system_send
host_consumer_send
del_key
del_mods
clear_weak_mods
clear_keys
mousekey_clear
mousekey_send
clear_mods
hook_process_action
add_weak_mods
del_weak_mods
set_oneshot_mods
clear_oneshot_mods
get_mods
mousekey_on
mousekey_off
default_layer_and
default_layer_xor
default_layer_or
layer_and
layer_xor
layer_or
layer_move
layer_on
layer_off
layer_invert
layer_clear
action_get_macro
action_macro_play
bootloader_jump
action_function
layer_switch_get_action
layer_debug
default_layer_debug
__tablejump2__
