   1               		.file	"news.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.news_init,"ax",@progbits
  11               	.global	news_init
  13               	news_init:
  14               	.LFB0:
  15               		.file 1 "../../tmk_core/protocol/news.c"
   1:../../tmk_core/protocol/news.c **** /*
   2:../../tmk_core/protocol/news.c **** Copyright 2012 Jun WAKO <wakojun@gmail.com>
   3:../../tmk_core/protocol/news.c **** 
   4:../../tmk_core/protocol/news.c **** This software is licensed with a Modified BSD License.
   5:../../tmk_core/protocol/news.c **** All of this is supposed to be Free Software, Open Source, DFSG-free,
   6:../../tmk_core/protocol/news.c **** GPL-compatible, and OK to use in both free and proprietary applications.
   7:../../tmk_core/protocol/news.c **** Additions and corrections to this file are welcome.
   8:../../tmk_core/protocol/news.c **** 
   9:../../tmk_core/protocol/news.c **** 
  10:../../tmk_core/protocol/news.c **** Redistribution and use in source and binary forms, with or without
  11:../../tmk_core/protocol/news.c **** modification, are permitted provided that the following conditions are met:
  12:../../tmk_core/protocol/news.c **** 
  13:../../tmk_core/protocol/news.c **** * Redistributions of source code must retain the above copyright
  14:../../tmk_core/protocol/news.c ****   notice, this list of conditions and the following disclaimer.
  15:../../tmk_core/protocol/news.c **** 
  16:../../tmk_core/protocol/news.c **** * Redistributions in binary form must reproduce the above copyright
  17:../../tmk_core/protocol/news.c ****   notice, this list of conditions and the following disclaimer in
  18:../../tmk_core/protocol/news.c ****   the documentation and/or other materials provided with the
  19:../../tmk_core/protocol/news.c ****   distribution.
  20:../../tmk_core/protocol/news.c **** 
  21:../../tmk_core/protocol/news.c **** * Neither the name of the copyright holders nor the names of
  22:../../tmk_core/protocol/news.c ****   contributors may be used to endorse or promote products derived
  23:../../tmk_core/protocol/news.c ****   from this software without specific prior written permission.
  24:../../tmk_core/protocol/news.c **** 
  25:../../tmk_core/protocol/news.c **** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  26:../../tmk_core/protocol/news.c **** AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  27:../../tmk_core/protocol/news.c **** IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  28:../../tmk_core/protocol/news.c **** ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  29:../../tmk_core/protocol/news.c **** LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  30:../../tmk_core/protocol/news.c **** CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  31:../../tmk_core/protocol/news.c **** SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  32:../../tmk_core/protocol/news.c **** INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  33:../../tmk_core/protocol/news.c **** CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  34:../../tmk_core/protocol/news.c **** ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  35:../../tmk_core/protocol/news.c **** POSSIBILITY OF SUCH DAMAGE.
  36:../../tmk_core/protocol/news.c **** */
  37:../../tmk_core/protocol/news.c **** 
  38:../../tmk_core/protocol/news.c **** #include <stdbool.h>
  39:../../tmk_core/protocol/news.c **** #include <avr/io.h>
  40:../../tmk_core/protocol/news.c **** #include <avr/interrupt.h>
  41:../../tmk_core/protocol/news.c **** #include "news.h"
  42:../../tmk_core/protocol/news.c **** 
  43:../../tmk_core/protocol/news.c **** 
  44:../../tmk_core/protocol/news.c **** void news_init(void)
  45:../../tmk_core/protocol/news.c **** {
  16               		.loc 1 45 1 view -0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  46:../../tmk_core/protocol/news.c ****     NEWS_KBD_RX_INIT();
  22               		.loc 1 46 5 view .LVU1
  23               		.loc 1 46 5 view .LVU2
  24 0000 87E6      		ldi r24,lo8(103)
  25 0002 8093 CC00 		sts 204,r24
  26               		.loc 1 46 5 view .LVU3
  27 0006 1092 CD00 		sts 205,__zero_reg__
  28               		.loc 1 46 5 view .LVU4
  29 000a E9EC      		ldi r30,lo8(-55)
  30 000c F0E0      		ldi r31,0
  31 000e 8081      		ld r24,Z
  32 0010 8069      		ori r24,lo8(-112)
  33 0012 8083      		st Z,r24
  34               	/* epilogue start */
  47:../../tmk_core/protocol/news.c **** }
  35               		.loc 1 47 1 is_stmt 0 view .LVU5
  36 0014 0895      		ret
  37               		.cfi_endproc
  38               	.LFE0:
  40               		.section	.text.news_recv,"ax",@progbits
  41               	.global	news_recv
  43               	news_recv:
  44               	.LFB1:
  48:../../tmk_core/protocol/news.c **** 
  49:../../tmk_core/protocol/news.c **** // RX ring buffer
  50:../../tmk_core/protocol/news.c **** #define RBUF_SIZE   8
  51:../../tmk_core/protocol/news.c **** static uint8_t rbuf[RBUF_SIZE];
  52:../../tmk_core/protocol/news.c **** static uint8_t rbuf_head = 0;
  53:../../tmk_core/protocol/news.c **** static uint8_t rbuf_tail = 0;
  54:../../tmk_core/protocol/news.c **** 
  55:../../tmk_core/protocol/news.c **** uint8_t news_recv(void)
  56:../../tmk_core/protocol/news.c **** {
  45               		.loc 1 56 1 is_stmt 1 view -0
  46               		.cfi_startproc
  47               	/* prologue: function */
  48               	/* frame size = 0 */
  49               	/* stack size = 0 */
  50               	.L__stack_usage = 0
  57:../../tmk_core/protocol/news.c ****     uint8_t data = 0;
  51               		.loc 1 57 5 view .LVU7
  52               	.LVL0:
  58:../../tmk_core/protocol/news.c ****     if (rbuf_head == rbuf_tail) {
  53               		.loc 1 58 5 view .LVU8
  54               		.loc 1 58 19 is_stmt 0 view .LVU9
  55 0000 2091 0000 		lds r18,rbuf_tail
  56               		.loc 1 58 8 view .LVU10
  57 0004 8091 0000 		lds r24,rbuf_head
  58 0008 8217      		cp r24,r18
  59 000a 01F0      		breq .L4
  59:../../tmk_core/protocol/news.c ****         return 0;
  60:../../tmk_core/protocol/news.c ****     }
  61:../../tmk_core/protocol/news.c **** 
  62:../../tmk_core/protocol/news.c ****     data = rbuf[rbuf_tail];
  60               		.loc 1 62 5 is_stmt 1 view .LVU11
  61               		.loc 1 62 16 is_stmt 0 view .LVU12
  62 000c 30E0      		ldi r19,0
  63               		.loc 1 62 10 view .LVU13
  64 000e F901      		movw r30,r18
  65 0010 E050      		subi r30,lo8(-(rbuf))
  66 0012 F040      		sbci r31,hi8(-(rbuf))
  67 0014 8081      		ld r24,Z
  68               	.LVL1:
  63:../../tmk_core/protocol/news.c ****     rbuf_tail = (rbuf_tail + 1) % RBUF_SIZE;
  69               		.loc 1 63 5 is_stmt 1 view .LVU14
  70               		.loc 1 63 28 is_stmt 0 view .LVU15
  71 0016 2F5F      		subi r18,-1
  72 0018 3F4F      		sbci r19,-1
  73               		.loc 1 63 33 view .LVU16
  74 001a 2770      		andi r18,7
  75 001c 3327      		clr r19
  76               		.loc 1 63 15 view .LVU17
  77 001e 2093 0000 		sts rbuf_tail,r18
  64:../../tmk_core/protocol/news.c ****     return data;
  78               		.loc 1 64 5 is_stmt 1 view .LVU18
  79               		.loc 1 64 12 is_stmt 0 view .LVU19
  80 0022 0895      		ret
  81               	.LVL2:
  82               	.L4:
  59:../../tmk_core/protocol/news.c ****         return 0;
  83               		.loc 1 59 16 view .LVU20
  84 0024 80E0      		ldi r24,0
  85               	/* epilogue start */
  65:../../tmk_core/protocol/news.c **** }
  86               		.loc 1 65 1 view .LVU21
  87 0026 0895      		ret
  88               		.cfi_endproc
  89               	.LFE1:
  91               		.section	.text.__vector_25,"ax",@progbits
  92               	.global	__vector_25
  94               	__vector_25:
  95               	.LFB2:
  66:../../tmk_core/protocol/news.c **** 
  67:../../tmk_core/protocol/news.c **** // USART RX complete interrupt
  68:../../tmk_core/protocol/news.c **** ISR(NEWS_KBD_RX_VECT)
  69:../../tmk_core/protocol/news.c **** {
  96               		.loc 1 69 1 is_stmt 1 view -0
  97               		.cfi_startproc
  98 0000 2F93 2FB7 		__gcc_isr 1
  98      2F93 
  99 0006 3F93      		push r19
 100               	.LCFI0:
 101               		.cfi_def_cfa_offset 3
 102               		.cfi_offset 19, -2
 103 0008 4F93      		push r20
 104               	.LCFI1:
 105               		.cfi_def_cfa_offset 4
 106               		.cfi_offset 20, -3
 107 000a 8F93      		push r24
 108               	.LCFI2:
 109               		.cfi_def_cfa_offset 5
 110               		.cfi_offset 24, -4
 111 000c 9F93      		push r25
 112               	.LCFI3:
 113               		.cfi_def_cfa_offset 6
 114               		.cfi_offset 25, -5
 115 000e EF93      		push r30
 116               	.LCFI4:
 117               		.cfi_def_cfa_offset 7
 118               		.cfi_offset 30, -6
 119 0010 FF93      		push r31
 120               	.LCFI5:
 121               		.cfi_def_cfa_offset 8
 122               		.cfi_offset 31, -7
 123               	/* prologue: Signal */
 124               	/* frame size = 0 */
 125               	/* stack size = 6...10 */
 126               	.L__stack_usage = 6 + __gcc_isr.n_pushed
  70:../../tmk_core/protocol/news.c ****     uint8_t next = (rbuf_head + 1) % RBUF_SIZE;
 127               		.loc 1 70 5 view .LVU23
 128               		.loc 1 70 31 is_stmt 0 view .LVU24
 129 0012 8091 0000 		lds r24,rbuf_head
 130 0016 90E0      		ldi r25,0
 131 0018 9C01      		movw r18,r24
 132 001a 2F5F      		subi r18,-1
 133 001c 3F4F      		sbci r19,-1
 134               		.loc 1 70 36 view .LVU25
 135 001e 2770      		andi r18,7
 136 0020 3327      		clr r19
 137               	.LVL3:
  71:../../tmk_core/protocol/news.c ****     if (next != rbuf_tail) {
 138               		.loc 1 71 5 is_stmt 1 view .LVU26
 139               		.loc 1 71 8 is_stmt 0 view .LVU27
 140 0022 4091 0000 		lds r20,rbuf_tail
 141 0026 4217      		cp r20,r18
 142 0028 01F0      		breq .L5
  72:../../tmk_core/protocol/news.c ****         rbuf[rbuf_head] = NEWS_KBD_RX_DATA;
 143               		.loc 1 72 9 is_stmt 1 view .LVU28
 144               		.loc 1 72 27 is_stmt 0 view .LVU29
 145 002a 3091 CE00 		lds r19,206
 146               		.loc 1 72 25 view .LVU30
 147 002e 8050      		subi r24,lo8(-(rbuf))
 148 0030 9040      		sbci r25,hi8(-(rbuf))
 149 0032 FC01      		movw r30,r24
 150 0034 3083      		st Z,r19
  73:../../tmk_core/protocol/news.c ****         rbuf_head = next;
 151               		.loc 1 73 9 is_stmt 1 view .LVU31
 152               		.loc 1 73 19 is_stmt 0 view .LVU32
 153 0036 2093 0000 		sts rbuf_head,r18
 154               	.L5:
 155               	/* epilogue start */
  74:../../tmk_core/protocol/news.c ****     }
  75:../../tmk_core/protocol/news.c **** }
 156               		.loc 1 75 1 view .LVU33
 157 003a FF91      		pop r31
 158 003c EF91      		pop r30
 159 003e 9F91      		pop r25
 160 0040 8F91      		pop r24
 161 0042 4F91      		pop r20
 162 0044 3F91      		pop r19
 163 0046 2F91 2FBF 		__gcc_isr 2
 163      2F91 
 164 004c 1895      		reti
 165               		__gcc_isr 0,r18
 166               		.cfi_endproc
 167               	.LFE2:
 169               		.section	.bss.rbuf_tail,"aw",@nobits
 172               	rbuf_tail:
 173 0000 00        		.zero	1
 174               		.section	.bss.rbuf_head,"aw",@nobits
 177               	rbuf_head:
 178 0000 00        		.zero	1
 179               		.section	.bss.rbuf,"aw",@nobits
 182               	rbuf:
 183 0000 0000 0000 		.zero	8
 183      0000 0000 
 184               		.text
 185               	.Letext0:
 186               		.file 2 "/usr/avr/include/stdint.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 news.c
     /tmp/cccLCURT.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cccLCURT.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cccLCURT.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cccLCURT.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cccLCURT.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/cccLCURT.s:13     .text.news_init:0000000000000000 news_init
     /tmp/cccLCURT.s:43     .text.news_recv:0000000000000000 news_recv
     /tmp/cccLCURT.s:172    .bss.rbuf_tail:0000000000000000 rbuf_tail
     /tmp/cccLCURT.s:177    .bss.rbuf_head:0000000000000000 rbuf_head
     /tmp/cccLCURT.s:182    .bss.rbuf:0000000000000000 rbuf
     /tmp/cccLCURT.s:94     .text.__vector_25:0000000000000000 __vector_25
                            *ABS*:0000000000000002 __gcc_isr.n_pushed.001

UNDEFINED SYMBOLS
__do_clear_bss
