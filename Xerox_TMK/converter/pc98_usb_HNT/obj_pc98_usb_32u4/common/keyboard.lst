   1               		.file	"keyboard.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.keyboard_setup,"ax",@progbits
  11               	.global	keyboard_setup
  13               	keyboard_setup:
  14               	.LFB4:
  15               		.file 1 "../../tmk_core/common/keyboard.c"
   1:../../tmk_core/common/keyboard.c **** /*
   2:../../tmk_core/common/keyboard.c **** Copyright 2011,2012,2013 Jun Wako <wakojun@gmail.com>
   3:../../tmk_core/common/keyboard.c **** 
   4:../../tmk_core/common/keyboard.c **** This program is free software: you can redistribute it and/or modify
   5:../../tmk_core/common/keyboard.c **** it under the terms of the GNU General Public License as published by
   6:../../tmk_core/common/keyboard.c **** the Free Software Foundation, either version 2 of the License, or
   7:../../tmk_core/common/keyboard.c **** (at your option) any later version.
   8:../../tmk_core/common/keyboard.c **** 
   9:../../tmk_core/common/keyboard.c **** This program is distributed in the hope that it will be useful,
  10:../../tmk_core/common/keyboard.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:../../tmk_core/common/keyboard.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:../../tmk_core/common/keyboard.c **** GNU General Public License for more details.
  13:../../tmk_core/common/keyboard.c **** 
  14:../../tmk_core/common/keyboard.c **** You should have received a copy of the GNU General Public License
  15:../../tmk_core/common/keyboard.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:../../tmk_core/common/keyboard.c **** */
  17:../../tmk_core/common/keyboard.c **** #include <stdint.h>
  18:../../tmk_core/common/keyboard.c **** #include "keyboard.h"
  19:../../tmk_core/common/keyboard.c **** #include "matrix.h"
  20:../../tmk_core/common/keyboard.c **** #include "keymap.h"
  21:../../tmk_core/common/keyboard.c **** #include "host.h"
  22:../../tmk_core/common/keyboard.c **** #include "led.h"
  23:../../tmk_core/common/keyboard.c **** #include "keycode.h"
  24:../../tmk_core/common/keyboard.c **** #include "timer.h"
  25:../../tmk_core/common/keyboard.c **** #include "print.h"
  26:../../tmk_core/common/keyboard.c **** #include "debug.h"
  27:../../tmk_core/common/keyboard.c **** #include "command.h"
  28:../../tmk_core/common/keyboard.c **** #include "util.h"
  29:../../tmk_core/common/keyboard.c **** #include "sendchar.h"
  30:../../tmk_core/common/keyboard.c **** #include "bootmagic.h"
  31:../../tmk_core/common/keyboard.c **** #include "eeconfig.h"
  32:../../tmk_core/common/keyboard.c **** #include "backlight.h"
  33:../../tmk_core/common/keyboard.c **** #include "hook.h"
  34:../../tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
  35:../../tmk_core/common/keyboard.c **** #   include "mousekey.h"
  36:../../tmk_core/common/keyboard.c **** #endif
  37:../../tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  38:../../tmk_core/common/keyboard.c **** #   include "ps2_mouse.h"
  39:../../tmk_core/common/keyboard.c **** #endif
  40:../../tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  41:../../tmk_core/common/keyboard.c **** #include "serial_mouse.h"
  42:../../tmk_core/common/keyboard.c **** #endif
  43:../../tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  44:../../tmk_core/common/keyboard.c **** #include "adb.h"
  45:../../tmk_core/common/keyboard.c **** #endif
  46:../../tmk_core/common/keyboard.c **** 
  47:../../tmk_core/common/keyboard.c **** 
  48:../../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
  49:../../tmk_core/common/keyboard.c **** static bool has_ghost_in_row(uint8_t row)
  50:../../tmk_core/common/keyboard.c **** {
  51:../../tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = matrix_get_row(row);
  52:../../tmk_core/common/keyboard.c ****     // No ghost exists when less than 2 keys are down on the row
  53:../../tmk_core/common/keyboard.c ****     if (((matrix_row - 1) & matrix_row) == 0)
  54:../../tmk_core/common/keyboard.c ****         return false;
  55:../../tmk_core/common/keyboard.c **** 
  56:../../tmk_core/common/keyboard.c ****     // Ghost occurs when the row shares column line with other row
  57:../../tmk_core/common/keyboard.c ****     for (uint8_t i=0; i < MATRIX_ROWS; i++) {
  58:../../tmk_core/common/keyboard.c ****         if (i != row && (matrix_get_row(i) & matrix_row))
  59:../../tmk_core/common/keyboard.c ****             return true;
  60:../../tmk_core/common/keyboard.c ****     }
  61:../../tmk_core/common/keyboard.c ****     return false;
  62:../../tmk_core/common/keyboard.c **** }
  63:../../tmk_core/common/keyboard.c **** #endif
  64:../../tmk_core/common/keyboard.c **** 
  65:../../tmk_core/common/keyboard.c **** 
  66:../../tmk_core/common/keyboard.c **** void keyboard_setup(void)
  67:../../tmk_core/common/keyboard.c **** {
  16               		.loc 1 67 1 view -0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  68:../../tmk_core/common/keyboard.c ****     matrix_setup();
  22               		.loc 1 68 5 view .LVU1
  23 0000 0C94 0000 		jmp matrix_setup
  24               	.LVL0:
  25               		.cfi_endproc
  26               	.LFE4:
  28               		.section	.text.keyboard_init,"ax",@progbits
  29               	.global	keyboard_init
  31               	keyboard_init:
  32               	.LFB5:
  69:../../tmk_core/common/keyboard.c **** }
  70:../../tmk_core/common/keyboard.c **** 
  71:../../tmk_core/common/keyboard.c **** void keyboard_init(void)
  72:../../tmk_core/common/keyboard.c **** {
  33               		.loc 1 72 1 view -0
  34               		.cfi_startproc
  35               	/* prologue: function */
  36               	/* frame size = 0 */
  37               	/* stack size = 0 */
  38               	.L__stack_usage = 0
  73:../../tmk_core/common/keyboard.c ****     timer_init();
  39               		.loc 1 73 5 view .LVU3
  40 0000 0E94 0000 		call timer_init
  41               	.LVL1:
  74:../../tmk_core/common/keyboard.c ****     matrix_init();
  42               		.loc 1 74 5 view .LVU4
  43 0004 0C94 0000 		jmp matrix_init
  44               	.LVL2:
  45               		.cfi_endproc
  46               	.LFE5:
  48               		.section	.text.keyboard_task,"ax",@progbits
  49               	.global	keyboard_task
  51               	keyboard_task:
  52               	.LFB6:
  75:../../tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  76:../../tmk_core/common/keyboard.c ****     ps2_mouse_init();
  77:../../tmk_core/common/keyboard.c **** #endif
  78:../../tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  79:../../tmk_core/common/keyboard.c ****     serial_mouse_init();
  80:../../tmk_core/common/keyboard.c **** #endif
  81:../../tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  82:../../tmk_core/common/keyboard.c ****     adb_mouse_init();
  83:../../tmk_core/common/keyboard.c **** #endif
  84:../../tmk_core/common/keyboard.c **** 
  85:../../tmk_core/common/keyboard.c **** 
  86:../../tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
  87:../../tmk_core/common/keyboard.c ****     bootmagic();
  88:../../tmk_core/common/keyboard.c **** #endif
  89:../../tmk_core/common/keyboard.c **** 
  90:../../tmk_core/common/keyboard.c **** #ifdef BACKLIGHT_ENABLE
  91:../../tmk_core/common/keyboard.c ****     backlight_init();
  92:../../tmk_core/common/keyboard.c **** #endif
  93:../../tmk_core/common/keyboard.c **** }
  94:../../tmk_core/common/keyboard.c **** 
  95:../../tmk_core/common/keyboard.c **** /*
  96:../../tmk_core/common/keyboard.c ****  * Do keyboard routine jobs: scan matrix, light LEDs, ...
  97:../../tmk_core/common/keyboard.c ****  * This is repeatedly called as fast as possible.
  98:../../tmk_core/common/keyboard.c ****  */
  99:../../tmk_core/common/keyboard.c **** void keyboard_task(void)
 100:../../tmk_core/common/keyboard.c **** {
  53               		.loc 1 100 1 view -0
  54               		.cfi_startproc
  55 0000 9F92      		push r9
  56               	.LCFI0:
  57               		.cfi_def_cfa_offset 3
  58               		.cfi_offset 9, -2
  59 0002 AF92      		push r10
  60               	.LCFI1:
  61               		.cfi_def_cfa_offset 4
  62               		.cfi_offset 10, -3
  63 0004 BF92      		push r11
  64               	.LCFI2:
  65               		.cfi_def_cfa_offset 5
  66               		.cfi_offset 11, -4
  67 0006 CF92      		push r12
  68               	.LCFI3:
  69               		.cfi_def_cfa_offset 6
  70               		.cfi_offset 12, -5
  71 0008 DF92      		push r13
  72               	.LCFI4:
  73               		.cfi_def_cfa_offset 7
  74               		.cfi_offset 13, -6
  75 000a EF92      		push r14
  76               	.LCFI5:
  77               		.cfi_def_cfa_offset 8
  78               		.cfi_offset 14, -7
  79 000c FF92      		push r15
  80               	.LCFI6:
  81               		.cfi_def_cfa_offset 9
  82               		.cfi_offset 15, -8
  83 000e 0F93      		push r16
  84               	.LCFI7:
  85               		.cfi_def_cfa_offset 10
  86               		.cfi_offset 16, -9
  87 0010 1F93      		push r17
  88               	.LCFI8:
  89               		.cfi_def_cfa_offset 11
  90               		.cfi_offset 17, -10
  91 0012 CF93      		push r28
  92               	.LCFI9:
  93               		.cfi_def_cfa_offset 12
  94               		.cfi_offset 28, -11
  95 0014 DF93      		push r29
  96               	.LCFI10:
  97               		.cfi_def_cfa_offset 13
  98               		.cfi_offset 29, -12
  99 0016 00D0      		rcall .
 100 0018 00D0      		rcall .
 101 001a 0F92      		push __tmp_reg__
 102               	.LCFI11:
 103               		.cfi_def_cfa_offset 18
 104 001c CDB7      		in r28,__SP_L__
 105 001e DEB7      		in r29,__SP_H__
 106               	.LCFI12:
 107               		.cfi_def_cfa_register 28
 108               	/* prologue: function */
 109               	/* frame size = 5 */
 110               	/* stack size = 16 */
 111               	.L__stack_usage = 16
 101:../../tmk_core/common/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 112               		.loc 1 101 5 view .LVU6
 102:../../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 103:../../tmk_core/common/keyboard.c ****     static matrix_row_t matrix_ghost[MATRIX_ROWS];
 104:../../tmk_core/common/keyboard.c **** #endif
 105:../../tmk_core/common/keyboard.c ****     static uint8_t led_status = 0;
 113               		.loc 1 105 5 view .LVU7
 106:../../tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = 0;
 114               		.loc 1 106 5 view .LVU8
 115               	.LVL3:
 107:../../tmk_core/common/keyboard.c ****     matrix_row_t matrix_change = 0;
 116               		.loc 1 107 5 view .LVU9
 108:../../tmk_core/common/keyboard.c **** 
 109:../../tmk_core/common/keyboard.c ****     matrix_scan();
 117               		.loc 1 109 5 view .LVU10
 118 0020 0E94 0000 		call matrix_scan
 119               	.LVL4:
 110:../../tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 120               		.loc 1 110 5 view .LVU11
 121               	.LBB2:
 122               		.loc 1 110 10 view .LVU12
 123               		.loc 1 110 10 is_stmt 0 view .LVU13
 124 0024 80E0      		ldi r24,lo8(matrix_prev.2453)
 125 0026 C82E      		mov r12,r24
 126 0028 80E0      		ldi r24,hi8(matrix_prev.2453)
 127 002a D82E      		mov r13,r24
 128               		.loc 1 110 18 view .LVU14
 129 002c 10E0      		ldi r17,0
 130               	.LVL5:
 131               	.L9:
 111:../../tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 132               		.loc 1 111 9 is_stmt 1 view .LVU15
 133               		.loc 1 111 22 is_stmt 0 view .LVU16
 134 002e 812F      		mov r24,r17
 135 0030 0E94 0000 		call matrix_get_row
 136               	.LVL6:
 137 0034 982E      		mov r9,r24
 138               	.LVL7:
 112:../../tmk_core/common/keyboard.c ****         matrix_change = matrix_row ^ matrix_prev[r];
 139               		.loc 1 112 9 is_stmt 1 view .LVU17
 140               		.loc 1 112 49 is_stmt 0 view .LVU18
 141 0036 F601      		movw r30,r12
 142 0038 E190      		ld r14,Z+
 143 003a 6F01      		movw r12,r30
 144               	.LVL8:
 113:../../tmk_core/common/keyboard.c ****         if (matrix_change) {
 145               		.loc 1 113 9 is_stmt 1 view .LVU19
 146               		.loc 1 113 12 is_stmt 0 view .LVU20
 147 003c E816      		cp r14,r24
 148 003e 01F0      		breq .L4
 149               	.LBB3:
 114:../../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 115:../../tmk_core/common/keyboard.c ****             if (has_ghost_in_row(r)) {
 116:../../tmk_core/common/keyboard.c ****                 /* Keep track of whether ghosted status has changed for
 117:../../tmk_core/common/keyboard.c ****                  * debugging. But don't update matrix_prev until un-ghosted, or
 118:../../tmk_core/common/keyboard.c ****                  * the last key would be lost.
 119:../../tmk_core/common/keyboard.c ****                  */
 120:../../tmk_core/common/keyboard.c ****                 if (debug_matrix && matrix_ghost[r] != matrix_row) {
 121:../../tmk_core/common/keyboard.c ****                     matrix_print();
 122:../../tmk_core/common/keyboard.c ****                 }
 123:../../tmk_core/common/keyboard.c ****                 matrix_ghost[r] = matrix_row;
 124:../../tmk_core/common/keyboard.c ****                 continue;
 125:../../tmk_core/common/keyboard.c ****             }
 126:../../tmk_core/common/keyboard.c ****             matrix_ghost[r] = matrix_row;
 127:../../tmk_core/common/keyboard.c **** #endif
 128:../../tmk_core/common/keyboard.c ****             if (debug_matrix) matrix_print();
 150               		.loc 1 128 13 is_stmt 1 view .LVU21
 151               		.loc 1 128 17 is_stmt 0 view .LVU22
 152 0040 8091 0000 		lds r24,debug_config
 153               		.loc 1 128 16 view .LVU23
 154 0044 81FD      		sbrc r24,1
 155               		.loc 1 128 31 is_stmt 1 discriminator 1 view .LVU24
 156 0046 0E94 0000 		call matrix_print
 157               	.LVL9:
 158               	.L5:
 159               	.LBE3:
 110:../../tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 160               		.loc 1 110 18 is_stmt 0 view .LVU25
 161 004a F12C      		mov r15,__zero_reg__
 162 004c 01E0      		ldi r16,lo8(1)
 112:../../tmk_core/common/keyboard.c ****         if (matrix_change) {
 163               		.loc 1 112 23 view .LVU26
 164 004e E924      		eor r14,r9
 165               	.LVL10:
 112:../../tmk_core/common/keyboard.c ****         if (matrix_change) {
 166               		.loc 1 112 23 view .LVU27
 167 0050 5601      		movw r10,r12
 168 0052 F1E0      		ldi r31,1
 169 0054 AF1A      		sub r10,r31
 170 0056 B108      		sbc r11,__zero_reg__
 171               	.L8:
 172               	.LVL11:
 173               	.LBB6:
 174               	.LBB4:
 129:../../tmk_core/common/keyboard.c ****             matrix_row_t col_mask = 1;
 130:../../tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++, col_mask <<= 1) {
 131:../../tmk_core/common/keyboard.c ****                 if (matrix_change & col_mask) {
 175               		.loc 1 131 17 is_stmt 1 view .LVU28
 176               		.loc 1 131 21 is_stmt 0 view .LVU29
 177 0058 8E2D      		mov r24,r14
 178 005a 8023      		and r24,r16
 179               		.loc 1 131 20 view .LVU30
 180 005c 01F0      		breq .L6
 181               	.LBB5:
 132:../../tmk_core/common/keyboard.c ****                     keyevent_t e = (keyevent_t){
 182               		.loc 1 132 21 is_stmt 1 view .LVU31
 183               		.loc 1 132 32 is_stmt 0 view .LVU32
 184 005e F982      		std Y+1,r15
 185 0060 1A83      		std Y+2,r17
 133:../../tmk_core/common/keyboard.c ****                         .key = (keypos_t){ .row = r, .col = c },
 134:../../tmk_core/common/keyboard.c ****                         .pressed = (matrix_row & col_mask),
 186               		.loc 1 134 48 view .LVU33
 187 0062 91E0      		ldi r25,lo8(1)
 188 0064 892D      		mov r24,r9
 189 0066 8023      		and r24,r16
 190 0068 01F4      		brne .L7
 191               		.loc 1 134 48 view .LVU34
 192 006a 90E0      		ldi r25,0
 193               	.L7:
 132:../../tmk_core/common/keyboard.c ****                     keyevent_t e = (keyevent_t){
 194               		.loc 1 132 32 view .LVU35
 195 006c 9B83      		std Y+3,r25
 135:../../tmk_core/common/keyboard.c ****                         .time = (timer_read() | 1) /* time should not be 0 */
 196               		.loc 1 135 34 view .LVU36
 197 006e 0E94 0000 		call timer_read
 198               	.LVL12:
 199               		.loc 1 135 47 view .LVU37
 200 0072 8160      		ori r24,1
 132:../../tmk_core/common/keyboard.c ****                     keyevent_t e = (keyevent_t){
 201               		.loc 1 132 32 view .LVU38
 202 0074 782F      		mov r23,r24
 203 0076 9D83      		std Y+5,r25
 204 0078 8C83      		std Y+4,r24
 136:../../tmk_core/common/keyboard.c ****                     };
 137:../../tmk_core/common/keyboard.c ****                     action_exec(e);
 205               		.loc 1 137 21 is_stmt 1 view .LVU39
 206 007a 4981      		ldd r20,Y+1
 207 007c 5A81      		ldd r21,Y+2
 208 007e 6B81      		ldd r22,Y+3
 209 0080 8D81      		ldd r24,Y+5
 210 0082 0E94 0000 		call action_exec
 211               	.LVL13:
 138:../../tmk_core/common/keyboard.c ****                     hook_matrix_change(e);
 212               		.loc 1 138 21 view .LVU40
 213 0086 4981      		ldd r20,Y+1
 214 0088 5A81      		ldd r21,Y+2
 215 008a 6B81      		ldd r22,Y+3
 216 008c 7C81      		ldd r23,Y+4
 217 008e 8D81      		ldd r24,Y+5
 218 0090 0E94 0000 		call hook_matrix_change
 219               	.LVL14:
 139:../../tmk_core/common/keyboard.c ****                     // record a processed key
 140:../../tmk_core/common/keyboard.c ****                     matrix_prev[r] ^= col_mask;
 220               		.loc 1 140 21 view .LVU41
 221               		.loc 1 140 36 is_stmt 0 view .LVU42
 222 0094 F501      		movw r30,r10
 223 0096 8081      		ld r24,Z
 224 0098 8027      		eor r24,r16
 225 009a 8083      		st Z,r24
 226               	.L6:
 227               		.loc 1 140 36 view .LVU43
 228               	.LBE5:
 130:../../tmk_core/common/keyboard.c ****                 if (matrix_change & col_mask) {
 229               		.loc 1 130 51 discriminator 2 view .LVU44
 230 009c F394      		inc r15
 231               	.LVL15:
 130:../../tmk_core/common/keyboard.c ****                 if (matrix_change & col_mask) {
 232               		.loc 1 130 64 discriminator 2 view .LVU45
 233 009e 000F      		lsl r16
 234               	.LVL16:
 130:../../tmk_core/common/keyboard.c ****                 if (matrix_change & col_mask) {
 235               		.loc 1 130 13 discriminator 2 view .LVU46
 236 00a0 F8E0      		ldi r31,lo8(8)
 237 00a2 FF12      		cpse r15,r31
 238 00a4 00C0      		rjmp .L8
 239               	.LVL17:
 240               	.L4:
 130:../../tmk_core/common/keyboard.c ****                 if (matrix_change & col_mask) {
 241               		.loc 1 130 13 discriminator 2 view .LVU47
 242               	.LBE4:
 243               	.LBE6:
 110:../../tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 244               		.loc 1 110 43 view .LVU48
 245 00a6 1F5F      		subi r17,lo8(-(1))
 246               	.LVL18:
 110:../../tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 247               		.loc 1 110 5 view .LVU49
 248 00a8 1031      		cpi r17,lo8(16)
 249 00aa 01F0      		breq .+2
 250 00ac 00C0      		rjmp .L9
 251               	.LBE2:
 141:../../tmk_core/common/keyboard.c **** 
 142:../../tmk_core/common/keyboard.c ****                     // This can miss stroke when scan matrix takes long like Topre
 143:../../tmk_core/common/keyboard.c ****                     // process a key per task call
 144:../../tmk_core/common/keyboard.c ****                     //goto MATRIX_LOOP_END;
 145:../../tmk_core/common/keyboard.c ****                 }
 146:../../tmk_core/common/keyboard.c ****             }
 147:../../tmk_core/common/keyboard.c ****         }
 148:../../tmk_core/common/keyboard.c ****     }
 149:../../tmk_core/common/keyboard.c ****     // call with pseudo tick event when no real key event.
 150:../../tmk_core/common/keyboard.c ****     action_exec(TICK);
 252               		.loc 1 150 5 is_stmt 1 view .LVU50
 253               		.loc 1 150 17 is_stmt 0 view .LVU51
 254 00ae 8FEF      		ldi r24,lo8(-1)
 255 00b0 8983      		std Y+1,r24
 256 00b2 8A83      		std Y+2,r24
 257 00b4 1B82      		std Y+3,__zero_reg__
 258 00b6 0E94 0000 		call timer_read
 259               	.LVL19:
 260 00ba 8160      		ori r24,1
 261 00bc 782F      		mov r23,r24
 262 00be 9D83      		std Y+5,r25
 263 00c0 8C83      		std Y+4,r24
 264               		.loc 1 150 5 view .LVU52
 265 00c2 4981      		ldd r20,Y+1
 266 00c4 5A81      		ldd r21,Y+2
 267 00c6 6B81      		ldd r22,Y+3
 268 00c8 8D81      		ldd r24,Y+5
 269 00ca 0E94 0000 		call action_exec
 270               	.LVL20:
 151:../../tmk_core/common/keyboard.c **** 
 152:../../tmk_core/common/keyboard.c **** //MATRIX_LOOP_END:
 153:../../tmk_core/common/keyboard.c **** 
 154:../../tmk_core/common/keyboard.c ****     hook_keyboard_loop();
 271               		.loc 1 154 5 is_stmt 1 view .LVU53
 272 00ce 0E94 0000 		call hook_keyboard_loop
 273               	.LVL21:
 155:../../tmk_core/common/keyboard.c **** 
 156:../../tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
 157:../../tmk_core/common/keyboard.c ****     // mousekey repeat & acceleration
 158:../../tmk_core/common/keyboard.c ****     mousekey_task();
 274               		.loc 1 158 5 view .LVU54
 275 00d2 0E94 0000 		call mousekey_task
 276               	.LVL22:
 159:../../tmk_core/common/keyboard.c **** #endif
 160:../../tmk_core/common/keyboard.c **** 
 161:../../tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
 162:../../tmk_core/common/keyboard.c ****     ps2_mouse_task();
 163:../../tmk_core/common/keyboard.c **** #endif
 164:../../tmk_core/common/keyboard.c **** 
 165:../../tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
 166:../../tmk_core/common/keyboard.c ****         serial_mouse_task();
 167:../../tmk_core/common/keyboard.c **** #endif
 168:../../tmk_core/common/keyboard.c **** 
 169:../../tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
 170:../../tmk_core/common/keyboard.c ****         adb_mouse_task();
 171:../../tmk_core/common/keyboard.c **** #endif
 172:../../tmk_core/common/keyboard.c **** 
 173:../../tmk_core/common/keyboard.c ****     // update LED
 174:../../tmk_core/common/keyboard.c ****     if (led_status != host_keyboard_leds()) {
 277               		.loc 1 174 5 view .LVU55
 278               		.loc 1 174 23 is_stmt 0 view .LVU56
 279 00d6 0E94 0000 		call host_keyboard_leds
 280               	.LVL23:
 281               		.loc 1 174 8 view .LVU57
 282 00da 9091 0000 		lds r25,led_status.2454
 283 00de 8917      		cp r24,r25
 284 00e0 01F0      		breq .L3
 175:../../tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 285               		.loc 1 175 9 is_stmt 1 view .LVU58
 286               		.loc 1 175 22 is_stmt 0 view .LVU59
 287 00e2 0E94 0000 		call host_keyboard_leds
 288               	.LVL24:
 289               		.loc 1 175 20 view .LVU60
 290 00e6 8093 0000 		sts led_status.2454,r24
 176:../../tmk_core/common/keyboard.c ****         if (debug_keyboard) dprintf("LED: %02X\n", led_status);
 291               		.loc 1 176 9 is_stmt 1 view .LVU61
 292               		.loc 1 176 29 view .LVU62
 293               		.loc 1 176 29 view .LVU63
 294 00ea 9091 0000 		lds r25,debug_config
 295 00ee 9570      		andi r25,lo8(5)
 296 00f0 9530      		cpi r25,lo8(5)
 297 00f2 01F4      		brne .L11
 298               		.loc 1 176 29 discriminator 2 view .LVU64
 299               	.LBB7:
 300               		.loc 1 176 29 discriminator 2 view .LVU65
 301               		.loc 1 176 29 discriminator 2 view .LVU66
 302               	.LBE7:
 303 00f4 1F92      		push __zero_reg__
 304 00f6 8F93      		push r24
 305 00f8 80E0      		ldi r24,lo8(__c.2471)
 306 00fa 90E0      		ldi r25,hi8(__c.2471)
 307 00fc 9F93      		push r25
 308 00fe 8F93      		push r24
 309 0100 0E94 0000 		call __xprintf
 310               	.LVL25:
 311 0104 0F90      		pop __tmp_reg__
 312 0106 0F90      		pop __tmp_reg__
 313 0108 0F90      		pop __tmp_reg__
 314 010a 0F90      		pop __tmp_reg__
 315               	.L11:
 177:../../tmk_core/common/keyboard.c ****         hook_keyboard_leds_change(led_status);
 316               		.loc 1 177 9 view .LVU67
 317 010c 8091 0000 		lds r24,led_status.2454
 318               	/* epilogue start */
 178:../../tmk_core/common/keyboard.c ****     }
 179:../../tmk_core/common/keyboard.c **** }
 319               		.loc 1 179 1 is_stmt 0 view .LVU68
 320 0110 0F90      		pop __tmp_reg__
 321 0112 0F90      		pop __tmp_reg__
 322 0114 0F90      		pop __tmp_reg__
 323 0116 0F90      		pop __tmp_reg__
 324 0118 0F90      		pop __tmp_reg__
 325 011a DF91      		pop r29
 326 011c CF91      		pop r28
 327 011e 1F91      		pop r17
 328               	.LVL26:
 329               		.loc 1 179 1 view .LVU69
 330 0120 0F91      		pop r16
 331 0122 FF90      		pop r15
 332 0124 EF90      		pop r14
 333 0126 DF90      		pop r13
 334 0128 CF90      		pop r12
 335 012a BF90      		pop r11
 336 012c AF90      		pop r10
 337 012e 9F90      		pop r9
 338               	.LVL27:
 177:../../tmk_core/common/keyboard.c ****         hook_keyboard_leds_change(led_status);
 339               		.loc 1 177 9 view .LVU70
 340 0130 0C94 0000 		jmp hook_keyboard_leds_change
 341               	.LVL28:
 342               	.L3:
 343               	/* epilogue start */
 344               		.loc 1 179 1 view .LVU71
 345 0134 0F90      		pop __tmp_reg__
 346 0136 0F90      		pop __tmp_reg__
 347 0138 0F90      		pop __tmp_reg__
 348 013a 0F90      		pop __tmp_reg__
 349 013c 0F90      		pop __tmp_reg__
 350 013e DF91      		pop r29
 351 0140 CF91      		pop r28
 352 0142 1F91      		pop r17
 353               	.LVL29:
 354               		.loc 1 179 1 view .LVU72
 355 0144 0F91      		pop r16
 356 0146 FF90      		pop r15
 357 0148 EF90      		pop r14
 358 014a DF90      		pop r13
 359 014c CF90      		pop r12
 360 014e BF90      		pop r11
 361 0150 AF90      		pop r10
 362 0152 9F90      		pop r9
 363               	.LVL30:
 364               		.loc 1 179 1 view .LVU73
 365 0154 0895      		ret
 366               		.cfi_endproc
 367               	.LFE6:
 369               		.section	.text.keyboard_set_leds,"ax",@progbits
 370               	.global	keyboard_set_leds
 372               	keyboard_set_leds:
 373               	.LVL31:
 374               	.LFB7:
 180:../../tmk_core/common/keyboard.c **** 
 181:../../tmk_core/common/keyboard.c **** void keyboard_set_leds(uint8_t leds)
 182:../../tmk_core/common/keyboard.c **** {
 375               		.loc 1 182 1 is_stmt 1 view -0
 376               		.cfi_startproc
 377               	/* prologue: function */
 378               	/* frame size = 0 */
 379               	/* stack size = 0 */
 380               	.L__stack_usage = 0
 183:../../tmk_core/common/keyboard.c ****     led_set(leds);
 381               		.loc 1 183 5 view .LVU75
 382 0000 0C94 0000 		jmp led_set
 383               	.LVL32:
 384               		.loc 1 183 5 is_stmt 0 view .LVU76
 385               		.cfi_endproc
 386               	.LFE7:
 388               		.section	.progmem.data.__c.2471,"a"
 391               	__c.2471:
 392 0000 4C45 443A 		.string	"LED: %02X\n"
 392      2025 3032 
 392      580A 00
 393               		.section	.bss.led_status.2454,"aw",@nobits
 396               	led_status.2454:
 397 0000 00        		.zero	1
 398               		.section	.bss.matrix_prev.2453,"aw",@nobits
 401               	matrix_prev.2453:
 402 0000 0000 0000 		.zero	16
 402      0000 0000 
 402      0000 0000 
 402      0000 0000 
 403               		.text
 404               	.Letext0:
 405               		.file 2 "/usr/avr/include/stdint.h"
 406               		.file 3 "../../tmk_core/common/keyboard.h"
 407               		.file 4 "../../tmk_core/common/matrix.h"
 408               		.file 5 "../../tmk_core/common/host.h"
 409               		.file 6 "../../tmk_core/common/timer.h"
 410               		.file 7 "../../tmk_core/common/avr/xprintf.h"
 411               		.file 8 "../../tmk_core/common/debug.h"
 412               		.file 9 "../../tmk_core/common/command.h"
 413               		.file 10 "../../tmk_core/common/mousekey.h"
 414               		.file 11 "../../tmk_core/common/led.h"
 415               		.file 12 "../../tmk_core/common/action.h"
 416               		.file 13 "../../tmk_core/common/hook.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keyboard.c
     /tmp/ccNc95ER.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccNc95ER.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccNc95ER.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccNc95ER.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccNc95ER.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccNc95ER.s:13     .text.keyboard_setup:0000000000000000 keyboard_setup
     /tmp/ccNc95ER.s:31     .text.keyboard_init:0000000000000000 keyboard_init
     /tmp/ccNc95ER.s:51     .text.keyboard_task:0000000000000000 keyboard_task
     /tmp/ccNc95ER.s:401    .bss.matrix_prev.2453:0000000000000000 matrix_prev.2453
     /tmp/ccNc95ER.s:396    .bss.led_status.2454:0000000000000000 led_status.2454
     /tmp/ccNc95ER.s:391    .progmem.data.__c.2471:0000000000000000 __c.2471
     /tmp/ccNc95ER.s:372    .text.keyboard_set_leds:0000000000000000 keyboard_set_leds

UNDEFINED SYMBOLS
matrix_setup
timer_init
matrix_init
matrix_scan
matrix_get_row
debug_config
matrix_print
timer_read
action_exec
hook_matrix_change
hook_keyboard_loop
mousekey_task
host_keyboard_leds
__xprintf
hook_keyboard_leds_change
led_set
__do_clear_bss
