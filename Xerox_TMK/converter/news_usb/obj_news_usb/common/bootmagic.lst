   1               		.file	"bootmagic.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.scan_key,"ax",@progbits
  12               	scan_key:
  13               	.LVL0:
  14               	.LFB11:
  15               		.file 1 "../../tmk_core/common/bootmagic.c"
   1:../../tmk_core/common/bootmagic.c **** #include <stdint.h>
   2:../../tmk_core/common/bootmagic.c **** #include <stdbool.h>
   3:../../tmk_core/common/bootmagic.c **** #include "wait.h"
   4:../../tmk_core/common/bootmagic.c **** #include "matrix.h"
   5:../../tmk_core/common/bootmagic.c **** #include "bootloader.h"
   6:../../tmk_core/common/bootmagic.c **** #include "debug.h"
   7:../../tmk_core/common/bootmagic.c **** #include "keymap.h"
   8:../../tmk_core/common/bootmagic.c **** #include "actionmap.h"
   9:../../tmk_core/common/bootmagic.c **** #include "host.h"
  10:../../tmk_core/common/bootmagic.c **** #include "action_layer.h"
  11:../../tmk_core/common/bootmagic.c **** #include "eeconfig.h"
  12:../../tmk_core/common/bootmagic.c **** #include "bootmagic.h"
  13:../../tmk_core/common/bootmagic.c **** #include "hook.h"
  14:../../tmk_core/common/bootmagic.c **** 
  15:../../tmk_core/common/bootmagic.c **** keymap_config_t keymap_config;
  16:../../tmk_core/common/bootmagic.c **** 
  17:../../tmk_core/common/bootmagic.c **** void bootmagic(void)
  18:../../tmk_core/common/bootmagic.c **** {
  19:../../tmk_core/common/bootmagic.c ****     /* check signature */
  20:../../tmk_core/common/bootmagic.c ****     if (!eeconfig_is_enabled()) {
  21:../../tmk_core/common/bootmagic.c ****         eeconfig_init();
  22:../../tmk_core/common/bootmagic.c ****     }
  23:../../tmk_core/common/bootmagic.c **** 
  24:../../tmk_core/common/bootmagic.c ****     /* do scans in case of bounce */
  25:../../tmk_core/common/bootmagic.c ****     print("bootmagic scan: ... ");
  26:../../tmk_core/common/bootmagic.c ****     uint8_t scan = 100;
  27:../../tmk_core/common/bootmagic.c ****     while (scan--) { matrix_scan(); wait_ms(10); }
  28:../../tmk_core/common/bootmagic.c ****     print("done.\n");
  29:../../tmk_core/common/bootmagic.c **** 
  30:../../tmk_core/common/bootmagic.c ****     /* bootmagic skip */
  31:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_SKIP)) {
  32:../../tmk_core/common/bootmagic.c ****         return;
  33:../../tmk_core/common/bootmagic.c ****     }
  34:../../tmk_core/common/bootmagic.c **** 
  35:../../tmk_core/common/bootmagic.c ****     /* eeconfig clear */
  36:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_EEPROM_CLEAR)) {
  37:../../tmk_core/common/bootmagic.c ****         eeconfig_init();
  38:../../tmk_core/common/bootmagic.c ****     }
  39:../../tmk_core/common/bootmagic.c **** 
  40:../../tmk_core/common/bootmagic.c ****     /* bootloader */
  41:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_BOOTLOADER)) {
  42:../../tmk_core/common/bootmagic.c ****         bootloader_jump();
  43:../../tmk_core/common/bootmagic.c ****     }
  44:../../tmk_core/common/bootmagic.c **** 
  45:../../tmk_core/common/bootmagic.c ****     /* user-defined checks */
  46:../../tmk_core/common/bootmagic.c ****     hook_bootmagic();
  47:../../tmk_core/common/bootmagic.c **** 
  48:../../tmk_core/common/bootmagic.c ****     /* debug enable */
  49:../../tmk_core/common/bootmagic.c ****     debug_config.raw = eeconfig_read_debug();
  50:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_DEBUG_ENABLE)) {
  51:../../tmk_core/common/bootmagic.c ****         if (bootmagic_scan_key(BOOTMAGIC_KEY_DEBUG_MATRIX)) {
  52:../../tmk_core/common/bootmagic.c ****             debug_config.matrix = !debug_config.matrix;
  53:../../tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_key(BOOTMAGIC_KEY_DEBUG_KEYBOARD)) {
  54:../../tmk_core/common/bootmagic.c ****             debug_config.keyboard = !debug_config.keyboard;
  55:../../tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_key(BOOTMAGIC_KEY_DEBUG_MOUSE)) {
  56:../../tmk_core/common/bootmagic.c ****             debug_config.mouse = !debug_config.mouse;
  57:../../tmk_core/common/bootmagic.c ****         } else {
  58:../../tmk_core/common/bootmagic.c ****             debug_config.enable = !debug_config.enable;
  59:../../tmk_core/common/bootmagic.c ****         }
  60:../../tmk_core/common/bootmagic.c ****     }
  61:../../tmk_core/common/bootmagic.c ****     eeconfig_write_debug(debug_config.raw);
  62:../../tmk_core/common/bootmagic.c **** 
  63:../../tmk_core/common/bootmagic.c ****     /* keymap config */
  64:../../tmk_core/common/bootmagic.c ****     keymap_config.raw = eeconfig_read_keymap();
  65:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_SWAP_CONTROL_CAPSLOCK)) {
  66:../../tmk_core/common/bootmagic.c ****         keymap_config.swap_control_capslock = !keymap_config.swap_control_capslock;
  67:../../tmk_core/common/bootmagic.c ****     }
  68:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_CAPSLOCK_TO_CONTROL)) {
  69:../../tmk_core/common/bootmagic.c ****         keymap_config.capslock_to_control = !keymap_config.capslock_to_control;
  70:../../tmk_core/common/bootmagic.c ****     }
  71:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_SWAP_LALT_LGUI)) {
  72:../../tmk_core/common/bootmagic.c ****         keymap_config.swap_lalt_lgui = !keymap_config.swap_lalt_lgui;
  73:../../tmk_core/common/bootmagic.c ****     }
  74:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_SWAP_RALT_RGUI)) {
  75:../../tmk_core/common/bootmagic.c ****         keymap_config.swap_ralt_rgui = !keymap_config.swap_ralt_rgui;
  76:../../tmk_core/common/bootmagic.c ****     }
  77:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_NO_GUI)) {
  78:../../tmk_core/common/bootmagic.c ****         keymap_config.no_gui = !keymap_config.no_gui;
  79:../../tmk_core/common/bootmagic.c ****     }
  80:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_SWAP_GRAVE_ESC)) {
  81:../../tmk_core/common/bootmagic.c ****         keymap_config.swap_grave_esc = !keymap_config.swap_grave_esc;
  82:../../tmk_core/common/bootmagic.c ****     }
  83:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_SWAP_BACKSLASH_BACKSPACE)) {
  84:../../tmk_core/common/bootmagic.c ****         keymap_config.swap_backslash_backspace = !keymap_config.swap_backslash_backspace;
  85:../../tmk_core/common/bootmagic.c ****     }
  86:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_HOST_NKRO)) {
  87:../../tmk_core/common/bootmagic.c ****         keymap_config.nkro = !keymap_config.nkro;
  88:../../tmk_core/common/bootmagic.c ****     }
  89:../../tmk_core/common/bootmagic.c ****     eeconfig_write_keymap(keymap_config.raw);
  90:../../tmk_core/common/bootmagic.c **** 
  91:../../tmk_core/common/bootmagic.c **** #ifdef NKRO_ENABLE
  92:../../tmk_core/common/bootmagic.c ****     keyboard_nkro = keymap_config.nkro;
  93:../../tmk_core/common/bootmagic.c **** #endif
  94:../../tmk_core/common/bootmagic.c **** 
  95:../../tmk_core/common/bootmagic.c ****     /* default layer */
  96:../../tmk_core/common/bootmagic.c ****     uint8_t default_layer = 0;
  97:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_DEFAULT_LAYER_0)) { default_layer |= (1<<0); }
  98:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_DEFAULT_LAYER_1)) { default_layer |= (1<<1); }
  99:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_DEFAULT_LAYER_2)) { default_layer |= (1<<2); }
 100:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_DEFAULT_LAYER_3)) { default_layer |= (1<<3); }
 101:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_DEFAULT_LAYER_4)) { default_layer |= (1<<4); }
 102:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_DEFAULT_LAYER_5)) { default_layer |= (1<<5); }
 103:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_DEFAULT_LAYER_6)) { default_layer |= (1<<6); }
 104:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_DEFAULT_LAYER_7)) { default_layer |= (1<<7); }
 105:../../tmk_core/common/bootmagic.c ****     if (default_layer) {
 106:../../tmk_core/common/bootmagic.c ****         eeconfig_write_default_layer(default_layer);
 107:../../tmk_core/common/bootmagic.c ****         default_layer_set((uint32_t)default_layer);
 108:../../tmk_core/common/bootmagic.c ****     } else {
 109:../../tmk_core/common/bootmagic.c ****         default_layer = eeconfig_read_default_layer();
 110:../../tmk_core/common/bootmagic.c ****         default_layer_set((uint32_t)default_layer);
 111:../../tmk_core/common/bootmagic.c ****     }
 112:../../tmk_core/common/bootmagic.c **** }
 113:../../tmk_core/common/bootmagic.c **** 
 114:../../tmk_core/common/bootmagic.c **** static bool scan_key(uint16_t code)
 115:../../tmk_core/common/bootmagic.c **** {
  16               		.loc 1 115 1 view -0
  17               		.cfi_startproc
  18               		.loc 1 115 1 is_stmt 0 view .LVU1
  19 0000 CF92      		push r12
  20               	.LCFI0:
  21               		.cfi_def_cfa_offset 3
  22               		.cfi_offset 12, -2
  23 0002 DF92      		push r13
  24               	.LCFI1:
  25               		.cfi_def_cfa_offset 4
  26               		.cfi_offset 13, -3
  27 0004 EF92      		push r14
  28               	.LCFI2:
  29               		.cfi_def_cfa_offset 5
  30               		.cfi_offset 14, -4
  31 0006 FF92      		push r15
  32               	.LCFI3:
  33               		.cfi_def_cfa_offset 6
  34               		.cfi_offset 15, -5
  35 0008 0F93      		push r16
  36               	.LCFI4:
  37               		.cfi_def_cfa_offset 7
  38               		.cfi_offset 16, -6
  39 000a 1F93      		push r17
  40               	.LCFI5:
  41               		.cfi_def_cfa_offset 8
  42               		.cfi_offset 17, -7
  43 000c CF93      		push r28
  44               	.LCFI6:
  45               		.cfi_def_cfa_offset 9
  46               		.cfi_offset 28, -8
  47               	/* prologue: function */
  48               	/* frame size = 0 */
  49               	/* stack size = 7 */
  50               	.L__stack_usage = 7
  51 000e 7C01      		movw r14,r24
 116:../../tmk_core/common/bootmagic.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
  52               		.loc 1 116 5 is_stmt 1 view .LVU2
  53               	.LBB6:
  54               		.loc 1 116 10 view .LVU3
  55               	.LVL1:
  56               		.loc 1 116 25 view .LVU4
  57               		.loc 1 116 18 is_stmt 0 view .LVU5
  58 0010 C0E0      		ldi r28,0
  59               	.LVL2:
  60               	.L8:
  61               	.LBB7:
 117:../../tmk_core/common/bootmagic.c ****         matrix_row_t matrix_row = matrix_get_row(r);
  62               		.loc 1 117 9 is_stmt 1 view .LVU6
  63               		.loc 1 117 35 is_stmt 0 view .LVU7
  64 0012 8C2F      		mov r24,r28
  65 0014 0E94 0000 		call matrix_get_row
  66               	.LVL3:
 118:../../tmk_core/common/bootmagic.c ****         for (uint8_t c = 0; c < MATRIX_COLS; c++) {
  67               		.loc 1 118 9 is_stmt 1 view .LVU8
  68               	.LBB8:
  69               		.loc 1 118 14 view .LVU9
  70               		.loc 1 118 29 view .LVU10
  71               	.LBE8:
 117:../../tmk_core/common/bootmagic.c ****         matrix_row_t matrix_row = matrix_get_row(r);
  72               		.loc 1 117 35 is_stmt 0 view .LVU11
  73 0018 10E0      		ldi r17,0
  74 001a 00E0      		ldi r16,0
  75               	.LBB10:
 119:../../tmk_core/common/bootmagic.c ****             if (matrix_row & ((matrix_row_t)1<<c)) {
  76               		.loc 1 119 17 view .LVU12
  77 001c C82E      		mov r12,r24
  78 001e D12C      		mov r13,__zero_reg__
  79               	.LVL4:
  80               	.L7:
  81               		.loc 1 119 13 is_stmt 1 view .LVU13
  82               		.loc 1 119 17 is_stmt 0 view .LVU14
  83 0020 C601      		movw r24,r12
  84 0022 002E      		mov r0,r16
  85 0024 00C0      		rjmp 2f
  86               		1:
  87 0026 9595      		asr r25
  88 0028 8795      		ror r24
  89               		2:
  90 002a 0A94      		dec r0
  91 002c 02F4      		brpl 1b
  92               		.loc 1 119 16 view .LVU15
  93 002e 80FF      		sbrs r24,0
  94 0030 00C0      		rjmp .L2
  95               	.LBB9:
 120:../../tmk_core/common/bootmagic.c ****                 // read key from Layer 0
 121:../../tmk_core/common/bootmagic.c ****                 action_t action = action_for_key(0, (keypos_t){ .row = r, .col = c });
  96               		.loc 1 121 17 is_stmt 1 view .LVU16
  97               		.loc 1 121 35 is_stmt 0 view .LVU17
  98 0032 602F      		mov r22,r16
  99 0034 7C2F      		mov r23,r28
 100 0036 80E0      		ldi r24,0
 101 0038 0E94 0000 		call action_for_key
 102               	.LVL5:
 103               		.loc 1 121 35 view .LVU18
 104 003c 9C01      		movw r18,r24
 122:../../tmk_core/common/bootmagic.c ****                 if (action.code == code ||
 105               		.loc 1 122 17 is_stmt 1 view .LVU19
 106               	.LVL6:
 107               		.loc 1 122 20 is_stmt 0 view .LVU20
 108 003e 8E15      		cp r24,r14
 109 0040 9F05      		cpc r25,r15
 110 0042 01F0      		breq .L3
 111               		.loc 1 122 41 discriminator 1 view .LVU21
 112 0044 832F      		mov r24,r19
 113               	.LVL7:
 114               		.loc 1 122 41 discriminator 1 view .LVU22
 115 0046 807E      		andi r24,lo8(-32)
 116 0048 932F      		mov r25,r19
 117 004a 907C      		andi r25,lo8(-64)
 118 004c 01F0      		breq .L4
 123:../../tmk_core/common/bootmagic.c ****                     ((action.kind.id == ACT_LMODS ||
 124:../../tmk_core/common/bootmagic.c ****                       action.kind.id == ACT_RMODS ||
 125:../../tmk_core/common/bootmagic.c ****                       action.kind.id == ACT_LMODS_TAP ||
 126:../../tmk_core/common/bootmagic.c ****                       action.kind.id == ACT_RMODS_TAP ||
 119               		.loc 1 126 55 view .LVU23
 120 004e 803A      		cpi r24,lo8(-96)
 121 0050 01F4      		brne .L2
 122               	.L4:
 127:../../tmk_core/common/bootmagic.c ****                       action.kind.id == ACT_LAYER_TAP ||
 128:../../tmk_core/common/bootmagic.c ****                       action.kind.id == ACT_LAYER_TAP_EXT) &&
 123               		.loc 1 128 60 view .LVU24
 124 0052 2E15      		cp r18,r14
 125 0054 1F04      		cpc __zero_reg__,r15
 126 0056 01F4      		brne .L2
 127               	.L3:
 129:../../tmk_core/common/bootmagic.c ****                      action.key.code == code)) {
 130:../../tmk_core/common/bootmagic.c ****                     return true;
 128               		.loc 1 130 21 is_stmt 1 view .LVU25
 129               		.loc 1 130 28 is_stmt 0 view .LVU26
 130 0058 81E0      		ldi r24,lo8(1)
 131               	.LVL8:
 132               	.L1:
 133               	/* epilogue start */
 134               		.loc 1 130 28 view .LVU27
 135               	.LBE9:
 136               	.LBE10:
 137               	.LBE7:
 138               	.LBE6:
 131:../../tmk_core/common/bootmagic.c ****                 }
 132:../../tmk_core/common/bootmagic.c ****             }
 133:../../tmk_core/common/bootmagic.c ****         }
 134:../../tmk_core/common/bootmagic.c ****     }
 135:../../tmk_core/common/bootmagic.c ****     return false;
 136:../../tmk_core/common/bootmagic.c **** }
 139               		.loc 1 136 1 view .LVU28
 140 005a CF91      		pop r28
 141               	.LVL9:
 142               		.loc 1 136 1 view .LVU29
 143 005c 1F91      		pop r17
 144 005e 0F91      		pop r16
 145 0060 FF90      		pop r15
 146 0062 EF90      		pop r14
 147               	.LVL10:
 148               		.loc 1 136 1 view .LVU30
 149 0064 DF90      		pop r13
 150 0066 CF90      		pop r12
 151               	.LVL11:
 152               		.loc 1 136 1 view .LVU31
 153 0068 0895      		ret
 154               	.LVL12:
 155               	.L2:
 156               	.LBB13:
 157               	.LBB12:
 158               	.LBB11:
 118:../../tmk_core/common/bootmagic.c ****             if (matrix_row & ((matrix_row_t)1<<c)) {
 159               		.loc 1 118 46 is_stmt 1 discriminator 2 view .LVU32
 118:../../tmk_core/common/bootmagic.c ****             if (matrix_row & ((matrix_row_t)1<<c)) {
 160               		.loc 1 118 29 discriminator 2 view .LVU33
 118:../../tmk_core/common/bootmagic.c ****             if (matrix_row & ((matrix_row_t)1<<c)) {
 161               		.loc 1 118 9 is_stmt 0 discriminator 2 view .LVU34
 162 006a 0F5F      		subi r16,-1
 163 006c 1F4F      		sbci r17,-1
 164               	.LVL13:
 118:../../tmk_core/common/bootmagic.c ****             if (matrix_row & ((matrix_row_t)1<<c)) {
 165               		.loc 1 118 9 discriminator 2 view .LVU35
 166 006e 0830      		cpi r16,8
 167 0070 1105      		cpc r17,__zero_reg__
 168 0072 01F4      		brne .L7
 169               	.LBE11:
 170               	.LBE12:
 116:../../tmk_core/common/bootmagic.c ****         matrix_row_t matrix_row = matrix_get_row(r);
 171               		.loc 1 116 42 is_stmt 1 discriminator 2 view .LVU36
 116:../../tmk_core/common/bootmagic.c ****         matrix_row_t matrix_row = matrix_get_row(r);
 172               		.loc 1 116 43 is_stmt 0 discriminator 2 view .LVU37
 173 0074 CF5F      		subi r28,lo8(-(1))
 174               	.LVL14:
 116:../../tmk_core/common/bootmagic.c ****         matrix_row_t matrix_row = matrix_get_row(r);
 175               		.loc 1 116 25 is_stmt 1 discriminator 2 view .LVU38
 116:../../tmk_core/common/bootmagic.c ****         matrix_row_t matrix_row = matrix_get_row(r);
 176               		.loc 1 116 5 is_stmt 0 discriminator 2 view .LVU39
 177 0076 C031      		cpi r28,lo8(16)
 178 0078 01F4      		brne .L8
 179               	.LBE13:
 135:../../tmk_core/common/bootmagic.c **** }
 180               		.loc 1 135 12 view .LVU40
 181 007a 80E0      		ldi r24,0
 182 007c 00C0      		rjmp .L1
 183               		.cfi_endproc
 184               	.LFE11:
 186               		.section	.text.bootmagic_scan_key,"ax",@progbits
 187               	.global	bootmagic_scan_key
 189               	bootmagic_scan_key:
 190               	.LVL15:
 191               	.LFB12:
 137:../../tmk_core/common/bootmagic.c **** 
 138:../../tmk_core/common/bootmagic.c **** bool bootmagic_scan_key(uint16_t code)
 139:../../tmk_core/common/bootmagic.c **** {
 192               		.loc 1 139 1 is_stmt 1 view -0
 193               		.cfi_startproc
 194               		.loc 1 139 1 is_stmt 0 view .LVU42
 195 0000 CF93      		push r28
 196               	.LCFI7:
 197               		.cfi_def_cfa_offset 3
 198               		.cfi_offset 28, -2
 199 0002 DF93      		push r29
 200               	.LCFI8:
 201               		.cfi_def_cfa_offset 4
 202               		.cfi_offset 29, -3
 203               	/* prologue: function */
 204               	/* frame size = 0 */
 205               	/* stack size = 2 */
 206               	.L__stack_usage = 2
 207 0004 D82F      		mov r29,r24
 208 0006 C92F      		mov r28,r25
 140:../../tmk_core/common/bootmagic.c ****     if (!scan_key(BOOTMAGIC_KEY_SALT)) return false;
 209               		.loc 1 140 5 is_stmt 1 view .LVU43
 210               		.loc 1 140 10 is_stmt 0 view .LVU44
 211 0008 8CE2      		ldi r24,lo8(44)
 212 000a 90E0      		ldi r25,0
 213               	.LVL16:
 214               		.loc 1 140 10 view .LVU45
 215 000c 0E94 0000 		call scan_key
 216               	.LVL17:
 217               		.loc 1 140 8 view .LVU46
 218 0010 8823      		tst r24
 219 0012 01F0      		breq .L17
 141:../../tmk_core/common/bootmagic.c **** 
 142:../../tmk_core/common/bootmagic.c ****     return scan_key(code);
 220               		.loc 1 142 5 is_stmt 1 view .LVU47
 221               		.loc 1 142 12 is_stmt 0 view .LVU48
 222 0014 8D2F      		mov r24,r29
 223 0016 9C2F      		mov r25,r28
 224               	/* epilogue start */
 143:../../tmk_core/common/bootmagic.c **** }
 225               		.loc 1 143 1 view .LVU49
 226 0018 DF91      		pop r29
 227 001a CF91      		pop r28
 142:../../tmk_core/common/bootmagic.c **** }
 228               		.loc 1 142 12 view .LVU50
 229 001c 0C94 0000 		jmp scan_key
 230               	.LVL18:
 231               	.L17:
 232               		.loc 1 143 1 view .LVU51
 233 0020 80E0      		ldi r24,0
 234               	/* epilogue start */
 235 0022 DF91      		pop r29
 236 0024 CF91      		pop r28
 237 0026 0895      		ret
 238               		.cfi_endproc
 239               	.LFE12:
 241               		.section	.text.bootmagic,"ax",@progbits
 242               	.global	bootmagic
 244               	bootmagic:
 245               	.LFB10:
  18:../../tmk_core/common/bootmagic.c ****     /* check signature */
 246               		.loc 1 18 1 is_stmt 1 view -0
 247               		.cfi_startproc
 248 0000 CF93      		push r28
 249               	.LCFI9:
 250               		.cfi_def_cfa_offset 3
 251               		.cfi_offset 28, -2
 252 0002 DF93      		push r29
 253               	.LCFI10:
 254               		.cfi_def_cfa_offset 4
 255               		.cfi_offset 29, -3
 256 0004 00D0      		rcall .
 257 0006 00D0      		rcall .
 258               	.LCFI11:
 259               		.cfi_def_cfa_offset 8
 260 0008 CDB7      		in r28,__SP_L__
 261 000a DEB7      		in r29,__SP_H__
 262               	.LCFI12:
 263               		.cfi_def_cfa_register 28
 264               	/* prologue: function */
 265               	/* frame size = 4 */
 266               	/* stack size = 6 */
 267               	.L__stack_usage = 6
  20:../../tmk_core/common/bootmagic.c ****         eeconfig_init();
 268               		.loc 1 20 5 view .LVU53
  20:../../tmk_core/common/bootmagic.c ****         eeconfig_init();
 269               		.loc 1 20 10 is_stmt 0 view .LVU54
 270 000c 0E94 0000 		call eeconfig_is_enabled
 271               	.LVL19:
  20:../../tmk_core/common/bootmagic.c ****         eeconfig_init();
 272               		.loc 1 20 8 view .LVU55
 273 0010 8111      		cpse r24,__zero_reg__
 274 0012 00C0      		rjmp .L20
  21:../../tmk_core/common/bootmagic.c ****     }
 275               		.loc 1 21 9 is_stmt 1 view .LVU56
 276 0014 0E94 0000 		call eeconfig_init
 277               	.LVL20:
 278               	.L20:
  25:../../tmk_core/common/bootmagic.c ****     uint8_t scan = 100;
 279               		.loc 1 25 5 view .LVU57
 280               	.LBB14:
  25:../../tmk_core/common/bootmagic.c ****     uint8_t scan = 100;
 281               		.loc 1 25 5 view .LVU58
  25:../../tmk_core/common/bootmagic.c ****     uint8_t scan = 100;
 282               		.loc 1 25 5 view .LVU59
 283               	.LBE14:
 284 0018 80E0      		ldi r24,lo8(__c.1)
 285 001a 90E0      		ldi r25,hi8(__c.1)
 286 001c 0E94 0000 		call xputs
 287               	.LVL21:
  26:../../tmk_core/common/bootmagic.c ****     while (scan--) { matrix_scan(); wait_ms(10); }
 288               		.loc 1 26 5 view .LVU60
  27:../../tmk_core/common/bootmagic.c ****     print("done.\n");
 289               		.loc 1 27 5 view .LVU61
  27:../../tmk_core/common/bootmagic.c ****     print("done.\n");
 290               		.loc 1 27 11 is_stmt 0 view .LVU62
 291 0020 25E6      		ldi r18,lo8(101)
 292 0022 2983      		std Y+1,r18
 293               	.LVL22:
 294               	.L21:
  27:../../tmk_core/common/bootmagic.c ****     print("done.\n");
 295               		.loc 1 27 11 is_stmt 1 discriminator 1 view .LVU63
  27:../../tmk_core/common/bootmagic.c ****     print("done.\n");
 296               		.loc 1 27 11 is_stmt 0 discriminator 1 view .LVU64
 297 0024 9981      		ldd r25,Y+1
 298 0026 9150      		subi r25,lo8(-(-1))
 299 0028 9983      		std Y+1,r25
 300               	.LVL23:
  27:../../tmk_core/common/bootmagic.c ****     print("done.\n");
 301               		.loc 1 27 11 discriminator 1 view .LVU65
 302 002a 9111      		cpse r25,__zero_reg__
 303 002c 00C0      		rjmp .L22
  28:../../tmk_core/common/bootmagic.c **** 
 304               		.loc 1 28 5 is_stmt 1 view .LVU66
 305               	.LBB15:
  28:../../tmk_core/common/bootmagic.c **** 
 306               		.loc 1 28 5 view .LVU67
  28:../../tmk_core/common/bootmagic.c **** 
 307               		.loc 1 28 5 view .LVU68
 308               	.LBE15:
 309 002e 80E0      		ldi r24,lo8(__c.0)
 310 0030 90E0      		ldi r25,hi8(__c.0)
 311 0032 0E94 0000 		call xputs
 312               	.LVL24:
  31:../../tmk_core/common/bootmagic.c ****         return;
 313               		.loc 1 31 5 view .LVU69
  31:../../tmk_core/common/bootmagic.c ****         return;
 314               		.loc 1 31 9 is_stmt 0 view .LVU70
 315 0036 89E2      		ldi r24,lo8(41)
 316 0038 90E0      		ldi r25,0
 317 003a 0E94 0000 		call bootmagic_scan_key
 318               	.LVL25:
  31:../../tmk_core/common/bootmagic.c ****         return;
 319               		.loc 1 31 8 view .LVU71
 320 003e 8111      		cpse r24,__zero_reg__
 321 0040 00C0      		rjmp .L19
  36:../../tmk_core/common/bootmagic.c ****         eeconfig_init();
 322               		.loc 1 36 5 is_stmt 1 view .LVU72
  36:../../tmk_core/common/bootmagic.c ****         eeconfig_init();
 323               		.loc 1 36 9 is_stmt 0 view .LVU73
 324 0042 8AE2      		ldi r24,lo8(42)
 325 0044 90E0      		ldi r25,0
 326 0046 0E94 0000 		call bootmagic_scan_key
 327               	.LVL26:
  36:../../tmk_core/common/bootmagic.c ****         eeconfig_init();
 328               		.loc 1 36 8 view .LVU74
 329 004a 8111      		cpse r24,__zero_reg__
  37:../../tmk_core/common/bootmagic.c ****     }
 330               		.loc 1 37 9 is_stmt 1 view .LVU75
 331 004c 0E94 0000 		call eeconfig_init
 332               	.LVL27:
 333               	.L24:
  41:../../tmk_core/common/bootmagic.c ****         bootloader_jump();
 334               		.loc 1 41 5 view .LVU76
  41:../../tmk_core/common/bootmagic.c ****         bootloader_jump();
 335               		.loc 1 41 9 is_stmt 0 view .LVU77
 336 0050 85E0      		ldi r24,lo8(5)
 337 0052 90E0      		ldi r25,0
 338 0054 0E94 0000 		call bootmagic_scan_key
 339               	.LVL28:
  41:../../tmk_core/common/bootmagic.c ****         bootloader_jump();
 340               		.loc 1 41 8 view .LVU78
 341 0058 8111      		cpse r24,__zero_reg__
  42:../../tmk_core/common/bootmagic.c ****     }
 342               		.loc 1 42 9 is_stmt 1 view .LVU79
 343 005a 0E94 0000 		call bootloader_jump
 344               	.LVL29:
 345               	.L25:
  46:../../tmk_core/common/bootmagic.c **** 
 346               		.loc 1 46 5 view .LVU80
 347 005e 0E94 0000 		call hook_bootmagic
 348               	.LVL30:
  49:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_DEBUG_ENABLE)) {
 349               		.loc 1 49 5 view .LVU81
  49:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_DEBUG_ENABLE)) {
 350               		.loc 1 49 24 is_stmt 0 view .LVU82
 351 0062 0E94 0000 		call eeconfig_read_debug
 352               	.LVL31:
  49:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_DEBUG_ENABLE)) {
 353               		.loc 1 49 22 view .LVU83
 354 0066 8093 0000 		sts debug_config,r24
  50:../../tmk_core/common/bootmagic.c ****         if (bootmagic_scan_key(BOOTMAGIC_KEY_DEBUG_MATRIX)) {
 355               		.loc 1 50 5 is_stmt 1 view .LVU84
  50:../../tmk_core/common/bootmagic.c ****         if (bootmagic_scan_key(BOOTMAGIC_KEY_DEBUG_MATRIX)) {
 356               		.loc 1 50 9 is_stmt 0 view .LVU85
 357 006a 87E0      		ldi r24,lo8(7)
 358 006c 90E0      		ldi r25,0
 359 006e 0E94 0000 		call bootmagic_scan_key
 360               	.LVL32:
  50:../../tmk_core/common/bootmagic.c ****         if (bootmagic_scan_key(BOOTMAGIC_KEY_DEBUG_MATRIX)) {
 361               		.loc 1 50 8 view .LVU86
 362 0072 8823      		tst r24
 363 0074 01F0      		breq .L26
  51:../../tmk_core/common/bootmagic.c ****             debug_config.matrix = !debug_config.matrix;
 364               		.loc 1 51 9 is_stmt 1 view .LVU87
  51:../../tmk_core/common/bootmagic.c ****             debug_config.matrix = !debug_config.matrix;
 365               		.loc 1 51 13 is_stmt 0 view .LVU88
 366 0076 8BE1      		ldi r24,lo8(27)
 367 0078 90E0      		ldi r25,0
 368 007a 0E94 0000 		call bootmagic_scan_key
 369               	.LVL33:
  51:../../tmk_core/common/bootmagic.c ****             debug_config.matrix = !debug_config.matrix;
 370               		.loc 1 51 12 view .LVU89
 371 007e 8823      		tst r24
 372 0080 01F4      		brne .+2
 373 0082 00C0      		rjmp .L27
  52:../../tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_key(BOOTMAGIC_KEY_DEBUG_KEYBOARD)) {
 374               		.loc 1 52 13 is_stmt 1 view .LVU90
  52:../../tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_key(BOOTMAGIC_KEY_DEBUG_KEYBOARD)) {
 375               		.loc 1 52 48 is_stmt 0 view .LVU91
 376 0084 9091 0000 		lds r25,debug_config
  52:../../tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_key(BOOTMAGIC_KEY_DEBUG_KEYBOARD)) {
 377               		.loc 1 52 33 view .LVU92
 378 0088 892F      		mov r24,r25
 379 008a 8D7F      		andi r24,~(1<<1)
 380 008c 91FF      		sbrs r25,1
 381 008e 8260      		ori r24,1<<1
 382               	.L98:
  58:../../tmk_core/common/bootmagic.c ****         }
 383               		.loc 1 58 33 view .LVU93
 384 0090 8093 0000 		sts debug_config,r24
 385               	.LVL34:
 386               	.L26:
  61:../../tmk_core/common/bootmagic.c **** 
 387               		.loc 1 61 5 is_stmt 1 view .LVU94
 388 0094 8091 0000 		lds r24,debug_config
 389 0098 0E94 0000 		call eeconfig_write_debug
 390               	.LVL35:
  64:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_SWAP_CONTROL_CAPSLOCK)) {
 391               		.loc 1 64 5 view .LVU95
  64:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_SWAP_CONTROL_CAPSLOCK)) {
 392               		.loc 1 64 25 is_stmt 0 view .LVU96
 393 009c 0E94 0000 		call eeconfig_read_keymap
 394               	.LVL36:
  64:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_SWAP_CONTROL_CAPSLOCK)) {
 395               		.loc 1 64 23 view .LVU97
 396 00a0 8093 0000 		sts keymap_config,r24
  65:../../tmk_core/common/bootmagic.c ****         keymap_config.swap_control_capslock = !keymap_config.swap_control_capslock;
 397               		.loc 1 65 5 is_stmt 1 view .LVU98
  65:../../tmk_core/common/bootmagic.c ****         keymap_config.swap_control_capslock = !keymap_config.swap_control_capslock;
 398               		.loc 1 65 9 is_stmt 0 view .LVU99
 399 00a4 80EE      		ldi r24,lo8(-32)
 400 00a6 90E0      		ldi r25,0
 401 00a8 0E94 0000 		call bootmagic_scan_key
 402               	.LVL37:
  65:../../tmk_core/common/bootmagic.c ****         keymap_config.swap_control_capslock = !keymap_config.swap_control_capslock;
 403               		.loc 1 65 8 view .LVU100
 404 00ac 8823      		tst r24
 405 00ae 01F0      		breq .L30
  66:../../tmk_core/common/bootmagic.c ****     }
 406               		.loc 1 66 9 is_stmt 1 view .LVU101
  66:../../tmk_core/common/bootmagic.c ****     }
 407               		.loc 1 66 61 is_stmt 0 view .LVU102
 408 00b0 9091 0000 		lds r25,keymap_config
  66:../../tmk_core/common/bootmagic.c ****     }
 409               		.loc 1 66 45 view .LVU103
 410 00b4 892F      		mov r24,r25
 411 00b6 8E7F      		andi r24,~(1<<0)
 412 00b8 90FF      		sbrs r25,0
 413 00ba 8160      		ori r24,1<<0
 414 00bc 8093 0000 		sts keymap_config,r24
 415               	.L30:
  68:../../tmk_core/common/bootmagic.c ****         keymap_config.capslock_to_control = !keymap_config.capslock_to_control;
 416               		.loc 1 68 5 is_stmt 1 view .LVU104
  68:../../tmk_core/common/bootmagic.c ****         keymap_config.capslock_to_control = !keymap_config.capslock_to_control;
 417               		.loc 1 68 9 is_stmt 0 view .LVU105
 418 00c0 89E3      		ldi r24,lo8(57)
 419 00c2 90E0      		ldi r25,0
 420 00c4 0E94 0000 		call bootmagic_scan_key
 421               	.LVL38:
  68:../../tmk_core/common/bootmagic.c ****         keymap_config.capslock_to_control = !keymap_config.capslock_to_control;
 422               		.loc 1 68 8 view .LVU106
 423 00c8 8823      		tst r24
 424 00ca 01F0      		breq .L31
  69:../../tmk_core/common/bootmagic.c ****     }
 425               		.loc 1 69 9 is_stmt 1 view .LVU107
  69:../../tmk_core/common/bootmagic.c ****     }
 426               		.loc 1 69 59 is_stmt 0 view .LVU108
 427 00cc 9091 0000 		lds r25,keymap_config
  69:../../tmk_core/common/bootmagic.c ****     }
 428               		.loc 1 69 43 view .LVU109
 429 00d0 892F      		mov r24,r25
 430 00d2 8D7F      		andi r24,~(1<<1)
 431 00d4 91FF      		sbrs r25,1
 432 00d6 8260      		ori r24,1<<1
 433 00d8 8093 0000 		sts keymap_config,r24
 434               	.L31:
  71:../../tmk_core/common/bootmagic.c ****         keymap_config.swap_lalt_lgui = !keymap_config.swap_lalt_lgui;
 435               		.loc 1 71 5 is_stmt 1 view .LVU110
  71:../../tmk_core/common/bootmagic.c ****         keymap_config.swap_lalt_lgui = !keymap_config.swap_lalt_lgui;
 436               		.loc 1 71 9 is_stmt 0 view .LVU111
 437 00dc 82EE      		ldi r24,lo8(-30)
 438 00de 90E0      		ldi r25,0
 439 00e0 0E94 0000 		call bootmagic_scan_key
 440               	.LVL39:
  71:../../tmk_core/common/bootmagic.c ****         keymap_config.swap_lalt_lgui = !keymap_config.swap_lalt_lgui;
 441               		.loc 1 71 8 view .LVU112
 442 00e4 8823      		tst r24
 443 00e6 01F0      		breq .L32
  72:../../tmk_core/common/bootmagic.c ****     }
 444               		.loc 1 72 9 is_stmt 1 view .LVU113
  72:../../tmk_core/common/bootmagic.c ****     }
 445               		.loc 1 72 54 is_stmt 0 view .LVU114
 446 00e8 9091 0000 		lds r25,keymap_config
  72:../../tmk_core/common/bootmagic.c ****     }
 447               		.loc 1 72 38 view .LVU115
 448 00ec 892F      		mov r24,r25
 449 00ee 8B7F      		andi r24,~(1<<2)
 450 00f0 92FF      		sbrs r25,2
 451 00f2 8460      		ori r24,1<<2
 452 00f4 8093 0000 		sts keymap_config,r24
 453               	.L32:
  74:../../tmk_core/common/bootmagic.c ****         keymap_config.swap_ralt_rgui = !keymap_config.swap_ralt_rgui;
 454               		.loc 1 74 5 is_stmt 1 view .LVU116
  74:../../tmk_core/common/bootmagic.c ****         keymap_config.swap_ralt_rgui = !keymap_config.swap_ralt_rgui;
 455               		.loc 1 74 9 is_stmt 0 view .LVU117
 456 00f8 86EE      		ldi r24,lo8(-26)
 457 00fa 90E0      		ldi r25,0
 458 00fc 0E94 0000 		call bootmagic_scan_key
 459               	.LVL40:
  74:../../tmk_core/common/bootmagic.c ****         keymap_config.swap_ralt_rgui = !keymap_config.swap_ralt_rgui;
 460               		.loc 1 74 8 view .LVU118
 461 0100 8823      		tst r24
 462 0102 01F0      		breq .L33
  75:../../tmk_core/common/bootmagic.c ****     }
 463               		.loc 1 75 9 is_stmt 1 view .LVU119
  75:../../tmk_core/common/bootmagic.c ****     }
 464               		.loc 1 75 54 is_stmt 0 view .LVU120
 465 0104 9091 0000 		lds r25,keymap_config
  75:../../tmk_core/common/bootmagic.c ****     }
 466               		.loc 1 75 38 view .LVU121
 467 0108 892F      		mov r24,r25
 468 010a 877F      		andi r24,~(1<<3)
 469 010c 93FF      		sbrs r25,3
 470 010e 8860      		ori r24,1<<3
 471 0110 8093 0000 		sts keymap_config,r24
 472               	.L33:
  77:../../tmk_core/common/bootmagic.c ****         keymap_config.no_gui = !keymap_config.no_gui;
 473               		.loc 1 77 5 is_stmt 1 view .LVU122
  77:../../tmk_core/common/bootmagic.c ****         keymap_config.no_gui = !keymap_config.no_gui;
 474               		.loc 1 77 9 is_stmt 0 view .LVU123
 475 0114 83EE      		ldi r24,lo8(-29)
 476 0116 90E0      		ldi r25,0
 477 0118 0E94 0000 		call bootmagic_scan_key
 478               	.LVL41:
  77:../../tmk_core/common/bootmagic.c ****         keymap_config.no_gui = !keymap_config.no_gui;
 479               		.loc 1 77 8 view .LVU124
 480 011c 8823      		tst r24
 481 011e 01F0      		breq .L34
  78:../../tmk_core/common/bootmagic.c ****     }
 482               		.loc 1 78 9 is_stmt 1 view .LVU125
  78:../../tmk_core/common/bootmagic.c ****     }
 483               		.loc 1 78 46 is_stmt 0 view .LVU126
 484 0120 9091 0000 		lds r25,keymap_config
  78:../../tmk_core/common/bootmagic.c ****     }
 485               		.loc 1 78 30 view .LVU127
 486 0124 892F      		mov r24,r25
 487 0126 8F7E      		andi r24,~(1<<4)
 488 0128 94FF      		sbrs r25,4
 489 012a 8061      		ori r24,1<<4
 490 012c 8093 0000 		sts keymap_config,r24
 491               	.L34:
  80:../../tmk_core/common/bootmagic.c ****         keymap_config.swap_grave_esc = !keymap_config.swap_grave_esc;
 492               		.loc 1 80 5 is_stmt 1 view .LVU128
  80:../../tmk_core/common/bootmagic.c ****         keymap_config.swap_grave_esc = !keymap_config.swap_grave_esc;
 493               		.loc 1 80 9 is_stmt 0 view .LVU129
 494 0130 85E3      		ldi r24,lo8(53)
 495 0132 90E0      		ldi r25,0
 496 0134 0E94 0000 		call bootmagic_scan_key
 497               	.LVL42:
  80:../../tmk_core/common/bootmagic.c ****         keymap_config.swap_grave_esc = !keymap_config.swap_grave_esc;
 498               		.loc 1 80 8 view .LVU130
 499 0138 8823      		tst r24
 500 013a 01F0      		breq .L35
  81:../../tmk_core/common/bootmagic.c ****     }
 501               		.loc 1 81 9 is_stmt 1 view .LVU131
  81:../../tmk_core/common/bootmagic.c ****     }
 502               		.loc 1 81 54 is_stmt 0 view .LVU132
 503 013c 9091 0000 		lds r25,keymap_config
  81:../../tmk_core/common/bootmagic.c ****     }
 504               		.loc 1 81 38 view .LVU133
 505 0140 892F      		mov r24,r25
 506 0142 8F7D      		andi r24,~(1<<5)
 507 0144 95FF      		sbrs r25,5
 508 0146 8062      		ori r24,1<<5
 509 0148 8093 0000 		sts keymap_config,r24
 510               	.L35:
  83:../../tmk_core/common/bootmagic.c ****         keymap_config.swap_backslash_backspace = !keymap_config.swap_backslash_backspace;
 511               		.loc 1 83 5 is_stmt 1 view .LVU134
  83:../../tmk_core/common/bootmagic.c ****         keymap_config.swap_backslash_backspace = !keymap_config.swap_backslash_backspace;
 512               		.loc 1 83 9 is_stmt 0 view .LVU135
 513 014c 81E3      		ldi r24,lo8(49)
 514 014e 90E0      		ldi r25,0
 515 0150 0E94 0000 		call bootmagic_scan_key
 516               	.LVL43:
  83:../../tmk_core/common/bootmagic.c ****         keymap_config.swap_backslash_backspace = !keymap_config.swap_backslash_backspace;
 517               		.loc 1 83 8 view .LVU136
 518 0154 8823      		tst r24
 519 0156 01F0      		breq .L36
  84:../../tmk_core/common/bootmagic.c ****     }
 520               		.loc 1 84 9 is_stmt 1 view .LVU137
  84:../../tmk_core/common/bootmagic.c ****     }
 521               		.loc 1 84 64 is_stmt 0 view .LVU138
 522 0158 9091 0000 		lds r25,keymap_config
  84:../../tmk_core/common/bootmagic.c ****     }
 523               		.loc 1 84 48 view .LVU139
 524 015c 892F      		mov r24,r25
 525 015e 8F7B      		andi r24,~(1<<6)
 526 0160 96FF      		sbrs r25,6
 527 0162 8064      		ori r24,1<<6
 528 0164 8093 0000 		sts keymap_config,r24
 529               	.L36:
  86:../../tmk_core/common/bootmagic.c ****         keymap_config.nkro = !keymap_config.nkro;
 530               		.loc 1 86 5 is_stmt 1 view .LVU140
  86:../../tmk_core/common/bootmagic.c ****         keymap_config.nkro = !keymap_config.nkro;
 531               		.loc 1 86 9 is_stmt 0 view .LVU141
 532 0168 81E1      		ldi r24,lo8(17)
 533 016a 90E0      		ldi r25,0
 534 016c 0E94 0000 		call bootmagic_scan_key
 535               	.LVL44:
  86:../../tmk_core/common/bootmagic.c ****         keymap_config.nkro = !keymap_config.nkro;
 536               		.loc 1 86 8 view .LVU142
 537 0170 8823      		tst r24
 538 0172 01F0      		breq .L37
  87:../../tmk_core/common/bootmagic.c ****     }
 539               		.loc 1 87 9 is_stmt 1 view .LVU143
  87:../../tmk_core/common/bootmagic.c ****     }
 540               		.loc 1 87 44 is_stmt 0 view .LVU144
 541 0174 9091 0000 		lds r25,keymap_config
  87:../../tmk_core/common/bootmagic.c ****     }
 542               		.loc 1 87 28 view .LVU145
 543 0178 892F      		mov r24,r25
 544 017a 97FB      		bst r25,7
 545 017c 87F9      		bld r24,7
 546 017e 8058      		subi r24,0x80
 547 0180 8093 0000 		sts keymap_config,r24
 548               	.L37:
  89:../../tmk_core/common/bootmagic.c **** 
 549               		.loc 1 89 5 is_stmt 1 view .LVU146
 550 0184 8091 0000 		lds r24,keymap_config
 551 0188 0E94 0000 		call eeconfig_write_keymap
 552               	.LVL45:
  96:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_DEFAULT_LAYER_0)) { default_layer |= (1<<0); }
 553               		.loc 1 96 5 view .LVU147
  97:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_DEFAULT_LAYER_1)) { default_layer |= (1<<1); }
 554               		.loc 1 97 5 view .LVU148
  97:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_DEFAULT_LAYER_1)) { default_layer |= (1<<1); }
 555               		.loc 1 97 9 is_stmt 0 view .LVU149
 556 018c 87E2      		ldi r24,lo8(39)
 557 018e 90E0      		ldi r25,0
 558 0190 0E94 0000 		call bootmagic_scan_key
 559               	.LVL46:
 560 0194 8983      		std Y+1,r24
 561               	.LVL47:
  98:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_DEFAULT_LAYER_2)) { default_layer |= (1<<2); }
 562               		.loc 1 98 5 is_stmt 1 view .LVU150
  98:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_DEFAULT_LAYER_2)) { default_layer |= (1<<2); }
 563               		.loc 1 98 9 is_stmt 0 view .LVU151
 564 0196 8EE1      		ldi r24,lo8(30)
 565 0198 90E0      		ldi r25,0
 566               	.LVL48:
  98:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_DEFAULT_LAYER_2)) { default_layer |= (1<<2); }
 567               		.loc 1 98 9 view .LVU152
 568 019a 0E94 0000 		call bootmagic_scan_key
 569               	.LVL49:
  98:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_DEFAULT_LAYER_2)) { default_layer |= (1<<2); }
 570               		.loc 1 98 8 view .LVU153
 571 019e 8823      		tst r24
 572 01a0 01F0      		breq .L38
  98:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_DEFAULT_LAYER_2)) { default_layer |= (1<<2); }
 573               		.loc 1 98 62 is_stmt 1 discriminator 1 view .LVU154
  98:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_DEFAULT_LAYER_2)) { default_layer |= (1<<2); }
 574               		.loc 1 98 76 is_stmt 0 discriminator 1 view .LVU155
 575 01a2 A981      		ldd r26,Y+1
 576 01a4 A260      		ori r26,lo8(2)
 577 01a6 A983      		std Y+1,r26
 578               	.LVL50:
 579               	.L38:
  99:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_DEFAULT_LAYER_3)) { default_layer |= (1<<3); }
 580               		.loc 1 99 5 is_stmt 1 view .LVU156
  99:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_DEFAULT_LAYER_3)) { default_layer |= (1<<3); }
 581               		.loc 1 99 9 is_stmt 0 view .LVU157
 582 01a8 8FE1      		ldi r24,lo8(31)
 583 01aa 90E0      		ldi r25,0
 584 01ac 0E94 0000 		call bootmagic_scan_key
 585               	.LVL51:
  99:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_DEFAULT_LAYER_3)) { default_layer |= (1<<3); }
 586               		.loc 1 99 8 view .LVU158
 587 01b0 8823      		tst r24
 588 01b2 01F0      		breq .L39
  99:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_DEFAULT_LAYER_3)) { default_layer |= (1<<3); }
 589               		.loc 1 99 62 is_stmt 1 discriminator 1 view .LVU159
  99:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_DEFAULT_LAYER_3)) { default_layer |= (1<<3); }
 590               		.loc 1 99 76 is_stmt 0 discriminator 1 view .LVU160
 591 01b4 B981      		ldd r27,Y+1
 592 01b6 B460      		ori r27,lo8(4)
 593 01b8 B983      		std Y+1,r27
 594               	.LVL52:
 595               	.L39:
 100:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_DEFAULT_LAYER_4)) { default_layer |= (1<<4); }
 596               		.loc 1 100 5 is_stmt 1 view .LVU161
 100:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_DEFAULT_LAYER_4)) { default_layer |= (1<<4); }
 597               		.loc 1 100 9 is_stmt 0 view .LVU162
 598 01ba 80E2      		ldi r24,lo8(32)
 599 01bc 90E0      		ldi r25,0
 600 01be 0E94 0000 		call bootmagic_scan_key
 601               	.LVL53:
 100:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_DEFAULT_LAYER_4)) { default_layer |= (1<<4); }
 602               		.loc 1 100 8 view .LVU163
 603 01c2 8823      		tst r24
 604 01c4 01F0      		breq .L40
 100:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_DEFAULT_LAYER_4)) { default_layer |= (1<<4); }
 605               		.loc 1 100 62 is_stmt 1 discriminator 1 view .LVU164
 100:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_DEFAULT_LAYER_4)) { default_layer |= (1<<4); }
 606               		.loc 1 100 76 is_stmt 0 discriminator 1 view .LVU165
 607 01c6 2981      		ldd r18,Y+1
 608 01c8 2860      		ori r18,lo8(8)
 609 01ca 2983      		std Y+1,r18
 610               	.LVL54:
 611               	.L40:
 101:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_DEFAULT_LAYER_5)) { default_layer |= (1<<5); }
 612               		.loc 1 101 5 is_stmt 1 view .LVU166
 101:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_DEFAULT_LAYER_5)) { default_layer |= (1<<5); }
 613               		.loc 1 101 9 is_stmt 0 view .LVU167
 614 01cc 81E2      		ldi r24,lo8(33)
 615 01ce 90E0      		ldi r25,0
 616 01d0 0E94 0000 		call bootmagic_scan_key
 617               	.LVL55:
 101:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_DEFAULT_LAYER_5)) { default_layer |= (1<<5); }
 618               		.loc 1 101 8 view .LVU168
 619 01d4 8823      		tst r24
 620 01d6 01F0      		breq .L41
 101:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_DEFAULT_LAYER_5)) { default_layer |= (1<<5); }
 621               		.loc 1 101 62 is_stmt 1 discriminator 1 view .LVU169
 101:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_DEFAULT_LAYER_5)) { default_layer |= (1<<5); }
 622               		.loc 1 101 76 is_stmt 0 discriminator 1 view .LVU170
 623 01d8 3981      		ldd r19,Y+1
 624 01da 3061      		ori r19,lo8(16)
 625 01dc 3983      		std Y+1,r19
 626               	.LVL56:
 627               	.L41:
 102:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_DEFAULT_LAYER_6)) { default_layer |= (1<<6); }
 628               		.loc 1 102 5 is_stmt 1 view .LVU171
 102:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_DEFAULT_LAYER_6)) { default_layer |= (1<<6); }
 629               		.loc 1 102 9 is_stmt 0 view .LVU172
 630 01de 82E2      		ldi r24,lo8(34)
 631 01e0 90E0      		ldi r25,0
 632 01e2 0E94 0000 		call bootmagic_scan_key
 633               	.LVL57:
 102:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_DEFAULT_LAYER_6)) { default_layer |= (1<<6); }
 634               		.loc 1 102 8 view .LVU173
 635 01e6 8823      		tst r24
 636 01e8 01F0      		breq .L42
 102:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_DEFAULT_LAYER_6)) { default_layer |= (1<<6); }
 637               		.loc 1 102 62 is_stmt 1 discriminator 1 view .LVU174
 102:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_DEFAULT_LAYER_6)) { default_layer |= (1<<6); }
 638               		.loc 1 102 76 is_stmt 0 discriminator 1 view .LVU175
 639 01ea 4981      		ldd r20,Y+1
 640 01ec 4062      		ori r20,lo8(32)
 641 01ee 4983      		std Y+1,r20
 642               	.LVL58:
 643               	.L42:
 103:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_DEFAULT_LAYER_7)) { default_layer |= (1<<7); }
 644               		.loc 1 103 5 is_stmt 1 view .LVU176
 103:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_DEFAULT_LAYER_7)) { default_layer |= (1<<7); }
 645               		.loc 1 103 9 is_stmt 0 view .LVU177
 646 01f0 83E2      		ldi r24,lo8(35)
 647 01f2 90E0      		ldi r25,0
 648 01f4 0E94 0000 		call bootmagic_scan_key
 649               	.LVL59:
 103:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_DEFAULT_LAYER_7)) { default_layer |= (1<<7); }
 650               		.loc 1 103 8 view .LVU178
 651 01f8 8823      		tst r24
 652 01fa 01F0      		breq .L43
 103:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_DEFAULT_LAYER_7)) { default_layer |= (1<<7); }
 653               		.loc 1 103 62 is_stmt 1 discriminator 1 view .LVU179
 103:../../tmk_core/common/bootmagic.c ****     if (bootmagic_scan_key(BOOTMAGIC_KEY_DEFAULT_LAYER_7)) { default_layer |= (1<<7); }
 654               		.loc 1 103 76 is_stmt 0 discriminator 1 view .LVU180
 655 01fc 5981      		ldd r21,Y+1
 656 01fe 5064      		ori r21,lo8(64)
 657 0200 5983      		std Y+1,r21
 658               	.LVL60:
 659               	.L43:
 104:../../tmk_core/common/bootmagic.c ****     if (default_layer) {
 660               		.loc 1 104 5 is_stmt 1 view .LVU181
 104:../../tmk_core/common/bootmagic.c ****     if (default_layer) {
 661               		.loc 1 104 9 is_stmt 0 view .LVU182
 662 0202 84E2      		ldi r24,lo8(36)
 663 0204 90E0      		ldi r25,0
 664 0206 0E94 0000 		call bootmagic_scan_key
 665               	.LVL61:
 104:../../tmk_core/common/bootmagic.c ****     if (default_layer) {
 666               		.loc 1 104 8 view .LVU183
 667 020a 8823      		tst r24
 668 020c 01F4      		brne .+2
 669 020e 00C0      		rjmp .L44
 104:../../tmk_core/common/bootmagic.c ****     if (default_layer) {
 670               		.loc 1 104 62 is_stmt 1 discriminator 1 view .LVU184
 104:../../tmk_core/common/bootmagic.c ****     if (default_layer) {
 671               		.loc 1 104 76 is_stmt 0 discriminator 1 view .LVU185
 672 0210 8981      		ldd r24,Y+1
 673 0212 8068      		ori r24,lo8(-128)
 674 0214 8983      		std Y+1,r24
 675               	.LVL62:
 105:../../tmk_core/common/bootmagic.c ****         eeconfig_write_default_layer(default_layer);
 676               		.loc 1 105 5 is_stmt 1 discriminator 1 view .LVU186
 677               	.L45:
 106:../../tmk_core/common/bootmagic.c ****         default_layer_set((uint32_t)default_layer);
 678               		.loc 1 106 9 view .LVU187
 679 0216 8981      		ldd r24,Y+1
 680 0218 0E94 0000 		call eeconfig_write_default_layer
 681               	.LVL63:
 107:../../tmk_core/common/bootmagic.c ****     } else {
 682               		.loc 1 107 9 view .LVU188
 683 021c 3981      		ldd r19,Y+1
 684 021e 232F      		mov r18,r19
 685               	.LVL64:
 686               	.L99:
 110:../../tmk_core/common/bootmagic.c ****     }
 687               		.loc 1 110 9 is_stmt 0 view .LVU189
 688 0220 30E0      		ldi r19,0
 689 0222 50E0      		ldi r21,0
 690 0224 40E0      		ldi r20,0
 691 0226 2983      		std Y+1,r18
 692 0228 3A83      		std Y+2,r19
 693 022a 4B83      		std Y+3,r20
 694 022c 5C83      		std Y+4,r21
 695 022e CA01      		movw r24,r20
 696 0230 B901      		movw r22,r18
 697               	/* epilogue start */
 112:../../tmk_core/common/bootmagic.c **** 
 698               		.loc 1 112 1 view .LVU190
 699 0232 0F90      		pop __tmp_reg__
 700 0234 0F90      		pop __tmp_reg__
 701 0236 0F90      		pop __tmp_reg__
 702 0238 0F90      		pop __tmp_reg__
 703 023a DF91      		pop r29
 704 023c CF91      		pop r28
 110:../../tmk_core/common/bootmagic.c ****     }
 705               		.loc 1 110 9 view .LVU191
 706 023e 0C94 0000 		jmp default_layer_set
 707               	.LVL65:
 708               	.L22:
  27:../../tmk_core/common/bootmagic.c ****     print("done.\n");
 709               		.loc 1 27 22 is_stmt 1 discriminator 2 view .LVU192
 710 0242 0E94 0000 		call matrix_scan
 711               	.LVL66:
  27:../../tmk_core/common/bootmagic.c ****     print("done.\n");
 712               		.loc 1 27 37 discriminator 2 view .LVU193
 713               	.LBB16:
 714               	.LBI16:
 715               		.file 2 "/usr/avr/include/util/delay.h"
   1:/usr/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/avr/include/util/delay.h **** 
   6:/usr/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/avr/include/util/delay.h **** 
   9:/usr/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/avr/include/util/delay.h **** 
  12:/usr/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/avr/include/util/delay.h ****      distribution.
  16:/usr/avr/include/util/delay.h **** 
  17:/usr/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/avr/include/util/delay.h **** 
  21:/usr/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/avr/include/util/delay.h **** 
  33:/usr/avr/include/util/delay.h **** /* $Id: delay.h.in 2506 2016-02-08 10:05:45Z joerg_wunsch $ */
  34:/usr/avr/include/util/delay.h **** 
  35:/usr/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/avr/include/util/delay.h **** 
  38:/usr/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/usr/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/usr/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/usr/avr/include/util/delay.h **** #  endif
  42:/usr/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/usr/avr/include/util/delay.h **** 
  44:/usr/avr/include/util/delay.h **** #include <inttypes.h>
  45:/usr/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/usr/avr/include/util/delay.h **** #include <math.h>
  47:/usr/avr/include/util/delay.h **** 
  48:/usr/avr/include/util/delay.h **** /** \file */
  49:/usr/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/usr/avr/include/util/delay.h ****     \code
  51:/usr/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/usr/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/usr/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/usr/avr/include/util/delay.h ****     \endcode
  55:/usr/avr/include/util/delay.h **** 
  56:/usr/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/usr/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/usr/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/usr/avr/include/util/delay.h ****     used.
  60:/usr/avr/include/util/delay.h **** 
  61:/usr/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/usr/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/usr/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/usr/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/usr/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/usr/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/usr/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/usr/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/usr/avr/include/util/delay.h **** 
  70:/usr/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/usr/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/usr/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/usr/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/usr/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/usr/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/usr/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/usr/avr/include/util/delay.h ****     routines linked into the application.
  78:/usr/avr/include/util/delay.h **** 
  79:/usr/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/usr/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/usr/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/usr/avr/include/util/delay.h **** 
  83:/usr/avr/include/util/delay.h **** */
  84:/usr/avr/include/util/delay.h **** 
  85:/usr/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/usr/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/usr/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/usr/avr/include/util/delay.h **** #endif
  89:/usr/avr/include/util/delay.h **** 
  90:/usr/avr/include/util/delay.h **** #ifndef F_CPU
  91:/usr/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/usr/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/usr/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/usr/avr/include/util/delay.h ****     \def F_CPU
  95:/usr/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/usr/avr/include/util/delay.h **** 
  97:/usr/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/usr/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/usr/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/usr/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/usr/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/usr/avr/include/util/delay.h **** 
 103:/usr/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/usr/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/usr/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/usr/avr/include/util/delay.h ****     integer value.
 107:/usr/avr/include/util/delay.h ****  */
 108:/usr/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/usr/avr/include/util/delay.h **** #endif
 110:/usr/avr/include/util/delay.h **** 
 111:/usr/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/usr/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/usr/avr/include/util/delay.h **** #endif
 114:/usr/avr/include/util/delay.h **** 
 115:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/usr/avr/include/util/delay.h **** #  include <math.h>
 119:/usr/avr/include/util/delay.h **** #endif
 120:/usr/avr/include/util/delay.h **** 
 121:/usr/avr/include/util/delay.h **** /**
 122:/usr/avr/include/util/delay.h ****    \ingroup util_delay
 123:/usr/avr/include/util/delay.h **** 
 124:/usr/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/usr/avr/include/util/delay.h **** 
 126:/usr/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/usr/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/usr/avr/include/util/delay.h **** 
 129:/usr/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/usr/avr/include/util/delay.h **** 
 131:/usr/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/usr/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/usr/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/usr/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/usr/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/usr/avr/include/util/delay.h **** 
 137:/usr/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/usr/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/usr/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/usr/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/usr/avr/include/util/delay.h **** 
 142:/usr/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/usr/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/usr/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/usr/avr/include/util/delay.h ****    microseconds of delay.
 146:/usr/avr/include/util/delay.h **** 
 147:/usr/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/usr/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/usr/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/usr/avr/include/util/delay.h ****    respectively.
 151:/usr/avr/include/util/delay.h **** 
 152:/usr/avr/include/util/delay.h ****    \note
 153:/usr/avr/include/util/delay.h **** 
 154:/usr/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/usr/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/usr/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/usr/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/usr/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/usr/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/usr/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/usr/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/usr/avr/include/util/delay.h ****    not available to the compiler then.
 163:/usr/avr/include/util/delay.h **** 
 164:/usr/avr/include/util/delay.h ****  */
 165:/usr/avr/include/util/delay.h **** void
 166:/usr/avr/include/util/delay.h **** _delay_ms(double __ms)
 716               		.loc 2 166 1 discriminator 2 view .LVU194
 717               	.LBB17:
 167:/usr/avr/include/util/delay.h **** {
 168:/usr/avr/include/util/delay.h **** 	double __tmp ;
 718               		.loc 2 168 2 discriminator 2 view .LVU195
 169:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/usr/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 719               		.loc 2 172 2 discriminator 2 view .LVU196
 173:/usr/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 720               		.loc 2 173 2 discriminator 2 view .LVU197
 174:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 721               		.loc 2 174 2 discriminator 2 view .LVU198
 175:/usr/avr/include/util/delay.h **** 
 176:/usr/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/usr/avr/include/util/delay.h **** 
 179:/usr/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/usr/avr/include/util/delay.h **** 
 182:/usr/avr/include/util/delay.h **** 	#else
 183:/usr/avr/include/util/delay.h **** 		//round up by default
 184:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 722               		.loc 2 184 3 discriminator 2 view .LVU199
 185:/usr/avr/include/util/delay.h **** 	#endif
 186:/usr/avr/include/util/delay.h **** 
 187:/usr/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 723               		.loc 2 187 2 discriminator 2 view .LVU200
 724 0246 8FE3      		ldi r24,lo8(-25537)
 725 0248 9CE9      		ldi r25,hi8(-25537)
 726 024a 0197      	1:	sbiw r24,1
 727 024c 01F4      		brne 1b
 728 024e 00C0      		rjmp .
 729 0250 0000      		nop
 188:/usr/avr/include/util/delay.h **** 
 189:/usr/avr/include/util/delay.h **** #else
 190:/usr/avr/include/util/delay.h **** 	uint16_t __ticks;
 191:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 4e3) * __ms;
 192:/usr/avr/include/util/delay.h **** 	if (__tmp < 1.0)
 193:/usr/avr/include/util/delay.h **** 		__ticks = 1;
 194:/usr/avr/include/util/delay.h **** 	else if (__tmp > 65535)
 195:/usr/avr/include/util/delay.h **** 	{
 196:/usr/avr/include/util/delay.h **** 		//	__ticks = requested delay in 1/10 ms
 197:/usr/avr/include/util/delay.h **** 		__ticks = (uint16_t) (__ms * 10.0);
 198:/usr/avr/include/util/delay.h **** 		while(__ticks)
 199:/usr/avr/include/util/delay.h **** 		{
 200:/usr/avr/include/util/delay.h **** 			// wait 1/10 ms
 201:/usr/avr/include/util/delay.h **** 			_delay_loop_2(((F_CPU) / 4e3) / 10);
 202:/usr/avr/include/util/delay.h **** 			__ticks --;
 203:/usr/avr/include/util/delay.h **** 		}
 204:/usr/avr/include/util/delay.h **** 		return;
 205:/usr/avr/include/util/delay.h **** 	}
 206:/usr/avr/include/util/delay.h **** 	else
 207:/usr/avr/include/util/delay.h **** 		__ticks = (uint16_t)__tmp;
 208:/usr/avr/include/util/delay.h **** 	_delay_loop_2(__ticks);
 209:/usr/avr/include/util/delay.h **** #endif
 210:/usr/avr/include/util/delay.h **** }
 730               		.loc 2 210 1 is_stmt 0 discriminator 2 view .LVU201
 731 0252 00C0      		rjmp .L21
 732               	.LVL67:
 733               	.L27:
 734               		.loc 2 210 1 discriminator 2 view .LVU202
 735               	.LBE17:
 736               	.LBE16:
  53:../../tmk_core/common/bootmagic.c ****             debug_config.keyboard = !debug_config.keyboard;
 737               		.loc 1 53 16 is_stmt 1 view .LVU203
  53:../../tmk_core/common/bootmagic.c ****             debug_config.keyboard = !debug_config.keyboard;
 738               		.loc 1 53 20 is_stmt 0 view .LVU204
 739 0254 8EE0      		ldi r24,lo8(14)
 740 0256 90E0      		ldi r25,0
 741 0258 0E94 0000 		call bootmagic_scan_key
 742               	.LVL68:
  53:../../tmk_core/common/bootmagic.c ****             debug_config.keyboard = !debug_config.keyboard;
 743               		.loc 1 53 19 view .LVU205
 744 025c 8823      		tst r24
 745 025e 01F0      		breq .L28
  54:../../tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_key(BOOTMAGIC_KEY_DEBUG_MOUSE)) {
 746               		.loc 1 54 13 is_stmt 1 view .LVU206
  54:../../tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_key(BOOTMAGIC_KEY_DEBUG_MOUSE)) {
 747               		.loc 1 54 50 is_stmt 0 view .LVU207
 748 0260 9091 0000 		lds r25,debug_config
  54:../../tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_key(BOOTMAGIC_KEY_DEBUG_MOUSE)) {
 749               		.loc 1 54 35 view .LVU208
 750 0264 892F      		mov r24,r25
 751 0266 8B7F      		andi r24,~(1<<2)
 752 0268 92FF      		sbrs r25,2
 753 026a 8460      		ori r24,1<<2
 754 026c 00C0      		rjmp .L98
 755               	.L28:
  55:../../tmk_core/common/bootmagic.c ****             debug_config.mouse = !debug_config.mouse;
 756               		.loc 1 55 16 is_stmt 1 view .LVU209
  55:../../tmk_core/common/bootmagic.c ****             debug_config.mouse = !debug_config.mouse;
 757               		.loc 1 55 20 is_stmt 0 view .LVU210
 758 026e 80E1      		ldi r24,lo8(16)
 759 0270 90E0      		ldi r25,0
 760 0272 0E94 0000 		call bootmagic_scan_key
 761               	.LVL69:
 762 0276 9091 0000 		lds r25,debug_config
  55:../../tmk_core/common/bootmagic.c ****             debug_config.mouse = !debug_config.mouse;
 763               		.loc 1 55 19 view .LVU211
 764 027a 8823      		tst r24
 765 027c 01F0      		breq .L29
  56:../../tmk_core/common/bootmagic.c ****         } else {
 766               		.loc 1 56 13 is_stmt 1 view .LVU212
  56:../../tmk_core/common/bootmagic.c ****         } else {
 767               		.loc 1 56 32 is_stmt 0 view .LVU213
 768 027e 892F      		mov r24,r25
 769 0280 877F      		andi r24,~(1<<3)
 770 0282 93FF      		sbrs r25,3
 771 0284 8860      		ori r24,1<<3
 772 0286 00C0      		rjmp .L98
 773               	.L29:
  58:../../tmk_core/common/bootmagic.c ****         }
 774               		.loc 1 58 13 is_stmt 1 view .LVU214
  58:../../tmk_core/common/bootmagic.c ****         }
 775               		.loc 1 58 33 is_stmt 0 view .LVU215
 776 0288 892F      		mov r24,r25
 777 028a 8E7F      		andi r24,~(1<<0)
 778 028c 90FF      		sbrs r25,0
 779 028e 8160      		ori r24,1<<0
 780 0290 00C0      		rjmp .L98
 781               	.LVL70:
 782               	.L44:
 105:../../tmk_core/common/bootmagic.c ****         eeconfig_write_default_layer(default_layer);
 783               		.loc 1 105 5 is_stmt 1 view .LVU216
 105:../../tmk_core/common/bootmagic.c ****         eeconfig_write_default_layer(default_layer);
 784               		.loc 1 105 8 is_stmt 0 view .LVU217
 785 0292 9981      		ldd r25,Y+1
 786 0294 9111      		cpse r25,__zero_reg__
 787 0296 00C0      		rjmp .L45
 109:../../tmk_core/common/bootmagic.c ****         default_layer_set((uint32_t)default_layer);
 788               		.loc 1 109 9 is_stmt 1 view .LVU218
 109:../../tmk_core/common/bootmagic.c ****         default_layer_set((uint32_t)default_layer);
 789               		.loc 1 109 25 is_stmt 0 view .LVU219
 790 0298 0E94 0000 		call eeconfig_read_default_layer
 791               	.LVL71:
 110:../../tmk_core/common/bootmagic.c ****     }
 792               		.loc 1 110 9 is_stmt 1 view .LVU220
 793 029c 282F      		mov r18,r24
 794 029e 00C0      		rjmp .L99
 795               	.LVL72:
 796               	.L19:
 797               	/* epilogue start */
 112:../../tmk_core/common/bootmagic.c **** 
 798               		.loc 1 112 1 is_stmt 0 view .LVU221
 799 02a0 0F90      		pop __tmp_reg__
 800 02a2 0F90      		pop __tmp_reg__
 801 02a4 0F90      		pop __tmp_reg__
 802 02a6 0F90      		pop __tmp_reg__
 803 02a8 DF91      		pop r29
 804 02aa CF91      		pop r28
 805 02ac 0895      		ret
 806               		.cfi_endproc
 807               	.LFE10:
 809               		.section	.progmem.data.__c.0,"a"
 812               	__c.0:
 813 0000 646F 6E65 		.string	"done.\n"
 813      2E0A 00
 814               		.section	.progmem.data.__c.1,"a"
 817               	__c.1:
 818 0000 626F 6F74 		.string	"bootmagic scan: ... "
 818      6D61 6769 
 818      6320 7363 
 818      616E 3A20 
 818      2E2E 2E20 
 819               	.global	keymap_config
 820               		.section	.bss.keymap_config,"aw",@nobits
 823               	keymap_config:
 824 0000 00        		.zero	1
 825               		.text
 826               	.Letext0:
 827               		.file 3 "/usr/avr/include/stdint.h"
 828               		.file 4 "../../tmk_core/common/matrix.h"
 829               		.file 5 "../../tmk_core/common/debug.h"
 830               		.file 6 "../../tmk_core/common/keyboard.h"
 831               		.file 7 "../../tmk_core/common/keycode.h"
 832               		.file 8 "../../tmk_core/common/action_code.h"
 833               		.file 9 "../../tmk_core/common/keymap.h"
 834               		.file 10 "../../tmk_core/common/action.h"
 835               		.file 11 "../../tmk_core/common/eeconfig.h"
 836               		.file 12 "../../tmk_core/common/avr/xprintf.h"
 837               		.file 13 "../../tmk_core/common/bootloader.h"
 838               		.file 14 "../../tmk_core/common/hook.h"
 839               		.file 15 "../../tmk_core/common/action_layer.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 bootmagic.c
     /tmp/ccLpsghp.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccLpsghp.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccLpsghp.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccLpsghp.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccLpsghp.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccLpsghp.s:12     .text.scan_key:0000000000000000 scan_key
     /tmp/ccLpsghp.s:189    .text.bootmagic_scan_key:0000000000000000 bootmagic_scan_key
     /tmp/ccLpsghp.s:244    .text.bootmagic:0000000000000000 bootmagic
     /tmp/ccLpsghp.s:817    .progmem.data.__c.1:0000000000000000 __c.1
     /tmp/ccLpsghp.s:812    .progmem.data.__c.0:0000000000000000 __c.0
     /tmp/ccLpsghp.s:823    .bss.keymap_config:0000000000000000 keymap_config

UNDEFINED SYMBOLS
matrix_get_row
action_for_key
eeconfig_is_enabled
eeconfig_init
xputs
bootloader_jump
hook_bootmagic
eeconfig_read_debug
debug_config
eeconfig_write_debug
eeconfig_read_keymap
eeconfig_write_keymap
eeconfig_write_default_layer
default_layer_set
matrix_scan
eeconfig_read_default_layer
__do_clear_bss
