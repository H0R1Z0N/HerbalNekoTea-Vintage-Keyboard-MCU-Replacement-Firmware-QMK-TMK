   1               		.file	"action.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.action_exec,"ax",@progbits
  11               	.global	action_exec
  13               	action_exec:
  14               	.LFB10:
  15               		.file 1 "../../tmk_core/common/action.c"
   1:../../tmk_core/common/action.c **** /*
   2:../../tmk_core/common/action.c **** Copyright 2012,2013 Jun Wako <wakojun@gmail.com>
   3:../../tmk_core/common/action.c **** 
   4:../../tmk_core/common/action.c **** This program is free software: you can redistribute it and/or modify
   5:../../tmk_core/common/action.c **** it under the terms of the GNU General Public License as published by
   6:../../tmk_core/common/action.c **** the Free Software Foundation, either version 2 of the License, or
   7:../../tmk_core/common/action.c **** (at your option) any later version.
   8:../../tmk_core/common/action.c **** 
   9:../../tmk_core/common/action.c **** This program is distributed in the hope that it will be useful,
  10:../../tmk_core/common/action.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:../../tmk_core/common/action.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:../../tmk_core/common/action.c **** GNU General Public License for more details.
  13:../../tmk_core/common/action.c **** 
  14:../../tmk_core/common/action.c **** You should have received a copy of the GNU General Public License
  15:../../tmk_core/common/action.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:../../tmk_core/common/action.c **** */
  17:../../tmk_core/common/action.c **** #include "host.h"
  18:../../tmk_core/common/action.c **** #include "keycode.h"
  19:../../tmk_core/common/action.c **** #include "keyboard.h"
  20:../../tmk_core/common/action.c **** #include "mousekey.h"
  21:../../tmk_core/common/action.c **** #include "command.h"
  22:../../tmk_core/common/action.c **** #include "led.h"
  23:../../tmk_core/common/action.c **** #include "backlight.h"
  24:../../tmk_core/common/action.c **** #include "action_layer.h"
  25:../../tmk_core/common/action.c **** #include "action_tapping.h"
  26:../../tmk_core/common/action.c **** #include "action_macro.h"
  27:../../tmk_core/common/action.c **** #include "action_util.h"
  28:../../tmk_core/common/action.c **** #include "action.h"
  29:../../tmk_core/common/action.c **** #include "hook.h"
  30:../../tmk_core/common/action.c **** #include "wait.h"
  31:../../tmk_core/common/action.c **** #include "bootloader.h"
  32:../../tmk_core/common/action.c **** 
  33:../../tmk_core/common/action.c **** #ifdef DEBUG_ACTION
  34:../../tmk_core/common/action.c **** #include "debug.h"
  35:../../tmk_core/common/action.c **** #else
  36:../../tmk_core/common/action.c **** #include "nodebug.h"
  37:../../tmk_core/common/action.c **** #endif
  38:../../tmk_core/common/action.c **** 
  39:../../tmk_core/common/action.c **** 
  40:../../tmk_core/common/action.c **** void action_exec(keyevent_t event)
  41:../../tmk_core/common/action.c **** {
  16               		.loc 1 41 1 view -0
  17               		.cfi_startproc
  18 0000 CF93      		push r28
  19               	.LCFI0:
  20               		.cfi_def_cfa_offset 3
  21               		.cfi_offset 28, -2
  22 0002 DF93      		push r29
  23               	.LCFI1:
  24               		.cfi_def_cfa_offset 4
  25               		.cfi_offset 29, -3
  26 0004 CDB7      		in r28,__SP_L__
  27 0006 DEB7      		in r29,__SP_H__
  28               	.LCFI2:
  29               		.cfi_def_cfa_register 28
  30 0008 2B97      		sbiw r28,11
  31               	.LCFI3:
  32               		.cfi_def_cfa_offset 15
  33 000a 0FB6      		in __tmp_reg__,__SREG__
  34 000c F894      		cli
  35 000e DEBF      		out __SP_H__,r29
  36 0010 0FBE      		out __SREG__,__tmp_reg__
  37 0012 CDBF      		out __SP_L__,r28
  38               	/* prologue: function */
  39               	/* frame size = 11 */
  40               	/* stack size = 13 */
  41               	.L__stack_usage = 13
  42 0014 4F83      		std Y+7,r20
  43 0016 5887      		std Y+8,r21
  44 0018 6987      		std Y+9,r22
  45 001a 7A87      		std Y+10,r23
  46 001c 8B87      		std Y+11,r24
  47               	.LVL0:
  42:../../tmk_core/common/action.c ****     if (!IS_NOEVENT(event)) {
  48               		.loc 1 42 5 view .LVU1
  49               	.LBB22:
  50               	.LBI22:
  51               		.file 2 "../../tmk_core/common/keyboard.h"
   1:../../tmk_core/common/keyboard.h **** /*
   2:../../tmk_core/common/keyboard.h **** Copyright 2011,2012,2013 Jun Wako <wakojun@gmail.com>
   3:../../tmk_core/common/keyboard.h **** 
   4:../../tmk_core/common/keyboard.h **** This program is free software: you can redistribute it and/or modify
   5:../../tmk_core/common/keyboard.h **** it under the terms of the GNU General Public License as published by
   6:../../tmk_core/common/keyboard.h **** the Free Software Foundation, either version 2 of the License, or
   7:../../tmk_core/common/keyboard.h **** (at your option) any later version.
   8:../../tmk_core/common/keyboard.h **** 
   9:../../tmk_core/common/keyboard.h **** This program is distributed in the hope that it will be useful,
  10:../../tmk_core/common/keyboard.h **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:../../tmk_core/common/keyboard.h **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:../../tmk_core/common/keyboard.h **** GNU General Public License for more details.
  13:../../tmk_core/common/keyboard.h **** 
  14:../../tmk_core/common/keyboard.h **** You should have received a copy of the GNU General Public License
  15:../../tmk_core/common/keyboard.h **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:../../tmk_core/common/keyboard.h **** */
  17:../../tmk_core/common/keyboard.h **** 
  18:../../tmk_core/common/keyboard.h **** #ifndef KEYBOARD_H
  19:../../tmk_core/common/keyboard.h **** #define KEYBOARD_H
  20:../../tmk_core/common/keyboard.h **** 
  21:../../tmk_core/common/keyboard.h **** #include <stdbool.h>
  22:../../tmk_core/common/keyboard.h **** #include <stdint.h>
  23:../../tmk_core/common/keyboard.h **** 
  24:../../tmk_core/common/keyboard.h **** 
  25:../../tmk_core/common/keyboard.h **** #ifdef __cplusplus
  26:../../tmk_core/common/keyboard.h **** extern "C" {
  27:../../tmk_core/common/keyboard.h **** #endif
  28:../../tmk_core/common/keyboard.h **** 
  29:../../tmk_core/common/keyboard.h **** /* key matrix position */
  30:../../tmk_core/common/keyboard.h **** typedef struct {
  31:../../tmk_core/common/keyboard.h ****     uint8_t col;
  32:../../tmk_core/common/keyboard.h ****     uint8_t row;
  33:../../tmk_core/common/keyboard.h **** } keypos_t;
  34:../../tmk_core/common/keyboard.h **** 
  35:../../tmk_core/common/keyboard.h **** /* key event */
  36:../../tmk_core/common/keyboard.h **** typedef struct {
  37:../../tmk_core/common/keyboard.h ****     keypos_t key;
  38:../../tmk_core/common/keyboard.h ****     bool     pressed;
  39:../../tmk_core/common/keyboard.h ****     uint16_t time;
  40:../../tmk_core/common/keyboard.h **** } keyevent_t;
  41:../../tmk_core/common/keyboard.h **** 
  42:../../tmk_core/common/keyboard.h **** /* equivalent test of keypos_t */
  43:../../tmk_core/common/keyboard.h **** #define KEYEQ(keya, keyb)       ((keya).row == (keyb).row && (keya).col == (keyb).col)
  44:../../tmk_core/common/keyboard.h **** 
  45:../../tmk_core/common/keyboard.h **** /* Rules for No Event:
  46:../../tmk_core/common/keyboard.h ****  * 1) (time == 0) to handle (keyevent_t){} as empty event
  47:../../tmk_core/common/keyboard.h ****  * 2) Matrix(255, 255) to make TICK event available
  48:../../tmk_core/common/keyboard.h ****  */
  49:../../tmk_core/common/keyboard.h **** static inline bool IS_NOEVENT(keyevent_t event) { return event.time == 0 || (event.key.row == 255 &
  52               		.loc 2 49 20 view .LVU2
  53               	.LBB23:
  54               		.loc 2 49 51 view .LVU3
  55               		.loc 2 49 74 is_stmt 0 view .LVU4
  56 001e 8A85      		ldd r24,Y+10
  57 0020 9B85      		ldd r25,Y+11
  58 0022 892B      		or r24,r25
  59 0024 01F0      		breq .L2
  60 0026 852F      		mov r24,r21
  61 0028 8423      		and r24,r20
  62 002a 8F3F      		cpi r24,lo8(-1)
  63 002c 01F4      		brne .L3
  64               	.LVL1:
  65               	.L2:
  66               		.loc 2 49 74 view .LVU5
  67               	.LBE23:
  68               	.LBE22:
  43:../../tmk_core/common/action.c ****         dprint("\n---- action_exec: start -----\n");
  44:../../tmk_core/common/action.c ****         dprint("EVENT: "); debug_event(event); dprintln();
  45:../../tmk_core/common/action.c ****         hook_matrix_change(event);
  46:../../tmk_core/common/action.c ****     }
  47:../../tmk_core/common/action.c **** 
  48:../../tmk_core/common/action.c ****     keyrecord_t record = { .event = event };
  69               		.loc 1 48 5 is_stmt 1 view .LVU6
  70               		.loc 1 48 17 is_stmt 0 view .LVU7
  71 002e 1E82      		std Y+6,__zero_reg__
  72 0030 1D82      		std Y+5,__zero_reg__
  73 0032 85E0      		ldi r24,lo8(5)
  74 0034 FE01      		movw r30,r28
  75 0036 3796      		adiw r30,7
  76 0038 DE01      		movw r26,r28
  77 003a 1196      		adiw r26,1
  78               		0:
  79 003c 0190      		ld r0,Z+
  80 003e 0D92      		st X+,r0
  81 0040 8A95      		dec r24
  82 0042 01F4      		brne 0b
  49:../../tmk_core/common/action.c **** 
  50:../../tmk_core/common/action.c **** #ifndef NO_ACTION_TAPPING
  51:../../tmk_core/common/action.c ****     action_tapping_process(record);
  83               		.loc 1 51 5 is_stmt 1 view .LVU8
  84 0044 4981      		ldd r20,Y+1
  85 0046 5A81      		ldd r21,Y+2
  86 0048 6B81      		ldd r22,Y+3
  87 004a 7C81      		ldd r23,Y+4
  88 004c 8D81      		ldd r24,Y+5
  89 004e 9E81      		ldd r25,Y+6
  90               	/* epilogue start */
  52:../../tmk_core/common/action.c **** #else
  53:../../tmk_core/common/action.c ****     process_action(&record);
  54:../../tmk_core/common/action.c ****     if (!IS_NOEVENT(record.event)) {
  55:../../tmk_core/common/action.c ****         dprint("processed: "); debug_record(record); dprintln();
  56:../../tmk_core/common/action.c ****     }
  57:../../tmk_core/common/action.c **** #endif
  58:../../tmk_core/common/action.c **** }
  91               		.loc 1 58 1 is_stmt 0 view .LVU9
  92 0050 2B96      		adiw r28,11
  93 0052 0FB6      		in __tmp_reg__,__SREG__
  94 0054 F894      		cli
  95 0056 DEBF      		out __SP_H__,r29
  96 0058 0FBE      		out __SREG__,__tmp_reg__
  97 005a CDBF      		out __SP_L__,r28
  98 005c DF91      		pop r29
  99 005e CF91      		pop r28
  51:../../tmk_core/common/action.c **** #else
 100               		.loc 1 51 5 view .LVU10
 101 0060 0C94 0000 		jmp action_tapping_process
 102               	.LVL2:
 103               	.L3:
  43:../../tmk_core/common/action.c ****         dprint("EVENT: "); debug_event(event); dprintln();
 104               		.loc 1 43 9 is_stmt 1 view .LVU11
  44:../../tmk_core/common/action.c ****         hook_matrix_change(event);
 105               		.loc 1 44 9 view .LVU12
  44:../../tmk_core/common/action.c ****         hook_matrix_change(event);
 106               		.loc 1 44 28 view .LVU13
  44:../../tmk_core/common/action.c ****         hook_matrix_change(event);
 107               		.loc 1 44 48 view .LVU14
  45:../../tmk_core/common/action.c ****     }
 108               		.loc 1 45 9 view .LVU15
 109 0064 6985      		ldd r22,Y+9
 110 0066 7A85      		ldd r23,Y+10
 111 0068 8B85      		ldd r24,Y+11
 112 006a 0E94 0000 		call hook_matrix_change
 113               	.LVL3:
  45:../../tmk_core/common/action.c ****     }
 114               		.loc 1 45 9 is_stmt 0 view .LVU16
 115 006e 00C0      		rjmp .L2
 116               		.cfi_endproc
 117               	.LFE10:
 119               		.section	.text.register_code,"ax",@progbits
 120               	.global	register_code
 122               	register_code:
 123               	.LVL4:
 124               	.LFB12:
  59:../../tmk_core/common/action.c **** 
  60:../../tmk_core/common/action.c **** void process_action(keyrecord_t *record)
  61:../../tmk_core/common/action.c **** {
  62:../../tmk_core/common/action.c ****     if (hook_process_action(record)) return;
  63:../../tmk_core/common/action.c **** 
  64:../../tmk_core/common/action.c ****     keyevent_t event = record->event;
  65:../../tmk_core/common/action.c **** #ifndef NO_ACTION_TAPPING
  66:../../tmk_core/common/action.c ****     uint8_t tap_count = record->tap.count;
  67:../../tmk_core/common/action.c **** #endif
  68:../../tmk_core/common/action.c **** 
  69:../../tmk_core/common/action.c ****     if (IS_NOEVENT(event)) { return; }
  70:../../tmk_core/common/action.c **** 
  71:../../tmk_core/common/action.c ****     action_t action = layer_switch_get_action(event);
  72:../../tmk_core/common/action.c ****     dprint("ACTION: "); debug_action(action);
  73:../../tmk_core/common/action.c **** #ifndef NO_ACTION_LAYER
  74:../../tmk_core/common/action.c ****     dprint(" layer_state: "); layer_debug();
  75:../../tmk_core/common/action.c ****     dprint(" default_layer_state: "); default_layer_debug();
  76:../../tmk_core/common/action.c **** #endif
  77:../../tmk_core/common/action.c ****     dprintln();
  78:../../tmk_core/common/action.c **** 
  79:../../tmk_core/common/action.c ****     switch (action.kind.id) {
  80:../../tmk_core/common/action.c ****         /* Key and Mods */
  81:../../tmk_core/common/action.c ****         case ACT_LMODS:
  82:../../tmk_core/common/action.c ****         case ACT_RMODS:
  83:../../tmk_core/common/action.c ****             {
  84:../../tmk_core/common/action.c ****                 uint8_t mods = (action.kind.id == ACT_LMODS) ?  action.key.mods :
  85:../../tmk_core/common/action.c ****                                                                 action.key.mods<<4;
  86:../../tmk_core/common/action.c ****                 if (event.pressed) {
  87:../../tmk_core/common/action.c ****                     if (mods) {
  88:../../tmk_core/common/action.c ****                         add_weak_mods(mods);
  89:../../tmk_core/common/action.c ****                         send_keyboard_report();
  90:../../tmk_core/common/action.c ****                     }
  91:../../tmk_core/common/action.c ****                     register_code(action.key.code);
  92:../../tmk_core/common/action.c ****                 } else {
  93:../../tmk_core/common/action.c ****                     unregister_code(action.key.code);
  94:../../tmk_core/common/action.c ****                     if (mods) {
  95:../../tmk_core/common/action.c ****                         del_weak_mods(mods);
  96:../../tmk_core/common/action.c ****                         send_keyboard_report();
  97:../../tmk_core/common/action.c ****                     }
  98:../../tmk_core/common/action.c ****                 }
  99:../../tmk_core/common/action.c ****             }
 100:../../tmk_core/common/action.c ****             break;
 101:../../tmk_core/common/action.c **** #ifndef NO_ACTION_TAPPING
 102:../../tmk_core/common/action.c ****         case ACT_LMODS_TAP:
 103:../../tmk_core/common/action.c ****         case ACT_RMODS_TAP:
 104:../../tmk_core/common/action.c ****             {
 105:../../tmk_core/common/action.c ****                 uint8_t mods = (action.kind.id == ACT_LMODS_TAP) ?  action.key.mods :
 106:../../tmk_core/common/action.c ****                                                                     action.key.mods<<4;
 107:../../tmk_core/common/action.c ****                 switch (action.key.code) {
 108:../../tmk_core/common/action.c ****     #ifndef NO_ACTION_ONESHOT
 109:../../tmk_core/common/action.c ****                     case MODS_ONESHOT:
 110:../../tmk_core/common/action.c ****                         // Oneshot modifier
 111:../../tmk_core/common/action.c ****                         if (event.pressed) {
 112:../../tmk_core/common/action.c ****                             if (tap_count == 0) {
 113:../../tmk_core/common/action.c ****                                 register_mods(mods);
 114:../../tmk_core/common/action.c ****                             }
 115:../../tmk_core/common/action.c ****                             else if (tap_count == 1) {
 116:../../tmk_core/common/action.c ****                                 dprint("MODS_TAP: Oneshot: start\n");
 117:../../tmk_core/common/action.c ****                                 set_oneshot_mods(mods);
 118:../../tmk_core/common/action.c ****                             }
 119:../../tmk_core/common/action.c ****                             else {
 120:../../tmk_core/common/action.c ****                                 register_mods(mods);
 121:../../tmk_core/common/action.c ****                             }
 122:../../tmk_core/common/action.c ****                         } else {
 123:../../tmk_core/common/action.c ****                             if (tap_count == 0) {
 124:../../tmk_core/common/action.c ****                                 clear_oneshot_mods();
 125:../../tmk_core/common/action.c ****                                 unregister_mods(mods);
 126:../../tmk_core/common/action.c ****                             }
 127:../../tmk_core/common/action.c ****                             else if (tap_count == 1) {
 128:../../tmk_core/common/action.c ****                                 // Retain Oneshot mods
 129:../../tmk_core/common/action.c ****                             }
 130:../../tmk_core/common/action.c ****                             else {
 131:../../tmk_core/common/action.c ****                                 clear_oneshot_mods();
 132:../../tmk_core/common/action.c ****                                 unregister_mods(mods);
 133:../../tmk_core/common/action.c ****                             }
 134:../../tmk_core/common/action.c ****                         }
 135:../../tmk_core/common/action.c ****                         break;
 136:../../tmk_core/common/action.c ****     #endif
 137:../../tmk_core/common/action.c ****                     case MODS_TAP_TOGGLE:
 138:../../tmk_core/common/action.c ****                         if (event.pressed) {
 139:../../tmk_core/common/action.c ****                             if (tap_count <= TAPPING_TOGGLE) {
 140:../../tmk_core/common/action.c ****                                 if (mods & get_mods()) {
 141:../../tmk_core/common/action.c ****                                     dprint("MODS_TAP_TOGGLE: toggle mods off\n");
 142:../../tmk_core/common/action.c ****                                     unregister_mods(mods);
 143:../../tmk_core/common/action.c ****                                 } else {
 144:../../tmk_core/common/action.c ****                                     dprint("MODS_TAP_TOGGLE: toggle mods on\n");
 145:../../tmk_core/common/action.c ****                                     register_mods(mods);
 146:../../tmk_core/common/action.c ****                                 }
 147:../../tmk_core/common/action.c ****                             }
 148:../../tmk_core/common/action.c ****                         } else {
 149:../../tmk_core/common/action.c ****                             if (tap_count < TAPPING_TOGGLE) {
 150:../../tmk_core/common/action.c ****                                 dprint("MODS_TAP_TOGGLE: release : unregister_mods\n");
 151:../../tmk_core/common/action.c ****                                 unregister_mods(mods);
 152:../../tmk_core/common/action.c ****                             }
 153:../../tmk_core/common/action.c ****                         }
 154:../../tmk_core/common/action.c ****                         break;
 155:../../tmk_core/common/action.c ****                     default:
 156:../../tmk_core/common/action.c ****                         if (event.pressed) {
 157:../../tmk_core/common/action.c ****                             if (tap_count > 0) {
 158:../../tmk_core/common/action.c ****                                 if (record->tap.interrupted) {
 159:../../tmk_core/common/action.c ****                                     dprint("MODS_TAP: Tap: Cancel: add_mods\n");
 160:../../tmk_core/common/action.c ****                                     // ad hoc: set 0 to cancel tap
 161:../../tmk_core/common/action.c ****                                     record->tap.count = 0;
 162:../../tmk_core/common/action.c ****                                     register_mods(mods);
 163:../../tmk_core/common/action.c ****                                 } else {
 164:../../tmk_core/common/action.c ****                                     dprint("MODS_TAP: Tap: register_code\n");
 165:../../tmk_core/common/action.c ****                                     register_code(action.key.code);
 166:../../tmk_core/common/action.c ****                                 }
 167:../../tmk_core/common/action.c ****                             } else {
 168:../../tmk_core/common/action.c ****                                 dprint("MODS_TAP: No tap: add_mods\n");
 169:../../tmk_core/common/action.c ****                                 register_mods(mods);
 170:../../tmk_core/common/action.c ****                             }
 171:../../tmk_core/common/action.c ****                         } else {
 172:../../tmk_core/common/action.c ****                             if (tap_count > 0) {
 173:../../tmk_core/common/action.c ****                                 dprint("MODS_TAP: Tap: unregister_code\n");
 174:../../tmk_core/common/action.c ****                                 unregister_code(action.key.code);
 175:../../tmk_core/common/action.c ****                             } else {
 176:../../tmk_core/common/action.c ****                                 dprint("MODS_TAP: No tap: add_mods\n");
 177:../../tmk_core/common/action.c ****                                 unregister_mods(mods);
 178:../../tmk_core/common/action.c ****                             }
 179:../../tmk_core/common/action.c ****                         }
 180:../../tmk_core/common/action.c ****                         break;
 181:../../tmk_core/common/action.c ****                 }
 182:../../tmk_core/common/action.c ****             }
 183:../../tmk_core/common/action.c ****             break;
 184:../../tmk_core/common/action.c **** #endif
 185:../../tmk_core/common/action.c **** #ifdef EXTRAKEY_ENABLE
 186:../../tmk_core/common/action.c ****         /* other HID usage */
 187:../../tmk_core/common/action.c ****         case ACT_USAGE:
 188:../../tmk_core/common/action.c ****             switch (action.usage.page) {
 189:../../tmk_core/common/action.c ****                 case PAGE_SYSTEM:
 190:../../tmk_core/common/action.c ****                     if (event.pressed) {
 191:../../tmk_core/common/action.c ****                         host_system_send(action.usage.code);
 192:../../tmk_core/common/action.c ****                     } else {
 193:../../tmk_core/common/action.c ****                         host_system_send(0);
 194:../../tmk_core/common/action.c ****                     }
 195:../../tmk_core/common/action.c ****                     break;
 196:../../tmk_core/common/action.c ****                 case PAGE_CONSUMER:
 197:../../tmk_core/common/action.c ****                     if (event.pressed) {
 198:../../tmk_core/common/action.c ****                         host_consumer_send(action.usage.code);
 199:../../tmk_core/common/action.c ****                     } else {
 200:../../tmk_core/common/action.c ****                         host_consumer_send(0);
 201:../../tmk_core/common/action.c ****                     }
 202:../../tmk_core/common/action.c ****                     break;
 203:../../tmk_core/common/action.c ****             }
 204:../../tmk_core/common/action.c ****             break;
 205:../../tmk_core/common/action.c **** #endif
 206:../../tmk_core/common/action.c **** #ifdef MOUSEKEY_ENABLE
 207:../../tmk_core/common/action.c ****         /* Mouse key */
 208:../../tmk_core/common/action.c ****         case ACT_MOUSEKEY:
 209:../../tmk_core/common/action.c ****             if (event.pressed) {
 210:../../tmk_core/common/action.c ****                 mousekey_on(action.key.code);
 211:../../tmk_core/common/action.c ****                 mousekey_send();
 212:../../tmk_core/common/action.c ****             } else {
 213:../../tmk_core/common/action.c ****                 mousekey_off(action.key.code);
 214:../../tmk_core/common/action.c ****                 mousekey_send();
 215:../../tmk_core/common/action.c ****             }
 216:../../tmk_core/common/action.c ****             break;
 217:../../tmk_core/common/action.c **** #endif
 218:../../tmk_core/common/action.c **** #ifndef NO_ACTION_LAYER
 219:../../tmk_core/common/action.c ****         case ACT_LAYER:
 220:../../tmk_core/common/action.c ****             if (action.layer_bitop.on == 0) {
 221:../../tmk_core/common/action.c ****                 /* Default Layer Bitwise Operation */
 222:../../tmk_core/common/action.c ****                 if (!event.pressed) {
 223:../../tmk_core/common/action.c ****                     uint8_t shift = action.layer_bitop.part*4;
 224:../../tmk_core/common/action.c ****                     uint32_t bits = ((uint32_t)action.layer_bitop.bits)<<shift;
 225:../../tmk_core/common/action.c ****                     uint32_t mask = (action.layer_bitop.xbit) ? ~(((uint32_t)0xf)<<shift) : 0;
 226:../../tmk_core/common/action.c ****                     switch (action.layer_bitop.op) {
 227:../../tmk_core/common/action.c ****                         case OP_BIT_AND: default_layer_and(bits | mask); break;
 228:../../tmk_core/common/action.c ****                         case OP_BIT_OR:  default_layer_or(bits | mask);  break;
 229:../../tmk_core/common/action.c ****                         case OP_BIT_XOR: default_layer_xor(bits | mask); break;
 230:../../tmk_core/common/action.c ****                         case OP_BIT_SET: default_layer_and(mask); default_layer_or(bits); break;
 231:../../tmk_core/common/action.c ****                     }
 232:../../tmk_core/common/action.c ****                 }
 233:../../tmk_core/common/action.c ****             } else {
 234:../../tmk_core/common/action.c ****                 /* Layer Bitwise Operation */
 235:../../tmk_core/common/action.c ****                 if (event.pressed ? (action.layer_bitop.on & ON_PRESS) :
 236:../../tmk_core/common/action.c ****                                     (action.layer_bitop.on & ON_RELEASE)) {
 237:../../tmk_core/common/action.c ****                     uint8_t shift = action.layer_bitop.part*4;
 238:../../tmk_core/common/action.c ****                     uint32_t bits = ((uint32_t)action.layer_bitop.bits)<<shift;
 239:../../tmk_core/common/action.c ****                     uint32_t mask = (action.layer_bitop.xbit) ? ~(((uint32_t)0xf)<<shift) : 0;
 240:../../tmk_core/common/action.c ****                     switch (action.layer_bitop.op) {
 241:../../tmk_core/common/action.c ****                         case OP_BIT_AND: layer_and(bits | mask); break;
 242:../../tmk_core/common/action.c ****                         case OP_BIT_OR:  layer_or(bits | mask);  break;
 243:../../tmk_core/common/action.c ****                         case OP_BIT_XOR: layer_xor(bits | mask); break;
 244:../../tmk_core/common/action.c ****                         case OP_BIT_SET: layer_and(mask); layer_or(bits); break;
 245:../../tmk_core/common/action.c ****                     }
 246:../../tmk_core/common/action.c ****                 }
 247:../../tmk_core/common/action.c ****             }
 248:../../tmk_core/common/action.c ****             break;
 249:../../tmk_core/common/action.c ****     #ifndef NO_ACTION_TAPPING
 250:../../tmk_core/common/action.c ****         case ACT_LAYER_TAP:
 251:../../tmk_core/common/action.c ****         case ACT_LAYER_TAP_EXT:
 252:../../tmk_core/common/action.c ****             switch (action.layer_tap.code) {
 253:../../tmk_core/common/action.c ****                 case 0xc0 ... 0xdf:
 254:../../tmk_core/common/action.c ****                     /* layer On/Off with modifiers */
 255:../../tmk_core/common/action.c ****                     if (event.pressed) {
 256:../../tmk_core/common/action.c ****                         layer_on(action.layer_tap.val);
 257:../../tmk_core/common/action.c ****                         register_mods((action.layer_tap.code & 0x10) ?
 258:../../tmk_core/common/action.c ****                                 (action.layer_tap.code & 0x0f) << 4 :
 259:../../tmk_core/common/action.c ****                                 (action.layer_tap.code & 0x0f));
 260:../../tmk_core/common/action.c ****                     } else {
 261:../../tmk_core/common/action.c ****                         layer_off(action.layer_tap.val);
 262:../../tmk_core/common/action.c ****                         unregister_mods((action.layer_tap.code & 0x10) ?
 263:../../tmk_core/common/action.c ****                                 (action.layer_tap.code & 0x0f) << 4 :
 264:../../tmk_core/common/action.c ****                                 (action.layer_tap.code & 0x0f));
 265:../../tmk_core/common/action.c ****                     }
 266:../../tmk_core/common/action.c ****                     break;
 267:../../tmk_core/common/action.c ****                 case OP_TAP_TOGGLE:
 268:../../tmk_core/common/action.c ****                     /* tap toggle */
 269:../../tmk_core/common/action.c ****                     if (event.pressed) {
 270:../../tmk_core/common/action.c ****                         if (tap_count < TAPPING_TOGGLE) {
 271:../../tmk_core/common/action.c ****                             layer_invert(action.layer_tap.val);
 272:../../tmk_core/common/action.c ****                         }
 273:../../tmk_core/common/action.c ****                     } else {
 274:../../tmk_core/common/action.c ****                         if (tap_count <= TAPPING_TOGGLE) {
 275:../../tmk_core/common/action.c ****                             layer_invert(action.layer_tap.val);
 276:../../tmk_core/common/action.c ****                         }
 277:../../tmk_core/common/action.c ****                     }
 278:../../tmk_core/common/action.c ****                     break;
 279:../../tmk_core/common/action.c ****                 case OP_ON_OFF:
 280:../../tmk_core/common/action.c ****                     event.pressed ? layer_on(action.layer_tap.val) :
 281:../../tmk_core/common/action.c ****                                     layer_off(action.layer_tap.val);
 282:../../tmk_core/common/action.c ****                     break;
 283:../../tmk_core/common/action.c ****                 case OP_OFF_ON:
 284:../../tmk_core/common/action.c ****                     event.pressed ? layer_off(action.layer_tap.val) :
 285:../../tmk_core/common/action.c ****                                     layer_on(action.layer_tap.val);
 286:../../tmk_core/common/action.c ****                     break;
 287:../../tmk_core/common/action.c ****                 case OP_SET_CLEAR:
 288:../../tmk_core/common/action.c ****                     event.pressed ? layer_move(action.layer_tap.val) :
 289:../../tmk_core/common/action.c ****                                     layer_clear();
 290:../../tmk_core/common/action.c ****                     break;
 291:../../tmk_core/common/action.c ****                 default:
 292:../../tmk_core/common/action.c ****                     /* tap key */
 293:../../tmk_core/common/action.c ****                     if (event.pressed) {
 294:../../tmk_core/common/action.c ****                         if (tap_count > 0) {
 295:../../tmk_core/common/action.c ****                             dprint("KEYMAP_TAP_KEY: Tap: register_code\n");
 296:../../tmk_core/common/action.c ****                             register_code(action.layer_tap.code);
 297:../../tmk_core/common/action.c ****                         } else {
 298:../../tmk_core/common/action.c ****                             dprint("KEYMAP_TAP_KEY: No tap: On on press\n");
 299:../../tmk_core/common/action.c ****                             layer_on(action.layer_tap.val);
 300:../../tmk_core/common/action.c ****                         }
 301:../../tmk_core/common/action.c ****                     } else {
 302:../../tmk_core/common/action.c ****                         if (tap_count > 0) {
 303:../../tmk_core/common/action.c ****                             dprint("KEYMAP_TAP_KEY: Tap: unregister_code\n");
 304:../../tmk_core/common/action.c ****                             unregister_code(action.layer_tap.code);
 305:../../tmk_core/common/action.c ****                         } else {
 306:../../tmk_core/common/action.c ****                             dprint("KEYMAP_TAP_KEY: No tap: Off on release\n");
 307:../../tmk_core/common/action.c ****                             layer_off(action.layer_tap.val);
 308:../../tmk_core/common/action.c ****                         }
 309:../../tmk_core/common/action.c ****                     }
 310:../../tmk_core/common/action.c ****                     break;
 311:../../tmk_core/common/action.c ****             }
 312:../../tmk_core/common/action.c ****             break;
 313:../../tmk_core/common/action.c ****     #endif
 314:../../tmk_core/common/action.c **** #endif
 315:../../tmk_core/common/action.c ****         /* Extentions */
 316:../../tmk_core/common/action.c **** #ifndef NO_ACTION_MACRO
 317:../../tmk_core/common/action.c ****         case ACT_MACRO:
 318:../../tmk_core/common/action.c ****             action_macro_play(action_get_macro(record, action.func.id, action.func.opt));
 319:../../tmk_core/common/action.c ****             break;
 320:../../tmk_core/common/action.c **** #endif
 321:../../tmk_core/common/action.c **** #ifdef BACKLIGHT_ENABLE
 322:../../tmk_core/common/action.c ****         case ACT_BACKLIGHT:
 323:../../tmk_core/common/action.c ****             if (!event.pressed) {
 324:../../tmk_core/common/action.c ****                 switch (action.backlight.opt) {
 325:../../tmk_core/common/action.c ****                     case BACKLIGHT_INCREASE:
 326:../../tmk_core/common/action.c ****                         backlight_increase();
 327:../../tmk_core/common/action.c ****                         break;
 328:../../tmk_core/common/action.c ****                     case BACKLIGHT_DECREASE:
 329:../../tmk_core/common/action.c ****                         backlight_decrease();
 330:../../tmk_core/common/action.c ****                         break;
 331:../../tmk_core/common/action.c ****                     case BACKLIGHT_TOGGLE:
 332:../../tmk_core/common/action.c ****                         backlight_toggle();
 333:../../tmk_core/common/action.c ****                         break;
 334:../../tmk_core/common/action.c ****                     case BACKLIGHT_STEP:
 335:../../tmk_core/common/action.c ****                         backlight_step();
 336:../../tmk_core/common/action.c ****                         break;
 337:../../tmk_core/common/action.c ****                     case BACKLIGHT_LEVEL:
 338:../../tmk_core/common/action.c ****                         backlight_level(action.backlight.level);
 339:../../tmk_core/common/action.c ****                         break;
 340:../../tmk_core/common/action.c ****                 }
 341:../../tmk_core/common/action.c ****             }
 342:../../tmk_core/common/action.c ****             break;
 343:../../tmk_core/common/action.c **** #endif
 344:../../tmk_core/common/action.c ****         case ACT_COMMAND:
 345:../../tmk_core/common/action.c ****             switch (action.command.id) {
 346:../../tmk_core/common/action.c ****                 case COMMAND_BOOTLOADER:
 347:../../tmk_core/common/action.c ****                     if (event.pressed) {
 348:../../tmk_core/common/action.c ****                         clear_keyboard();
 349:../../tmk_core/common/action.c ****                         wait_ms(50);
 350:../../tmk_core/common/action.c ****                         bootloader_jump();
 351:../../tmk_core/common/action.c ****                     }
 352:../../tmk_core/common/action.c ****                     break;
 353:../../tmk_core/common/action.c ****             }
 354:../../tmk_core/common/action.c ****             break;
 355:../../tmk_core/common/action.c **** #ifndef NO_ACTION_FUNCTION
 356:../../tmk_core/common/action.c ****         case ACT_FUNCTION:
 357:../../tmk_core/common/action.c ****             action_function(record, action.func.id, action.func.opt);
 358:../../tmk_core/common/action.c ****             break;
 359:../../tmk_core/common/action.c **** #endif
 360:../../tmk_core/common/action.c ****         default:
 361:../../tmk_core/common/action.c ****             break;
 362:../../tmk_core/common/action.c ****     }
 363:../../tmk_core/common/action.c **** }
 364:../../tmk_core/common/action.c **** 
 365:../../tmk_core/common/action.c **** 
 366:../../tmk_core/common/action.c **** 
 367:../../tmk_core/common/action.c **** 
 368:../../tmk_core/common/action.c **** /*
 369:../../tmk_core/common/action.c ****  * Utilities for actions.
 370:../../tmk_core/common/action.c ****  */
 371:../../tmk_core/common/action.c **** void register_code(uint8_t code)
 372:../../tmk_core/common/action.c **** {
 125               		.loc 1 372 1 is_stmt 1 view -0
 126               		.cfi_startproc
 127               		.loc 1 372 1 is_stmt 0 view .LVU18
 128 0000 CF93      		push r28
 129               	.LCFI4:
 130               		.cfi_def_cfa_offset 3
 131               		.cfi_offset 28, -2
 132               	/* prologue: function */
 133               	/* frame size = 0 */
 134               	/* stack size = 1 */
 135               	.L__stack_usage = 1
 136 0002 C82F      		mov r28,r24
 373:../../tmk_core/common/action.c ****     if (code == KC_NO) {
 137               		.loc 1 373 5 is_stmt 1 view .LVU19
 138               		.loc 1 373 8 is_stmt 0 view .LVU20
 139 0004 8823      		tst r24
 140 0006 01F4      		brne .+2
 141 0008 00C0      		rjmp .L7
 374:../../tmk_core/common/action.c ****         return;
 375:../../tmk_core/common/action.c ****     }
 376:../../tmk_core/common/action.c **** 
 377:../../tmk_core/common/action.c **** #ifdef LOCKING_SUPPORT_ENABLE
 378:../../tmk_core/common/action.c ****     else if (KC_LOCKING_CAPS == code) {
 142               		.loc 1 378 10 is_stmt 1 view .LVU21
 143               		.loc 1 378 13 is_stmt 0 view .LVU22
 144 000a 8238      		cpi r24,lo8(-126)
 145 000c 01F4      		brne .L10
 379:../../tmk_core/common/action.c **** #ifdef LOCKING_RESYNC_ENABLE
 380:../../tmk_core/common/action.c ****         // Resync: ignore if caps lock already is on
 381:../../tmk_core/common/action.c ****         if (host_keyboard_leds() & (1<<USB_LED_CAPS_LOCK)) return;
 146               		.loc 1 381 9 is_stmt 1 view .LVU23
 147               		.loc 1 381 13 is_stmt 0 view .LVU24
 148 000e 0E94 0000 		call host_keyboard_leds
 149               	.LVL5:
 150               		.loc 1 381 12 view .LVU25
 151 0012 81FD      		sbrc r24,1
 152 0014 00C0      		rjmp .L7
 382:../../tmk_core/common/action.c **** #endif
 383:../../tmk_core/common/action.c ****         add_key(KC_CAPSLOCK);
 153               		.loc 1 383 9 is_stmt 1 view .LVU26
 154 0016 89E3      		ldi r24,lo8(57)
 155 0018 0E94 0000 		call add_key
 156               	.LVL6:
 384:../../tmk_core/common/action.c ****         send_keyboard_report();
 157               		.loc 1 384 9 view .LVU27
 158 001c 0E94 0000 		call send_keyboard_report
 159               	.LVL7:
 385:../../tmk_core/common/action.c ****         wait_ms(100);
 160               		.loc 1 385 9 view .LVU28
 161               	.LBB24:
 162               	.LBI24:
 163               		.file 3 "/usr/avr/include/util/delay.h"
   1:/usr/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/avr/include/util/delay.h **** 
   6:/usr/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/avr/include/util/delay.h **** 
   9:/usr/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/avr/include/util/delay.h **** 
  12:/usr/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/avr/include/util/delay.h ****      distribution.
  16:/usr/avr/include/util/delay.h **** 
  17:/usr/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/avr/include/util/delay.h **** 
  21:/usr/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/avr/include/util/delay.h **** 
  33:/usr/avr/include/util/delay.h **** /* $Id: delay.h.in 2506 2016-02-08 10:05:45Z joerg_wunsch $ */
  34:/usr/avr/include/util/delay.h **** 
  35:/usr/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/avr/include/util/delay.h **** 
  38:/usr/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/usr/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/usr/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/usr/avr/include/util/delay.h **** #  endif
  42:/usr/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/usr/avr/include/util/delay.h **** 
  44:/usr/avr/include/util/delay.h **** #include <inttypes.h>
  45:/usr/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/usr/avr/include/util/delay.h **** #include <math.h>
  47:/usr/avr/include/util/delay.h **** 
  48:/usr/avr/include/util/delay.h **** /** \file */
  49:/usr/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/usr/avr/include/util/delay.h ****     \code
  51:/usr/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/usr/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/usr/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/usr/avr/include/util/delay.h ****     \endcode
  55:/usr/avr/include/util/delay.h **** 
  56:/usr/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/usr/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/usr/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/usr/avr/include/util/delay.h ****     used.
  60:/usr/avr/include/util/delay.h **** 
  61:/usr/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/usr/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/usr/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/usr/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/usr/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/usr/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/usr/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/usr/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/usr/avr/include/util/delay.h **** 
  70:/usr/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/usr/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/usr/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/usr/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/usr/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/usr/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/usr/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/usr/avr/include/util/delay.h ****     routines linked into the application.
  78:/usr/avr/include/util/delay.h **** 
  79:/usr/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/usr/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/usr/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/usr/avr/include/util/delay.h **** 
  83:/usr/avr/include/util/delay.h **** */
  84:/usr/avr/include/util/delay.h **** 
  85:/usr/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/usr/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/usr/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/usr/avr/include/util/delay.h **** #endif
  89:/usr/avr/include/util/delay.h **** 
  90:/usr/avr/include/util/delay.h **** #ifndef F_CPU
  91:/usr/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/usr/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/usr/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/usr/avr/include/util/delay.h ****     \def F_CPU
  95:/usr/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/usr/avr/include/util/delay.h **** 
  97:/usr/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/usr/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/usr/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/usr/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/usr/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/usr/avr/include/util/delay.h **** 
 103:/usr/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/usr/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/usr/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/usr/avr/include/util/delay.h ****     integer value.
 107:/usr/avr/include/util/delay.h ****  */
 108:/usr/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/usr/avr/include/util/delay.h **** #endif
 110:/usr/avr/include/util/delay.h **** 
 111:/usr/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/usr/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/usr/avr/include/util/delay.h **** #endif
 114:/usr/avr/include/util/delay.h **** 
 115:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/usr/avr/include/util/delay.h **** #  include <math.h>
 119:/usr/avr/include/util/delay.h **** #endif
 120:/usr/avr/include/util/delay.h **** 
 121:/usr/avr/include/util/delay.h **** /**
 122:/usr/avr/include/util/delay.h ****    \ingroup util_delay
 123:/usr/avr/include/util/delay.h **** 
 124:/usr/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/usr/avr/include/util/delay.h **** 
 126:/usr/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/usr/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/usr/avr/include/util/delay.h **** 
 129:/usr/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/usr/avr/include/util/delay.h **** 
 131:/usr/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/usr/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/usr/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/usr/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/usr/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/usr/avr/include/util/delay.h **** 
 137:/usr/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/usr/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/usr/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/usr/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/usr/avr/include/util/delay.h **** 
 142:/usr/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/usr/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/usr/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/usr/avr/include/util/delay.h ****    microseconds of delay.
 146:/usr/avr/include/util/delay.h **** 
 147:/usr/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/usr/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/usr/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/usr/avr/include/util/delay.h ****    respectively.
 151:/usr/avr/include/util/delay.h **** 
 152:/usr/avr/include/util/delay.h ****    \note
 153:/usr/avr/include/util/delay.h **** 
 154:/usr/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/usr/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/usr/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/usr/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/usr/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/usr/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/usr/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/usr/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/usr/avr/include/util/delay.h ****    not available to the compiler then.
 163:/usr/avr/include/util/delay.h **** 
 164:/usr/avr/include/util/delay.h ****  */
 165:/usr/avr/include/util/delay.h **** void
 166:/usr/avr/include/util/delay.h **** _delay_ms(double __ms)
 164               		.loc 3 166 1 view .LVU29
 165               	.LBB25:
 167:/usr/avr/include/util/delay.h **** {
 168:/usr/avr/include/util/delay.h **** 	double __tmp ;
 166               		.loc 3 168 2 view .LVU30
 169:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/usr/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 167               		.loc 3 172 2 view .LVU31
 173:/usr/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 168               		.loc 3 173 2 view .LVU32
 174:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 169               		.loc 3 174 2 view .LVU33
 175:/usr/avr/include/util/delay.h **** 
 176:/usr/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/usr/avr/include/util/delay.h **** 
 179:/usr/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/usr/avr/include/util/delay.h **** 
 182:/usr/avr/include/util/delay.h **** 	#else
 183:/usr/avr/include/util/delay.h **** 		//round up by default
 184:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 170               		.loc 3 184 3 view .LVU34
 185:/usr/avr/include/util/delay.h **** 	#endif
 186:/usr/avr/include/util/delay.h **** 
 187:/usr/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 171               		.loc 3 187 2 view .LVU35
 172 0020 2FEF      		ldi r18,lo8(319999)
 173 0022 81EE      		ldi r24,hi8(319999)
 174 0024 94E0      		ldi r25,hlo8(319999)
 175 0026 2150      	1:	subi r18,1
 176 0028 8040      		sbci r24,0
 177 002a 9040      		sbci r25,0
 178 002c 01F4      		brne 1b
 179 002e 00C0      		rjmp .
 180 0030 0000      		nop
 181               	.LVL8:
 182               		.loc 3 187 2 is_stmt 0 view .LVU36
 183               	.LBE25:
 184               	.LBE24:
 386:../../tmk_core/common/action.c ****         del_key(KC_CAPSLOCK);
 185               		.loc 1 386 9 is_stmt 1 view .LVU37
 186 0032 89E3      		ldi r24,lo8(57)
 187               	.L30:
 387:../../tmk_core/common/action.c ****         send_keyboard_report();
 388:../../tmk_core/common/action.c ****     }
 389:../../tmk_core/common/action.c **** 
 390:../../tmk_core/common/action.c ****     else if (KC_LOCKING_NUM == code) {
 391:../../tmk_core/common/action.c **** #ifdef LOCKING_RESYNC_ENABLE
 392:../../tmk_core/common/action.c ****         if (host_keyboard_leds() & (1<<USB_LED_NUM_LOCK)) return;
 393:../../tmk_core/common/action.c **** #endif
 394:../../tmk_core/common/action.c ****         add_key(KC_NUMLOCK);
 395:../../tmk_core/common/action.c ****         send_keyboard_report();
 396:../../tmk_core/common/action.c ****         wait_ms(100);
 397:../../tmk_core/common/action.c ****         del_key(KC_NUMLOCK);
 188               		.loc 1 397 9 is_stmt 0 view .LVU38
 189 0034 0E94 0000 		call del_key
 190               	.LVL9:
 191               	.L31:
 398:../../tmk_core/common/action.c ****         send_keyboard_report();
 192               		.loc 1 398 9 is_stmt 1 view .LVU39
 193               	/* epilogue start */
 399:../../tmk_core/common/action.c ****     }
 400:../../tmk_core/common/action.c **** 
 401:../../tmk_core/common/action.c ****     else if (KC_LOCKING_SCROLL == code) {
 402:../../tmk_core/common/action.c **** #ifdef LOCKING_RESYNC_ENABLE
 403:../../tmk_core/common/action.c ****         if (host_keyboard_leds() & (1<<USB_LED_SCROLL_LOCK)) return;
 404:../../tmk_core/common/action.c **** #endif
 405:../../tmk_core/common/action.c ****         add_key(KC_SCROLLLOCK);
 406:../../tmk_core/common/action.c ****         send_keyboard_report();
 407:../../tmk_core/common/action.c ****         wait_ms(100);
 408:../../tmk_core/common/action.c ****         del_key(KC_SCROLLLOCK);
 409:../../tmk_core/common/action.c ****         send_keyboard_report();
 410:../../tmk_core/common/action.c ****     }
 411:../../tmk_core/common/action.c **** #endif
 412:../../tmk_core/common/action.c **** 
 413:../../tmk_core/common/action.c ****     else if IS_KEY(code) {
 414:../../tmk_core/common/action.c ****         // TODO: should push command_proc out of this block?
 415:../../tmk_core/common/action.c ****         if (command_proc(code)) return;
 416:../../tmk_core/common/action.c **** 
 417:../../tmk_core/common/action.c **** #ifndef NO_ACTION_ONESHOT
 418:../../tmk_core/common/action.c **** /* TODO: remove
 419:../../tmk_core/common/action.c ****         if (oneshot_state.mods && !oneshot_state.disabled) {
 420:../../tmk_core/common/action.c ****             uint8_t tmp_mods = get_mods();
 421:../../tmk_core/common/action.c ****             add_mods(oneshot_state.mods);
 422:../../tmk_core/common/action.c **** 
 423:../../tmk_core/common/action.c ****             add_key(code);
 424:../../tmk_core/common/action.c ****             send_keyboard_report();
 425:../../tmk_core/common/action.c **** 
 426:../../tmk_core/common/action.c ****             set_mods(tmp_mods);
 427:../../tmk_core/common/action.c ****             send_keyboard_report();
 428:../../tmk_core/common/action.c ****             oneshot_cancel();
 429:../../tmk_core/common/action.c ****         } else 
 430:../../tmk_core/common/action.c **** */
 431:../../tmk_core/common/action.c **** #endif
 432:../../tmk_core/common/action.c ****         {
 433:../../tmk_core/common/action.c ****             add_key(code);
 434:../../tmk_core/common/action.c ****             send_keyboard_report();
 435:../../tmk_core/common/action.c ****         }
 436:../../tmk_core/common/action.c ****     }
 437:../../tmk_core/common/action.c ****     else if IS_MOD(code) {
 438:../../tmk_core/common/action.c ****         add_mods(MOD_BIT(code));
 439:../../tmk_core/common/action.c ****         send_keyboard_report();
 440:../../tmk_core/common/action.c ****     }
 441:../../tmk_core/common/action.c ****     else if IS_SYSTEM(code) {
 442:../../tmk_core/common/action.c ****         host_system_send(KEYCODE2SYSTEM(code));
 443:../../tmk_core/common/action.c ****     }
 444:../../tmk_core/common/action.c ****     else if IS_CONSUMER(code) {
 445:../../tmk_core/common/action.c ****         host_consumer_send(KEYCODE2CONSUMER(code));
 446:../../tmk_core/common/action.c ****     }
 447:../../tmk_core/common/action.c **** }
 194               		.loc 1 447 1 is_stmt 0 view .LVU40
 195 0038 CF91      		pop r28
 398:../../tmk_core/common/action.c ****         send_keyboard_report();
 196               		.loc 1 398 9 view .LVU41
 197 003a 0C94 0000 		jmp send_keyboard_report
 198               	.LVL10:
 199               	.L10:
 390:../../tmk_core/common/action.c **** #ifdef LOCKING_RESYNC_ENABLE
 200               		.loc 1 390 10 is_stmt 1 view .LVU42
 390:../../tmk_core/common/action.c **** #ifdef LOCKING_RESYNC_ENABLE
 201               		.loc 1 390 13 is_stmt 0 view .LVU43
 202 003e 8338      		cpi r24,lo8(-125)
 203 0040 01F4      		brne .L12
 392:../../tmk_core/common/action.c **** #endif
 204               		.loc 1 392 9 is_stmt 1 view .LVU44
 392:../../tmk_core/common/action.c **** #endif
 205               		.loc 1 392 13 is_stmt 0 view .LVU45
 206 0042 0E94 0000 		call host_keyboard_leds
 207               	.LVL11:
 392:../../tmk_core/common/action.c **** #endif
 208               		.loc 1 392 12 view .LVU46
 209 0046 80FD      		sbrc r24,0
 210 0048 00C0      		rjmp .L7
 394:../../tmk_core/common/action.c ****         send_keyboard_report();
 211               		.loc 1 394 9 is_stmt 1 view .LVU47
 212 004a 83E5      		ldi r24,lo8(83)
 213 004c 0E94 0000 		call add_key
 214               	.LVL12:
 395:../../tmk_core/common/action.c ****         wait_ms(100);
 215               		.loc 1 395 9 view .LVU48
 216 0050 0E94 0000 		call send_keyboard_report
 217               	.LVL13:
 396:../../tmk_core/common/action.c ****         del_key(KC_NUMLOCK);
 218               		.loc 1 396 9 view .LVU49
 219               	.LBB26:
 220               	.LBI26:
 166:/usr/avr/include/util/delay.h **** {
 221               		.loc 3 166 1 view .LVU50
 222               	.LBB27:
 168:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 223               		.loc 3 168 2 view .LVU51
 172:/usr/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 224               		.loc 3 172 2 view .LVU52
 173:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 225               		.loc 3 173 2 view .LVU53
 174:/usr/avr/include/util/delay.h **** 
 226               		.loc 3 174 2 view .LVU54
 184:/usr/avr/include/util/delay.h **** 	#endif
 227               		.loc 3 184 3 view .LVU55
 228               		.loc 3 187 2 view .LVU56
 229 0054 2FEF      		ldi r18,lo8(319999)
 230 0056 81EE      		ldi r24,hi8(319999)
 231 0058 94E0      		ldi r25,hlo8(319999)
 232 005a 2150      	1:	subi r18,1
 233 005c 8040      		sbci r24,0
 234 005e 9040      		sbci r25,0
 235 0060 01F4      		brne 1b
 236 0062 00C0      		rjmp .
 237 0064 0000      		nop
 238               	.LVL14:
 239               		.loc 3 187 2 is_stmt 0 view .LVU57
 240               	.LBE27:
 241               	.LBE26:
 397:../../tmk_core/common/action.c ****         send_keyboard_report();
 242               		.loc 1 397 9 is_stmt 1 view .LVU58
 243 0066 83E5      		ldi r24,lo8(83)
 244 0068 00C0      		rjmp .L30
 245               	.LVL15:
 246               	.L12:
 401:../../tmk_core/common/action.c **** #ifdef LOCKING_RESYNC_ENABLE
 247               		.loc 1 401 10 view .LVU59
 401:../../tmk_core/common/action.c **** #ifdef LOCKING_RESYNC_ENABLE
 248               		.loc 1 401 13 is_stmt 0 view .LVU60
 249 006a 8438      		cpi r24,lo8(-124)
 250 006c 01F4      		brne .L13
 403:../../tmk_core/common/action.c **** #endif
 251               		.loc 1 403 9 is_stmt 1 view .LVU61
 403:../../tmk_core/common/action.c **** #endif
 252               		.loc 1 403 13 is_stmt 0 view .LVU62
 253 006e 0E94 0000 		call host_keyboard_leds
 254               	.LVL16:
 403:../../tmk_core/common/action.c **** #endif
 255               		.loc 1 403 12 view .LVU63
 256 0072 82FD      		sbrc r24,2
 257 0074 00C0      		rjmp .L7
 405:../../tmk_core/common/action.c ****         send_keyboard_report();
 258               		.loc 1 405 9 is_stmt 1 view .LVU64
 259 0076 87E4      		ldi r24,lo8(71)
 260 0078 0E94 0000 		call add_key
 261               	.LVL17:
 406:../../tmk_core/common/action.c ****         wait_ms(100);
 262               		.loc 1 406 9 view .LVU65
 263 007c 0E94 0000 		call send_keyboard_report
 264               	.LVL18:
 407:../../tmk_core/common/action.c ****         del_key(KC_SCROLLLOCK);
 265               		.loc 1 407 9 view .LVU66
 266               	.LBB28:
 267               	.LBI28:
 166:/usr/avr/include/util/delay.h **** {
 268               		.loc 3 166 1 view .LVU67
 269               	.LBB29:
 168:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 270               		.loc 3 168 2 view .LVU68
 172:/usr/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 271               		.loc 3 172 2 view .LVU69
 173:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 272               		.loc 3 173 2 view .LVU70
 174:/usr/avr/include/util/delay.h **** 
 273               		.loc 3 174 2 view .LVU71
 184:/usr/avr/include/util/delay.h **** 	#endif
 274               		.loc 3 184 3 view .LVU72
 275               		.loc 3 187 2 view .LVU73
 276 0080 2FEF      		ldi r18,lo8(319999)
 277 0082 81EE      		ldi r24,hi8(319999)
 278 0084 94E0      		ldi r25,hlo8(319999)
 279 0086 2150      	1:	subi r18,1
 280 0088 8040      		sbci r24,0
 281 008a 9040      		sbci r25,0
 282 008c 01F4      		brne 1b
 283 008e 00C0      		rjmp .
 284 0090 0000      		nop
 285               	.LVL19:
 286               		.loc 3 187 2 is_stmt 0 view .LVU74
 287               	.LBE29:
 288               	.LBE28:
 408:../../tmk_core/common/action.c ****         send_keyboard_report();
 289               		.loc 1 408 9 is_stmt 1 view .LVU75
 290 0092 87E4      		ldi r24,lo8(71)
 291 0094 00C0      		rjmp .L30
 292               	.LVL20:
 293               	.L13:
 413:../../tmk_core/common/action.c ****         // TODO: should push command_proc out of this block?
 294               		.loc 1 413 10 view .LVU76
 413:../../tmk_core/common/action.c ****         // TODO: should push command_proc out of this block?
 295               		.loc 1 413 13 is_stmt 0 view .LVU77
 296 0096 8CEF      		ldi r24,lo8(-4)
 297               	.LVL21:
 413:../../tmk_core/common/action.c ****         // TODO: should push command_proc out of this block?
 298               		.loc 1 413 13 view .LVU78
 299 0098 8C0F      		add r24,r28
 300 009a 813A      		cpi r24,lo8(-95)
 301 009c 00F0      		brlo .L14
 413:../../tmk_core/common/action.c ****         // TODO: should push command_proc out of this block?
 302               		.loc 1 413 13 discriminator 1 view .LVU79
 303 009e 80E5      		ldi r24,lo8(80)
 304 00a0 8C0F      		add r24,r28
 305 00a2 8E32      		cpi r24,lo8(46)
 306 00a4 00F4      		brsh .L15
 307               	.L14:
 415:../../tmk_core/common/action.c **** 
 308               		.loc 1 415 9 is_stmt 1 view .LVU80
 415:../../tmk_core/common/action.c **** 
 309               		.loc 1 415 13 is_stmt 0 view .LVU81
 310 00a6 8C2F      		mov r24,r28
 311 00a8 0E94 0000 		call command_proc
 312               	.LVL22:
 415:../../tmk_core/common/action.c **** 
 313               		.loc 1 415 12 view .LVU82
 314 00ac 8111      		cpse r24,__zero_reg__
 315 00ae 00C0      		rjmp .L7
 433:../../tmk_core/common/action.c ****             send_keyboard_report();
 316               		.loc 1 433 13 is_stmt 1 view .LVU83
 317 00b0 8C2F      		mov r24,r28
 318 00b2 0E94 0000 		call add_key
 319               	.LVL23:
 434:../../tmk_core/common/action.c ****         }
 320               		.loc 1 434 13 view .LVU84
 321 00b6 00C0      		rjmp .L31
 322               	.L15:
 437:../../tmk_core/common/action.c ****         add_mods(MOD_BIT(code));
 323               		.loc 1 437 10 view .LVU85
 437:../../tmk_core/common/action.c ****         add_mods(MOD_BIT(code));
 324               		.loc 1 437 13 is_stmt 0 view .LVU86
 325 00b8 80E2      		ldi r24,lo8(32)
 326 00ba 8C0F      		add r24,r28
 327 00bc 8830      		cpi r24,lo8(8)
 328 00be 00F4      		brsh .L16
 438:../../tmk_core/common/action.c ****         send_keyboard_report();
 329               		.loc 1 438 9 is_stmt 1 view .LVU87
 438:../../tmk_core/common/action.c ****         send_keyboard_report();
 330               		.loc 1 438 18 is_stmt 0 view .LVU88
 331 00c0 C770      		andi r28,lo8(7)
 332               	.LVL24:
 438:../../tmk_core/common/action.c ****         send_keyboard_report();
 333               		.loc 1 438 9 view .LVU89
 334 00c2 81E0      		ldi r24,lo8(1)
 335 00c4 00C0      		rjmp 2f
 336               		1:
 337 00c6 880F      		lsl r24
 338               		2:
 339 00c8 CA95      		dec r28
 340 00ca 02F4      		brpl 1b
 341 00cc 0E94 0000 		call add_mods
 342               	.LVL25:
 439:../../tmk_core/common/action.c ****     }
 343               		.loc 1 439 9 is_stmt 1 view .LVU90
 344 00d0 00C0      		rjmp .L31
 345               	.LVL26:
 346               	.L16:
 441:../../tmk_core/common/action.c ****         host_system_send(KEYCODE2SYSTEM(code));
 347               		.loc 1 441 10 view .LVU91
 441:../../tmk_core/common/action.c ****         host_system_send(KEYCODE2SYSTEM(code));
 348               		.loc 1 441 13 is_stmt 0 view .LVU92
 349 00d2 8BE5      		ldi r24,lo8(91)
 350 00d4 8C0F      		add r24,r28
 351 00d6 8330      		cpi r24,lo8(3)
 352 00d8 00F4      		brsh .L17
 442:../../tmk_core/common/action.c ****     }
 353               		.loc 1 442 9 is_stmt 1 view .LVU93
 354 00da 81E8      		ldi r24,lo8(-127)
 355 00dc 90E0      		ldi r25,0
 356 00de C53A      		cpi r28,lo8(-91)
 357 00e0 01F0      		breq .L18
 442:../../tmk_core/common/action.c ****     }
 358               		.loc 1 442 26 is_stmt 0 discriminator 1 view .LVU94
 359 00e2 83E8      		ldi r24,lo8(-125)
 360 00e4 90E0      		ldi r25,0
 361 00e6 C63A      		cpi r28,lo8(-90)
 362 00e8 01F4      		brne .L18
 442:../../tmk_core/common/action.c ****     }
 363               		.loc 1 442 26 view .LVU95
 364 00ea 82E8      		ldi r24,lo8(-126)
 365 00ec 90E0      		ldi r25,0
 366               	.L18:
 367               	/* epilogue start */
 368               		.loc 1 447 1 discriminator 12 view .LVU96
 369 00ee CF91      		pop r28
 370               	.LVL27:
 442:../../tmk_core/common/action.c ****     }
 371               		.loc 1 442 9 discriminator 12 view .LVU97
 372 00f0 0C94 0000 		jmp host_system_send
 373               	.LVL28:
 374               	.L17:
 444:../../tmk_core/common/action.c ****         host_consumer_send(KEYCODE2CONSUMER(code));
 375               		.loc 1 444 10 is_stmt 1 view .LVU98
 444:../../tmk_core/common/action.c ****         host_consumer_send(KEYCODE2CONSUMER(code));
 376               		.loc 1 444 13 is_stmt 0 view .LVU99
 377 00f4 88E5      		ldi r24,lo8(88)
 378 00f6 8C0F      		add r24,r28
 379 00f8 8531      		cpi r24,lo8(21)
 380 00fa 00F4      		brsh .L7
 445:../../tmk_core/common/action.c ****     }
 381               		.loc 1 445 9 is_stmt 1 view .LVU100
 382 00fc 82EE      		ldi r24,lo8(-30)
 383 00fe 90E0      		ldi r25,0
 384 0100 C83A      		cpi r28,lo8(-88)
 385 0102 01F0      		breq .L19
 445:../../tmk_core/common/action.c ****     }
 386               		.loc 1 445 28 is_stmt 0 discriminator 1 view .LVU101
 387 0104 89EE      		ldi r24,lo8(-23)
 388 0106 90E0      		ldi r25,0
 389 0108 C93A      		cpi r28,lo8(-87)
 390 010a 01F0      		breq .L19
 445:../../tmk_core/common/action.c ****     }
 391               		.loc 1 445 28 discriminator 3 view .LVU102
 392 010c 8AEE      		ldi r24,lo8(-22)
 393 010e 90E0      		ldi r25,0
 394 0110 CA3A      		cpi r28,lo8(-86)
 395 0112 01F0      		breq .L19
 445:../../tmk_core/common/action.c ****     }
 396               		.loc 1 445 28 discriminator 5 view .LVU103
 397 0114 85EB      		ldi r24,lo8(-75)
 398 0116 90E0      		ldi r25,0
 399 0118 CB3A      		cpi r28,lo8(-85)
 400 011a 01F0      		breq .L19
 445:../../tmk_core/common/action.c ****     }
 401               		.loc 1 445 28 discriminator 7 view .LVU104
 402 011c 86EB      		ldi r24,lo8(-74)
 403 011e 90E0      		ldi r25,0
 404 0120 CC3A      		cpi r28,lo8(-84)
 405 0122 01F0      		breq .L19
 445:../../tmk_core/common/action.c ****     }
 406               		.loc 1 445 28 discriminator 9 view .LVU105
 407 0124 83EB      		ldi r24,lo8(-77)
 408 0126 90E0      		ldi r25,0
 409 0128 CD3A      		cpi r28,lo8(-83)
 410 012a 01F0      		breq .L19
 445:../../tmk_core/common/action.c ****     }
 411               		.loc 1 445 28 discriminator 11 view .LVU106
 412 012c 84EB      		ldi r24,lo8(-76)
 413 012e 90E0      		ldi r25,0
 414 0130 CE3A      		cpi r28,lo8(-82)
 415 0132 01F0      		breq .L19
 445:../../tmk_core/common/action.c ****     }
 416               		.loc 1 445 28 discriminator 13 view .LVU107
 417 0134 90E0      		ldi r25,0
 418 0136 80E0      		ldi r24,0
 419 0138 CF3A      		cpi r28,lo8(-81)
 420 013a 01F4      		brne .L19
 445:../../tmk_core/common/action.c ****     }
 421               		.loc 1 445 28 view .LVU108
 422 013c 87EB      		ldi r24,lo8(-73)
 423 013e 90E0      		ldi r25,0
 424               	.L19:
 425               	/* epilogue start */
 426               		.loc 1 447 1 discriminator 84 view .LVU109
 427 0140 CF91      		pop r28
 428               	.LVL29:
 445:../../tmk_core/common/action.c ****     }
 429               		.loc 1 445 9 discriminator 84 view .LVU110
 430 0142 0C94 0000 		jmp host_consumer_send
 431               	.LVL30:
 432               	.L7:
 433               	/* epilogue start */
 434               		.loc 1 447 1 view .LVU111
 435 0146 CF91      		pop r28
 436               	.LVL31:
 437               		.loc 1 447 1 view .LVU112
 438 0148 0895      		ret
 439               		.cfi_endproc
 440               	.LFE12:
 442               		.section	.text.unregister_code,"ax",@progbits
 443               	.global	unregister_code
 445               	unregister_code:
 446               	.LVL32:
 447               	.LFB13:
 448:../../tmk_core/common/action.c **** 
 449:../../tmk_core/common/action.c **** void unregister_code(uint8_t code)
 450:../../tmk_core/common/action.c **** {
 448               		.loc 1 450 1 is_stmt 1 view -0
 449               		.cfi_startproc
 450               	/* prologue: function */
 451               	/* frame size = 0 */
 452               	/* stack size = 0 */
 453               	.L__stack_usage = 0
 451:../../tmk_core/common/action.c ****     if (code == KC_NO) {
 454               		.loc 1 451 5 view .LVU114
 455               		.loc 1 451 8 is_stmt 0 view .LVU115
 456 0000 8823      		tst r24
 457 0002 01F4      		brne .+2
 458 0004 00C0      		rjmp .L32
 452:../../tmk_core/common/action.c ****         return;
 453:../../tmk_core/common/action.c ****     }
 454:../../tmk_core/common/action.c **** 
 455:../../tmk_core/common/action.c **** #ifdef LOCKING_SUPPORT_ENABLE
 456:../../tmk_core/common/action.c ****     else if (KC_LOCKING_CAPS == code) {
 459               		.loc 1 456 10 is_stmt 1 view .LVU116
 460               		.loc 1 456 13 is_stmt 0 view .LVU117
 461 0006 8238      		cpi r24,lo8(-126)
 462 0008 01F4      		brne .L35
 457:../../tmk_core/common/action.c **** #ifdef LOCKING_RESYNC_ENABLE
 458:../../tmk_core/common/action.c ****         // Resync: ignore if caps lock already is off
 459:../../tmk_core/common/action.c ****         if (!(host_keyboard_leds() & (1<<USB_LED_CAPS_LOCK))) return;
 463               		.loc 1 459 9 is_stmt 1 view .LVU118
 464               		.loc 1 459 15 is_stmt 0 view .LVU119
 465 000a 0E94 0000 		call host_keyboard_leds
 466               	.LVL33:
 467               		.loc 1 459 12 view .LVU120
 468 000e 81FF      		sbrs r24,1
 469 0010 00C0      		rjmp .L32
 460:../../tmk_core/common/action.c **** #endif
 461:../../tmk_core/common/action.c ****         add_key(KC_CAPSLOCK);
 470               		.loc 1 461 9 is_stmt 1 view .LVU121
 471 0012 89E3      		ldi r24,lo8(57)
 472 0014 0E94 0000 		call add_key
 473               	.LVL34:
 462:../../tmk_core/common/action.c ****         send_keyboard_report();
 474               		.loc 1 462 9 view .LVU122
 475 0018 0E94 0000 		call send_keyboard_report
 476               	.LVL35:
 463:../../tmk_core/common/action.c ****         wait_ms(100);
 477               		.loc 1 463 9 view .LVU123
 478               	.LBB30:
 479               	.LBI30:
 166:/usr/avr/include/util/delay.h **** {
 480               		.loc 3 166 1 view .LVU124
 481               	.LBB31:
 168:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 482               		.loc 3 168 2 view .LVU125
 172:/usr/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 483               		.loc 3 172 2 view .LVU126
 173:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 484               		.loc 3 173 2 view .LVU127
 174:/usr/avr/include/util/delay.h **** 
 485               		.loc 3 174 2 view .LVU128
 184:/usr/avr/include/util/delay.h **** 	#endif
 486               		.loc 3 184 3 view .LVU129
 487               		.loc 3 187 2 view .LVU130
 488 001c 2FEF      		ldi r18,lo8(319999)
 489 001e 81EE      		ldi r24,hi8(319999)
 490 0020 94E0      		ldi r25,hlo8(319999)
 491 0022 2150      	1:	subi r18,1
 492 0024 8040      		sbci r24,0
 493 0026 9040      		sbci r25,0
 494 0028 01F4      		brne 1b
 495 002a 00C0      		rjmp .
 496 002c 0000      		nop
 497               	.LVL36:
 498               		.loc 3 187 2 is_stmt 0 view .LVU131
 499               	.LBE31:
 500               	.LBE30:
 464:../../tmk_core/common/action.c ****         del_key(KC_CAPSLOCK);
 501               		.loc 1 464 9 is_stmt 1 view .LVU132
 502 002e 89E3      		ldi r24,lo8(57)
 503               	.L52:
 465:../../tmk_core/common/action.c ****         send_keyboard_report();
 466:../../tmk_core/common/action.c ****     }
 467:../../tmk_core/common/action.c **** 
 468:../../tmk_core/common/action.c ****     else if (KC_LOCKING_NUM == code) {
 469:../../tmk_core/common/action.c **** #ifdef LOCKING_RESYNC_ENABLE
 470:../../tmk_core/common/action.c ****         if (!(host_keyboard_leds() & (1<<USB_LED_NUM_LOCK))) return;
 471:../../tmk_core/common/action.c **** #endif
 472:../../tmk_core/common/action.c ****         add_key(KC_NUMLOCK);
 473:../../tmk_core/common/action.c ****         send_keyboard_report();
 474:../../tmk_core/common/action.c ****         wait_ms(100);
 475:../../tmk_core/common/action.c ****         del_key(KC_NUMLOCK);
 504               		.loc 1 475 9 is_stmt 0 view .LVU133
 505 0030 0E94 0000 		call del_key
 506               	.LVL37:
 507               	.L53:
 476:../../tmk_core/common/action.c ****         send_keyboard_report();
 508               		.loc 1 476 9 is_stmt 1 view .LVU134
 509 0034 0C94 0000 		jmp send_keyboard_report
 510               	.LVL38:
 511               	.L35:
 468:../../tmk_core/common/action.c **** #ifdef LOCKING_RESYNC_ENABLE
 512               		.loc 1 468 10 view .LVU135
 468:../../tmk_core/common/action.c **** #ifdef LOCKING_RESYNC_ENABLE
 513               		.loc 1 468 13 is_stmt 0 view .LVU136
 514 0038 8338      		cpi r24,lo8(-125)
 515 003a 01F4      		brne .L37
 470:../../tmk_core/common/action.c **** #endif
 516               		.loc 1 470 9 is_stmt 1 view .LVU137
 470:../../tmk_core/common/action.c **** #endif
 517               		.loc 1 470 15 is_stmt 0 view .LVU138
 518 003c 0E94 0000 		call host_keyboard_leds
 519               	.LVL39:
 470:../../tmk_core/common/action.c **** #endif
 520               		.loc 1 470 12 view .LVU139
 521 0040 80FF      		sbrs r24,0
 522 0042 00C0      		rjmp .L32
 472:../../tmk_core/common/action.c ****         send_keyboard_report();
 523               		.loc 1 472 9 is_stmt 1 view .LVU140
 524 0044 83E5      		ldi r24,lo8(83)
 525 0046 0E94 0000 		call add_key
 526               	.LVL40:
 473:../../tmk_core/common/action.c ****         wait_ms(100);
 527               		.loc 1 473 9 view .LVU141
 528 004a 0E94 0000 		call send_keyboard_report
 529               	.LVL41:
 474:../../tmk_core/common/action.c ****         del_key(KC_NUMLOCK);
 530               		.loc 1 474 9 view .LVU142
 531               	.LBB32:
 532               	.LBI32:
 166:/usr/avr/include/util/delay.h **** {
 533               		.loc 3 166 1 view .LVU143
 534               	.LBB33:
 168:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 535               		.loc 3 168 2 view .LVU144
 172:/usr/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 536               		.loc 3 172 2 view .LVU145
 173:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 537               		.loc 3 173 2 view .LVU146
 174:/usr/avr/include/util/delay.h **** 
 538               		.loc 3 174 2 view .LVU147
 184:/usr/avr/include/util/delay.h **** 	#endif
 539               		.loc 3 184 3 view .LVU148
 540               		.loc 3 187 2 view .LVU149
 541 004e 2FEF      		ldi r18,lo8(319999)
 542 0050 81EE      		ldi r24,hi8(319999)
 543 0052 94E0      		ldi r25,hlo8(319999)
 544 0054 2150      	1:	subi r18,1
 545 0056 8040      		sbci r24,0
 546 0058 9040      		sbci r25,0
 547 005a 01F4      		brne 1b
 548 005c 00C0      		rjmp .
 549 005e 0000      		nop
 550               	.LVL42:
 551               		.loc 3 187 2 is_stmt 0 view .LVU150
 552               	.LBE33:
 553               	.LBE32:
 475:../../tmk_core/common/action.c ****         send_keyboard_report();
 554               		.loc 1 475 9 is_stmt 1 view .LVU151
 555 0060 83E5      		ldi r24,lo8(83)
 556 0062 00C0      		rjmp .L52
 557               	.LVL43:
 558               	.L37:
 477:../../tmk_core/common/action.c ****     }
 478:../../tmk_core/common/action.c **** 
 479:../../tmk_core/common/action.c ****     else if (KC_LOCKING_SCROLL == code) {
 559               		.loc 1 479 10 view .LVU152
 560               		.loc 1 479 13 is_stmt 0 view .LVU153
 561 0064 8438      		cpi r24,lo8(-124)
 562 0066 01F4      		brne .L38
 480:../../tmk_core/common/action.c **** #ifdef LOCKING_RESYNC_ENABLE
 481:../../tmk_core/common/action.c ****         if (!(host_keyboard_leds() & (1<<USB_LED_SCROLL_LOCK))) return;
 563               		.loc 1 481 9 is_stmt 1 view .LVU154
 564               		.loc 1 481 15 is_stmt 0 view .LVU155
 565 0068 0E94 0000 		call host_keyboard_leds
 566               	.LVL44:
 567               		.loc 1 481 12 view .LVU156
 568 006c 82FF      		sbrs r24,2
 569 006e 00C0      		rjmp .L32
 482:../../tmk_core/common/action.c **** #endif
 483:../../tmk_core/common/action.c ****         add_key(KC_SCROLLLOCK);
 570               		.loc 1 483 9 is_stmt 1 view .LVU157
 571 0070 87E4      		ldi r24,lo8(71)
 572 0072 0E94 0000 		call add_key
 573               	.LVL45:
 484:../../tmk_core/common/action.c ****         send_keyboard_report();
 574               		.loc 1 484 9 view .LVU158
 575 0076 0E94 0000 		call send_keyboard_report
 576               	.LVL46:
 485:../../tmk_core/common/action.c ****         wait_ms(100);
 577               		.loc 1 485 9 view .LVU159
 578               	.LBB34:
 579               	.LBI34:
 166:/usr/avr/include/util/delay.h **** {
 580               		.loc 3 166 1 view .LVU160
 581               	.LBB35:
 168:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 582               		.loc 3 168 2 view .LVU161
 172:/usr/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 583               		.loc 3 172 2 view .LVU162
 173:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 584               		.loc 3 173 2 view .LVU163
 174:/usr/avr/include/util/delay.h **** 
 585               		.loc 3 174 2 view .LVU164
 184:/usr/avr/include/util/delay.h **** 	#endif
 586               		.loc 3 184 3 view .LVU165
 587               		.loc 3 187 2 view .LVU166
 588 007a 2FEF      		ldi r18,lo8(319999)
 589 007c 81EE      		ldi r24,hi8(319999)
 590 007e 94E0      		ldi r25,hlo8(319999)
 591 0080 2150      	1:	subi r18,1
 592 0082 8040      		sbci r24,0
 593 0084 9040      		sbci r25,0
 594 0086 01F4      		brne 1b
 595 0088 00C0      		rjmp .
 596 008a 0000      		nop
 597               	.LVL47:
 598               		.loc 3 187 2 is_stmt 0 view .LVU167
 599               	.LBE35:
 600               	.LBE34:
 486:../../tmk_core/common/action.c ****         del_key(KC_SCROLLLOCK);
 601               		.loc 1 486 9 is_stmt 1 view .LVU168
 602 008c 87E4      		ldi r24,lo8(71)
 603 008e 00C0      		rjmp .L52
 604               	.LVL48:
 605               	.L38:
 487:../../tmk_core/common/action.c ****         send_keyboard_report();
 488:../../tmk_core/common/action.c ****     }
 489:../../tmk_core/common/action.c **** #endif
 490:../../tmk_core/common/action.c **** 
 491:../../tmk_core/common/action.c ****     else if IS_KEY(code) {
 606               		.loc 1 491 10 view .LVU169
 607               		.loc 1 491 13 is_stmt 0 view .LVU170
 608 0090 9CEF      		ldi r25,lo8(-4)
 609 0092 980F      		add r25,r24
 610 0094 913A      		cpi r25,lo8(-95)
 611 0096 00F0      		brlo .L52
 612               		.loc 1 491 13 discriminator 1 view .LVU171
 613 0098 90E5      		ldi r25,lo8(80)
 614 009a 980F      		add r25,r24
 615 009c 9E32      		cpi r25,lo8(46)
 616 009e 00F0      		brlo .L52
 492:../../tmk_core/common/action.c ****         del_key(code);
 493:../../tmk_core/common/action.c ****         send_keyboard_report();
 494:../../tmk_core/common/action.c ****     }
 495:../../tmk_core/common/action.c ****     else if IS_MOD(code) {
 617               		.loc 1 495 10 is_stmt 1 view .LVU172
 618               		.loc 1 495 13 is_stmt 0 view .LVU173
 619 00a0 90E2      		ldi r25,lo8(32)
 620 00a2 980F      		add r25,r24
 621 00a4 9830      		cpi r25,lo8(8)
 622 00a6 00F4      		brsh .L41
 496:../../tmk_core/common/action.c ****         del_mods(MOD_BIT(code));
 623               		.loc 1 496 9 is_stmt 1 view .LVU174
 624               		.loc 1 496 18 is_stmt 0 view .LVU175
 625 00a8 8770      		andi r24,lo8(7)
 626               	.LVL49:
 627               		.loc 1 496 9 view .LVU176
 628 00aa 91E0      		ldi r25,lo8(1)
 629 00ac 00C0      		rjmp 2f
 630               		1:
 631 00ae 990F      		lsl r25
 632               		2:
 633 00b0 8A95      		dec r24
 634 00b2 02F4      		brpl 1b
 635 00b4 892F      		mov r24,r25
 636 00b6 0E94 0000 		call del_mods
 637               	.LVL50:
 497:../../tmk_core/common/action.c ****         send_keyboard_report();
 638               		.loc 1 497 9 is_stmt 1 view .LVU177
 639 00ba 00C0      		rjmp .L53
 640               	.LVL51:
 641               	.L41:
 498:../../tmk_core/common/action.c ****     }
 499:../../tmk_core/common/action.c ****     else if IS_SYSTEM(code) {
 642               		.loc 1 499 10 view .LVU178
 643               		.loc 1 499 13 is_stmt 0 view .LVU179
 644 00bc 9BE5      		ldi r25,lo8(91)
 645 00be 980F      		add r25,r24
 646 00c0 9330      		cpi r25,lo8(3)
 647 00c2 00F4      		brsh .L42
 500:../../tmk_core/common/action.c ****         host_system_send(0);
 648               		.loc 1 500 9 is_stmt 1 view .LVU180
 649 00c4 90E0      		ldi r25,0
 650 00c6 80E0      		ldi r24,0
 651               	.LVL52:
 652               		.loc 1 500 9 is_stmt 0 view .LVU181
 653 00c8 0C94 0000 		jmp host_system_send
 654               	.LVL53:
 655               	.L42:
 501:../../tmk_core/common/action.c ****     }
 502:../../tmk_core/common/action.c ****     else if IS_CONSUMER(code) {
 656               		.loc 1 502 10 is_stmt 1 view .LVU182
 657               		.loc 1 502 13 is_stmt 0 view .LVU183
 658 00cc 885A      		subi r24,lo8(-(88))
 659               	.LVL54:
 660               		.loc 1 502 13 view .LVU184
 661 00ce 8531      		cpi r24,lo8(21)
 662 00d0 00F4      		brsh .L32
 503:../../tmk_core/common/action.c ****         host_consumer_send(0);
 663               		.loc 1 503 9 is_stmt 1 view .LVU185
 664 00d2 90E0      		ldi r25,0
 665 00d4 80E0      		ldi r24,0
 666               	.LVL55:
 667               		.loc 1 503 9 is_stmt 0 view .LVU186
 668 00d6 0C94 0000 		jmp host_consumer_send
 669               	.LVL56:
 670               	.L32:
 671               	/* epilogue start */
 504:../../tmk_core/common/action.c ****     }
 505:../../tmk_core/common/action.c **** }
 672               		.loc 1 505 1 view .LVU187
 673 00da 0895      		ret
 674               		.cfi_endproc
 675               	.LFE13:
 677               		.section	.text.type_code,"ax",@progbits
 678               	.global	type_code
 680               	type_code:
 681               	.LVL57:
 682               	.LFB14:
 506:../../tmk_core/common/action.c **** 
 507:../../tmk_core/common/action.c **** void type_code(uint8_t code)
 508:../../tmk_core/common/action.c **** {
 683               		.loc 1 508 1 is_stmt 1 view -0
 684               		.cfi_startproc
 685               		.loc 1 508 1 is_stmt 0 view .LVU189
 686 0000 CF93      		push r28
 687               	.LCFI5:
 688               		.cfi_def_cfa_offset 3
 689               		.cfi_offset 28, -2
 690               	/* prologue: function */
 691               	/* frame size = 0 */
 692               	/* stack size = 1 */
 693               	.L__stack_usage = 1
 694 0002 C82F      		mov r28,r24
 509:../../tmk_core/common/action.c ****     register_code(code);
 695               		.loc 1 509 5 is_stmt 1 view .LVU190
 696 0004 0E94 0000 		call register_code
 697               	.LVL58:
 510:../../tmk_core/common/action.c ****     unregister_code(code);
 698               		.loc 1 510 5 view .LVU191
 699 0008 8C2F      		mov r24,r28
 700               	/* epilogue start */
 511:../../tmk_core/common/action.c **** }
 701               		.loc 1 511 1 is_stmt 0 view .LVU192
 702 000a CF91      		pop r28
 703               	.LVL59:
 510:../../tmk_core/common/action.c ****     unregister_code(code);
 704               		.loc 1 510 5 view .LVU193
 705 000c 0C94 0000 		jmp unregister_code
 706               	.LVL60:
 510:../../tmk_core/common/action.c ****     unregister_code(code);
 707               		.loc 1 510 5 view .LVU194
 708               		.cfi_endproc
 709               	.LFE14:
 711               		.section	.text.register_mods,"ax",@progbits
 712               	.global	register_mods
 714               	register_mods:
 715               	.LVL61:
 716               	.LFB15:
 512:../../tmk_core/common/action.c **** 
 513:../../tmk_core/common/action.c **** void register_mods(uint8_t mods)
 514:../../tmk_core/common/action.c **** {
 717               		.loc 1 514 1 is_stmt 1 view -0
 718               		.cfi_startproc
 719               	/* prologue: function */
 720               	/* frame size = 0 */
 721               	/* stack size = 0 */
 722               	.L__stack_usage = 0
 515:../../tmk_core/common/action.c ****     if (mods) {
 723               		.loc 1 515 5 view .LVU196
 724               		.loc 1 515 8 is_stmt 0 view .LVU197
 725 0000 8823      		tst r24
 726 0002 01F0      		breq .L55
 516:../../tmk_core/common/action.c ****         add_mods(mods);
 727               		.loc 1 516 9 is_stmt 1 view .LVU198
 728 0004 0E94 0000 		call add_mods
 729               	.LVL62:
 517:../../tmk_core/common/action.c ****         send_keyboard_report();
 730               		.loc 1 517 9 view .LVU199
 731 0008 0C94 0000 		jmp send_keyboard_report
 732               	.LVL63:
 733               	.L55:
 734               	/* epilogue start */
 518:../../tmk_core/common/action.c ****     }
 519:../../tmk_core/common/action.c **** }
 735               		.loc 1 519 1 is_stmt 0 view .LVU200
 736 000c 0895      		ret
 737               		.cfi_endproc
 738               	.LFE15:
 740               		.section	.text.unregister_mods,"ax",@progbits
 741               	.global	unregister_mods
 743               	unregister_mods:
 744               	.LVL64:
 745               	.LFB16:
 520:../../tmk_core/common/action.c **** 
 521:../../tmk_core/common/action.c **** void unregister_mods(uint8_t mods)
 522:../../tmk_core/common/action.c **** {
 746               		.loc 1 522 1 is_stmt 1 view -0
 747               		.cfi_startproc
 748               	/* prologue: function */
 749               	/* frame size = 0 */
 750               	/* stack size = 0 */
 751               	.L__stack_usage = 0
 523:../../tmk_core/common/action.c ****     if (mods) {
 752               		.loc 1 523 5 view .LVU202
 753               		.loc 1 523 8 is_stmt 0 view .LVU203
 754 0000 8823      		tst r24
 755 0002 01F0      		breq .L57
 524:../../tmk_core/common/action.c ****         del_mods(mods);
 756               		.loc 1 524 9 is_stmt 1 view .LVU204
 757 0004 0E94 0000 		call del_mods
 758               	.LVL65:
 525:../../tmk_core/common/action.c ****         send_keyboard_report();
 759               		.loc 1 525 9 view .LVU205
 760 0008 0C94 0000 		jmp send_keyboard_report
 761               	.LVL66:
 762               	.L57:
 763               	/* epilogue start */
 526:../../tmk_core/common/action.c ****     }
 527:../../tmk_core/common/action.c **** }
 764               		.loc 1 527 1 is_stmt 0 view .LVU206
 765 000c 0895      		ret
 766               		.cfi_endproc
 767               	.LFE16:
 769               		.section	.text.clear_keyboard_but_mods,"ax",@progbits
 770               	.global	clear_keyboard_but_mods
 772               	clear_keyboard_but_mods:
 773               	.LFB18:
 528:../../tmk_core/common/action.c **** 
 529:../../tmk_core/common/action.c **** void clear_keyboard(void)
 530:../../tmk_core/common/action.c **** {
 531:../../tmk_core/common/action.c ****     clear_mods();
 532:../../tmk_core/common/action.c ****     clear_keyboard_but_mods();
 533:../../tmk_core/common/action.c **** }
 534:../../tmk_core/common/action.c **** 
 535:../../tmk_core/common/action.c **** void clear_keyboard_but_mods(void)
 536:../../tmk_core/common/action.c **** {
 774               		.loc 1 536 1 is_stmt 1 view -0
 775               		.cfi_startproc
 776               	/* prologue: function */
 777               	/* frame size = 0 */
 778               	/* stack size = 0 */
 779               	.L__stack_usage = 0
 537:../../tmk_core/common/action.c ****     clear_weak_mods();
 780               		.loc 1 537 5 view .LVU208
 781 0000 0E94 0000 		call clear_weak_mods
 782               	.LVL67:
 538:../../tmk_core/common/action.c ****     clear_keys();
 783               		.loc 1 538 5 view .LVU209
 784 0004 0E94 0000 		call clear_keys
 785               	.LVL68:
 539:../../tmk_core/common/action.c ****     send_keyboard_report();
 786               		.loc 1 539 5 view .LVU210
 787 0008 0E94 0000 		call send_keyboard_report
 788               	.LVL69:
 540:../../tmk_core/common/action.c **** #ifdef MOUSEKEY_ENABLE
 541:../../tmk_core/common/action.c ****     mousekey_clear();
 789               		.loc 1 541 5 view .LVU211
 790 000c 0E94 0000 		call mousekey_clear
 791               	.LVL70:
 542:../../tmk_core/common/action.c ****     mousekey_send();
 792               		.loc 1 542 5 view .LVU212
 793 0010 0E94 0000 		call mousekey_send
 794               	.LVL71:
 543:../../tmk_core/common/action.c **** #endif
 544:../../tmk_core/common/action.c **** #ifdef EXTRAKEY_ENABLE
 545:../../tmk_core/common/action.c ****     host_system_send(0);
 795               		.loc 1 545 5 view .LVU213
 796 0014 90E0      		ldi r25,0
 797 0016 80E0      		ldi r24,0
 798 0018 0E94 0000 		call host_system_send
 799               	.LVL72:
 546:../../tmk_core/common/action.c ****     host_consumer_send(0);
 800               		.loc 1 546 5 view .LVU214
 801 001c 90E0      		ldi r25,0
 802 001e 80E0      		ldi r24,0
 803 0020 0C94 0000 		jmp host_consumer_send
 804               	.LVL73:
 805               		.cfi_endproc
 806               	.LFE18:
 808               		.section	.text.clear_keyboard,"ax",@progbits
 809               	.global	clear_keyboard
 811               	clear_keyboard:
 812               	.LFB17:
 530:../../tmk_core/common/action.c ****     clear_mods();
 813               		.loc 1 530 1 view -0
 814               		.cfi_startproc
 815               	/* prologue: function */
 816               	/* frame size = 0 */
 817               	/* stack size = 0 */
 818               	.L__stack_usage = 0
 531:../../tmk_core/common/action.c ****     clear_keyboard_but_mods();
 819               		.loc 1 531 5 view .LVU216
 820 0000 0E94 0000 		call clear_mods
 821               	.LVL74:
 532:../../tmk_core/common/action.c **** }
 822               		.loc 1 532 5 view .LVU217
 823 0004 0C94 0000 		jmp clear_keyboard_but_mods
 824               	.LVL75:
 825               		.cfi_endproc
 826               	.LFE17:
 828               		.section	.text.process_action,"ax",@progbits
 829               	.global	process_action
 831               	process_action:
 832               	.LVL76:
 833               	.LFB11:
  61:../../tmk_core/common/action.c ****     if (hook_process_action(record)) return;
 834               		.loc 1 61 1 view -0
 835               		.cfi_startproc
  61:../../tmk_core/common/action.c ****     if (hook_process_action(record)) return;
 836               		.loc 1 61 1 is_stmt 0 view .LVU219
 837 0000 AF92      		push r10
 838               	.LCFI6:
 839               		.cfi_def_cfa_offset 3
 840               		.cfi_offset 10, -2
 841 0002 BF92      		push r11
 842               	.LCFI7:
 843               		.cfi_def_cfa_offset 4
 844               		.cfi_offset 11, -3
 845 0004 CF92      		push r12
 846               	.LCFI8:
 847               		.cfi_def_cfa_offset 5
 848               		.cfi_offset 12, -4
 849 0006 DF92      		push r13
 850               	.LCFI9:
 851               		.cfi_def_cfa_offset 6
 852               		.cfi_offset 13, -5
 853 0008 EF92      		push r14
 854               	.LCFI10:
 855               		.cfi_def_cfa_offset 7
 856               		.cfi_offset 14, -6
 857 000a FF92      		push r15
 858               	.LCFI11:
 859               		.cfi_def_cfa_offset 8
 860               		.cfi_offset 15, -7
 861 000c 0F93      		push r16
 862               	.LCFI12:
 863               		.cfi_def_cfa_offset 9
 864               		.cfi_offset 16, -8
 865 000e 1F93      		push r17
 866               	.LCFI13:
 867               		.cfi_def_cfa_offset 10
 868               		.cfi_offset 17, -9
 869 0010 CF93      		push r28
 870               	.LCFI14:
 871               		.cfi_def_cfa_offset 11
 872               		.cfi_offset 28, -10
 873 0012 DF93      		push r29
 874               	.LCFI15:
 875               		.cfi_def_cfa_offset 12
 876               		.cfi_offset 29, -11
 877 0014 00D0      		rcall .
 878 0016 00D0      		rcall .
 879 0018 0F92      		push __tmp_reg__
 880               	.LCFI16:
 881               		.cfi_def_cfa_offset 17
 882 001a CDB7      		in r28,__SP_L__
 883 001c DEB7      		in r29,__SP_H__
 884               	.LCFI17:
 885               		.cfi_def_cfa_register 28
 886               	/* prologue: function */
 887               	/* frame size = 5 */
 888               	/* stack size = 15 */
 889               	.L__stack_usage = 15
 890 001e 5C01      		movw r10,r24
  62:../../tmk_core/common/action.c **** 
 891               		.loc 1 62 5 is_stmt 1 view .LVU220
  62:../../tmk_core/common/action.c **** 
 892               		.loc 1 62 9 is_stmt 0 view .LVU221
 893 0020 0E94 0000 		call hook_process_action
 894               	.LVL77:
  62:../../tmk_core/common/action.c **** 
 895               		.loc 1 62 8 view .LVU222
 896 0024 8111      		cpse r24,__zero_reg__
 897 0026 00C0      		rjmp .L61
  64:../../tmk_core/common/action.c **** #ifndef NO_ACTION_TAPPING
 898               		.loc 1 64 5 is_stmt 1 view .LVU223
  64:../../tmk_core/common/action.c **** #ifndef NO_ACTION_TAPPING
 899               		.loc 1 64 16 is_stmt 0 view .LVU224
 900 0028 85E0      		ldi r24,lo8(5)
 901 002a F501      		movw r30,r10
 902 002c DE01      		movw r26,r28
 903 002e 1196      		adiw r26,1
 904               		0:
 905 0030 0190      		ld r0,Z+
 906 0032 0D92      		st X+,r0
 907 0034 8A95      		dec r24
 908 0036 01F4      		brne 0b
 909               	.LVL78:
  64:../../tmk_core/common/action.c **** #ifndef NO_ACTION_TAPPING
 910               		.loc 1 64 16 view .LVU225
 911 0038 F501      		movw r30,r10
 912 003a 8381      		ldd r24,Z+3
 913 003c 9481      		ldd r25,Z+4
 914               	.LVL79:
  66:../../tmk_core/common/action.c **** #endif
 915               		.loc 1 66 5 is_stmt 1 view .LVU226
  69:../../tmk_core/common/action.c **** 
 916               		.loc 1 69 5 view .LVU227
 917               	.LBB44:
 918               	.LBI44:
 919               		.loc 2 49 20 view .LVU228
 920               	.LBB45:
 921               		.loc 2 49 51 view .LVU229
 922               		.loc 2 49 74 is_stmt 0 view .LVU230
 923 003e 0097      		sbiw r24,0
 924 0040 01F0      		breq .L61
 925               	.LBE45:
 926               	.LBE44:
  64:../../tmk_core/common/action.c **** #ifndef NO_ACTION_TAPPING
 927               		.loc 1 64 16 view .LVU231
 928 0042 4081      		ld r20,Z
 929 0044 5181      		ldd r21,Z+1
 930               	.LBB47:
 931               	.LBB46:
 932               		.loc 2 49 74 view .LVU232
 933 0046 242F      		mov r18,r20
 934 0048 2523      		and r18,r21
 935 004a 2F3F      		cpi r18,lo8(-1)
 936 004c 01F0      		breq .+2
 937 004e 00C0      		rjmp .L157
 938               	.LVL80:
 939               	.L61:
 940               	/* epilogue start */
 941               		.loc 2 49 74 view .LVU233
 942               	.LBE46:
 943               	.LBE47:
 363:../../tmk_core/common/action.c **** 
 944               		.loc 1 363 1 view .LVU234
 945 0050 0F90      		pop __tmp_reg__
 946 0052 0F90      		pop __tmp_reg__
 947 0054 0F90      		pop __tmp_reg__
 948 0056 0F90      		pop __tmp_reg__
 949 0058 0F90      		pop __tmp_reg__
 950 005a DF91      		pop r29
 951 005c CF91      		pop r28
 952 005e 1F91      		pop r17
 953               	.LVL81:
 363:../../tmk_core/common/action.c **** 
 954               		.loc 1 363 1 view .LVU235
 955 0060 0F91      		pop r16
 363:../../tmk_core/common/action.c **** 
 956               		.loc 1 363 1 view .LVU236
 957 0062 FF90      		pop r15
 958 0064 EF90      		pop r14
 959 0066 DF90      		pop r13
 960 0068 CF90      		pop r12
 961 006a BF90      		pop r11
 962 006c AF90      		pop r10
 963               	.LVL82:
 363:../../tmk_core/common/action.c **** 
 964               		.loc 1 363 1 view .LVU237
 965 006e 0895      		ret
 966               	.LVL83:
 967               	.L64:
 968               	.LBB48:
  84:../../tmk_core/common/action.c ****                                                                 action.key.mods<<4;
 969               		.loc 1 84 17 is_stmt 1 view .LVU238
 970 0070 F12F      		mov r31,r17
 971 0072 FF70      		andi r31,lo8(15)
 972 0074 EF2E      		mov r14,r31
  84:../../tmk_core/common/action.c ****                                                                 action.key.mods<<4;
 973               		.loc 1 84 48 is_stmt 0 view .LVU239
 974 0076 107F      		andi r17,lo8(-16)
  84:../../tmk_core/common/action.c ****                                                                 action.key.mods<<4;
 975               		.loc 1 84 25 view .LVU240
 976 0078 01F0      		breq .L65
  84:../../tmk_core/common/action.c ****                                                                 action.key.mods<<4;
 977               		.loc 1 84 25 discriminator 2 view .LVU241
 978 007a E294      		swap r14
 979 007c 40EF      		ldi r20,lo8(-16)
 980 007e E422      		and r14,r20
 981               	.L65:
 982               	.LVL84:
  86:../../tmk_core/common/action.c ****                     if (mods) {
 983               		.loc 1 86 17 is_stmt 1 discriminator 4 view .LVU242
  86:../../tmk_core/common/action.c ****                     if (mods) {
 984               		.loc 1 86 20 is_stmt 0 discriminator 4 view .LVU243
 985 0080 FF20      		tst r15
 986 0082 01F0      		breq .L66
  87:../../tmk_core/common/action.c ****                         add_weak_mods(mods);
 987               		.loc 1 87 21 is_stmt 1 view .LVU244
  87:../../tmk_core/common/action.c ****                         add_weak_mods(mods);
 988               		.loc 1 87 24 is_stmt 0 view .LVU245
 989 0084 EE20      		tst r14
 990 0086 01F0      		breq .L164
  88:../../tmk_core/common/action.c ****                         send_keyboard_report();
 991               		.loc 1 88 25 is_stmt 1 view .LVU246
 992 0088 8E2D      		mov r24,r14
 993 008a 0E94 0000 		call add_weak_mods
 994               	.LVL85:
  89:../../tmk_core/common/action.c ****                     }
 995               		.loc 1 89 25 view .LVU247
 996 008e 0E94 0000 		call send_keyboard_report
 997               	.LVL86:
  91:../../tmk_core/common/action.c ****                 } else {
 998               		.loc 1 91 21 view .LVU248
 999               	.L164:
  91:../../tmk_core/common/action.c ****                 } else {
 1000               		.loc 1 91 21 is_stmt 0 view .LVU249
 1001               	.LBE48:
 295:../../tmk_core/common/action.c ****                             register_code(action.layer_tap.code);
 1002               		.loc 1 295 29 is_stmt 1 view .LVU250
 296:../../tmk_core/common/action.c ****                         } else {
 1003               		.loc 1 296 29 view .LVU251
 1004 0092 802F      		mov r24,r16
 1005               	/* epilogue start */
 363:../../tmk_core/common/action.c **** 
 1006               		.loc 1 363 1 is_stmt 0 view .LVU252
 1007 0094 0F90      		pop __tmp_reg__
 1008 0096 0F90      		pop __tmp_reg__
 1009 0098 0F90      		pop __tmp_reg__
 1010 009a 0F90      		pop __tmp_reg__
 1011 009c 0F90      		pop __tmp_reg__
 1012 009e DF91      		pop r29
 1013 00a0 CF91      		pop r28
 1014               	.LVL87:
 363:../../tmk_core/common/action.c **** 
 1015               		.loc 1 363 1 view .LVU253
 1016 00a2 1F91      		pop r17
 1017               	.LVL88:
 363:../../tmk_core/common/action.c **** 
 1018               		.loc 1 363 1 view .LVU254
 1019 00a4 0F91      		pop r16
 1020               	.LVL89:
 363:../../tmk_core/common/action.c **** 
 1021               		.loc 1 363 1 view .LVU255
 1022 00a6 FF90      		pop r15
 1023               	.LVL90:
 363:../../tmk_core/common/action.c **** 
 1024               		.loc 1 363 1 view .LVU256
 1025 00a8 EF90      		pop r14
 1026               	.LVL91:
 363:../../tmk_core/common/action.c **** 
 1027               		.loc 1 363 1 view .LVU257
 1028 00aa DF90      		pop r13
 1029               	.LVL92:
 363:../../tmk_core/common/action.c **** 
 1030               		.loc 1 363 1 view .LVU258
 1031 00ac CF90      		pop r12
 1032               	.LVL93:
 363:../../tmk_core/common/action.c **** 
 1033               		.loc 1 363 1 view .LVU259
 1034 00ae BF90      		pop r11
 1035               	.LVL94:
 363:../../tmk_core/common/action.c **** 
 1036               		.loc 1 363 1 view .LVU260
 1037 00b0 AF90      		pop r10
 1038               	.LVL95:
 296:../../tmk_core/common/action.c ****                         } else {
 1039               		.loc 1 296 29 view .LVU261
 1040 00b2 0C94 0000 		jmp register_code
 1041               	.LVL96:
 1042               	.L66:
 1043               	.LBB49:
  93:../../tmk_core/common/action.c ****                     if (mods) {
 1044               		.loc 1 93 21 is_stmt 1 view .LVU262
  93:../../tmk_core/common/action.c ****                     if (mods) {
 1045               		.loc 1 93 21 is_stmt 0 view .LVU263
 1046 00b6 802F      		mov r24,r16
 1047 00b8 0E94 0000 		call unregister_code
 1048               	.LVL97:
  94:../../tmk_core/common/action.c ****                         del_weak_mods(mods);
 1049               		.loc 1 94 21 is_stmt 1 view .LVU264
  94:../../tmk_core/common/action.c ****                         del_weak_mods(mods);
 1050               		.loc 1 94 24 is_stmt 0 view .LVU265
 1051 00bc EE20      		tst r14
 1052 00be 01F0      		breq .L61
  95:../../tmk_core/common/action.c ****                         send_keyboard_report();
 1053               		.loc 1 95 25 is_stmt 1 view .LVU266
 1054 00c0 8E2D      		mov r24,r14
 1055 00c2 0E94 0000 		call del_weak_mods
 1056               	.LVL98:
  96:../../tmk_core/common/action.c ****                     }
 1057               		.loc 1 96 25 view .LVU267
 1058               	/* epilogue start */
 1059               	.LBE49:
 363:../../tmk_core/common/action.c **** 
 1060               		.loc 1 363 1 is_stmt 0 view .LVU268
 1061 00c6 0F90      		pop __tmp_reg__
 1062 00c8 0F90      		pop __tmp_reg__
 1063 00ca 0F90      		pop __tmp_reg__
 1064 00cc 0F90      		pop __tmp_reg__
 1065 00ce 0F90      		pop __tmp_reg__
 1066 00d0 DF91      		pop r29
 1067 00d2 CF91      		pop r28
 1068               	.LVL99:
 363:../../tmk_core/common/action.c **** 
 1069               		.loc 1 363 1 view .LVU269
 1070 00d4 1F91      		pop r17
 1071               	.LVL100:
 363:../../tmk_core/common/action.c **** 
 1072               		.loc 1 363 1 view .LVU270
 1073 00d6 0F91      		pop r16
 1074               	.LVL101:
 363:../../tmk_core/common/action.c **** 
 1075               		.loc 1 363 1 view .LVU271
 1076 00d8 FF90      		pop r15
 1077               	.LVL102:
 363:../../tmk_core/common/action.c **** 
 1078               		.loc 1 363 1 view .LVU272
 1079 00da EF90      		pop r14
 1080               	.LVL103:
 363:../../tmk_core/common/action.c **** 
 1081               		.loc 1 363 1 view .LVU273
 1082 00dc DF90      		pop r13
 1083               	.LVL104:
 363:../../tmk_core/common/action.c **** 
 1084               		.loc 1 363 1 view .LVU274
 1085 00de CF90      		pop r12
 1086               	.LVL105:
 363:../../tmk_core/common/action.c **** 
 1087               		.loc 1 363 1 view .LVU275
 1088 00e0 BF90      		pop r11
 1089               	.LVL106:
 363:../../tmk_core/common/action.c **** 
 1090               		.loc 1 363 1 view .LVU276
 1091 00e2 AF90      		pop r10
 1092               	.LVL107:
 1093               	.LBB50:
  96:../../tmk_core/common/action.c ****                     }
 1094               		.loc 1 96 25 view .LVU277
 1095 00e4 0C94 0000 		jmp send_keyboard_report
 1096               	.LVL108:
 1097               	.L70:
  96:../../tmk_core/common/action.c ****                     }
 1098               		.loc 1 96 25 view .LVU278
 1099               	.LBE50:
 1100               	.LBB51:
 105:../../tmk_core/common/action.c ****                                                                     action.key.mods<<4;
 1101               		.loc 1 105 17 is_stmt 1 view .LVU279
 1102 00e8 212F      		mov r18,r17
 1103 00ea 2F70      		andi r18,lo8(15)
 1104 00ec D22E      		mov r13,r18
 105:../../tmk_core/common/action.c ****                                                                     action.key.mods<<4;
 1105               		.loc 1 105 48 is_stmt 0 view .LVU280
 1106 00ee 107F      		andi r17,lo8(-16)
 105:../../tmk_core/common/action.c ****                                                                     action.key.mods<<4;
 1107               		.loc 1 105 25 view .LVU281
 1108 00f0 1032      		cpi r17,lo8(32)
 1109 00f2 01F0      		breq .L71
 105:../../tmk_core/common/action.c ****                                                                     action.key.mods<<4;
 1110               		.loc 1 105 25 discriminator 2 view .LVU282
 1111 00f4 D294      		swap r13
 1112 00f6 30EF      		ldi r19,lo8(-16)
 1113 00f8 D322      		and r13,r19
 1114               	.L71:
 1115               	.LVL109:
 107:../../tmk_core/common/action.c ****     #ifndef NO_ACTION_ONESHOT
 1116               		.loc 1 107 17 is_stmt 1 discriminator 4 view .LVU283
 107:../../tmk_core/common/action.c ****     #ifndef NO_ACTION_ONESHOT
 1117               		.loc 1 107 17 is_stmt 0 discriminator 4 view .LVU284
 1118 00fa 0023      		tst r16
 1119 00fc 01F0      		breq .L72
 1120 00fe 0130      		cpi r16,lo8(1)
 1121 0100 01F4      		brne .+2
 1122 0102 00C0      		rjmp .L73
 156:../../tmk_core/common/action.c ****                             if (tap_count > 0) {
 1123               		.loc 1 156 25 is_stmt 1 view .LVU285
 156:../../tmk_core/common/action.c ****                             if (tap_count > 0) {
 1124               		.loc 1 156 28 is_stmt 0 view .LVU286
 1125 0104 FF20      		tst r15
 1126 0106 01F4      		brne .+2
 1127 0108 00C0      		rjmp .L82
 157:../../tmk_core/common/action.c ****                                 if (record->tap.interrupted) {
 1128               		.loc 1 157 29 is_stmt 1 view .LVU287
 157:../../tmk_core/common/action.c ****                                 if (record->tap.interrupted) {
 1129               		.loc 1 157 32 is_stmt 0 view .LVU288
 1130 010a EE20      		tst r14
 1131 010c 01F0      		breq .L163
 158:../../tmk_core/common/action.c ****                                     dprint("MODS_TAP: Tap: Cancel: add_mods\n");
 1132               		.loc 1 158 33 is_stmt 1 view .LVU289
 158:../../tmk_core/common/action.c ****                                     dprint("MODS_TAP: Tap: Cancel: add_mods\n");
 1133               		.loc 1 158 37 is_stmt 0 view .LVU290
 1134 010e F501      		movw r30,r10
 1135 0110 8581      		ldd r24,Z+5
 158:../../tmk_core/common/action.c ****                                     dprint("MODS_TAP: Tap: Cancel: add_mods\n");
 1136               		.loc 1 158 36 view .LVU291
 1137 0112 80FF      		sbrs r24,0
 1138 0114 00C0      		rjmp .L164
 159:../../tmk_core/common/action.c ****                                     // ad hoc: set 0 to cancel tap
 1139               		.loc 1 159 37 is_stmt 1 view .LVU292
 161:../../tmk_core/common/action.c ****                                     register_mods(mods);
 1140               		.loc 1 161 37 view .LVU293
 161:../../tmk_core/common/action.c ****                                     register_mods(mods);
 1141               		.loc 1 161 55 is_stmt 0 view .LVU294
 1142 0116 8F70      		andi r24,lo8(15)
 1143 0118 8583      		std Z+5,r24
 1144 011a 00C0      		rjmp .L163
 1145               	.L72:
 111:../../tmk_core/common/action.c ****                             if (tap_count == 0) {
 1146               		.loc 1 111 25 is_stmt 1 view .LVU295
 111:../../tmk_core/common/action.c ****                             if (tap_count == 0) {
 1147               		.loc 1 111 28 is_stmt 0 view .LVU296
 1148 011c FF20      		tst r15
 1149 011e 01F0      		breq .L75
 112:../../tmk_core/common/action.c ****                                 register_mods(mods);
 1150               		.loc 1 112 29 is_stmt 1 view .LVU297
 112:../../tmk_core/common/action.c ****                                 register_mods(mods);
 1151               		.loc 1 112 32 is_stmt 0 view .LVU298
 1152 0120 E110      		cpse r14,__zero_reg__
 1153 0122 00C0      		rjmp .L76
 1154               	.L163:
 162:../../tmk_core/common/action.c ****                                 } else {
 1155               		.loc 1 162 37 is_stmt 1 view .LVU299
 1156 0124 8D2D      		mov r24,r13
 1157               	.LVL110:
 1158               	.L168:
 1159               	/* epilogue start */
 162:../../tmk_core/common/action.c ****                                 } else {
 1160               		.loc 1 162 37 is_stmt 0 view .LVU300
 1161               	.LBE51:
 363:../../tmk_core/common/action.c **** 
 1162               		.loc 1 363 1 view .LVU301
 1163 0126 0F90      		pop __tmp_reg__
 1164 0128 0F90      		pop __tmp_reg__
 1165 012a 0F90      		pop __tmp_reg__
 1166 012c 0F90      		pop __tmp_reg__
 1167 012e 0F90      		pop __tmp_reg__
 1168 0130 DF91      		pop r29
 1169 0132 CF91      		pop r28
 1170               	.LVL111:
 363:../../tmk_core/common/action.c **** 
 1171               		.loc 1 363 1 view .LVU302
 1172 0134 1F91      		pop r17
 1173               	.LVL112:
 363:../../tmk_core/common/action.c **** 
 1174               		.loc 1 363 1 view .LVU303
 1175 0136 0F91      		pop r16
 1176               	.LVL113:
 363:../../tmk_core/common/action.c **** 
 1177               		.loc 1 363 1 view .LVU304
 1178 0138 FF90      		pop r15
 1179               	.LVL114:
 363:../../tmk_core/common/action.c **** 
 1180               		.loc 1 363 1 view .LVU305
 1181 013a EF90      		pop r14
 1182               	.LVL115:
 363:../../tmk_core/common/action.c **** 
 1183               		.loc 1 363 1 view .LVU306
 1184 013c DF90      		pop r13
 1185               	.LVL116:
 363:../../tmk_core/common/action.c **** 
 1186               		.loc 1 363 1 view .LVU307
 1187 013e CF90      		pop r12
 1188               	.LVL117:
 363:../../tmk_core/common/action.c **** 
 1189               		.loc 1 363 1 view .LVU308
 1190 0140 BF90      		pop r11
 1191               	.LVL118:
 363:../../tmk_core/common/action.c **** 
 1192               		.loc 1 363 1 view .LVU309
 1193 0142 AF90      		pop r10
 1194               	.LVL119:
 1195               	.LBB52:
 162:../../tmk_core/common/action.c ****                                 } else {
 1196               		.loc 1 162 37 view .LVU310
 1197 0144 0C94 0000 		jmp register_mods
 1198               	.LVL120:
 1199               	.L76:
 115:../../tmk_core/common/action.c ****                                 dprint("MODS_TAP: Oneshot: start\n");
 1200               		.loc 1 115 34 is_stmt 1 view .LVU311
 115:../../tmk_core/common/action.c ****                                 dprint("MODS_TAP: Oneshot: start\n");
 1201               		.loc 1 115 37 is_stmt 0 view .LVU312
 1202 0148 81E0      		ldi r24,lo8(1)
 1203 014a E812      		cpse r14,r24
 1204 014c 00C0      		rjmp .L163
 116:../../tmk_core/common/action.c ****                                 set_oneshot_mods(mods);
 1205               		.loc 1 116 33 is_stmt 1 view .LVU313
 117:../../tmk_core/common/action.c ****                             }
 1206               		.loc 1 117 33 view .LVU314
 1207 014e 8D2D      		mov r24,r13
 1208               	/* epilogue start */
 1209               	.LBE52:
 363:../../tmk_core/common/action.c **** 
 1210               		.loc 1 363 1 is_stmt 0 view .LVU315
 1211 0150 0F90      		pop __tmp_reg__
 1212 0152 0F90      		pop __tmp_reg__
 1213 0154 0F90      		pop __tmp_reg__
 1214 0156 0F90      		pop __tmp_reg__
 1215 0158 0F90      		pop __tmp_reg__
 1216 015a DF91      		pop r29
 1217 015c CF91      		pop r28
 1218               	.LVL121:
 363:../../tmk_core/common/action.c **** 
 1219               		.loc 1 363 1 view .LVU316
 1220 015e 1F91      		pop r17
 1221               	.LVL122:
 363:../../tmk_core/common/action.c **** 
 1222               		.loc 1 363 1 view .LVU317
 1223 0160 0F91      		pop r16
 1224               	.LVL123:
 363:../../tmk_core/common/action.c **** 
 1225               		.loc 1 363 1 view .LVU318
 1226 0162 FF90      		pop r15
 1227               	.LVL124:
 363:../../tmk_core/common/action.c **** 
 1228               		.loc 1 363 1 view .LVU319
 1229 0164 EF90      		pop r14
 1230               	.LVL125:
 363:../../tmk_core/common/action.c **** 
 1231               		.loc 1 363 1 view .LVU320
 1232 0166 DF90      		pop r13
 1233               	.LVL126:
 363:../../tmk_core/common/action.c **** 
 1234               		.loc 1 363 1 view .LVU321
 1235 0168 CF90      		pop r12
 1236               	.LVL127:
 363:../../tmk_core/common/action.c **** 
 1237               		.loc 1 363 1 view .LVU322
 1238 016a BF90      		pop r11
 1239               	.LVL128:
 363:../../tmk_core/common/action.c **** 
 1240               		.loc 1 363 1 view .LVU323
 1241 016c AF90      		pop r10
 1242               	.LVL129:
 1243               	.LBB53:
 117:../../tmk_core/common/action.c ****                             }
 1244               		.loc 1 117 33 view .LVU324
 1245 016e 0C94 0000 		jmp set_oneshot_mods
 1246               	.LVL130:
 1247               	.L75:
 123:../../tmk_core/common/action.c ****                                 clear_oneshot_mods();
 1248               		.loc 1 123 29 is_stmt 1 view .LVU325
 123:../../tmk_core/common/action.c ****                                 clear_oneshot_mods();
 1249               		.loc 1 123 32 is_stmt 0 view .LVU326
 1250 0172 E110      		cpse r14,__zero_reg__
 1251 0174 00C0      		rjmp .L78
 1252               	.L160:
 131:../../tmk_core/common/action.c ****                                 unregister_mods(mods);
 1253               		.loc 1 131 33 is_stmt 1 view .LVU327
 1254 0176 0E94 0000 		call clear_oneshot_mods
 1255               	.LVL131:
 132:../../tmk_core/common/action.c ****                             }
 1256               		.loc 1 132 33 view .LVU328
 1257               	.L85:
 176:../../tmk_core/common/action.c ****                                 unregister_mods(mods);
 1258               		.loc 1 176 33 view .LVU329
 177:../../tmk_core/common/action.c ****                             }
 1259               		.loc 1 177 33 view .LVU330
 1260 017a 8D2D      		mov r24,r13
 1261               	.LVL132:
 1262               	.L117:
 1263               	/* epilogue start */
 177:../../tmk_core/common/action.c ****                             }
 1264               		.loc 1 177 33 is_stmt 0 view .LVU331
 1265               	.LBE53:
 363:../../tmk_core/common/action.c **** 
 1266               		.loc 1 363 1 discriminator 4 view .LVU332
 1267 017c 0F90      		pop __tmp_reg__
 1268 017e 0F90      		pop __tmp_reg__
 1269 0180 0F90      		pop __tmp_reg__
 1270 0182 0F90      		pop __tmp_reg__
 1271 0184 0F90      		pop __tmp_reg__
 1272 0186 DF91      		pop r29
 1273 0188 CF91      		pop r28
 1274               	.LVL133:
 363:../../tmk_core/common/action.c **** 
 1275               		.loc 1 363 1 discriminator 4 view .LVU333
 1276 018a 1F91      		pop r17
 1277               	.LVL134:
 363:../../tmk_core/common/action.c **** 
 1278               		.loc 1 363 1 discriminator 4 view .LVU334
 1279 018c 0F91      		pop r16
 1280               	.LVL135:
 363:../../tmk_core/common/action.c **** 
 1281               		.loc 1 363 1 discriminator 4 view .LVU335
 1282 018e FF90      		pop r15
 1283               	.LVL136:
 363:../../tmk_core/common/action.c **** 
 1284               		.loc 1 363 1 discriminator 4 view .LVU336
 1285 0190 EF90      		pop r14
 1286               	.LVL137:
 363:../../tmk_core/common/action.c **** 
 1287               		.loc 1 363 1 discriminator 4 view .LVU337
 1288 0192 DF90      		pop r13
 1289               	.LVL138:
 363:../../tmk_core/common/action.c **** 
 1290               		.loc 1 363 1 discriminator 4 view .LVU338
 1291 0194 CF90      		pop r12
 1292               	.LVL139:
 363:../../tmk_core/common/action.c **** 
 1293               		.loc 1 363 1 discriminator 4 view .LVU339
 1294 0196 BF90      		pop r11
 1295               	.LVL140:
 363:../../tmk_core/common/action.c **** 
 1296               		.loc 1 363 1 discriminator 4 view .LVU340
 1297 0198 AF90      		pop r10
 1298               	.LVL141:
 262:../../tmk_core/common/action.c ****                                 (action.layer_tap.code & 0x0f) << 4 :
 1299               		.loc 1 262 25 discriminator 4 view .LVU341
 1300 019a 0C94 0000 		jmp unregister_mods
 1301               	.LVL142:
 1302               	.L78:
 1303               	.LBB54:
 127:../../tmk_core/common/action.c ****                                 // Retain Oneshot mods
 1304               		.loc 1 127 34 is_stmt 1 view .LVU342
 127:../../tmk_core/common/action.c ****                                 // Retain Oneshot mods
 1305               		.loc 1 127 37 is_stmt 0 view .LVU343
 1306 019e 91E0      		ldi r25,lo8(1)
 1307 01a0 E916      		cp r14,r25
 1308 01a2 01F4      		brne .+2
 1309 01a4 00C0      		rjmp .L61
 1310 01a6 00C0      		rjmp .L160
 1311               	.L73:
 138:../../tmk_core/common/action.c ****                             if (tap_count <= TAPPING_TOGGLE) {
 1312               		.loc 1 138 25 is_stmt 1 view .LVU344
 138:../../tmk_core/common/action.c ****                             if (tap_count <= TAPPING_TOGGLE) {
 1313               		.loc 1 138 28 is_stmt 0 view .LVU345
 1314 01a8 FF20      		tst r15
 1315 01aa 01F0      		breq .L80
 139:../../tmk_core/common/action.c ****                                 if (mods & get_mods()) {
 1316               		.loc 1 139 29 is_stmt 1 view .LVU346
 139:../../tmk_core/common/action.c ****                                 if (mods & get_mods()) {
 1317               		.loc 1 139 32 is_stmt 0 view .LVU347
 1318 01ac E5E0      		ldi r30,lo8(5)
 1319 01ae EE15      		cp r30,r14
 1320 01b0 00F4      		brsh .+2
 1321 01b2 00C0      		rjmp .L61
 140:../../tmk_core/common/action.c ****                                     dprint("MODS_TAP_TOGGLE: toggle mods off\n");
 1322               		.loc 1 140 33 is_stmt 1 view .LVU348
 140:../../tmk_core/common/action.c ****                                     dprint("MODS_TAP_TOGGLE: toggle mods off\n");
 1323               		.loc 1 140 44 is_stmt 0 view .LVU349
 1324 01b4 0E94 0000 		call get_mods
 1325               	.LVL143:
 140:../../tmk_core/common/action.c ****                                     dprint("MODS_TAP_TOGGLE: toggle mods off\n");
 1326               		.loc 1 140 37 view .LVU350
 1327 01b8 8D21      		and r24,r13
 140:../../tmk_core/common/action.c ****                                     dprint("MODS_TAP_TOGGLE: toggle mods off\n");
 1328               		.loc 1 140 36 view .LVU351
 1329 01ba 01F4      		brne .+2
 1330 01bc 00C0      		rjmp .L163
 1331 01be 00C0      		rjmp .L85
 1332               	.L80:
 149:../../tmk_core/common/action.c ****                                 dprint("MODS_TAP_TOGGLE: release : unregister_mods\n");
 1333               		.loc 1 149 29 is_stmt 1 view .LVU352
 149:../../tmk_core/common/action.c ****                                 dprint("MODS_TAP_TOGGLE: release : unregister_mods\n");
 1334               		.loc 1 149 32 is_stmt 0 view .LVU353
 1335 01c0 F4E0      		ldi r31,lo8(4)
 1336 01c2 FE15      		cp r31,r14
 1337 01c4 00F4      		brsh .+2
 1338 01c6 00C0      		rjmp .L61
 1339 01c8 00C0      		rjmp .L85
 1340               	.L82:
 172:../../tmk_core/common/action.c ****                                 dprint("MODS_TAP: Tap: unregister_code\n");
 1341               		.loc 1 172 29 is_stmt 1 view .LVU354
 172:../../tmk_core/common/action.c ****                                 dprint("MODS_TAP: Tap: unregister_code\n");
 1342               		.loc 1 172 32 is_stmt 0 view .LVU355
 1343 01ca EE20      		tst r14
 1344 01cc 01F0      		breq .L85
 1345               	.LVL144:
 1346               	.L167:
 172:../../tmk_core/common/action.c ****                                 dprint("MODS_TAP: Tap: unregister_code\n");
 1347               		.loc 1 172 32 view .LVU356
 1348               	.LBE54:
 303:../../tmk_core/common/action.c ****                             unregister_code(action.layer_tap.code);
 1349               		.loc 1 303 29 is_stmt 1 view .LVU357
 304:../../tmk_core/common/action.c ****                         } else {
 1350               		.loc 1 304 29 view .LVU358
 1351 01ce 802F      		mov r24,r16
 1352               	/* epilogue start */
 363:../../tmk_core/common/action.c **** 
 1353               		.loc 1 363 1 is_stmt 0 view .LVU359
 1354 01d0 0F90      		pop __tmp_reg__
 1355 01d2 0F90      		pop __tmp_reg__
 1356 01d4 0F90      		pop __tmp_reg__
 1357 01d6 0F90      		pop __tmp_reg__
 1358 01d8 0F90      		pop __tmp_reg__
 1359 01da DF91      		pop r29
 1360 01dc CF91      		pop r28
 1361               	.LVL145:
 363:../../tmk_core/common/action.c **** 
 1362               		.loc 1 363 1 view .LVU360
 1363 01de 1F91      		pop r17
 1364               	.LVL146:
 363:../../tmk_core/common/action.c **** 
 1365               		.loc 1 363 1 view .LVU361
 1366 01e0 0F91      		pop r16
 1367               	.LVL147:
 363:../../tmk_core/common/action.c **** 
 1368               		.loc 1 363 1 view .LVU362
 1369 01e2 FF90      		pop r15
 1370               	.LVL148:
 363:../../tmk_core/common/action.c **** 
 1371               		.loc 1 363 1 view .LVU363
 1372 01e4 EF90      		pop r14
 1373               	.LVL149:
 363:../../tmk_core/common/action.c **** 
 1374               		.loc 1 363 1 view .LVU364
 1375 01e6 DF90      		pop r13
 1376               	.LVL150:
 363:../../tmk_core/common/action.c **** 
 1377               		.loc 1 363 1 view .LVU365
 1378 01e8 CF90      		pop r12
 1379               	.LVL151:
 363:../../tmk_core/common/action.c **** 
 1380               		.loc 1 363 1 view .LVU366
 1381 01ea BF90      		pop r11
 1382               	.LVL152:
 363:../../tmk_core/common/action.c **** 
 1383               		.loc 1 363 1 view .LVU367
 1384 01ec AF90      		pop r10
 1385               	.LVL153:
 304:../../tmk_core/common/action.c ****                         } else {
 1386               		.loc 1 304 29 view .LVU368
 1387 01ee 0C94 0000 		jmp unregister_code
 1388               	.LVL154:
 1389               	.L86:
 188:../../tmk_core/common/action.c ****                 case PAGE_SYSTEM:
 1390               		.loc 1 188 13 is_stmt 1 view .LVU369
 188:../../tmk_core/common/action.c ****                 case PAGE_SYSTEM:
 1391               		.loc 1 188 33 is_stmt 0 view .LVU370
 1392 01f2 812F      		mov r24,r17
 1393 01f4 8695      		lsr r24
 1394 01f6 8695      		lsr r24
 1395 01f8 8370      		andi r24,lo8(3)
 1396 01fa 01F0      		breq .L87
 1397 01fc 8130      		cpi r24,lo8(1)
 1398 01fe 01F0      		breq .+2
 1399 0200 00C0      		rjmp .L61
 197:../../tmk_core/common/action.c ****                         host_consumer_send(action.usage.code);
 1400               		.loc 1 197 21 is_stmt 1 view .LVU371
 198:../../tmk_core/common/action.c ****                     } else {
 1401               		.loc 1 198 25 is_stmt 0 view .LVU372
 1402 0202 C801      		movw r24,r16
 1403 0204 9370      		andi r25,lo8(3)
 197:../../tmk_core/common/action.c ****                         host_consumer_send(action.usage.code);
 1404               		.loc 1 197 24 view .LVU373
 1405 0206 F110      		cpse r15,__zero_reg__
 1406 0208 00C0      		rjmp .L170
 200:../../tmk_core/common/action.c ****                     }
 1407               		.loc 1 200 25 is_stmt 1 view .LVU374
 1408 020a 90E0      		ldi r25,0
 1409 020c 80E0      		ldi r24,0
 1410               	.L170:
 1411               	/* epilogue start */
 363:../../tmk_core/common/action.c **** 
 1412               		.loc 1 363 1 is_stmt 0 view .LVU375
 1413 020e 0F90      		pop __tmp_reg__
 1414 0210 0F90      		pop __tmp_reg__
 1415 0212 0F90      		pop __tmp_reg__
 1416 0214 0F90      		pop __tmp_reg__
 1417 0216 0F90      		pop __tmp_reg__
 1418 0218 DF91      		pop r29
 1419 021a CF91      		pop r28
 1420               	.LVL155:
 363:../../tmk_core/common/action.c **** 
 1421               		.loc 1 363 1 view .LVU376
 1422 021c 1F91      		pop r17
 1423               	.LVL156:
 363:../../tmk_core/common/action.c **** 
 1424               		.loc 1 363 1 view .LVU377
 1425 021e 0F91      		pop r16
 1426               	.LVL157:
 363:../../tmk_core/common/action.c **** 
 1427               		.loc 1 363 1 view .LVU378
 1428 0220 FF90      		pop r15
 1429               	.LVL158:
 363:../../tmk_core/common/action.c **** 
 1430               		.loc 1 363 1 view .LVU379
 1431 0222 EF90      		pop r14
 1432               	.LVL159:
 363:../../tmk_core/common/action.c **** 
 1433               		.loc 1 363 1 view .LVU380
 1434 0224 DF90      		pop r13
 1435               	.LVL160:
 363:../../tmk_core/common/action.c **** 
 1436               		.loc 1 363 1 view .LVU381
 1437 0226 CF90      		pop r12
 1438               	.LVL161:
 363:../../tmk_core/common/action.c **** 
 1439               		.loc 1 363 1 view .LVU382
 1440 0228 BF90      		pop r11
 1441               	.LVL162:
 363:../../tmk_core/common/action.c **** 
 1442               		.loc 1 363 1 view .LVU383
 1443 022a AF90      		pop r10
 1444               	.LVL163:
 200:../../tmk_core/common/action.c ****                     }
 1445               		.loc 1 200 25 view .LVU384
 1446 022c 0C94 0000 		jmp host_consumer_send
 1447               	.LVL164:
 1448               	.L87:
 190:../../tmk_core/common/action.c ****                         host_system_send(action.usage.code);
 1449               		.loc 1 190 21 is_stmt 1 view .LVU385
 191:../../tmk_core/common/action.c ****                     } else {
 1450               		.loc 1 191 25 is_stmt 0 view .LVU386
 1451 0230 C801      		movw r24,r16
 1452 0232 9370      		andi r25,lo8(3)
 190:../../tmk_core/common/action.c ****                         host_system_send(action.usage.code);
 1453               		.loc 1 190 24 view .LVU387
 1454 0234 F110      		cpse r15,__zero_reg__
 1455 0236 00C0      		rjmp .L169
 193:../../tmk_core/common/action.c ****                     }
 1456               		.loc 1 193 25 is_stmt 1 view .LVU388
 1457 0238 90E0      		ldi r25,0
 1458 023a 80E0      		ldi r24,0
 1459               	.L169:
 1460               	/* epilogue start */
 363:../../tmk_core/common/action.c **** 
 1461               		.loc 1 363 1 is_stmt 0 view .LVU389
 1462 023c 0F90      		pop __tmp_reg__
 1463 023e 0F90      		pop __tmp_reg__
 1464 0240 0F90      		pop __tmp_reg__
 1465 0242 0F90      		pop __tmp_reg__
 1466 0244 0F90      		pop __tmp_reg__
 1467 0246 DF91      		pop r29
 1468 0248 CF91      		pop r28
 1469               	.LVL165:
 363:../../tmk_core/common/action.c **** 
 1470               		.loc 1 363 1 view .LVU390
 1471 024a 1F91      		pop r17
 1472               	.LVL166:
 363:../../tmk_core/common/action.c **** 
 1473               		.loc 1 363 1 view .LVU391
 1474 024c 0F91      		pop r16
 1475               	.LVL167:
 363:../../tmk_core/common/action.c **** 
 1476               		.loc 1 363 1 view .LVU392
 1477 024e FF90      		pop r15
 1478               	.LVL168:
 363:../../tmk_core/common/action.c **** 
 1479               		.loc 1 363 1 view .LVU393
 1480 0250 EF90      		pop r14
 1481               	.LVL169:
 363:../../tmk_core/common/action.c **** 
 1482               		.loc 1 363 1 view .LVU394
 1483 0252 DF90      		pop r13
 1484               	.LVL170:
 363:../../tmk_core/common/action.c **** 
 1485               		.loc 1 363 1 view .LVU395
 1486 0254 CF90      		pop r12
 1487               	.LVL171:
 363:../../tmk_core/common/action.c **** 
 1488               		.loc 1 363 1 view .LVU396
 1489 0256 BF90      		pop r11
 1490               	.LVL172:
 363:../../tmk_core/common/action.c **** 
 1491               		.loc 1 363 1 view .LVU397
 1492 0258 AF90      		pop r10
 1493               	.LVL173:
 193:../../tmk_core/common/action.c ****                     }
 1494               		.loc 1 193 25 view .LVU398
 1495 025a 0C94 0000 		jmp host_system_send
 1496               	.LVL174:
 1497               	.L91:
 209:../../tmk_core/common/action.c ****                 mousekey_on(action.key.code);
 1498               		.loc 1 209 13 is_stmt 1 view .LVU399
 210:../../tmk_core/common/action.c ****                 mousekey_send();
 1499               		.loc 1 210 17 is_stmt 0 view .LVU400
 1500 025e 802F      		mov r24,r16
 209:../../tmk_core/common/action.c ****                 mousekey_on(action.key.code);
 1501               		.loc 1 209 16 view .LVU401
 1502 0260 FF20      		tst r15
 1503 0262 01F0      		breq .L92
 210:../../tmk_core/common/action.c ****                 mousekey_send();
 1504               		.loc 1 210 17 is_stmt 1 view .LVU402
 1505 0264 0E94 0000 		call mousekey_on
 1506               	.LVL175:
 211:../../tmk_core/common/action.c ****             } else {
 1507               		.loc 1 211 17 view .LVU403
 1508               	.L172:
 214:../../tmk_core/common/action.c ****             }
 1509               		.loc 1 214 17 view .LVU404
 1510               	/* epilogue start */
 363:../../tmk_core/common/action.c **** 
 1511               		.loc 1 363 1 is_stmt 0 view .LVU405
 1512 0268 0F90      		pop __tmp_reg__
 1513 026a 0F90      		pop __tmp_reg__
 1514 026c 0F90      		pop __tmp_reg__
 1515 026e 0F90      		pop __tmp_reg__
 1516 0270 0F90      		pop __tmp_reg__
 1517 0272 DF91      		pop r29
 1518 0274 CF91      		pop r28
 1519               	.LVL176:
 363:../../tmk_core/common/action.c **** 
 1520               		.loc 1 363 1 view .LVU406
 1521 0276 1F91      		pop r17
 1522               	.LVL177:
 363:../../tmk_core/common/action.c **** 
 1523               		.loc 1 363 1 view .LVU407
 1524 0278 0F91      		pop r16
 1525               	.LVL178:
 363:../../tmk_core/common/action.c **** 
 1526               		.loc 1 363 1 view .LVU408
 1527 027a FF90      		pop r15
 1528               	.LVL179:
 363:../../tmk_core/common/action.c **** 
 1529               		.loc 1 363 1 view .LVU409
 1530 027c EF90      		pop r14
 1531               	.LVL180:
 363:../../tmk_core/common/action.c **** 
 1532               		.loc 1 363 1 view .LVU410
 1533 027e DF90      		pop r13
 1534               	.LVL181:
 363:../../tmk_core/common/action.c **** 
 1535               		.loc 1 363 1 view .LVU411
 1536 0280 CF90      		pop r12
 1537               	.LVL182:
 363:../../tmk_core/common/action.c **** 
 1538               		.loc 1 363 1 view .LVU412
 1539 0282 BF90      		pop r11
 1540               	.LVL183:
 363:../../tmk_core/common/action.c **** 
 1541               		.loc 1 363 1 view .LVU413
 1542 0284 AF90      		pop r10
 1543               	.LVL184:
 214:../../tmk_core/common/action.c ****             }
 1544               		.loc 1 214 17 view .LVU414
 1545 0286 0C94 0000 		jmp mousekey_send
 1546               	.LVL185:
 1547               	.L92:
 213:../../tmk_core/common/action.c ****                 mousekey_send();
 1548               		.loc 1 213 17 is_stmt 1 view .LVU415
 1549 028a 0E94 0000 		call mousekey_off
 1550               	.LVL186:
 1551 028e 00C0      		rjmp .L172
 1552               	.LVL187:
 1553               	.L93:
 220:../../tmk_core/common/action.c ****                 /* Default Layer Bitwise Operation */
 1554               		.loc 1 220 13 view .LVU416
 220:../../tmk_core/common/action.c ****                 /* Default Layer Bitwise Operation */
 1555               		.loc 1 220 39 is_stmt 0 view .LVU417
 1556 0290 812F      		mov r24,r17
 1557 0292 8370      		andi r24,lo8(3)
 220:../../tmk_core/common/action.c ****                 /* Default Layer Bitwise Operation */
 1558               		.loc 1 220 16 view .LVU418
 1559 0294 01F0      		breq .+2
 1560 0296 00C0      		rjmp .L94
 222:../../tmk_core/common/action.c ****                     uint8_t shift = action.layer_bitop.part*4;
 1561               		.loc 1 222 17 is_stmt 1 view .LVU419
 222:../../tmk_core/common/action.c ****                     uint8_t shift = action.layer_bitop.part*4;
 1562               		.loc 1 222 20 is_stmt 0 view .LVU420
 1563 0298 F110      		cpse r15,__zero_reg__
 1564 029a 00C0      		rjmp .L61
 1565               	.LBB55:
 223:../../tmk_core/common/action.c ****                     uint32_t bits = ((uint32_t)action.layer_bitop.bits)<<shift;
 1566               		.loc 1 223 21 is_stmt 1 view .LVU421
 1567               	.LVL188:
 224:../../tmk_core/common/action.c ****                     uint32_t mask = (action.layer_bitop.xbit) ? ~(((uint32_t)0xf)<<shift) : 0;
 1568               		.loc 1 224 21 view .LVU422
 223:../../tmk_core/common/action.c ****                     uint32_t bits = ((uint32_t)action.layer_bitop.bits)<<shift;
 1569               		.loc 1 223 55 is_stmt 0 view .LVU423
 1570 029c 202F      		mov r18,r16
 1571 029e 2295      		swap r18
 1572 02a0 2695      		lsr r18
 1573 02a2 2770      		andi r18,lo8(7)
 223:../../tmk_core/common/action.c ****                     uint32_t bits = ((uint32_t)action.layer_bitop.bits)<<shift;
 1574               		.loc 1 223 29 view .LVU424
 1575 02a4 220F      		lsl r18
 1576 02a6 220F      		lsl r18
 224:../../tmk_core/common/action.c ****                     uint32_t mask = (action.layer_bitop.xbit) ? ~(((uint32_t)0xf)<<shift) : 0;
 1577               		.loc 1 224 66 view .LVU425
 1578 02a8 602F      		mov r22,r16
 1579 02aa 6F70      		andi r22,lo8(15)
 224:../../tmk_core/common/action.c ****                     uint32_t mask = (action.layer_bitop.xbit) ? ~(((uint32_t)0xf)<<shift) : 0;
 1580               		.loc 1 224 38 view .LVU426
 1581 02ac C62E      		mov r12,r22
 1582 02ae D12C      		mov r13,__zero_reg__
 1583 02b0 F12C      		mov r15,__zero_reg__
 1584 02b2 E12C      		mov r14,__zero_reg__
 224:../../tmk_core/common/action.c ****                     uint32_t mask = (action.layer_bitop.xbit) ? ~(((uint32_t)0xf)<<shift) : 0;
 1585               		.loc 1 224 30 view .LVU427
 1586 02b4 022E      		mov r0,r18
 1587 02b6 00C0      		rjmp 2f
 1588               		1:
 1589 02b8 CC0C      		lsl r12
 1590 02ba DD1C      		rol r13
 1591 02bc EE1C      		rol r14
 1592 02be FF1C      		rol r15
 1593               		2:
 1594 02c0 0A94      		dec r0
 1595 02c2 02F4      		brpl 1b
 1596               	.LVL189:
 225:../../tmk_core/common/action.c ****                     switch (action.layer_bitop.op) {
 1597               		.loc 1 225 21 is_stmt 1 view .LVU428
 225:../../tmk_core/common/action.c ****                     switch (action.layer_bitop.op) {
 1598               		.loc 1 225 91 is_stmt 0 view .LVU429
 1599 02c4 60E0      		ldi r22,0
 1600 02c6 70E0      		ldi r23,0
 1601 02c8 CB01      		movw r24,r22
 1602 02ca 04FF      		sbrs r16,4
 1603 02cc 00C0      		rjmp .L95
 225:../../tmk_core/common/action.c ****                     switch (action.layer_bitop.op) {
 1604               		.loc 1 225 82 discriminator 1 view .LVU430
 1605 02ce 6FE0      		ldi r22,lo8(15)
 1606 02d0 70E0      		ldi r23,0
 1607 02d2 80E0      		ldi r24,0
 1608 02d4 90E0      		ldi r25,0
 1609 02d6 00C0      		rjmp 2f
 1610               		1:
 1611 02d8 660F      		lsl r22
 1612 02da 771F      		rol r23
 1613 02dc 881F      		rol r24
 1614 02de 991F      		rol r25
 1615               		2:
 1616 02e0 2A95      		dec r18
 1617 02e2 02F4      		brpl 1b
 225:../../tmk_core/common/action.c ****                     switch (action.layer_bitop.op) {
 1618               		.loc 1 225 91 discriminator 1 view .LVU431
 1619 02e4 6095      		com r22
 1620 02e6 7095      		com r23
 1621 02e8 8095      		com r24
 1622 02ea 9095      		com r25
 1623               	.L95:
 1624               	.LVL190:
 226:../../tmk_core/common/action.c ****                         case OP_BIT_AND: default_layer_and(bits | mask); break;
 1625               		.loc 1 226 21 is_stmt 1 discriminator 4 view .LVU432
 226:../../tmk_core/common/action.c ****                         case OP_BIT_AND: default_layer_and(bits | mask); break;
 1626               		.loc 1 226 47 is_stmt 0 discriminator 4 view .LVU433
 1627 02ec 1695      		lsr r17
 1628 02ee 1695      		lsr r17
 1629               	.LVL191:
 226:../../tmk_core/common/action.c ****                         case OP_BIT_AND: default_layer_and(bits | mask); break;
 1630               		.loc 1 226 47 discriminator 4 view .LVU434
 1631 02f0 1370      		andi r17,lo8(3)
 1632 02f2 1230      		cpi r17,lo8(2)
 1633 02f4 01F0      		breq .L96
 1634 02f6 00F4      		brsh .L97
 1635 02f8 6C29      		or r22,r12
 1636               	.LVL192:
 226:../../tmk_core/common/action.c ****                         case OP_BIT_AND: default_layer_and(bits | mask); break;
 1637               		.loc 1 226 47 discriminator 4 view .LVU435
 1638 02fa 7D29      		or r23,r13
 1639 02fc 8E29      		or r24,r14
 1640 02fe 9F29      		or r25,r15
 1641 0300 1130      		cpi r17,lo8(1)
 1642 0302 01F0      		breq .L173
 227:../../tmk_core/common/action.c ****                         case OP_BIT_OR:  default_layer_or(bits | mask);  break;
 1643               		.loc 1 227 42 is_stmt 1 view .LVU436
 1644               	/* epilogue start */
 1645               	.LBE55:
 363:../../tmk_core/common/action.c **** 
 1646               		.loc 1 363 1 is_stmt 0 view .LVU437
 1647 0304 0F90      		pop __tmp_reg__
 1648 0306 0F90      		pop __tmp_reg__
 1649 0308 0F90      		pop __tmp_reg__
 1650 030a 0F90      		pop __tmp_reg__
 1651 030c 0F90      		pop __tmp_reg__
 1652 030e DF91      		pop r29
 1653 0310 CF91      		pop r28
 1654               	.LVL193:
 363:../../tmk_core/common/action.c **** 
 1655               		.loc 1 363 1 view .LVU438
 1656 0312 1F91      		pop r17
 1657               	.LVL194:
 363:../../tmk_core/common/action.c **** 
 1658               		.loc 1 363 1 view .LVU439
 1659 0314 0F91      		pop r16
 1660               	.LVL195:
 363:../../tmk_core/common/action.c **** 
 1661               		.loc 1 363 1 view .LVU440
 1662 0316 FF90      		pop r15
 1663               	.LVL196:
 363:../../tmk_core/common/action.c **** 
 1664               		.loc 1 363 1 view .LVU441
 1665 0318 EF90      		pop r14
 1666               	.LVL197:
 363:../../tmk_core/common/action.c **** 
 1667               		.loc 1 363 1 view .LVU442
 1668 031a DF90      		pop r13
 1669               	.LVL198:
 363:../../tmk_core/common/action.c **** 
 1670               		.loc 1 363 1 view .LVU443
 1671 031c CF90      		pop r12
 1672               	.LVL199:
 363:../../tmk_core/common/action.c **** 
 1673               		.loc 1 363 1 view .LVU444
 1674 031e BF90      		pop r11
 1675               	.LVL200:
 363:../../tmk_core/common/action.c **** 
 1676               		.loc 1 363 1 view .LVU445
 1677 0320 AF90      		pop r10
 1678               	.LVL201:
 1679               	.LBB56:
 227:../../tmk_core/common/action.c ****                         case OP_BIT_OR:  default_layer_or(bits | mask);  break;
 1680               		.loc 1 227 42 view .LVU446
 1681 0322 0C94 0000 		jmp default_layer_and
 1682               	.LVL202:
 1683               	.L96:
 229:../../tmk_core/common/action.c ****                         case OP_BIT_SET: default_layer_and(mask); default_layer_or(bits); break;
 1684               		.loc 1 229 42 is_stmt 1 view .LVU447
 1685 0326 6C29      		or r22,r12
 1686               	.LVL203:
 229:../../tmk_core/common/action.c ****                         case OP_BIT_SET: default_layer_and(mask); default_layer_or(bits); break;
 1687               		.loc 1 229 42 is_stmt 0 view .LVU448
 1688 0328 7D29      		or r23,r13
 1689 032a 8E29      		or r24,r14
 1690 032c 9F29      		or r25,r15
 1691               	/* epilogue start */
 1692               	.LBE56:
 363:../../tmk_core/common/action.c **** 
 1693               		.loc 1 363 1 view .LVU449
 1694 032e 0F90      		pop __tmp_reg__
 1695 0330 0F90      		pop __tmp_reg__
 1696 0332 0F90      		pop __tmp_reg__
 1697 0334 0F90      		pop __tmp_reg__
 1698 0336 0F90      		pop __tmp_reg__
 1699 0338 DF91      		pop r29
 1700 033a CF91      		pop r28
 1701               	.LVL204:
 363:../../tmk_core/common/action.c **** 
 1702               		.loc 1 363 1 view .LVU450
 1703 033c 1F91      		pop r17
 1704               	.LVL205:
 363:../../tmk_core/common/action.c **** 
 1705               		.loc 1 363 1 view .LVU451
 1706 033e 0F91      		pop r16
 1707               	.LVL206:
 363:../../tmk_core/common/action.c **** 
 1708               		.loc 1 363 1 view .LVU452
 1709 0340 FF90      		pop r15
 1710               	.LVL207:
 363:../../tmk_core/common/action.c **** 
 1711               		.loc 1 363 1 view .LVU453
 1712 0342 EF90      		pop r14
 1713               	.LVL208:
 363:../../tmk_core/common/action.c **** 
 1714               		.loc 1 363 1 view .LVU454
 1715 0344 DF90      		pop r13
 1716               	.LVL209:
 363:../../tmk_core/common/action.c **** 
 1717               		.loc 1 363 1 view .LVU455
 1718 0346 CF90      		pop r12
 1719               	.LVL210:
 363:../../tmk_core/common/action.c **** 
 1720               		.loc 1 363 1 view .LVU456
 1721 0348 BF90      		pop r11
 1722               	.LVL211:
 363:../../tmk_core/common/action.c **** 
 1723               		.loc 1 363 1 view .LVU457
 1724 034a AF90      		pop r10
 1725               	.LVL212:
 1726               	.LBB57:
 229:../../tmk_core/common/action.c ****                         case OP_BIT_SET: default_layer_and(mask); default_layer_or(bits); break;
 1727               		.loc 1 229 42 view .LVU458
 1728 034c 0C94 0000 		jmp default_layer_xor
 1729               	.LVL213:
 1730               	.L97:
 230:../../tmk_core/common/action.c ****                     }
 1731               		.loc 1 230 42 is_stmt 1 view .LVU459
 1732 0350 0E94 0000 		call default_layer_and
 1733               	.LVL214:
 230:../../tmk_core/common/action.c ****                     }
 1734               		.loc 1 230 67 view .LVU460
 1735 0354 C701      		movw r24,r14
 1736 0356 B601      		movw r22,r12
 1737               	.L173:
 1738               	/* epilogue start */
 1739               	.LBE57:
 363:../../tmk_core/common/action.c **** 
 1740               		.loc 1 363 1 is_stmt 0 view .LVU461
 1741 0358 0F90      		pop __tmp_reg__
 1742 035a 0F90      		pop __tmp_reg__
 1743 035c 0F90      		pop __tmp_reg__
 1744 035e 0F90      		pop __tmp_reg__
 1745 0360 0F90      		pop __tmp_reg__
 1746 0362 DF91      		pop r29
 1747 0364 CF91      		pop r28
 1748               	.LVL215:
 363:../../tmk_core/common/action.c **** 
 1749               		.loc 1 363 1 view .LVU462
 1750 0366 1F91      		pop r17
 1751               	.LVL216:
 363:../../tmk_core/common/action.c **** 
 1752               		.loc 1 363 1 view .LVU463
 1753 0368 0F91      		pop r16
 1754               	.LVL217:
 363:../../tmk_core/common/action.c **** 
 1755               		.loc 1 363 1 view .LVU464
 1756 036a FF90      		pop r15
 1757               	.LVL218:
 363:../../tmk_core/common/action.c **** 
 1758               		.loc 1 363 1 view .LVU465
 1759 036c EF90      		pop r14
 1760               	.LVL219:
 363:../../tmk_core/common/action.c **** 
 1761               		.loc 1 363 1 view .LVU466
 1762 036e DF90      		pop r13
 1763               	.LVL220:
 363:../../tmk_core/common/action.c **** 
 1764               		.loc 1 363 1 view .LVU467
 1765 0370 CF90      		pop r12
 1766               	.LVL221:
 363:../../tmk_core/common/action.c **** 
 1767               		.loc 1 363 1 view .LVU468
 1768 0372 BF90      		pop r11
 1769               	.LVL222:
 363:../../tmk_core/common/action.c **** 
 1770               		.loc 1 363 1 view .LVU469
 1771 0374 AF90      		pop r10
 1772               	.LVL223:
 1773               	.LBB58:
 230:../../tmk_core/common/action.c ****                     }
 1774               		.loc 1 230 67 view .LVU470
 1775 0376 0C94 0000 		jmp default_layer_or
 1776               	.LVL224:
 1777               	.L94:
 230:../../tmk_core/common/action.c ****                     }
 1778               		.loc 1 230 67 view .LVU471
 1779               	.LBE58:
 235:../../tmk_core/common/action.c ****                                     (action.layer_bitop.on & ON_RELEASE)) {
 1780               		.loc 1 235 17 is_stmt 1 view .LVU472
 235:../../tmk_core/common/action.c ****                                     (action.layer_bitop.on & ON_RELEASE)) {
 1781               		.loc 1 235 21 is_stmt 0 view .LVU473
 1782 037a 8695      		lsr r24
 1783 037c FF20      		tst r15
 1784 037e 01F0      		breq .L100
 235:../../tmk_core/common/action.c ****                                     (action.layer_bitop.on & ON_RELEASE)) {
 1785               		.loc 1 235 21 discriminator 1 view .LVU474
 1786 0380 812F      		mov r24,r17
 1787 0382 8170      		andi r24,lo8(1)
 1788               	.L100:
 235:../../tmk_core/common/action.c ****                                     (action.layer_bitop.on & ON_RELEASE)) {
 1789               		.loc 1 235 20 discriminator 4 view .LVU475
 1790 0384 8823      		tst r24
 1791 0386 01F4      		brne .+2
 1792 0388 00C0      		rjmp .L61
 1793               	.LBB59:
 237:../../tmk_core/common/action.c ****                     uint32_t bits = ((uint32_t)action.layer_bitop.bits)<<shift;
 1794               		.loc 1 237 21 is_stmt 1 view .LVU476
 1795               	.LVL225:
 238:../../tmk_core/common/action.c ****                     uint32_t mask = (action.layer_bitop.xbit) ? ~(((uint32_t)0xf)<<shift) : 0;
 1796               		.loc 1 238 21 view .LVU477
 237:../../tmk_core/common/action.c ****                     uint32_t bits = ((uint32_t)action.layer_bitop.bits)<<shift;
 1797               		.loc 1 237 55 is_stmt 0 view .LVU478
 1798 038a 202F      		mov r18,r16
 1799 038c 2295      		swap r18
 1800 038e 2695      		lsr r18
 1801 0390 2770      		andi r18,lo8(7)
 237:../../tmk_core/common/action.c ****                     uint32_t bits = ((uint32_t)action.layer_bitop.bits)<<shift;
 1802               		.loc 1 237 29 view .LVU479
 1803 0392 220F      		lsl r18
 1804 0394 220F      		lsl r18
 238:../../tmk_core/common/action.c ****                     uint32_t mask = (action.layer_bitop.xbit) ? ~(((uint32_t)0xf)<<shift) : 0;
 1805               		.loc 1 238 66 view .LVU480
 1806 0396 602F      		mov r22,r16
 1807 0398 6F70      		andi r22,lo8(15)
 238:../../tmk_core/common/action.c ****                     uint32_t mask = (action.layer_bitop.xbit) ? ~(((uint32_t)0xf)<<shift) : 0;
 1808               		.loc 1 238 38 view .LVU481
 1809 039a C62E      		mov r12,r22
 1810 039c D12C      		mov r13,__zero_reg__
 1811 039e F12C      		mov r15,__zero_reg__
 1812 03a0 E12C      		mov r14,__zero_reg__
 238:../../tmk_core/common/action.c ****                     uint32_t mask = (action.layer_bitop.xbit) ? ~(((uint32_t)0xf)<<shift) : 0;
 1813               		.loc 1 238 30 view .LVU482
 1814 03a2 022E      		mov r0,r18
 1815 03a4 00C0      		rjmp 2f
 1816               		1:
 1817 03a6 CC0C      		lsl r12
 1818 03a8 DD1C      		rol r13
 1819 03aa EE1C      		rol r14
 1820 03ac FF1C      		rol r15
 1821               		2:
 1822 03ae 0A94      		dec r0
 1823 03b0 02F4      		brpl 1b
 1824               	.LVL226:
 239:../../tmk_core/common/action.c ****                     switch (action.layer_bitop.op) {
 1825               		.loc 1 239 21 is_stmt 1 view .LVU483
 239:../../tmk_core/common/action.c ****                     switch (action.layer_bitop.op) {
 1826               		.loc 1 239 91 is_stmt 0 view .LVU484
 1827 03b2 60E0      		ldi r22,0
 1828 03b4 70E0      		ldi r23,0
 1829 03b6 CB01      		movw r24,r22
 1830 03b8 04FF      		sbrs r16,4
 1831 03ba 00C0      		rjmp .L101
 239:../../tmk_core/common/action.c ****                     switch (action.layer_bitop.op) {
 1832               		.loc 1 239 82 discriminator 1 view .LVU485
 1833 03bc 6FE0      		ldi r22,lo8(15)
 1834 03be 70E0      		ldi r23,0
 1835 03c0 80E0      		ldi r24,0
 1836 03c2 90E0      		ldi r25,0
 1837 03c4 00C0      		rjmp 2f
 1838               		1:
 1839 03c6 660F      		lsl r22
 1840 03c8 771F      		rol r23
 1841 03ca 881F      		rol r24
 1842 03cc 991F      		rol r25
 1843               		2:
 1844 03ce 2A95      		dec r18
 1845 03d0 02F4      		brpl 1b
 239:../../tmk_core/common/action.c ****                     switch (action.layer_bitop.op) {
 1846               		.loc 1 239 91 discriminator 1 view .LVU486
 1847 03d2 6095      		com r22
 1848 03d4 7095      		com r23
 1849 03d6 8095      		com r24
 1850 03d8 9095      		com r25
 1851               	.L101:
 1852               	.LVL227:
 240:../../tmk_core/common/action.c ****                         case OP_BIT_AND: layer_and(bits | mask); break;
 1853               		.loc 1 240 21 is_stmt 1 discriminator 4 view .LVU487
 240:../../tmk_core/common/action.c ****                         case OP_BIT_AND: layer_and(bits | mask); break;
 1854               		.loc 1 240 47 is_stmt 0 discriminator 4 view .LVU488
 1855 03da 1695      		lsr r17
 1856 03dc 1695      		lsr r17
 1857               	.LVL228:
 240:../../tmk_core/common/action.c ****                         case OP_BIT_AND: layer_and(bits | mask); break;
 1858               		.loc 1 240 47 discriminator 4 view .LVU489
 1859 03de 1370      		andi r17,lo8(3)
 1860 03e0 1230      		cpi r17,lo8(2)
 1861 03e2 01F0      		breq .L102
 1862 03e4 00F4      		brsh .L103
 1863 03e6 6C29      		or r22,r12
 1864               	.LVL229:
 240:../../tmk_core/common/action.c ****                         case OP_BIT_AND: layer_and(bits | mask); break;
 1865               		.loc 1 240 47 discriminator 4 view .LVU490
 1866 03e8 7D29      		or r23,r13
 1867 03ea 8E29      		or r24,r14
 1868 03ec 9F29      		or r25,r15
 1869 03ee 1130      		cpi r17,lo8(1)
 1870 03f0 01F0      		breq .L171
 241:../../tmk_core/common/action.c ****                         case OP_BIT_OR:  layer_or(bits | mask);  break;
 1871               		.loc 1 241 42 is_stmt 1 view .LVU491
 1872               	/* epilogue start */
 1873               	.LBE59:
 363:../../tmk_core/common/action.c **** 
 1874               		.loc 1 363 1 is_stmt 0 view .LVU492
 1875 03f2 0F90      		pop __tmp_reg__
 1876 03f4 0F90      		pop __tmp_reg__
 1877 03f6 0F90      		pop __tmp_reg__
 1878 03f8 0F90      		pop __tmp_reg__
 1879 03fa 0F90      		pop __tmp_reg__
 1880 03fc DF91      		pop r29
 1881 03fe CF91      		pop r28
 1882               	.LVL230:
 363:../../tmk_core/common/action.c **** 
 1883               		.loc 1 363 1 view .LVU493
 1884 0400 1F91      		pop r17
 1885               	.LVL231:
 363:../../tmk_core/common/action.c **** 
 1886               		.loc 1 363 1 view .LVU494
 1887 0402 0F91      		pop r16
 1888               	.LVL232:
 363:../../tmk_core/common/action.c **** 
 1889               		.loc 1 363 1 view .LVU495
 1890 0404 FF90      		pop r15
 1891               	.LVL233:
 363:../../tmk_core/common/action.c **** 
 1892               		.loc 1 363 1 view .LVU496
 1893 0406 EF90      		pop r14
 1894               	.LVL234:
 363:../../tmk_core/common/action.c **** 
 1895               		.loc 1 363 1 view .LVU497
 1896 0408 DF90      		pop r13
 1897               	.LVL235:
 363:../../tmk_core/common/action.c **** 
 1898               		.loc 1 363 1 view .LVU498
 1899 040a CF90      		pop r12
 1900               	.LVL236:
 363:../../tmk_core/common/action.c **** 
 1901               		.loc 1 363 1 view .LVU499
 1902 040c BF90      		pop r11
 1903               	.LVL237:
 363:../../tmk_core/common/action.c **** 
 1904               		.loc 1 363 1 view .LVU500
 1905 040e AF90      		pop r10
 1906               	.LVL238:
 1907               	.LBB60:
 241:../../tmk_core/common/action.c ****                         case OP_BIT_OR:  layer_or(bits | mask);  break;
 1908               		.loc 1 241 42 view .LVU501
 1909 0410 0C94 0000 		jmp layer_and
 1910               	.LVL239:
 1911               	.L102:
 243:../../tmk_core/common/action.c ****                         case OP_BIT_SET: layer_and(mask); layer_or(bits); break;
 1912               		.loc 1 243 42 is_stmt 1 view .LVU502
 1913 0414 6C29      		or r22,r12
 1914               	.LVL240:
 243:../../tmk_core/common/action.c ****                         case OP_BIT_SET: layer_and(mask); layer_or(bits); break;
 1915               		.loc 1 243 42 is_stmt 0 view .LVU503
 1916 0416 7D29      		or r23,r13
 1917 0418 8E29      		or r24,r14
 1918 041a 9F29      		or r25,r15
 1919               	/* epilogue start */
 1920               	.LBE60:
 363:../../tmk_core/common/action.c **** 
 1921               		.loc 1 363 1 view .LVU504
 1922 041c 0F90      		pop __tmp_reg__
 1923 041e 0F90      		pop __tmp_reg__
 1924 0420 0F90      		pop __tmp_reg__
 1925 0422 0F90      		pop __tmp_reg__
 1926 0424 0F90      		pop __tmp_reg__
 1927 0426 DF91      		pop r29
 1928 0428 CF91      		pop r28
 1929               	.LVL241:
 363:../../tmk_core/common/action.c **** 
 1930               		.loc 1 363 1 view .LVU505
 1931 042a 1F91      		pop r17
 1932               	.LVL242:
 363:../../tmk_core/common/action.c **** 
 1933               		.loc 1 363 1 view .LVU506
 1934 042c 0F91      		pop r16
 1935               	.LVL243:
 363:../../tmk_core/common/action.c **** 
 1936               		.loc 1 363 1 view .LVU507
 1937 042e FF90      		pop r15
 1938               	.LVL244:
 363:../../tmk_core/common/action.c **** 
 1939               		.loc 1 363 1 view .LVU508
 1940 0430 EF90      		pop r14
 1941               	.LVL245:
 363:../../tmk_core/common/action.c **** 
 1942               		.loc 1 363 1 view .LVU509
 1943 0432 DF90      		pop r13
 1944               	.LVL246:
 363:../../tmk_core/common/action.c **** 
 1945               		.loc 1 363 1 view .LVU510
 1946 0434 CF90      		pop r12
 1947               	.LVL247:
 363:../../tmk_core/common/action.c **** 
 1948               		.loc 1 363 1 view .LVU511
 1949 0436 BF90      		pop r11
 1950               	.LVL248:
 363:../../tmk_core/common/action.c **** 
 1951               		.loc 1 363 1 view .LVU512
 1952 0438 AF90      		pop r10
 1953               	.LVL249:
 1954               	.LBB61:
 243:../../tmk_core/common/action.c ****                         case OP_BIT_SET: layer_and(mask); layer_or(bits); break;
 1955               		.loc 1 243 42 view .LVU513
 1956 043a 0C94 0000 		jmp layer_xor
 1957               	.LVL250:
 1958               	.L103:
 244:../../tmk_core/common/action.c ****                     }
 1959               		.loc 1 244 42 is_stmt 1 view .LVU514
 1960 043e 0E94 0000 		call layer_and
 1961               	.LVL251:
 244:../../tmk_core/common/action.c ****                     }
 1962               		.loc 1 244 59 view .LVU515
 1963 0442 C701      		movw r24,r14
 1964 0444 B601      		movw r22,r12
 1965               	.L171:
 1966               	/* epilogue start */
 1967               	.LBE61:
 363:../../tmk_core/common/action.c **** 
 1968               		.loc 1 363 1 is_stmt 0 view .LVU516
 1969 0446 0F90      		pop __tmp_reg__
 1970 0448 0F90      		pop __tmp_reg__
 1971 044a 0F90      		pop __tmp_reg__
 1972 044c 0F90      		pop __tmp_reg__
 1973 044e 0F90      		pop __tmp_reg__
 1974 0450 DF91      		pop r29
 1975 0452 CF91      		pop r28
 1976               	.LVL252:
 363:../../tmk_core/common/action.c **** 
 1977               		.loc 1 363 1 view .LVU517
 1978 0454 1F91      		pop r17
 1979               	.LVL253:
 363:../../tmk_core/common/action.c **** 
 1980               		.loc 1 363 1 view .LVU518
 1981 0456 0F91      		pop r16
 1982               	.LVL254:
 363:../../tmk_core/common/action.c **** 
 1983               		.loc 1 363 1 view .LVU519
 1984 0458 FF90      		pop r15
 1985               	.LVL255:
 363:../../tmk_core/common/action.c **** 
 1986               		.loc 1 363 1 view .LVU520
 1987 045a EF90      		pop r14
 1988               	.LVL256:
 363:../../tmk_core/common/action.c **** 
 1989               		.loc 1 363 1 view .LVU521
 1990 045c DF90      		pop r13
 1991               	.LVL257:
 363:../../tmk_core/common/action.c **** 
 1992               		.loc 1 363 1 view .LVU522
 1993 045e CF90      		pop r12
 1994               	.LVL258:
 363:../../tmk_core/common/action.c **** 
 1995               		.loc 1 363 1 view .LVU523
 1996 0460 BF90      		pop r11
 1997               	.LVL259:
 363:../../tmk_core/common/action.c **** 
 1998               		.loc 1 363 1 view .LVU524
 1999 0462 AF90      		pop r10
 2000               	.LVL260:
 2001               	.LBB62:
 244:../../tmk_core/common/action.c ****                     }
 2002               		.loc 1 244 59 view .LVU525
 2003 0464 0C94 0000 		jmp layer_or
 2004               	.LVL261:
 2005               	.L105:
 244:../../tmk_core/common/action.c ****                     }
 2006               		.loc 1 244 59 view .LVU526
 2007               	.LBE62:
 252:../../tmk_core/common/action.c ****                 case 0xc0 ... 0xdf:
 2008               		.loc 1 252 13 is_stmt 1 view .LVU527
 252:../../tmk_core/common/action.c ****                 case 0xc0 ... 0xdf:
 2009               		.loc 1 252 13 is_stmt 0 view .LVU528
 2010 0468 003F      		cpi r16,lo8(-16)
 2011 046a 01F4      		brne .+2
 2012 046c 00C0      		rjmp .L106
 2013 046e 00F4      		brsh .L107
 2014 0470 80E4      		ldi r24,lo8(64)
 2015 0472 800F      		add r24,r16
 2016 0474 8032      		cpi r24,lo8(32)
 2017 0476 00F0      		brlo .L159
 2018               	.L108:
 293:../../tmk_core/common/action.c ****                         if (tap_count > 0) {
 2019               		.loc 1 293 21 is_stmt 1 view .LVU529
 293:../../tmk_core/common/action.c ****                         if (tap_count > 0) {
 2020               		.loc 1 293 24 is_stmt 0 view .LVU530
 2021 0478 FF20      		tst r15
 2022 047a 01F4      		brne .+2
 2023 047c 00C0      		rjmp .L123
 294:../../tmk_core/common/action.c ****                             dprint("KEYMAP_TAP_KEY: Tap: register_code\n");
 2024               		.loc 1 294 25 is_stmt 1 view .LVU531
 294:../../tmk_core/common/action.c ****                             dprint("KEYMAP_TAP_KEY: Tap: register_code\n");
 2025               		.loc 1 294 28 is_stmt 0 view .LVU532
 2026 047e E110      		cpse r14,__zero_reg__
 2027 0480 00C0      		rjmp .L164
 298:../../tmk_core/common/action.c ****                             layer_on(action.layer_tap.val);
 2028               		.loc 1 298 29 is_stmt 1 view .LVU533
 299:../../tmk_core/common/action.c ****                         }
 2029               		.loc 1 299 29 view .LVU534
 2030 0482 812F      		mov r24,r17
 2031 0484 8F71      		andi r24,lo8(31)
 2032 0486 00C0      		rjmp .L165
 2033               	.L107:
 2034 0488 023F      		cpi r16,lo8(-14)
 2035 048a 01F4      		brne .+2
 2036 048c 00C0      		rjmp .L110
 2037 048e 00F4      		brsh .+2
 2038 0490 00C0      		rjmp .L111
 2039 0492 033F      		cpi r16,lo8(-13)
 2040 0494 01F4      		brne .L108
 288:../../tmk_core/common/action.c ****                                     layer_clear();
 2041               		.loc 1 288 21 view .LVU535
 288:../../tmk_core/common/action.c ****                                     layer_clear();
 2042               		.loc 1 288 70 is_stmt 0 view .LVU536
 2043 0496 FF20      		tst r15
 2044 0498 01F4      		brne .+2
 2045 049a 00C0      		rjmp .L122
 288:../../tmk_core/common/action.c ****                                     layer_clear();
 2046               		.loc 1 288 37 discriminator 1 view .LVU537
 2047 049c 812F      		mov r24,r17
 2048 049e 8F71      		andi r24,lo8(31)
 2049               	/* epilogue start */
 363:../../tmk_core/common/action.c **** 
 2050               		.loc 1 363 1 discriminator 1 view .LVU538
 2051 04a0 0F90      		pop __tmp_reg__
 2052 04a2 0F90      		pop __tmp_reg__
 2053 04a4 0F90      		pop __tmp_reg__
 2054 04a6 0F90      		pop __tmp_reg__
 2055 04a8 0F90      		pop __tmp_reg__
 2056 04aa DF91      		pop r29
 2057 04ac CF91      		pop r28
 2058               	.LVL262:
 363:../../tmk_core/common/action.c **** 
 2059               		.loc 1 363 1 discriminator 1 view .LVU539
 2060 04ae 1F91      		pop r17
 2061               	.LVL263:
 363:../../tmk_core/common/action.c **** 
 2062               		.loc 1 363 1 discriminator 1 view .LVU540
 2063 04b0 0F91      		pop r16
 2064               	.LVL264:
 363:../../tmk_core/common/action.c **** 
 2065               		.loc 1 363 1 discriminator 1 view .LVU541
 2066 04b2 FF90      		pop r15
 2067               	.LVL265:
 363:../../tmk_core/common/action.c **** 
 2068               		.loc 1 363 1 discriminator 1 view .LVU542
 2069 04b4 EF90      		pop r14
 2070               	.LVL266:
 363:../../tmk_core/common/action.c **** 
 2071               		.loc 1 363 1 discriminator 1 view .LVU543
 2072 04b6 DF90      		pop r13
 2073               	.LVL267:
 363:../../tmk_core/common/action.c **** 
 2074               		.loc 1 363 1 discriminator 1 view .LVU544
 2075 04b8 CF90      		pop r12
 2076               	.LVL268:
 363:../../tmk_core/common/action.c **** 
 2077               		.loc 1 363 1 discriminator 1 view .LVU545
 2078 04ba BF90      		pop r11
 2079               	.LVL269:
 363:../../tmk_core/common/action.c **** 
 2080               		.loc 1 363 1 discriminator 1 view .LVU546
 2081 04bc AF90      		pop r10
 2082               	.LVL270:
 288:../../tmk_core/common/action.c ****                                     layer_clear();
 2083               		.loc 1 288 37 discriminator 1 view .LVU547
 2084 04be 0C94 0000 		jmp layer_move
 2085               	.LVL271:
 2086               	.L159:
 255:../../tmk_core/common/action.c ****                         layer_on(action.layer_tap.val);
 2087               		.loc 1 255 21 is_stmt 1 view .LVU548
 2088 04c2 812F      		mov r24,r17
 2089 04c4 8F71      		andi r24,lo8(31)
 2090 04c6 102F      		mov r17,r16
 2091               	.LVL272:
 255:../../tmk_core/common/action.c ****                         layer_on(action.layer_tap.val);
 2092               		.loc 1 255 21 is_stmt 0 view .LVU549
 2093 04c8 1071      		andi r17,lo8(16)
 255:../../tmk_core/common/action.c ****                         layer_on(action.layer_tap.val);
 2094               		.loc 1 255 24 view .LVU550
 2095 04ca FF20      		tst r15
 2096 04cc 01F0      		breq .L113
 256:../../tmk_core/common/action.c ****                         register_mods((action.layer_tap.code & 0x10) ?
 2097               		.loc 1 256 25 is_stmt 1 view .LVU551
 2098 04ce 0E94 0000 		call layer_on
 2099               	.LVL273:
 257:../../tmk_core/common/action.c ****                                 (action.layer_tap.code & 0x0f) << 4 :
 2100               		.loc 1 257 25 view .LVU552
 2101 04d2 802F      		mov r24,r16
 257:../../tmk_core/common/action.c ****                                 (action.layer_tap.code & 0x0f) << 4 :
 2102               		.loc 1 257 25 is_stmt 0 view .LVU553
 2103 04d4 8295      		swap r24
 2104 04d6 807F      		andi r24,lo8(-16)
 2105 04d8 1111      		cpse r17,__zero_reg__
 2106 04da 00C0      		rjmp .L168
 257:../../tmk_core/common/action.c ****                                 (action.layer_tap.code & 0x0f) << 4 :
 2107               		.loc 1 257 25 discriminator 2 view .LVU554
 2108 04dc 802F      		mov r24,r16
 2109 04de 8F70      		andi r24,lo8(15)
 2110 04e0 00C0      		rjmp .L168
 2111               	.L113:
 261:../../tmk_core/common/action.c ****                         unregister_mods((action.layer_tap.code & 0x10) ?
 2112               		.loc 1 261 25 is_stmt 1 view .LVU555
 2113 04e2 0E94 0000 		call layer_off
 2114               	.LVL274:
 262:../../tmk_core/common/action.c ****                                 (action.layer_tap.code & 0x0f) << 4 :
 2115               		.loc 1 262 25 view .LVU556
 2116 04e6 802F      		mov r24,r16
 2117 04e8 8295      		swap r24
 2118 04ea 807F      		andi r24,lo8(-16)
 2119 04ec 1111      		cpse r17,__zero_reg__
 2120 04ee 00C0      		rjmp .L117
 262:../../tmk_core/common/action.c ****                                 (action.layer_tap.code & 0x0f) << 4 :
 2121               		.loc 1 262 25 is_stmt 0 discriminator 2 view .LVU557
 2122 04f0 802F      		mov r24,r16
 2123 04f2 8F70      		andi r24,lo8(15)
 2124 04f4 00C0      		rjmp .L117
 2125               	.LVL275:
 2126               	.L106:
 269:../../tmk_core/common/action.c ****                         if (tap_count < TAPPING_TOGGLE) {
 2127               		.loc 1 269 21 is_stmt 1 view .LVU558
 269:../../tmk_core/common/action.c ****                         if (tap_count < TAPPING_TOGGLE) {
 2128               		.loc 1 269 24 is_stmt 0 view .LVU559
 2129 04f6 FF20      		tst r15
 2130 04f8 01F0      		breq .L118
 270:../../tmk_core/common/action.c ****                             layer_invert(action.layer_tap.val);
 2131               		.loc 1 270 25 is_stmt 1 view .LVU560
 270:../../tmk_core/common/action.c ****                             layer_invert(action.layer_tap.val);
 2132               		.loc 1 270 28 is_stmt 0 view .LVU561
 2133 04fa F4E0      		ldi r31,lo8(4)
 2134 04fc FE15      		cp r31,r14
 2135 04fe 00F4      		brsh .+2
 2136 0500 00C0      		rjmp .L61
 2137               	.L119:
 271:../../tmk_core/common/action.c ****                         }
 2138               		.loc 1 271 29 is_stmt 1 view .LVU562
 2139 0502 812F      		mov r24,r17
 2140 0504 8F71      		andi r24,lo8(31)
 2141               	/* epilogue start */
 363:../../tmk_core/common/action.c **** 
 2142               		.loc 1 363 1 is_stmt 0 view .LVU563
 2143 0506 0F90      		pop __tmp_reg__
 2144 0508 0F90      		pop __tmp_reg__
 2145 050a 0F90      		pop __tmp_reg__
 2146 050c 0F90      		pop __tmp_reg__
 2147 050e 0F90      		pop __tmp_reg__
 2148 0510 DF91      		pop r29
 2149 0512 CF91      		pop r28
 2150               	.LVL276:
 363:../../tmk_core/common/action.c **** 
 2151               		.loc 1 363 1 view .LVU564
 2152 0514 1F91      		pop r17
 2153               	.LVL277:
 363:../../tmk_core/common/action.c **** 
 2154               		.loc 1 363 1 view .LVU565
 2155 0516 0F91      		pop r16
 2156               	.LVL278:
 363:../../tmk_core/common/action.c **** 
 2157               		.loc 1 363 1 view .LVU566
 2158 0518 FF90      		pop r15
 2159               	.LVL279:
 363:../../tmk_core/common/action.c **** 
 2160               		.loc 1 363 1 view .LVU567
 2161 051a EF90      		pop r14
 2162               	.LVL280:
 363:../../tmk_core/common/action.c **** 
 2163               		.loc 1 363 1 view .LVU568
 2164 051c DF90      		pop r13
 2165               	.LVL281:
 363:../../tmk_core/common/action.c **** 
 2166               		.loc 1 363 1 view .LVU569
 2167 051e CF90      		pop r12
 2168               	.LVL282:
 363:../../tmk_core/common/action.c **** 
 2169               		.loc 1 363 1 view .LVU570
 2170 0520 BF90      		pop r11
 2171               	.LVL283:
 363:../../tmk_core/common/action.c **** 
 2172               		.loc 1 363 1 view .LVU571
 2173 0522 AF90      		pop r10
 2174               	.LVL284:
 271:../../tmk_core/common/action.c ****                         }
 2175               		.loc 1 271 29 view .LVU572
 2176 0524 0C94 0000 		jmp layer_invert
 2177               	.LVL285:
 2178               	.L118:
 274:../../tmk_core/common/action.c ****                             layer_invert(action.layer_tap.val);
 2179               		.loc 1 274 25 is_stmt 1 view .LVU573
 274:../../tmk_core/common/action.c ****                             layer_invert(action.layer_tap.val);
 2180               		.loc 1 274 28 is_stmt 0 view .LVU574
 2181 0528 25E0      		ldi r18,lo8(5)
 2182 052a 2E15      		cp r18,r14
 2183 052c 00F4      		brsh .+2
 2184 052e 00C0      		rjmp .L61
 2185 0530 00C0      		rjmp .L119
 2186               	.L111:
 280:../../tmk_core/common/action.c ****                                     layer_off(action.layer_tap.val);
 2187               		.loc 1 280 21 is_stmt 1 view .LVU575
 2188 0532 812F      		mov r24,r17
 2189 0534 8F71      		andi r24,lo8(31)
 280:../../tmk_core/common/action.c ****                                     layer_off(action.layer_tap.val);
 2190               		.loc 1 280 68 is_stmt 0 view .LVU576
 2191 0536 FF20      		tst r15
 2192 0538 01F0      		breq .L166
 2193               	.L165:
 2194               	/* epilogue start */
 363:../../tmk_core/common/action.c **** 
 2195               		.loc 1 363 1 view .LVU577
 2196 053a 0F90      		pop __tmp_reg__
 2197 053c 0F90      		pop __tmp_reg__
 2198 053e 0F90      		pop __tmp_reg__
 2199 0540 0F90      		pop __tmp_reg__
 2200 0542 0F90      		pop __tmp_reg__
 2201 0544 DF91      		pop r29
 2202 0546 CF91      		pop r28
 2203               	.LVL286:
 363:../../tmk_core/common/action.c **** 
 2204               		.loc 1 363 1 view .LVU578
 2205 0548 1F91      		pop r17
 2206               	.LVL287:
 363:../../tmk_core/common/action.c **** 
 2207               		.loc 1 363 1 view .LVU579
 2208 054a 0F91      		pop r16
 2209               	.LVL288:
 363:../../tmk_core/common/action.c **** 
 2210               		.loc 1 363 1 view .LVU580
 2211 054c FF90      		pop r15
 2212               	.LVL289:
 363:../../tmk_core/common/action.c **** 
 2213               		.loc 1 363 1 view .LVU581
 2214 054e EF90      		pop r14
 2215               	.LVL290:
 363:../../tmk_core/common/action.c **** 
 2216               		.loc 1 363 1 view .LVU582
 2217 0550 DF90      		pop r13
 2218               	.LVL291:
 363:../../tmk_core/common/action.c **** 
 2219               		.loc 1 363 1 view .LVU583
 2220 0552 CF90      		pop r12
 2221               	.LVL292:
 363:../../tmk_core/common/action.c **** 
 2222               		.loc 1 363 1 view .LVU584
 2223 0554 BF90      		pop r11
 2224               	.LVL293:
 363:../../tmk_core/common/action.c **** 
 2225               		.loc 1 363 1 view .LVU585
 2226 0556 AF90      		pop r10
 2227               	.LVL294:
 299:../../tmk_core/common/action.c ****                         }
 2228               		.loc 1 299 29 view .LVU586
 2229 0558 0C94 0000 		jmp layer_on
 2230               	.LVL295:
 2231               	.L110:
 284:../../tmk_core/common/action.c ****                                     layer_on(action.layer_tap.val);
 2232               		.loc 1 284 21 is_stmt 1 view .LVU587
 2233 055c 812F      		mov r24,r17
 2234 055e 8F71      		andi r24,lo8(31)
 284:../../tmk_core/common/action.c ****                                     layer_on(action.layer_tap.val);
 2235               		.loc 1 284 69 is_stmt 0 view .LVU588
 2236 0560 FF20      		tst r15
 2237 0562 01F0      		breq .L165
 2238               	.L166:
 2239               	/* epilogue start */
 363:../../tmk_core/common/action.c **** 
 2240               		.loc 1 363 1 view .LVU589
 2241 0564 0F90      		pop __tmp_reg__
 2242 0566 0F90      		pop __tmp_reg__
 2243 0568 0F90      		pop __tmp_reg__
 2244 056a 0F90      		pop __tmp_reg__
 2245 056c 0F90      		pop __tmp_reg__
 2246 056e DF91      		pop r29
 2247 0570 CF91      		pop r28
 2248               	.LVL296:
 363:../../tmk_core/common/action.c **** 
 2249               		.loc 1 363 1 view .LVU590
 2250 0572 1F91      		pop r17
 2251               	.LVL297:
 363:../../tmk_core/common/action.c **** 
 2252               		.loc 1 363 1 view .LVU591
 2253 0574 0F91      		pop r16
 2254               	.LVL298:
 363:../../tmk_core/common/action.c **** 
 2255               		.loc 1 363 1 view .LVU592
 2256 0576 FF90      		pop r15
 2257               	.LVL299:
 363:../../tmk_core/common/action.c **** 
 2258               		.loc 1 363 1 view .LVU593
 2259 0578 EF90      		pop r14
 2260               	.LVL300:
 363:../../tmk_core/common/action.c **** 
 2261               		.loc 1 363 1 view .LVU594
 2262 057a DF90      		pop r13
 2263               	.LVL301:
 363:../../tmk_core/common/action.c **** 
 2264               		.loc 1 363 1 view .LVU595
 2265 057c CF90      		pop r12
 2266               	.LVL302:
 363:../../tmk_core/common/action.c **** 
 2267               		.loc 1 363 1 view .LVU596
 2268 057e BF90      		pop r11
 2269               	.LVL303:
 363:../../tmk_core/common/action.c **** 
 2270               		.loc 1 363 1 view .LVU597
 2271 0580 AF90      		pop r10
 2272               	.LVL304:
 307:../../tmk_core/common/action.c ****                         }
 2273               		.loc 1 307 29 view .LVU598
 2274 0582 0C94 0000 		jmp layer_off
 2275               	.LVL305:
 2276               	.L122:
 2277               	/* epilogue start */
 363:../../tmk_core/common/action.c **** 
 2278               		.loc 1 363 1 view .LVU599
 2279 0586 0F90      		pop __tmp_reg__
 2280 0588 0F90      		pop __tmp_reg__
 2281 058a 0F90      		pop __tmp_reg__
 2282 058c 0F90      		pop __tmp_reg__
 2283 058e 0F90      		pop __tmp_reg__
 2284 0590 DF91      		pop r29
 2285 0592 CF91      		pop r28
 2286               	.LVL306:
 363:../../tmk_core/common/action.c **** 
 2287               		.loc 1 363 1 view .LVU600
 2288 0594 1F91      		pop r17
 2289               	.LVL307:
 363:../../tmk_core/common/action.c **** 
 2290               		.loc 1 363 1 view .LVU601
 2291 0596 0F91      		pop r16
 2292               	.LVL308:
 363:../../tmk_core/common/action.c **** 
 2293               		.loc 1 363 1 view .LVU602
 2294 0598 FF90      		pop r15
 2295               	.LVL309:
 363:../../tmk_core/common/action.c **** 
 2296               		.loc 1 363 1 view .LVU603
 2297 059a EF90      		pop r14
 2298               	.LVL310:
 363:../../tmk_core/common/action.c **** 
 2299               		.loc 1 363 1 view .LVU604
 2300 059c DF90      		pop r13
 2301               	.LVL311:
 363:../../tmk_core/common/action.c **** 
 2302               		.loc 1 363 1 view .LVU605
 2303 059e CF90      		pop r12
 2304               	.LVL312:
 363:../../tmk_core/common/action.c **** 
 2305               		.loc 1 363 1 view .LVU606
 2306 05a0 BF90      		pop r11
 2307               	.LVL313:
 363:../../tmk_core/common/action.c **** 
 2308               		.loc 1 363 1 view .LVU607
 2309 05a2 AF90      		pop r10
 2310               	.LVL314:
 289:../../tmk_core/common/action.c ****                     break;
 2311               		.loc 1 289 37 view .LVU608
 2312 05a4 0C94 0000 		jmp layer_clear
 2313               	.LVL315:
 2314               	.L123:
 302:../../tmk_core/common/action.c ****                             dprint("KEYMAP_TAP_KEY: Tap: unregister_code\n");
 2315               		.loc 1 302 25 is_stmt 1 view .LVU609
 302:../../tmk_core/common/action.c ****                             dprint("KEYMAP_TAP_KEY: Tap: unregister_code\n");
 2316               		.loc 1 302 28 is_stmt 0 view .LVU610
 2317 05a8 E110      		cpse r14,__zero_reg__
 2318 05aa 00C0      		rjmp .L167
 306:../../tmk_core/common/action.c ****                             layer_off(action.layer_tap.val);
 2319               		.loc 1 306 29 is_stmt 1 view .LVU611
 307:../../tmk_core/common/action.c ****                         }
 2320               		.loc 1 307 29 view .LVU612
 2321 05ac 812F      		mov r24,r17
 2322 05ae 8F71      		andi r24,lo8(31)
 2323 05b0 00C0      		rjmp .L166
 2324               	.LVL316:
 2325               	.L126:
 318:../../tmk_core/common/action.c ****             break;
 2326               		.loc 1 318 13 view .LVU613
 318:../../tmk_core/common/action.c ****             break;
 2327               		.loc 1 318 83 is_stmt 0 view .LVU614
 2328 05b2 412F      		mov r20,r17
 2329 05b4 4F70      		andi r20,lo8(15)
 2330               	.LVL317:
 318:../../tmk_core/common/action.c ****             break;
 2331               		.loc 1 318 13 view .LVU615
 2332 05b6 602F      		mov r22,r16
 2333 05b8 C501      		movw r24,r10
 2334 05ba 0E94 0000 		call action_get_macro
 2335               	.LVL318:
 2336               	/* epilogue start */
 363:../../tmk_core/common/action.c **** 
 2337               		.loc 1 363 1 view .LVU616
 2338 05be 0F90      		pop __tmp_reg__
 2339 05c0 0F90      		pop __tmp_reg__
 2340 05c2 0F90      		pop __tmp_reg__
 2341 05c4 0F90      		pop __tmp_reg__
 2342 05c6 0F90      		pop __tmp_reg__
 2343 05c8 DF91      		pop r29
 2344 05ca CF91      		pop r28
 2345               	.LVL319:
 363:../../tmk_core/common/action.c **** 
 2346               		.loc 1 363 1 view .LVU617
 2347 05cc 1F91      		pop r17
 2348               	.LVL320:
 363:../../tmk_core/common/action.c **** 
 2349               		.loc 1 363 1 view .LVU618
 2350 05ce 0F91      		pop r16
 2351               	.LVL321:
 363:../../tmk_core/common/action.c **** 
 2352               		.loc 1 363 1 view .LVU619
 2353 05d0 FF90      		pop r15
 2354               	.LVL322:
 363:../../tmk_core/common/action.c **** 
 2355               		.loc 1 363 1 view .LVU620
 2356 05d2 EF90      		pop r14
 2357               	.LVL323:
 363:../../tmk_core/common/action.c **** 
 2358               		.loc 1 363 1 view .LVU621
 2359 05d4 DF90      		pop r13
 2360               	.LVL324:
 363:../../tmk_core/common/action.c **** 
 2361               		.loc 1 363 1 view .LVU622
 2362 05d6 CF90      		pop r12
 2363               	.LVL325:
 363:../../tmk_core/common/action.c **** 
 2364               		.loc 1 363 1 view .LVU623
 2365 05d8 BF90      		pop r11
 2366               	.LVL326:
 363:../../tmk_core/common/action.c **** 
 2367               		.loc 1 363 1 view .LVU624
 2368 05da AF90      		pop r10
 2369               	.LVL327:
 318:../../tmk_core/common/action.c ****             break;
 2370               		.loc 1 318 13 view .LVU625
 2371 05dc 0C94 0000 		jmp action_macro_play
 2372               	.LVL328:
 2373               	.L127:
 345:../../tmk_core/common/action.c ****                 case COMMAND_BOOTLOADER:
 2374               		.loc 1 345 13 is_stmt 1 view .LVU626
 345:../../tmk_core/common/action.c ****                 case COMMAND_BOOTLOADER:
 2375               		.loc 1 345 13 is_stmt 0 view .LVU627
 2376 05e0 0111      		cpse r16,__zero_reg__
 2377 05e2 00C0      		rjmp .L61
 347:../../tmk_core/common/action.c ****                         clear_keyboard();
 2378               		.loc 1 347 21 is_stmt 1 view .LVU628
 347:../../tmk_core/common/action.c ****                         clear_keyboard();
 2379               		.loc 1 347 24 is_stmt 0 view .LVU629
 2380 05e4 FF20      		tst r15
 2381 05e6 01F4      		brne .+2
 2382 05e8 00C0      		rjmp .L61
 348:../../tmk_core/common/action.c ****                         wait_ms(50);
 2383               		.loc 1 348 25 is_stmt 1 view .LVU630
 2384 05ea 0E94 0000 		call clear_keyboard
 2385               	.LVL329:
 349:../../tmk_core/common/action.c ****                         bootloader_jump();
 2386               		.loc 1 349 25 view .LVU631
 2387               	.LBB63:
 2388               	.LBI63:
 166:/usr/avr/include/util/delay.h **** {
 2389               		.loc 3 166 1 view .LVU632
 2390               	.LBB64:
 168:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 2391               		.loc 3 168 2 view .LVU633
 172:/usr/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 2392               		.loc 3 172 2 view .LVU634
 173:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 2393               		.loc 3 173 2 view .LVU635
 174:/usr/avr/include/util/delay.h **** 
 2394               		.loc 3 174 2 view .LVU636
 184:/usr/avr/include/util/delay.h **** 	#endif
 2395               		.loc 3 184 3 view .LVU637
 2396               		.loc 3 187 2 view .LVU638
 2397 05ee 8FEF      		ldi r24,lo8(159999)
 2398 05f0 90E7      		ldi r25,hi8(159999)
 2399 05f2 E2E0      		ldi r30,hlo8(159999)
 2400 05f4 8150      	1:	subi r24,1
 2401 05f6 9040      		sbci r25,0
 2402 05f8 E040      		sbci r30,0
 2403 05fa 01F4      		brne 1b
 2404 05fc 00C0      		rjmp .
 2405 05fe 0000      		nop
 2406               	.LVL330:
 2407               		.loc 3 187 2 is_stmt 0 view .LVU639
 2408               	.LBE64:
 2409               	.LBE63:
 350:../../tmk_core/common/action.c ****                     }
 2410               		.loc 1 350 25 is_stmt 1 view .LVU640
 2411               	/* epilogue start */
 363:../../tmk_core/common/action.c **** 
 2412               		.loc 1 363 1 is_stmt 0 view .LVU641
 2413 0600 0F90      		pop __tmp_reg__
 2414 0602 0F90      		pop __tmp_reg__
 2415 0604 0F90      		pop __tmp_reg__
 2416 0606 0F90      		pop __tmp_reg__
 2417 0608 0F90      		pop __tmp_reg__
 2418 060a DF91      		pop r29
 2419 060c CF91      		pop r28
 2420               	.LVL331:
 363:../../tmk_core/common/action.c **** 
 2421               		.loc 1 363 1 view .LVU642
 2422 060e 1F91      		pop r17
 2423               	.LVL332:
 363:../../tmk_core/common/action.c **** 
 2424               		.loc 1 363 1 view .LVU643
 2425 0610 0F91      		pop r16
 2426               	.LVL333:
 363:../../tmk_core/common/action.c **** 
 2427               		.loc 1 363 1 view .LVU644
 2428 0612 FF90      		pop r15
 2429               	.LVL334:
 363:../../tmk_core/common/action.c **** 
 2430               		.loc 1 363 1 view .LVU645
 2431 0614 EF90      		pop r14
 2432               	.LVL335:
 363:../../tmk_core/common/action.c **** 
 2433               		.loc 1 363 1 view .LVU646
 2434 0616 DF90      		pop r13
 2435               	.LVL336:
 363:../../tmk_core/common/action.c **** 
 2436               		.loc 1 363 1 view .LVU647
 2437 0618 CF90      		pop r12
 2438               	.LVL337:
 363:../../tmk_core/common/action.c **** 
 2439               		.loc 1 363 1 view .LVU648
 2440 061a BF90      		pop r11
 2441               	.LVL338:
 363:../../tmk_core/common/action.c **** 
 2442               		.loc 1 363 1 view .LVU649
 2443 061c AF90      		pop r10
 2444               	.LVL339:
 350:../../tmk_core/common/action.c ****                     }
 2445               		.loc 1 350 25 view .LVU650
 2446 061e 0C94 0000 		jmp bootloader_jump
 2447               	.LVL340:
 2448               	.L128:
 357:../../tmk_core/common/action.c ****             break;
 2449               		.loc 1 357 13 is_stmt 1 view .LVU651
 357:../../tmk_core/common/action.c ****             break;
 2450               		.loc 1 357 64 is_stmt 0 view .LVU652
 2451 0622 412F      		mov r20,r17
 2452 0624 4F70      		andi r20,lo8(15)
 2453               	.LVL341:
 357:../../tmk_core/common/action.c ****             break;
 2454               		.loc 1 357 13 view .LVU653
 2455 0626 602F      		mov r22,r16
 2456 0628 C501      		movw r24,r10
 2457               	/* epilogue start */
 363:../../tmk_core/common/action.c **** 
 2458               		.loc 1 363 1 view .LVU654
 2459 062a 0F90      		pop __tmp_reg__
 2460 062c 0F90      		pop __tmp_reg__
 2461 062e 0F90      		pop __tmp_reg__
 2462 0630 0F90      		pop __tmp_reg__
 2463 0632 0F90      		pop __tmp_reg__
 2464 0634 DF91      		pop r29
 2465 0636 CF91      		pop r28
 2466               	.LVL342:
 363:../../tmk_core/common/action.c **** 
 2467               		.loc 1 363 1 view .LVU655
 2468 0638 1F91      		pop r17
 2469               	.LVL343:
 363:../../tmk_core/common/action.c **** 
 2470               		.loc 1 363 1 view .LVU656
 2471 063a 0F91      		pop r16
 2472               	.LVL344:
 363:../../tmk_core/common/action.c **** 
 2473               		.loc 1 363 1 view .LVU657
 2474 063c FF90      		pop r15
 2475               	.LVL345:
 363:../../tmk_core/common/action.c **** 
 2476               		.loc 1 363 1 view .LVU658
 2477 063e EF90      		pop r14
 2478               	.LVL346:
 363:../../tmk_core/common/action.c **** 
 2479               		.loc 1 363 1 view .LVU659
 2480 0640 DF90      		pop r13
 2481               	.LVL347:
 363:../../tmk_core/common/action.c **** 
 2482               		.loc 1 363 1 view .LVU660
 2483 0642 CF90      		pop r12
 2484               	.LVL348:
 363:../../tmk_core/common/action.c **** 
 2485               		.loc 1 363 1 view .LVU661
 2486 0644 BF90      		pop r11
 2487               	.LVL349:
 363:../../tmk_core/common/action.c **** 
 2488               		.loc 1 363 1 view .LVU662
 2489 0646 AF90      		pop r10
 2490               	.LVL350:
 357:../../tmk_core/common/action.c ****             break;
 2491               		.loc 1 357 13 view .LVU663
 2492 0648 0C94 0000 		jmp action_function
 2493               	.LVL351:
 2494               	.L157:
  64:../../tmk_core/common/action.c **** #ifndef NO_ACTION_TAPPING
 2495               		.loc 1 64 16 view .LVU664
 2496 064c F280      		ldd r15,Z+2
  66:../../tmk_core/common/action.c **** #endif
 2497               		.loc 1 66 36 view .LVU665
 2498 064e E580      		ldd r14,Z+5
 2499 0650 E294      		swap r14
 2500 0652 2FE0      		ldi r18,lo8(15)
 2501 0654 E222      		and r14,r18
  71:../../tmk_core/common/action.c ****     dprint("ACTION: "); debug_action(action);
 2502               		.loc 1 71 5 is_stmt 1 view .LVU666
  71:../../tmk_core/common/action.c ****     dprint("ACTION: "); debug_action(action);
 2503               		.loc 1 71 23 is_stmt 0 view .LVU667
 2504 0656 4983      		std Y+1,r20
 2505 0658 5A83      		std Y+2,r21
 2506 065a FB82      		std Y+3,r15
 2507 065c 782F      		mov r23,r24
 2508 065e 9D83      		std Y+5,r25
 2509 0660 8C83      		std Y+4,r24
 2510 0662 6F2D      		mov r22,r15
 2511 0664 8D81      		ldd r24,Y+5
 2512               	.LVL352:
  71:../../tmk_core/common/action.c ****     dprint("ACTION: "); debug_action(action);
 2513               		.loc 1 71 23 view .LVU668
 2514 0666 0E94 0000 		call layer_switch_get_action
 2515               	.LVL353:
  71:../../tmk_core/common/action.c ****     dprint("ACTION: "); debug_action(action);
 2516               		.loc 1 71 23 view .LVU669
 2517 066a 8C01      		movw r16,r24
  72:../../tmk_core/common/action.c **** #ifndef NO_ACTION_LAYER
 2518               		.loc 1 72 5 is_stmt 1 view .LVU670
  72:../../tmk_core/common/action.c **** #ifndef NO_ACTION_LAYER
 2519               		.loc 1 72 25 view .LVU671
  74:../../tmk_core/common/action.c ****     dprint(" default_layer_state: "); default_layer_debug();
 2520               		.loc 1 74 5 view .LVU672
  74:../../tmk_core/common/action.c ****     dprint(" default_layer_state: "); default_layer_debug();
 2521               		.loc 1 74 31 view .LVU673
 2522 066c 0E94 0000 		call layer_debug
 2523               	.LVL354:
  75:../../tmk_core/common/action.c **** #endif
 2524               		.loc 1 75 5 view .LVU674
  75:../../tmk_core/common/action.c **** #endif
 2525               		.loc 1 75 39 view .LVU675
 2526 0670 0E94 0000 		call default_layer_debug
 2527               	.LVL355:
  77:../../tmk_core/common/action.c **** 
 2528               		.loc 1 77 5 view .LVU676
  79:../../tmk_core/common/action.c ****         /* Key and Mods */
 2529               		.loc 1 79 5 view .LVU677
  79:../../tmk_core/common/action.c ****         /* Key and Mods */
 2530               		.loc 1 79 24 is_stmt 0 view .LVU678
 2531 0674 E12F      		mov r30,r17
 2532 0676 E295      		swap r30
 2533 0678 EF70      		andi r30,lo8(15)
  79:../../tmk_core/common/action.c ****         /* Key and Mods */
 2534               		.loc 1 79 5 view .LVU679
 2535 067a F0E0      		ldi r31,0
 2536 067c E050      		subi r30,lo8(-(gs(.L130)))
 2537 067e F040      		sbci r31,hi8(-(gs(.L130)))
 2538 0680 0C94 0000 		jmp __tablejump2__
 2539               		.section	.jumptables.gcc.process_action,"a",@progbits
 2540               		.p2align	1
 2541               	.L130:
 2542 0000 0000      		.word gs(.L64)
 2543 0002 0000      		.word gs(.L64)
 2544 0004 0000      		.word gs(.L70)
 2545 0006 0000      		.word gs(.L70)
 2546 0008 0000      		.word gs(.L86)
 2547 000a 0000      		.word gs(.L91)
 2548 000c 0000      		.word gs(.L61)
 2549 000e 0000      		.word gs(.L61)
 2550 0010 0000      		.word gs(.L93)
 2551 0012 0000      		.word gs(.L61)
 2552 0014 0000      		.word gs(.L105)
 2553 0016 0000      		.word gs(.L105)
 2554 0018 0000      		.word gs(.L126)
 2555 001a 0000      		.word gs(.L61)
 2556 001c 0000      		.word gs(.L127)
 2557 001e 0000      		.word gs(.L128)
 2558               		.section	.text.process_action
 2559               		.cfi_endproc
 2560               	.LFE11:
 2562               		.section	.text.is_tap_key,"ax",@progbits
 2563               	.global	is_tap_key
 2565               	is_tap_key:
 2566               	.LFB19:
 547:../../tmk_core/common/action.c **** #endif
 548:../../tmk_core/common/action.c **** }
 549:../../tmk_core/common/action.c **** 
 550:../../tmk_core/common/action.c **** bool is_tap_key(keyevent_t event)
 551:../../tmk_core/common/action.c **** {
 2567               		.loc 1 551 1 is_stmt 1 view -0
 2568               		.cfi_startproc
 2569 0000 CF93      		push r28
 2570               	.LCFI18:
 2571               		.cfi_def_cfa_offset 3
 2572               		.cfi_offset 28, -2
 2573 0002 DF93      		push r29
 2574               	.LCFI19:
 2575               		.cfi_def_cfa_offset 4
 2576               		.cfi_offset 29, -3
 2577 0004 00D0      		rcall .
 2578 0006 00D0      		rcall .
 2579 0008 0F92      		push __tmp_reg__
 2580               	.LCFI20:
 2581               		.cfi_def_cfa_offset 9
 2582 000a CDB7      		in r28,__SP_L__
 2583 000c DEB7      		in r29,__SP_H__
 2584               	.LCFI21:
 2585               		.cfi_def_cfa_register 28
 2586               	/* prologue: function */
 2587               	/* frame size = 5 */
 2588               	/* stack size = 7 */
 2589               	.L__stack_usage = 7
 2590 000e 6B83      		std Y+3,r22
 2591 0010 7C83      		std Y+4,r23
 2592 0012 8D83      		std Y+5,r24
 552:../../tmk_core/common/action.c ****     if (IS_NOEVENT(event)) { return false; }
 2593               		.loc 1 552 5 view .LVU681
 2594               	.LBB67:
 2595               	.LBI67:
 2596               		.loc 2 49 20 view .LVU682
 2597               	.LBB68:
 2598               		.loc 2 49 51 view .LVU683
 2599               		.loc 2 49 74 is_stmt 0 view .LVU684
 2600 0014 8C81      		ldd r24,Y+4
 2601 0016 9D81      		ldd r25,Y+5
 2602 0018 892B      		or r24,r25
 2603 001a 01F0      		breq .L199
 2604 001c 842F      		mov r24,r20
 2605 001e 8523      		and r24,r21
 2606 0020 8F3F      		cpi r24,lo8(-1)
 2607 0022 01F4      		brne .L197
 2608               	.LVL356:
 2609               	.L199:
 2610               		.loc 2 49 74 view .LVU685
 2611               	.LBE68:
 2612               	.LBE67:
 553:../../tmk_core/common/action.c **** 
 554:../../tmk_core/common/action.c ****     action_t action = layer_switch_get_action(event);
 555:../../tmk_core/common/action.c **** 
 556:../../tmk_core/common/action.c ****     switch (action.kind.id) {
 557:../../tmk_core/common/action.c ****         case ACT_LMODS_TAP:
 558:../../tmk_core/common/action.c ****         case ACT_RMODS_TAP:
 559:../../tmk_core/common/action.c ****             switch (action.key.code) {
 560:../../tmk_core/common/action.c ****                 case MODS_ONESHOT:
 561:../../tmk_core/common/action.c ****                 case MODS_TAP_TOGGLE:
 562:../../tmk_core/common/action.c ****                 case KC_A ... KC_EXSEL:                 // tap key
 563:../../tmk_core/common/action.c ****                 case KC_LCTRL ... KC_RGUI:              // tap key
 564:../../tmk_core/common/action.c ****                     return true;
 565:../../tmk_core/common/action.c ****             }
 566:../../tmk_core/common/action.c ****         case ACT_LAYER_TAP:
 567:../../tmk_core/common/action.c ****         case ACT_LAYER_TAP_EXT:
 568:../../tmk_core/common/action.c ****             switch (action.layer_tap.code) {
 569:../../tmk_core/common/action.c ****                 case 0xc0 ... 0xdf:         // with modifiers
 570:../../tmk_core/common/action.c ****                     return false;
 2613               		.loc 1 570 28 view .LVU686
 2614 0024 80E0      		ldi r24,0
 2615               	.LVL357:
 2616               		.loc 1 570 28 view .LVU687
 2617 0026 00C0      		rjmp .L174
 2618               	.LVL358:
 2619               	.L177:
 2620               		.loc 1 570 28 view .LVU688
 2621 0028 90E2      		ldi r25,lo8(32)
 2622               	.LVL359:
 2623               		.loc 1 570 28 view .LVU689
 2624 002a 980F      		add r25,r24
 2625 002c 9830      		cpi r25,lo8(8)
 2626 002e 00F0      		brlo .L189
 2627               	.LVL360:
 2628               	.L178:
 568:../../tmk_core/common/action.c ****                 case 0xc0 ... 0xdf:         // with modifiers
 2629               		.loc 1 568 13 is_stmt 1 view .LVU690
 2630 0030 883E      		cpi r24,lo8(-24)
 2631 0032 00F4      		brsh .L179
 2632 0034 803E      		cpi r24,lo8(-32)
 2633 0036 00F4      		brsh .L189
 2634 0038 8450      		subi r24,lo8(-(-4))
 2635               	.LVL361:
 568:../../tmk_core/common/action.c ****                 case 0xc0 ... 0xdf:         // with modifiers
 2636               		.loc 1 568 13 is_stmt 0 view .LVU691
 2637 003a 813A      		cpi r24,lo8(-95)
 2638 003c 00F4      		brsh .L199
 2639 003e 00C0      		rjmp .L189
 2640               	.LVL362:
 2641               	.L179:
 568:../../tmk_core/common/action.c ****                 case 0xc0 ... 0xdf:         // with modifiers
 2642               		.loc 1 568 13 view .LVU692
 2643 0040 803F      		cpi r24,lo8(-16)
 2644 0042 01F4      		brne .L199
 2645 0044 00C0      		rjmp .L189
 2646               	.LVL363:
 2647               	.L197:
 554:../../tmk_core/common/action.c **** 
 2648               		.loc 1 554 5 is_stmt 1 view .LVU693
 554:../../tmk_core/common/action.c **** 
 2649               		.loc 1 554 23 is_stmt 0 view .LVU694
 2650 0046 6B81      		ldd r22,Y+3
 2651 0048 7C81      		ldd r23,Y+4
 2652 004a 8D81      		ldd r24,Y+5
 2653 004c 0E94 0000 		call layer_switch_get_action
 2654               	.LVL364:
 556:../../tmk_core/common/action.c ****         case ACT_LMODS_TAP:
 2655               		.loc 1 556 5 is_stmt 1 view .LVU695
 556:../../tmk_core/common/action.c ****         case ACT_LMODS_TAP:
 2656               		.loc 1 556 24 is_stmt 0 view .LVU696
 2657 0050 292F      		mov r18,r25
 2658 0052 2295      		swap r18
 2659 0054 2F70      		andi r18,lo8(15)
 556:../../tmk_core/common/action.c ****         case ACT_LMODS_TAP:
 2660               		.loc 1 556 5 view .LVU697
 2661 0056 2C30      		cpi r18,lo8(12)
 2662 0058 00F4      		brsh .L180
 2663 005a 2A30      		cpi r18,lo8(10)
 2664 005c 00F4      		brsh .L178
 2665 005e 225F      		subi r18,lo8(-(14))
 2666 0060 2F70      		andi r18,lo8(15)
 2667 0062 2230      		cpi r18,lo8(2)
 2668 0064 00F4      		brsh .L199
 559:../../tmk_core/common/action.c ****                 case MODS_ONESHOT:
 2669               		.loc 1 559 13 is_stmt 1 view .LVU698
 2670 0066 853A      		cpi r24,lo8(-91)
 2671 0068 00F4      		brsh .L177
 2672 006a 8430      		cpi r24,lo8(4)
 2673 006c 00F4      		brsh .L189
 2674 006e 8230      		cpi r24,lo8(2)
 2675 0070 00F4      		brsh .L178
 2676               	.LVL365:
 2677               	.L189:
 571:../../tmk_core/common/action.c ****                 case KC_A ... KC_EXSEL:     // tap key
 572:../../tmk_core/common/action.c ****                 case KC_LCTRL ... KC_RGUI:  // tap key
 573:../../tmk_core/common/action.c ****                 case OP_TAP_TOGGLE:
 574:../../tmk_core/common/action.c ****                     return true;
 2678               		.loc 1 574 28 is_stmt 0 view .LVU699
 2679 0072 81E0      		ldi r24,lo8(1)
 2680               	.LVL366:
 2681               		.loc 1 574 28 view .LVU700
 2682 0074 00C0      		rjmp .L174
 2683               	.LVL367:
 2684               	.L180:
 556:../../tmk_core/common/action.c ****         case ACT_LMODS_TAP:
 2685               		.loc 1 556 5 view .LVU701
 2686 0076 2C30      		cpi r18,lo8(12)
 2687 0078 01F0      		breq .L182
 2688 007a 2F30      		cpi r18,lo8(15)
 2689 007c 01F4      		brne .L199
 2690               	.L182:
 575:../../tmk_core/common/action.c ****             }
 576:../../tmk_core/common/action.c ****             return false;
 577:../../tmk_core/common/action.c ****         case ACT_MACRO:
 578:../../tmk_core/common/action.c ****         case ACT_FUNCTION:
 579:../../tmk_core/common/action.c ****             if (action.func.opt & FUNC_TAP) { return true; }
 2691               		.loc 1 579 13 is_stmt 1 view .LVU702
 2692               		.loc 1 579 16 is_stmt 0 view .LVU703
 2693 007e 93FB      		bst r25,3
 2694 0080 8827      		clr r24
 2695 0082 80F9      		bld r24,0
 2696               	.LVL368:
 2697               	.L174:
 2698               	/* epilogue start */
 580:../../tmk_core/common/action.c ****             return false;
 581:../../tmk_core/common/action.c ****     }
 582:../../tmk_core/common/action.c ****     return false;
 583:../../tmk_core/common/action.c **** }
 2699               		.loc 1 583 1 view .LVU704
 2700 0084 0F90      		pop __tmp_reg__
 2701 0086 0F90      		pop __tmp_reg__
 2702 0088 0F90      		pop __tmp_reg__
 2703 008a 0F90      		pop __tmp_reg__
 2704 008c 0F90      		pop __tmp_reg__
 2705 008e DF91      		pop r29
 2706 0090 CF91      		pop r28
 2707 0092 0895      		ret
 2708               		.cfi_endproc
 2709               	.LFE19:
 2711               		.section	.text.debug_event,"ax",@progbits
 2712               	.global	debug_event
 2714               	debug_event:
 2715               	.LFB20:
 584:../../tmk_core/common/action.c **** 
 585:../../tmk_core/common/action.c **** 
 586:../../tmk_core/common/action.c **** /*
 587:../../tmk_core/common/action.c ****  * debug print
 588:../../tmk_core/common/action.c ****  */
 589:../../tmk_core/common/action.c **** void debug_event(keyevent_t event)
 590:../../tmk_core/common/action.c **** {
 2716               		.loc 1 590 1 is_stmt 1 view -0
 2717               		.cfi_startproc
 2718 0000 CF93      		push r28
 2719               	.LCFI22:
 2720               		.cfi_def_cfa_offset 3
 2721               		.cfi_offset 28, -2
 2722 0002 DF93      		push r29
 2723               	.LCFI23:
 2724               		.cfi_def_cfa_offset 4
 2725               		.cfi_offset 29, -3
 2726 0004 00D0      		rcall .
 2727 0006 00D0      		rcall .
 2728 0008 0F92      		push __tmp_reg__
 2729               	.LCFI24:
 2730               		.cfi_def_cfa_offset 9
 2731 000a CDB7      		in r28,__SP_L__
 2732 000c DEB7      		in r29,__SP_H__
 2733               	.LCFI25:
 2734               		.cfi_def_cfa_register 28
 2735               	/* prologue: function */
 2736               	/* frame size = 5 */
 2737               	/* stack size = 7 */
 2738               	.L__stack_usage = 7
 591:../../tmk_core/common/action.c ****     dprintf("%04X%c(%u)", (event.key.row<<8 | event.key.col), (event.pressed ? 'd' : 'u'), event.ti
 2739               		.loc 1 591 5 view .LVU706
 2740               	/* epilogue start */
 592:../../tmk_core/common/action.c **** }
 2741               		.loc 1 592 1 is_stmt 0 view .LVU707
 2742 000e 0F90      		pop __tmp_reg__
 2743 0010 0F90      		pop __tmp_reg__
 2744 0012 0F90      		pop __tmp_reg__
 2745 0014 0F90      		pop __tmp_reg__
 2746 0016 0F90      		pop __tmp_reg__
 2747 0018 DF91      		pop r29
 2748 001a CF91      		pop r28
 2749 001c 0895      		ret
 2750               		.cfi_endproc
 2751               	.LFE20:
 2753               		.section	.text.debug_record,"ax",@progbits
 2754               	.global	debug_record
 2756               	debug_record:
 2757               	.LFB21:
 593:../../tmk_core/common/action.c **** 
 594:../../tmk_core/common/action.c **** void debug_record(keyrecord_t record)
 595:../../tmk_core/common/action.c **** {
 2758               		.loc 1 595 1 is_stmt 1 view -0
 2759               		.cfi_startproc
 2760 0000 CF93      		push r28
 2761               	.LCFI26:
 2762               		.cfi_def_cfa_offset 3
 2763               		.cfi_offset 28, -2
 2764 0002 DF93      		push r29
 2765               	.LCFI27:
 2766               		.cfi_def_cfa_offset 4
 2767               		.cfi_offset 29, -3
 2768 0004 00D0      		rcall .
 2769 0006 00D0      		rcall .
 2770 0008 00D0      		rcall .
 2771               	.LCFI28:
 2772               		.cfi_def_cfa_offset 10
 2773 000a CDB7      		in r28,__SP_L__
 2774 000c DEB7      		in r29,__SP_H__
 2775               	.LCFI29:
 2776               		.cfi_def_cfa_register 28
 2777               	/* prologue: function */
 2778               	/* frame size = 6 */
 2779               	/* stack size = 8 */
 2780               	.L__stack_usage = 8
 596:../../tmk_core/common/action.c ****     debug_event(record.event);
 2781               		.loc 1 596 5 view .LVU709
 597:../../tmk_core/common/action.c **** #ifndef NO_ACTION_TAPPING
 598:../../tmk_core/common/action.c ****     dprintf(":%u%c", record.tap.count, (record.tap.interrupted ? '-' : ' '));
 2782               		.loc 1 598 5 view .LVU710
 2783               	/* epilogue start */
 599:../../tmk_core/common/action.c **** #endif
 600:../../tmk_core/common/action.c **** }
 2784               		.loc 1 600 1 is_stmt 0 view .LVU711
 2785 000e 2696      		adiw r28,6
 2786 0010 0FB6      		in __tmp_reg__,__SREG__
 2787 0012 F894      		cli
 2788 0014 DEBF      		out __SP_H__,r29
 2789 0016 0FBE      		out __SREG__,__tmp_reg__
 2790 0018 CDBF      		out __SP_L__,r28
 2791 001a DF91      		pop r29
 2792 001c CF91      		pop r28
 2793 001e 0895      		ret
 2794               		.cfi_endproc
 2795               	.LFE21:
 2797               		.section	.text.debug_action,"ax",@progbits
 2798               	.global	debug_action
 2800               	debug_action:
 2801               	.LVL369:
 2802               	.LFB22:
 601:../../tmk_core/common/action.c **** 
 602:../../tmk_core/common/action.c **** void debug_action(action_t action)
 603:../../tmk_core/common/action.c **** {
 2803               		.loc 1 603 1 is_stmt 1 view -0
 2804               		.cfi_startproc
 2805               	/* prologue: function */
 2806               	/* frame size = 0 */
 2807               	/* stack size = 0 */
 2808               	.L__stack_usage = 0
 604:../../tmk_core/common/action.c ****     switch (action.kind.id) {
 2809               		.loc 1 604 5 view .LVU713
 605:../../tmk_core/common/action.c ****         case ACT_LMODS:             dprint("ACT_LMODS");             break;
 606:../../tmk_core/common/action.c ****         case ACT_RMODS:             dprint("ACT_RMODS");             break;
 607:../../tmk_core/common/action.c ****         case ACT_LMODS_TAP:         dprint("ACT_LMODS_TAP");         break;
 608:../../tmk_core/common/action.c ****         case ACT_RMODS_TAP:         dprint("ACT_RMODS_TAP");         break;
 609:../../tmk_core/common/action.c ****         case ACT_USAGE:             dprint("ACT_USAGE");             break;
 610:../../tmk_core/common/action.c ****         case ACT_MOUSEKEY:          dprint("ACT_MOUSEKEY");          break;
 611:../../tmk_core/common/action.c ****         case ACT_LAYER:             dprint("ACT_LAYER");             break;
 612:../../tmk_core/common/action.c ****         case ACT_LAYER_TAP:         dprint("ACT_LAYER_TAP");         break;
 613:../../tmk_core/common/action.c ****         case ACT_LAYER_TAP_EXT:     dprint("ACT_LAYER_TAP_EXT");     break;
 614:../../tmk_core/common/action.c ****         case ACT_MACRO:             dprint("ACT_MACRO");             break;
 615:../../tmk_core/common/action.c ****         case ACT_COMMAND:           dprint("ACT_COMMAND");           break;
 616:../../tmk_core/common/action.c ****         case ACT_FUNCTION:          dprint("ACT_FUNCTION");          break;
 617:../../tmk_core/common/action.c ****         default:                    dprint("UNKNOWN");               break;
 618:../../tmk_core/common/action.c ****     }
 619:../../tmk_core/common/action.c ****     dprintf("[%X:%02X]", action.kind.param>>8, action.kind.param&0xff);
 2810               		.loc 1 619 5 view .LVU714
 2811               	/* epilogue start */
 620:../../tmk_core/common/action.c **** }
 2812               		.loc 1 620 1 is_stmt 0 view .LVU715
 2813 0000 0895      		ret
 2814               		.cfi_endproc
 2815               	.LFE22:
 2817               		.text
 2818               	.Letext0:
 2819               		.file 4 "/usr/avr/include/stdint.h"
 2820               		.file 5 "../../tmk_core/common/keycode.h"
 2821               		.file 6 "../../tmk_core/common/report.h"
 2822               		.file 7 "../../tmk_core/common/host.h"
 2823               		.file 8 "../../tmk_core/common/mousekey.h"
 2824               		.file 9 "../../tmk_core/common/command.h"
 2825               		.file 10 "../../tmk_core/common/action_code.h"
 2826               		.file 11 "../../tmk_core/common/action.h"
 2827               		.file 12 "../../tmk_core/common/action_layer.h"
 2828               		.file 13 "../../tmk_core/common/action_util.h"
 2829               		.file 14 "../../tmk_core/common/avr/xprintf.h"
 2830               		.file 15 "../../tmk_core/common/debug.h"
 2831               		.file 16 "../../tmk_core/common/hook.h"
 2832               		.file 17 "../../tmk_core/common/action_macro.h"
 2833               		.file 18 "../../tmk_core/common/bootloader.h"
 2834               		.file 19 "../../tmk_core/common/action_tapping.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 action.c
     /tmp/cc30vMrX.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cc30vMrX.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cc30vMrX.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cc30vMrX.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cc30vMrX.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/cc30vMrX.s:13     .text.action_exec:0000000000000000 action_exec
     /tmp/cc30vMrX.s:122    .text.register_code:0000000000000000 register_code
     /tmp/cc30vMrX.s:445    .text.unregister_code:0000000000000000 unregister_code
     /tmp/cc30vMrX.s:680    .text.type_code:0000000000000000 type_code
     /tmp/cc30vMrX.s:714    .text.register_mods:0000000000000000 register_mods
     /tmp/cc30vMrX.s:743    .text.unregister_mods:0000000000000000 unregister_mods
     /tmp/cc30vMrX.s:772    .text.clear_keyboard_but_mods:0000000000000000 clear_keyboard_but_mods
     /tmp/cc30vMrX.s:811    .text.clear_keyboard:0000000000000000 clear_keyboard
     /tmp/cc30vMrX.s:831    .text.process_action:0000000000000000 process_action
     /tmp/cc30vMrX.s:2565   .text.is_tap_key:0000000000000000 is_tap_key
     /tmp/cc30vMrX.s:2714   .text.debug_event:0000000000000000 debug_event
     /tmp/cc30vMrX.s:2756   .text.debug_record:0000000000000000 debug_record
     /tmp/cc30vMrX.s:2800   .text.debug_action:0000000000000000 debug_action

UNDEFINED SYMBOLS
action_tapping_process
hook_matrix_change
host_keyboard_leds
add_key
send_keyboard_report
del_key
command_proc
add_mods
host_system_send
host_consumer_send
del_mods
clear_weak_mods
clear_keys
mousekey_clear
mousekey_send
clear_mods
hook_process_action
add_weak_mods
del_weak_mods
set_oneshot_mods
clear_oneshot_mods
get_mods
mousekey_on
mousekey_off
default_layer_and
default_layer_xor
default_layer_or
layer_and
layer_xor
layer_or
layer_move
layer_on
layer_off
layer_invert
layer_clear
action_get_macro
action_macro_play
bootloader_jump
action_function
layer_switch_get_action
layer_debug
default_layer_debug
__tablejump2__
