   1               		.file	"command.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.mousekey_console_help,"ax",@progbits
  12               	mousekey_console_help:
  13               	.LFB20:
  14               		.file 1 "../../tmk_core/common/command.c"
   1:../../tmk_core/common/command.c **** /*
   2:../../tmk_core/common/command.c **** Copyright 2011 Jun Wako <wakojun@gmail.com>
   3:../../tmk_core/common/command.c **** 
   4:../../tmk_core/common/command.c **** This program is free software: you can redistribute it and/or modify
   5:../../tmk_core/common/command.c **** it under the terms of the GNU General Public License as published by
   6:../../tmk_core/common/command.c **** the Free Software Foundation, either version 2 of the License, or
   7:../../tmk_core/common/command.c **** (at your option) any later version.
   8:../../tmk_core/common/command.c **** 
   9:../../tmk_core/common/command.c **** This program is distributed in the hope that it will be useful,
  10:../../tmk_core/common/command.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:../../tmk_core/common/command.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:../../tmk_core/common/command.c **** GNU General Public License for more details.
  13:../../tmk_core/common/command.c **** 
  14:../../tmk_core/common/command.c **** You should have received a copy of the GNU General Public License
  15:../../tmk_core/common/command.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:../../tmk_core/common/command.c **** */
  17:../../tmk_core/common/command.c **** #include <stdint.h>
  18:../../tmk_core/common/command.c **** #include <stdbool.h>
  19:../../tmk_core/common/command.c **** #include "wait.h"
  20:../../tmk_core/common/command.c **** #include "keycode.h"
  21:../../tmk_core/common/command.c **** #include "host.h"
  22:../../tmk_core/common/command.c **** #include "keymap.h"
  23:../../tmk_core/common/command.c **** #include "print.h"
  24:../../tmk_core/common/command.c **** #include "debug.h"
  25:../../tmk_core/common/command.c **** #include "util.h"
  26:../../tmk_core/common/command.c **** #include "timer.h"
  27:../../tmk_core/common/command.c **** #include "keyboard.h"
  28:../../tmk_core/common/command.c **** #include "bootloader.h"
  29:../../tmk_core/common/command.c **** #include "action_layer.h"
  30:../../tmk_core/common/command.c **** #include "action_util.h"
  31:../../tmk_core/common/command.c **** #include "eeconfig.h"
  32:../../tmk_core/common/command.c **** #include "sleep_led.h"
  33:../../tmk_core/common/command.c **** #include "led.h"
  34:../../tmk_core/common/command.c **** #include "command.h"
  35:../../tmk_core/common/command.c **** #include "backlight.h"
  36:../../tmk_core/common/command.c **** 
  37:../../tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
  38:../../tmk_core/common/command.c **** #include "mousekey.h"
  39:../../tmk_core/common/command.c **** #endif
  40:../../tmk_core/common/command.c **** 
  41:../../tmk_core/common/command.c **** #ifdef PROTOCOL_PJRC
  42:../../tmk_core/common/command.c **** #   include "usb_keyboard.h"
  43:../../tmk_core/common/command.c **** #   ifdef EXTRAKEY_ENABLE
  44:../../tmk_core/common/command.c **** #       include "usb_extra.h"
  45:../../tmk_core/common/command.c **** #   endif
  46:../../tmk_core/common/command.c **** #endif
  47:../../tmk_core/common/command.c **** 
  48:../../tmk_core/common/command.c **** #ifdef PROTOCOL_VUSB
  49:../../tmk_core/common/command.c **** #   include "usbdrv.h"
  50:../../tmk_core/common/command.c **** #endif
  51:../../tmk_core/common/command.c **** 
  52:../../tmk_core/common/command.c **** 
  53:../../tmk_core/common/command.c **** static bool command_common(uint8_t code);
  54:../../tmk_core/common/command.c **** static void command_common_help(void);
  55:../../tmk_core/common/command.c **** static bool command_console(uint8_t code);
  56:../../tmk_core/common/command.c **** static void command_console_help(void);
  57:../../tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
  58:../../tmk_core/common/command.c **** static bool mousekey_console(uint8_t code);
  59:../../tmk_core/common/command.c **** static void mousekey_console_help(void);
  60:../../tmk_core/common/command.c **** static uint8_t numkey2num(uint8_t code);
  61:../../tmk_core/common/command.c **** #endif
  62:../../tmk_core/common/command.c **** 
  63:../../tmk_core/common/command.c **** 
  64:../../tmk_core/common/command.c **** static void switch_default_layer(uint8_t layer);
  65:../../tmk_core/common/command.c **** 
  66:../../tmk_core/common/command.c **** 
  67:../../tmk_core/common/command.c **** command_state_t command_state = ONESHOT;
  68:../../tmk_core/common/command.c **** 
  69:../../tmk_core/common/command.c **** 
  70:../../tmk_core/common/command.c **** bool command_proc(uint8_t code)
  71:../../tmk_core/common/command.c **** {
  72:../../tmk_core/common/command.c ****     switch (command_state) {
  73:../../tmk_core/common/command.c ****         case ONESHOT:
  74:../../tmk_core/common/command.c ****             if (!IS_COMMAND())
  75:../../tmk_core/common/command.c ****                 return false;
  76:../../tmk_core/common/command.c ****             return (command_extra(code) || command_common(code));
  77:../../tmk_core/common/command.c ****             break;
  78:../../tmk_core/common/command.c ****         case CONSOLE:
  79:../../tmk_core/common/command.c ****             if (IS_COMMAND())
  80:../../tmk_core/common/command.c ****                 return (command_extra(code) || command_common(code));
  81:../../tmk_core/common/command.c ****             else
  82:../../tmk_core/common/command.c ****                 return (command_console_extra(code) || command_console(code));
  83:../../tmk_core/common/command.c ****             break;
  84:../../tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
  85:../../tmk_core/common/command.c ****         case MOUSEKEY:
  86:../../tmk_core/common/command.c ****             mousekey_console(code);
  87:../../tmk_core/common/command.c ****             break;
  88:../../tmk_core/common/command.c **** #endif
  89:../../tmk_core/common/command.c ****         default:
  90:../../tmk_core/common/command.c ****             command_state = ONESHOT;
  91:../../tmk_core/common/command.c ****             return false;
  92:../../tmk_core/common/command.c ****     }
  93:../../tmk_core/common/command.c ****     return true;
  94:../../tmk_core/common/command.c **** }
  95:../../tmk_core/common/command.c **** 
  96:../../tmk_core/common/command.c **** /* TODO: Refactoring is needed. */
  97:../../tmk_core/common/command.c **** /* This allows to define extra commands. return false when not processed. */
  98:../../tmk_core/common/command.c **** bool command_extra(uint8_t code) __attribute__ ((weak));
  99:../../tmk_core/common/command.c **** bool command_extra(uint8_t code)
 100:../../tmk_core/common/command.c **** {
 101:../../tmk_core/common/command.c ****     (void)code;
 102:../../tmk_core/common/command.c ****     return false;
 103:../../tmk_core/common/command.c **** }
 104:../../tmk_core/common/command.c **** 
 105:../../tmk_core/common/command.c **** bool command_console_extra(uint8_t code) __attribute__ ((weak));
 106:../../tmk_core/common/command.c **** bool command_console_extra(uint8_t code)
 107:../../tmk_core/common/command.c **** {
 108:../../tmk_core/common/command.c ****     (void)code;
 109:../../tmk_core/common/command.c ****     return false;
 110:../../tmk_core/common/command.c **** }
 111:../../tmk_core/common/command.c **** 
 112:../../tmk_core/common/command.c **** 
 113:../../tmk_core/common/command.c **** /***********************************************************
 114:../../tmk_core/common/command.c ****  * Command common
 115:../../tmk_core/common/command.c ****  ***********************************************************/
 116:../../tmk_core/common/command.c **** static void command_common_help(void)
 117:../../tmk_core/common/command.c **** {
 118:../../tmk_core/common/command.c ****     print("\n\t- Magic -\n"
 119:../../tmk_core/common/command.c ****           "d:	debug\n"
 120:../../tmk_core/common/command.c ****           "x:	debug matrix\n"
 121:../../tmk_core/common/command.c ****           "k:	debug keyboard\n"
 122:../../tmk_core/common/command.c ****           "m:	debug mouse\n"
 123:../../tmk_core/common/command.c ****           "v:	version\n"
 124:../../tmk_core/common/command.c ****           "s:	status\n"
 125:../../tmk_core/common/command.c ****           "c:	console mode\n"
 126:../../tmk_core/common/command.c ****           "0-4:	layer0-4(F10-F4)\n"
 127:../../tmk_core/common/command.c ****           "Paus:	bootloader\n"
 128:../../tmk_core/common/command.c **** 
 129:../../tmk_core/common/command.c **** #ifdef KEYBOARD_LOCK_ENABLE
 130:../../tmk_core/common/command.c ****           "Caps:	Lock\n"
 131:../../tmk_core/common/command.c **** #endif
 132:../../tmk_core/common/command.c **** 
 133:../../tmk_core/common/command.c **** #ifdef BOOTMAGIC_ENABLE
 134:../../tmk_core/common/command.c ****           "e:	eeprom\n"
 135:../../tmk_core/common/command.c **** #endif
 136:../../tmk_core/common/command.c **** 
 137:../../tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 138:../../tmk_core/common/command.c ****           "n:	NKRO\n"
 139:../../tmk_core/common/command.c **** #endif
 140:../../tmk_core/common/command.c **** 
 141:../../tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 142:../../tmk_core/common/command.c ****           "z:	sleep LED test\n"
 143:../../tmk_core/common/command.c **** #endif
 144:../../tmk_core/common/command.c ****     );
 145:../../tmk_core/common/command.c **** }
 146:../../tmk_core/common/command.c **** 
 147:../../tmk_core/common/command.c **** #ifdef BOOTMAGIC_ENABLE
 148:../../tmk_core/common/command.c **** static void print_eeconfig(void)
 149:../../tmk_core/common/command.c **** {
 150:../../tmk_core/common/command.c ****     print("default_layer: "); print_dec(eeconfig_read_default_layer()); print("\n");
 151:../../tmk_core/common/command.c **** 
 152:../../tmk_core/common/command.c ****     debug_config_t dc;
 153:../../tmk_core/common/command.c ****     dc.raw = eeconfig_read_debug();
 154:../../tmk_core/common/command.c ****     print("debug_config.raw: "); print_hex8(dc.raw); print("\n");
 155:../../tmk_core/common/command.c ****     print(".enable: "); print_dec(dc.enable); print("\n");
 156:../../tmk_core/common/command.c ****     print(".matrix: "); print_dec(dc.matrix); print("\n");
 157:../../tmk_core/common/command.c ****     print(".keyboard: "); print_dec(dc.keyboard); print("\n");
 158:../../tmk_core/common/command.c ****     print(".mouse: "); print_dec(dc.mouse); print("\n");
 159:../../tmk_core/common/command.c **** 
 160:../../tmk_core/common/command.c ****     keymap_config_t kc;
 161:../../tmk_core/common/command.c ****     kc.raw = eeconfig_read_keymap();
 162:../../tmk_core/common/command.c ****     print("keymap_config.raw: "); print_hex8(kc.raw); print("\n");
 163:../../tmk_core/common/command.c ****     print(".swap_control_capslock: "); print_dec(kc.swap_control_capslock); print("\n");
 164:../../tmk_core/common/command.c ****     print(".capslock_to_control: "); print_dec(kc.capslock_to_control); print("\n");
 165:../../tmk_core/common/command.c ****     print(".swap_lalt_lgui: "); print_dec(kc.swap_lalt_lgui); print("\n");
 166:../../tmk_core/common/command.c ****     print(".swap_ralt_rgui: "); print_dec(kc.swap_ralt_rgui); print("\n");
 167:../../tmk_core/common/command.c ****     print(".no_gui: "); print_dec(kc.no_gui); print("\n");
 168:../../tmk_core/common/command.c ****     print(".swap_grave_esc: "); print_dec(kc.swap_grave_esc); print("\n");
 169:../../tmk_core/common/command.c ****     print(".swap_backslash_backspace: "); print_dec(kc.swap_backslash_backspace); print("\n");
 170:../../tmk_core/common/command.c ****     print(".nkro: "); print_dec(kc.nkro); print("\n");
 171:../../tmk_core/common/command.c **** 
 172:../../tmk_core/common/command.c **** #ifdef BACKLIGHT_ENABLE
 173:../../tmk_core/common/command.c ****     backlight_config_t bc;
 174:../../tmk_core/common/command.c ****     bc.raw = eeconfig_read_backlight();
 175:../../tmk_core/common/command.c ****     print("backlight_config.raw: "); print_hex8(bc.raw); print("\n");
 176:../../tmk_core/common/command.c ****     print(".enable: "); print_dec(bc.enable); print("\n");
 177:../../tmk_core/common/command.c ****     print(".level: "); print_dec(bc.level); print("\n");
 178:../../tmk_core/common/command.c **** #endif
 179:../../tmk_core/common/command.c **** }
 180:../../tmk_core/common/command.c **** #endif
 181:../../tmk_core/common/command.c **** 
 182:../../tmk_core/common/command.c **** static bool command_common(uint8_t code)
 183:../../tmk_core/common/command.c **** {
 184:../../tmk_core/common/command.c **** #ifdef KEYBOARD_LOCK_ENABLE
 185:../../tmk_core/common/command.c ****     static host_driver_t *host_driver = 0;
 186:../../tmk_core/common/command.c **** #endif
 187:../../tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 188:../../tmk_core/common/command.c ****     static bool sleep_led_test = false;
 189:../../tmk_core/common/command.c **** #endif
 190:../../tmk_core/common/command.c ****     switch (code) {
 191:../../tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 192:../../tmk_core/common/command.c ****         case KC_Z:
 193:../../tmk_core/common/command.c ****             // test breathing sleep LED
 194:../../tmk_core/common/command.c ****             print("Sleep LED test\n");
 195:../../tmk_core/common/command.c ****             if (sleep_led_test) {
 196:../../tmk_core/common/command.c ****                 sleep_led_disable();
 197:../../tmk_core/common/command.c ****                 led_set(host_keyboard_leds());
 198:../../tmk_core/common/command.c ****             } else {
 199:../../tmk_core/common/command.c ****                 sleep_led_enable();
 200:../../tmk_core/common/command.c ****             }
 201:../../tmk_core/common/command.c ****             sleep_led_test = !sleep_led_test;
 202:../../tmk_core/common/command.c ****             break;
 203:../../tmk_core/common/command.c **** #endif
 204:../../tmk_core/common/command.c **** #ifdef BOOTMAGIC_ENABLE
 205:../../tmk_core/common/command.c ****         case KC_E:
 206:../../tmk_core/common/command.c ****             print("eeconfig:\n");
 207:../../tmk_core/common/command.c ****             print_eeconfig();
 208:../../tmk_core/common/command.c ****             break;
 209:../../tmk_core/common/command.c **** #endif
 210:../../tmk_core/common/command.c **** #ifdef KEYBOARD_LOCK_ENABLE
 211:../../tmk_core/common/command.c ****         case KC_CAPSLOCK:
 212:../../tmk_core/common/command.c ****             if (host_get_driver()) {
 213:../../tmk_core/common/command.c ****                 host_driver = host_get_driver();
 214:../../tmk_core/common/command.c ****                 clear_keyboard();
 215:../../tmk_core/common/command.c ****                 host_set_driver(0);
 216:../../tmk_core/common/command.c ****                 print("Locked.\n");
 217:../../tmk_core/common/command.c ****             } else {
 218:../../tmk_core/common/command.c ****                 host_set_driver(host_driver);
 219:../../tmk_core/common/command.c ****                 print("Unlocked.\n");
 220:../../tmk_core/common/command.c ****             }
 221:../../tmk_core/common/command.c ****             break;
 222:../../tmk_core/common/command.c **** #endif
 223:../../tmk_core/common/command.c ****         case KC_H:
 224:../../tmk_core/common/command.c ****         case KC_SLASH: /* ? */
 225:../../tmk_core/common/command.c ****             command_common_help();
 226:../../tmk_core/common/command.c ****             break;
 227:../../tmk_core/common/command.c ****         case KC_C:
 228:../../tmk_core/common/command.c ****             debug_matrix   = false;
 229:../../tmk_core/common/command.c ****             debug_keyboard = false;
 230:../../tmk_core/common/command.c ****             debug_mouse    = false;
 231:../../tmk_core/common/command.c ****             debug_enable   = false;
 232:../../tmk_core/common/command.c ****             command_console_help();
 233:../../tmk_core/common/command.c ****             print("C> ");
 234:../../tmk_core/common/command.c ****             command_state = CONSOLE;
 235:../../tmk_core/common/command.c ****             break;
 236:../../tmk_core/common/command.c ****         case KC_PAUSE:
 237:../../tmk_core/common/command.c ****             clear_keyboard();
 238:../../tmk_core/common/command.c ****             print("\n\nbootloader... ");
 239:../../tmk_core/common/command.c ****             wait_ms(1000);
 240:../../tmk_core/common/command.c ****             bootloader_jump(); // not return
 241:../../tmk_core/common/command.c ****             break;
 242:../../tmk_core/common/command.c ****         case KC_D:
 243:../../tmk_core/common/command.c ****             if (debug_enable) {
 244:../../tmk_core/common/command.c ****                 print("\ndebug: off\n");
 245:../../tmk_core/common/command.c ****                 debug_matrix   = false;
 246:../../tmk_core/common/command.c ****                 debug_keyboard = false;
 247:../../tmk_core/common/command.c ****                 debug_mouse    = false;
 248:../../tmk_core/common/command.c ****                 debug_enable   = false;
 249:../../tmk_core/common/command.c ****             } else {
 250:../../tmk_core/common/command.c ****                 print("\ndebug: on\n");
 251:../../tmk_core/common/command.c ****                 debug_enable   = true;
 252:../../tmk_core/common/command.c ****             }
 253:../../tmk_core/common/command.c ****             break;
 254:../../tmk_core/common/command.c ****         case KC_X: // debug matrix toggle
 255:../../tmk_core/common/command.c ****             debug_matrix = !debug_matrix;
 256:../../tmk_core/common/command.c ****             if (debug_matrix) {
 257:../../tmk_core/common/command.c ****                 print("\nmatrix: on\n");
 258:../../tmk_core/common/command.c ****                 debug_enable = true;
 259:../../tmk_core/common/command.c ****             } else {
 260:../../tmk_core/common/command.c ****                 print("\nmatrix: off\n");
 261:../../tmk_core/common/command.c ****             }
 262:../../tmk_core/common/command.c ****             break;
 263:../../tmk_core/common/command.c ****         case KC_K: // debug keyboard toggle
 264:../../tmk_core/common/command.c ****             debug_keyboard = !debug_keyboard;
 265:../../tmk_core/common/command.c ****             if (debug_keyboard) {
 266:../../tmk_core/common/command.c ****                 print("\nkeyboard: on\n");
 267:../../tmk_core/common/command.c ****                 debug_enable = true;
 268:../../tmk_core/common/command.c ****             } else {
 269:../../tmk_core/common/command.c ****                 print("\nkeyboard: off\n");
 270:../../tmk_core/common/command.c ****             }
 271:../../tmk_core/common/command.c ****             break;
 272:../../tmk_core/common/command.c ****         case KC_M: // debug mouse toggle
 273:../../tmk_core/common/command.c ****             debug_mouse = !debug_mouse;
 274:../../tmk_core/common/command.c ****             if (debug_mouse) {
 275:../../tmk_core/common/command.c ****                 print("\nmouse: on\n");
 276:../../tmk_core/common/command.c ****                 debug_enable = true;
 277:../../tmk_core/common/command.c ****             } else {
 278:../../tmk_core/common/command.c ****                 print("\nmouse: off\n");
 279:../../tmk_core/common/command.c ****             }
 280:../../tmk_core/common/command.c ****             break;
 281:../../tmk_core/common/command.c ****         case KC_V: // print version & information
 282:../../tmk_core/common/command.c ****             print("\n\t- Version -\n");
 283:../../tmk_core/common/command.c ****             print("DESC: " STR(DESCRIPTION) "\n");
 284:../../tmk_core/common/command.c ****             print("VID: " STR(VENDOR_ID) "(" STR(MANUFACTURER) ") "
 285:../../tmk_core/common/command.c ****                   "PID: " STR(PRODUCT_ID) "(" STR(PRODUCT) ") "
 286:../../tmk_core/common/command.c ****                   "VER: " STR(DEVICE_VER) "\n");
 287:../../tmk_core/common/command.c ****             print("BUILD: " STR(TMK_VERSION) " (" __TIME__ " " __DATE__ ")\n");
 288:../../tmk_core/common/command.c ****             /* build options */
 289:../../tmk_core/common/command.c ****             print("OPTIONS:"
 290:../../tmk_core/common/command.c **** #ifdef PROTOCOL_PJRC
 291:../../tmk_core/common/command.c ****             " PJRC"
 292:../../tmk_core/common/command.c **** #endif
 293:../../tmk_core/common/command.c **** #ifdef PROTOCOL_LUFA
 294:../../tmk_core/common/command.c ****             " LUFA"
 295:../../tmk_core/common/command.c **** #endif
 296:../../tmk_core/common/command.c **** #ifdef PROTOCOL_VUSB
 297:../../tmk_core/common/command.c ****             " VUSB"
 298:../../tmk_core/common/command.c **** #endif
 299:../../tmk_core/common/command.c **** #ifdef PROTOCOL_CHIBIOS
 300:../../tmk_core/common/command.c ****             " CHIBIOS"
 301:../../tmk_core/common/command.c **** #endif
 302:../../tmk_core/common/command.c **** #ifdef BOOTMAGIC_ENABLE
 303:../../tmk_core/common/command.c ****             " BOOTMAGIC"
 304:../../tmk_core/common/command.c **** #endif
 305:../../tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
 306:../../tmk_core/common/command.c ****             " MOUSEKEY"
 307:../../tmk_core/common/command.c **** #endif
 308:../../tmk_core/common/command.c **** #ifdef EXTRAKEY_ENABLE
 309:../../tmk_core/common/command.c ****             " EXTRAKEY"
 310:../../tmk_core/common/command.c **** #endif
 311:../../tmk_core/common/command.c **** #ifdef CONSOLE_ENABLE
 312:../../tmk_core/common/command.c ****             " CONSOLE"
 313:../../tmk_core/common/command.c **** #endif
 314:../../tmk_core/common/command.c **** #ifdef COMMAND_ENABLE
 315:../../tmk_core/common/command.c ****             " COMMAND"
 316:../../tmk_core/common/command.c **** #endif
 317:../../tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 318:../../tmk_core/common/command.c ****             " NKRO"
 319:../../tmk_core/common/command.c **** #endif
 320:../../tmk_core/common/command.c **** #ifdef KEYMAP_SECTION_ENABLE
 321:../../tmk_core/common/command.c ****             " KEYMAP_SECTION"
 322:../../tmk_core/common/command.c **** #endif
 323:../../tmk_core/common/command.c ****             " " STR(BOOTLOADER_SIZE) "\n");
 324:../../tmk_core/common/command.c **** 
 325:../../tmk_core/common/command.c ****             print("GCC: " STR(__GNUC__) "." STR(__GNUC_MINOR__) "." STR(__GNUC_PATCHLEVEL__)
 326:../../tmk_core/common/command.c **** #if defined(__AVR__)
 327:../../tmk_core/common/command.c ****                   " AVR-LIBC: " __AVR_LIBC_VERSION_STRING__
 328:../../tmk_core/common/command.c ****                   " AVR_ARCH: avr" STR(__AVR_ARCH__) "\n");
 329:../../tmk_core/common/command.c **** #elif defined(__arm__)
 330:../../tmk_core/common/command.c ****             // TODO
 331:../../tmk_core/common/command.c ****             );
 332:../../tmk_core/common/command.c **** #endif
 333:../../tmk_core/common/command.c ****             break;
 334:../../tmk_core/common/command.c ****         case KC_S:
 335:../../tmk_core/common/command.c ****             print("\n\t- Status -\n");
 336:../../tmk_core/common/command.c ****             print_val_hex8(host_keyboard_leds());
 337:../../tmk_core/common/command.c ****             print_val_hex8(keyboard_protocol);
 338:../../tmk_core/common/command.c ****             print_val_hex8(keyboard_idle);
 339:../../tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 340:../../tmk_core/common/command.c ****             print_val_hex8(keyboard_nkro);
 341:../../tmk_core/common/command.c **** #endif
 342:../../tmk_core/common/command.c ****             print_val_hex32(timer_read32());
 343:../../tmk_core/common/command.c **** 
 344:../../tmk_core/common/command.c **** #ifdef PROTOCOL_PJRC
 345:../../tmk_core/common/command.c ****             print_val_hex8(UDCON);
 346:../../tmk_core/common/command.c ****             print_val_hex8(UDIEN);
 347:../../tmk_core/common/command.c ****             print_val_hex8(UDINT);
 348:../../tmk_core/common/command.c ****             print_val_hex8(usb_keyboard_leds);
 349:../../tmk_core/common/command.c ****             print_val_hex8(usb_keyboard_idle_count);
 350:../../tmk_core/common/command.c **** #endif
 351:../../tmk_core/common/command.c **** 
 352:../../tmk_core/common/command.c **** #ifdef PROTOCOL_PJRC
 353:../../tmk_core/common/command.c **** #   if USB_COUNT_SOF
 354:../../tmk_core/common/command.c ****             print_val_hex8(usbSofCount);
 355:../../tmk_core/common/command.c **** #   endif
 356:../../tmk_core/common/command.c **** #endif
 357:../../tmk_core/common/command.c ****             break;
 358:../../tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 359:../../tmk_core/common/command.c ****         case KC_N:
 360:../../tmk_core/common/command.c ****             clear_keyboard(); //Prevents stuck keys.
 361:../../tmk_core/common/command.c ****             keyboard_nkro = !keyboard_nkro;
 362:../../tmk_core/common/command.c ****             if (keyboard_nkro) {
 363:../../tmk_core/common/command.c ****                 print("NKRO: on\n");
 364:../../tmk_core/common/command.c ****             } else {
 365:../../tmk_core/common/command.c ****                 print("NKRO: off\n");
 366:../../tmk_core/common/command.c ****             }
 367:../../tmk_core/common/command.c ****             break;
 368:../../tmk_core/common/command.c **** #endif
 369:../../tmk_core/common/command.c ****         case KC_ESC:
 370:../../tmk_core/common/command.c ****         case KC_GRV:
 371:../../tmk_core/common/command.c ****         case KC_0:
 372:../../tmk_core/common/command.c ****         case KC_F10:
 373:../../tmk_core/common/command.c ****             switch_default_layer(0);
 374:../../tmk_core/common/command.c ****             break;
 375:../../tmk_core/common/command.c ****         case KC_1 ... KC_9:
 376:../../tmk_core/common/command.c ****             switch_default_layer((code - KC_1) + 1);
 377:../../tmk_core/common/command.c ****             break;
 378:../../tmk_core/common/command.c ****         case KC_F1 ... KC_F9:
 379:../../tmk_core/common/command.c ****             switch_default_layer((code - KC_F1) + 1);
 380:../../tmk_core/common/command.c ****             break;
 381:../../tmk_core/common/command.c ****         default:
 382:../../tmk_core/common/command.c ****             print("?");
 383:../../tmk_core/common/command.c ****             return false;
 384:../../tmk_core/common/command.c ****     }
 385:../../tmk_core/common/command.c ****     return true;
 386:../../tmk_core/common/command.c **** }
 387:../../tmk_core/common/command.c **** 
 388:../../tmk_core/common/command.c **** 
 389:../../tmk_core/common/command.c **** /***********************************************************
 390:../../tmk_core/common/command.c ****  * Command console
 391:../../tmk_core/common/command.c ****  ***********************************************************/
 392:../../tmk_core/common/command.c **** static void command_console_help(void)
 393:../../tmk_core/common/command.c **** {
 394:../../tmk_core/common/command.c ****     print("\n\t- Console -\n"
 395:../../tmk_core/common/command.c ****           "ESC/q:	quit\n"
 396:../../tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
 397:../../tmk_core/common/command.c ****           "m:	mousekey\n"
 398:../../tmk_core/common/command.c **** #endif
 399:../../tmk_core/common/command.c ****     );
 400:../../tmk_core/common/command.c **** }
 401:../../tmk_core/common/command.c **** 
 402:../../tmk_core/common/command.c **** static bool command_console(uint8_t code)
 403:../../tmk_core/common/command.c **** {
 404:../../tmk_core/common/command.c ****     switch (code) {
 405:../../tmk_core/common/command.c ****         case KC_H:
 406:../../tmk_core/common/command.c ****         case KC_SLASH: /* ? */
 407:../../tmk_core/common/command.c ****             command_console_help();
 408:../../tmk_core/common/command.c ****             break;
 409:../../tmk_core/common/command.c ****         case KC_Q:
 410:../../tmk_core/common/command.c ****         case KC_ESC:
 411:../../tmk_core/common/command.c ****             command_state = ONESHOT;
 412:../../tmk_core/common/command.c ****             return false;
 413:../../tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
 414:../../tmk_core/common/command.c ****         case KC_M:
 415:../../tmk_core/common/command.c ****             mousekey_console_help();
 416:../../tmk_core/common/command.c ****             print("M> ");
 417:../../tmk_core/common/command.c ****             command_state = MOUSEKEY;
 418:../../tmk_core/common/command.c ****             return true;
 419:../../tmk_core/common/command.c **** #endif
 420:../../tmk_core/common/command.c ****         default:
 421:../../tmk_core/common/command.c ****             print("?");
 422:../../tmk_core/common/command.c ****             return false;
 423:../../tmk_core/common/command.c ****     }
 424:../../tmk_core/common/command.c ****     print("C> ");
 425:../../tmk_core/common/command.c ****     return true;
 426:../../tmk_core/common/command.c **** }
 427:../../tmk_core/common/command.c **** 
 428:../../tmk_core/common/command.c **** 
 429:../../tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
 430:../../tmk_core/common/command.c **** /***********************************************************
 431:../../tmk_core/common/command.c ****  * Mousekey console
 432:../../tmk_core/common/command.c ****  ***********************************************************/
 433:../../tmk_core/common/command.c **** static uint8_t mousekey_param = 0;
 434:../../tmk_core/common/command.c **** 
 435:../../tmk_core/common/command.c **** static void mousekey_param_print(void)
 436:../../tmk_core/common/command.c **** {
 437:../../tmk_core/common/command.c ****     print("\n\t- Values -\n");
 438:../../tmk_core/common/command.c ****     print("1: delay(*10ms): "); pdec(mk_delay); print("\n");
 439:../../tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 440:../../tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 441:../../tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 442:../../tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 443:../../tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 444:../../tmk_core/common/command.c **** }
 445:../../tmk_core/common/command.c **** 
 446:../../tmk_core/common/command.c **** //#define PRINT_SET_VAL(v)  print(#v " = "); print_dec(v); print("\n");
 447:../../tmk_core/common/command.c **** #define PRINT_SET_VAL(v)  xprintf(#v " = %d\n", (v))
 448:../../tmk_core/common/command.c **** static void mousekey_param_inc(uint8_t param, uint8_t inc)
 449:../../tmk_core/common/command.c **** {
 450:../../tmk_core/common/command.c ****     switch (param) {
 451:../../tmk_core/common/command.c ****         case 1:
 452:../../tmk_core/common/command.c ****             if (mk_delay + inc < UINT8_MAX)
 453:../../tmk_core/common/command.c ****                 mk_delay += inc;
 454:../../tmk_core/common/command.c ****             else
 455:../../tmk_core/common/command.c ****                 mk_delay = UINT8_MAX;
 456:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_delay);
 457:../../tmk_core/common/command.c ****             break;
 458:../../tmk_core/common/command.c ****         case 2:
 459:../../tmk_core/common/command.c ****             if (mk_interval + inc < UINT8_MAX)
 460:../../tmk_core/common/command.c ****                 mk_interval += inc;
 461:../../tmk_core/common/command.c ****             else
 462:../../tmk_core/common/command.c ****                 mk_interval = UINT8_MAX;
 463:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_interval);
 464:../../tmk_core/common/command.c ****             break;
 465:../../tmk_core/common/command.c ****         case 3:
 466:../../tmk_core/common/command.c ****             if (mk_max_speed + inc < UINT8_MAX)
 467:../../tmk_core/common/command.c ****                 mk_max_speed += inc;
 468:../../tmk_core/common/command.c ****             else
 469:../../tmk_core/common/command.c ****                 mk_max_speed = UINT8_MAX;
 470:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 471:../../tmk_core/common/command.c ****             break;
 472:../../tmk_core/common/command.c ****         case 4:
 473:../../tmk_core/common/command.c ****             if (mk_time_to_max + inc < UINT8_MAX)
 474:../../tmk_core/common/command.c ****                 mk_time_to_max += inc;
 475:../../tmk_core/common/command.c ****             else
 476:../../tmk_core/common/command.c ****                 mk_time_to_max = UINT8_MAX;
 477:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 478:../../tmk_core/common/command.c ****             break;
 479:../../tmk_core/common/command.c ****         case 5:
 480:../../tmk_core/common/command.c ****             if (mk_wheel_max_speed + inc < UINT8_MAX)
 481:../../tmk_core/common/command.c ****                 mk_wheel_max_speed += inc;
 482:../../tmk_core/common/command.c ****             else
 483:../../tmk_core/common/command.c ****                 mk_wheel_max_speed = UINT8_MAX;
 484:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 485:../../tmk_core/common/command.c ****             break;
 486:../../tmk_core/common/command.c ****         case 6:
 487:../../tmk_core/common/command.c ****             if (mk_wheel_time_to_max + inc < UINT8_MAX)
 488:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max += inc;
 489:../../tmk_core/common/command.c ****             else
 490:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max = UINT8_MAX;
 491:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 492:../../tmk_core/common/command.c ****             break;
 493:../../tmk_core/common/command.c ****     }
 494:../../tmk_core/common/command.c **** }
 495:../../tmk_core/common/command.c **** 
 496:../../tmk_core/common/command.c **** static void mousekey_param_dec(uint8_t param, uint8_t dec)
 497:../../tmk_core/common/command.c **** {
 498:../../tmk_core/common/command.c ****     switch (param) {
 499:../../tmk_core/common/command.c ****         case 1:
 500:../../tmk_core/common/command.c ****             if (mk_delay > dec)
 501:../../tmk_core/common/command.c ****                 mk_delay -= dec;
 502:../../tmk_core/common/command.c ****             else
 503:../../tmk_core/common/command.c ****                 mk_delay = 0;
 504:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_delay);
 505:../../tmk_core/common/command.c ****             break;
 506:../../tmk_core/common/command.c ****         case 2:
 507:../../tmk_core/common/command.c ****             if (mk_interval > dec)
 508:../../tmk_core/common/command.c ****                 mk_interval -= dec;
 509:../../tmk_core/common/command.c ****             else
 510:../../tmk_core/common/command.c ****                 mk_interval = 0;
 511:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_interval);
 512:../../tmk_core/common/command.c ****             break;
 513:../../tmk_core/common/command.c ****         case 3:
 514:../../tmk_core/common/command.c ****             if (mk_max_speed > dec)
 515:../../tmk_core/common/command.c ****                 mk_max_speed -= dec;
 516:../../tmk_core/common/command.c ****             else
 517:../../tmk_core/common/command.c ****                 mk_max_speed = 0;
 518:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 519:../../tmk_core/common/command.c ****             break;
 520:../../tmk_core/common/command.c ****         case 4:
 521:../../tmk_core/common/command.c ****             if (mk_time_to_max > dec)
 522:../../tmk_core/common/command.c ****                 mk_time_to_max -= dec;
 523:../../tmk_core/common/command.c ****             else
 524:../../tmk_core/common/command.c ****                 mk_time_to_max = 0;
 525:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 526:../../tmk_core/common/command.c ****             break;
 527:../../tmk_core/common/command.c ****         case 5:
 528:../../tmk_core/common/command.c ****             if (mk_wheel_max_speed > dec)
 529:../../tmk_core/common/command.c ****                 mk_wheel_max_speed -= dec;
 530:../../tmk_core/common/command.c ****             else
 531:../../tmk_core/common/command.c ****                 mk_wheel_max_speed = 0;
 532:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 533:../../tmk_core/common/command.c ****             break;
 534:../../tmk_core/common/command.c ****         case 6:
 535:../../tmk_core/common/command.c ****             if (mk_wheel_time_to_max > dec)
 536:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max -= dec;
 537:../../tmk_core/common/command.c ****             else
 538:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max = 0;
 539:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 540:../../tmk_core/common/command.c ****             break;
 541:../../tmk_core/common/command.c ****     }
 542:../../tmk_core/common/command.c **** }
 543:../../tmk_core/common/command.c **** 
 544:../../tmk_core/common/command.c **** static void mousekey_console_help(void)
 545:../../tmk_core/common/command.c **** {
  15               		.loc 1 545 1 view -0
  16               		.cfi_startproc
  17               	/* prologue: function */
  18               	/* frame size = 0 */
  19               	/* stack size = 0 */
  20               	.L__stack_usage = 0
 546:../../tmk_core/common/command.c ****     print("\n\t- Mousekey -\n"
  21               		.loc 1 546 5 view .LVU1
  22               	.LBB26:
  23               		.loc 1 546 5 view .LVU2
  24               		.loc 1 546 5 view .LVU3
  25               	.LBE26:
  26 0000 80E0      		ldi r24,lo8(__c.2825)
  27 0002 90E0      		ldi r25,hi8(__c.2825)
  28 0004 0E94 0000 		call xputs
  29               	.LVL0:
 547:../../tmk_core/common/command.c ****           "ESC/q:	quit\n"
 548:../../tmk_core/common/command.c ****           "1:	delay(*10ms)\n"
 549:../../tmk_core/common/command.c ****           "2:	interval(ms)\n"
 550:../../tmk_core/common/command.c ****           "3:	max_speed\n"
 551:../../tmk_core/common/command.c ****           "4:	time_to_max\n"
 552:../../tmk_core/common/command.c ****           "5:	wheel_max_speed\n"
 553:../../tmk_core/common/command.c ****           "6:	wheel_time_to_max\n"
 554:../../tmk_core/common/command.c ****           "\n"
 555:../../tmk_core/common/command.c ****           "p:	print values\n"
 556:../../tmk_core/common/command.c ****           "d:	set defaults\n"
 557:../../tmk_core/common/command.c ****           "up:	+1\n"
 558:../../tmk_core/common/command.c ****           "down:	-1\n"
 559:../../tmk_core/common/command.c ****           "pgup:	+10\n"
 560:../../tmk_core/common/command.c ****           "pgdown:	-10\n"
 561:../../tmk_core/common/command.c ****           "\n"
 562:../../tmk_core/common/command.c ****           "speed = delta * max_speed * (repeat / time_to_max)\n");
 563:../../tmk_core/common/command.c ****     xprintf("where delta: cursor=%d, wheel=%d\n" 
  30               		.loc 1 563 5 view .LVU4
  31               	.LBB27:
  32               		.loc 1 563 5 view .LVU5
  33               		.loc 1 563 5 view .LVU6
  34               	.LBE27:
  35 0008 1F92      		push __zero_reg__
  36               	.LCFI0:
  37               		.cfi_def_cfa_offset 3
  38 000a 81E0      		ldi r24,lo8(1)
  39 000c 8F93      		push r24
  40               	.LCFI1:
  41               		.cfi_def_cfa_offset 4
  42 000e 1F92      		push __zero_reg__
  43               	.LCFI2:
  44               		.cfi_def_cfa_offset 5
  45 0010 85E0      		ldi r24,lo8(5)
  46 0012 8F93      		push r24
  47               	.LCFI3:
  48               		.cfi_def_cfa_offset 6
  49 0014 80E0      		ldi r24,lo8(__c.2827)
  50 0016 90E0      		ldi r25,hi8(__c.2827)
  51 0018 9F93      		push r25
  52               	.LCFI4:
  53               		.cfi_def_cfa_offset 7
  54 001a 8F93      		push r24
  55               	.LCFI5:
  56               		.cfi_def_cfa_offset 8
  57 001c 0E94 0000 		call __xprintf
  58               	.LVL1:
 564:../../tmk_core/common/command.c ****             "See http://en.wikipedia.org/wiki/Mouse_keys\n", MOUSEKEY_MOVE_DELTA,  MOUSEKEY_WHEEL_D
 565:../../tmk_core/common/command.c **** }
  59               		.loc 1 565 1 is_stmt 0 view .LVU7
  60 0020 0F90      		pop __tmp_reg__
  61 0022 0F90      		pop __tmp_reg__
  62 0024 0F90      		pop __tmp_reg__
  63 0026 0F90      		pop __tmp_reg__
  64 0028 0F90      		pop __tmp_reg__
  65 002a 0F90      		pop __tmp_reg__
  66               	.LCFI6:
  67               		.cfi_def_cfa_offset 2
  68               	/* epilogue start */
  69 002c 0895      		ret
  70               		.cfi_endproc
  71               	.LFE20:
  73               		.section	.text.mousekey_param_inc,"ax",@progbits
  75               	mousekey_param_inc:
  76               	.LVL2:
  77               	.LFB18:
 449:../../tmk_core/common/command.c ****     switch (param) {
  78               		.loc 1 449 1 is_stmt 1 view -0
  79               		.cfi_startproc
  80               	/* prologue: function */
  81               	/* frame size = 0 */
  82               	/* stack size = 0 */
  83               	.L__stack_usage = 0
 450:../../tmk_core/common/command.c ****         case 1:
  84               		.loc 1 450 5 view .LVU9
  85 0000 8330      		cpi r24,lo8(3)
  86 0002 01F4      		brne .+2
  87 0004 00C0      		rjmp .L3
  88 0006 00F4      		brsh .L4
  89 0008 8130      		cpi r24,lo8(1)
  90 000a 01F0      		breq .L5
  91 000c 8230      		cpi r24,lo8(2)
  92 000e 01F0      		breq .L6
  93 0010 0895      		ret
  94               	.L4:
  95 0012 8530      		cpi r24,lo8(5)
  96 0014 01F4      		brne .+2
  97 0016 00C0      		rjmp .L8
  98 0018 00F4      		brsh .+2
  99 001a 00C0      		rjmp .L9
 100 001c 8630      		cpi r24,lo8(6)
 101 001e 01F4      		brne .+2
 102 0020 00C0      		rjmp .L10
 103 0022 0895      		ret
 104               	.L5:
 452:../../tmk_core/common/command.c ****                 mk_delay += inc;
 105               		.loc 1 452 13 view .LVU10
 452:../../tmk_core/common/command.c ****                 mk_delay += inc;
 106               		.loc 1 452 26 is_stmt 0 view .LVU11
 107 0024 8091 0000 		lds r24,mk_delay
 108               	.LVL3:
 452:../../tmk_core/common/command.c ****                 mk_delay += inc;
 109               		.loc 1 452 26 view .LVU12
 110 0028 482F      		mov r20,r24
 111 002a 460F      		add r20,r22
 112 002c 5527      		clr r21
 113 002e 551F      		rol r21
 452:../../tmk_core/common/command.c ****                 mk_delay += inc;
 114               		.loc 1 452 16 view .LVU13
 115 0030 4F3F      		cpi r20,-1
 116 0032 5105      		cpc r21,__zero_reg__
 117 0034 04F4      		brge .L11
 453:../../tmk_core/common/command.c ****             else
 118               		.loc 1 453 17 is_stmt 1 view .LVU14
 453:../../tmk_core/common/command.c ****             else
 119               		.loc 1 453 26 is_stmt 0 view .LVU15
 120 0036 680F      		add r22,r24
 121               	.LVL4:
 453:../../tmk_core/common/command.c ****             else
 122               		.loc 1 453 26 view .LVU16
 123 0038 6093 0000 		sts mk_delay,r22
 124               	.L12:
 456:../../tmk_core/common/command.c ****             break;
 125               		.loc 1 456 13 is_stmt 1 view .LVU17
 126               	.LBB28:
 456:../../tmk_core/common/command.c ****             break;
 127               		.loc 1 456 13 view .LVU18
 456:../../tmk_core/common/command.c ****             break;
 128               		.loc 1 456 13 view .LVU19
 129               	.LBE28:
 130 003c 8091 0000 		lds r24,mk_delay
 131 0040 1F92      		push __zero_reg__
 132               	.LCFI7:
 133               		.cfi_def_cfa_offset 3
 134 0042 8F93      		push r24
 135               	.LCFI8:
 136               		.cfi_def_cfa_offset 4
 137 0044 80E0      		ldi r24,lo8(__c.2781)
 138 0046 90E0      		ldi r25,hi8(__c.2781)
 139               	.L23:
 491:../../tmk_core/common/command.c ****             break;
 140               		.loc 1 491 13 is_stmt 0 view .LVU20
 141 0048 9F93      		push r25
 142               	.LCFI9:
 143               		.cfi_def_cfa_offset 5
 144 004a 8F93      		push r24
 145               	.LCFI10:
 146               		.cfi_def_cfa_offset 6
 147 004c 0E94 0000 		call __xprintf
 148               	.LVL5:
 492:../../tmk_core/common/command.c ****     }
 149               		.loc 1 492 13 is_stmt 1 view .LVU21
 150 0050 0F90      		pop __tmp_reg__
 151 0052 0F90      		pop __tmp_reg__
 152 0054 0F90      		pop __tmp_reg__
 153 0056 0F90      		pop __tmp_reg__
 154               	.LCFI11:
 155               		.cfi_def_cfa_offset 2
 156               	/* epilogue start */
 494:../../tmk_core/common/command.c **** 
 157               		.loc 1 494 1 is_stmt 0 view .LVU22
 158 0058 0895      		ret
 159               	.LVL6:
 160               	.L11:
 455:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_delay);
 161               		.loc 1 455 17 is_stmt 1 view .LVU23
 455:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_delay);
 162               		.loc 1 455 26 is_stmt 0 view .LVU24
 163 005a 8FEF      		ldi r24,lo8(-1)
 164 005c 8093 0000 		sts mk_delay,r24
 165 0060 00C0      		rjmp .L12
 166               	.LVL7:
 167               	.L6:
 459:../../tmk_core/common/command.c ****                 mk_interval += inc;
 168               		.loc 1 459 13 is_stmt 1 view .LVU25
 459:../../tmk_core/common/command.c ****                 mk_interval += inc;
 169               		.loc 1 459 29 is_stmt 0 view .LVU26
 170 0062 8091 0000 		lds r24,mk_interval
 171               	.LVL8:
 459:../../tmk_core/common/command.c ****                 mk_interval += inc;
 172               		.loc 1 459 29 view .LVU27
 173 0066 482F      		mov r20,r24
 174 0068 460F      		add r20,r22
 175 006a 5527      		clr r21
 176 006c 551F      		rol r21
 459:../../tmk_core/common/command.c ****                 mk_interval += inc;
 177               		.loc 1 459 16 view .LVU28
 178 006e 4F3F      		cpi r20,-1
 179 0070 5105      		cpc r21,__zero_reg__
 180 0072 04F4      		brge .L13
 460:../../tmk_core/common/command.c ****             else
 181               		.loc 1 460 17 is_stmt 1 view .LVU29
 460:../../tmk_core/common/command.c ****             else
 182               		.loc 1 460 29 is_stmt 0 view .LVU30
 183 0074 680F      		add r22,r24
 184               	.LVL9:
 460:../../tmk_core/common/command.c ****             else
 185               		.loc 1 460 29 view .LVU31
 186 0076 6093 0000 		sts mk_interval,r22
 187               	.L14:
 463:../../tmk_core/common/command.c ****             break;
 188               		.loc 1 463 13 is_stmt 1 view .LVU32
 189               	.LBB29:
 463:../../tmk_core/common/command.c ****             break;
 190               		.loc 1 463 13 view .LVU33
 463:../../tmk_core/common/command.c ****             break;
 191               		.loc 1 463 13 view .LVU34
 192               	.LBE29:
 193 007a 8091 0000 		lds r24,mk_interval
 194 007e 1F92      		push __zero_reg__
 195               	.LCFI12:
 196               		.cfi_remember_state
 197               		.cfi_def_cfa_offset 3
 198 0080 8F93      		push r24
 199               	.LCFI13:
 200               		.cfi_def_cfa_offset 4
 201 0082 80E0      		ldi r24,lo8(__c.2785)
 202 0084 90E0      		ldi r25,hi8(__c.2785)
 203 0086 00C0      		rjmp .L23
 204               	.LVL10:
 205               	.L13:
 206               	.LCFI14:
 207               		.cfi_restore_state
 462:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_interval);
 208               		.loc 1 462 17 view .LVU35
 462:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_interval);
 209               		.loc 1 462 29 is_stmt 0 view .LVU36
 210 0088 8FEF      		ldi r24,lo8(-1)
 211 008a 8093 0000 		sts mk_interval,r24
 212 008e 00C0      		rjmp .L14
 213               	.LVL11:
 214               	.L3:
 466:../../tmk_core/common/command.c ****                 mk_max_speed += inc;
 215               		.loc 1 466 13 is_stmt 1 view .LVU37
 466:../../tmk_core/common/command.c ****                 mk_max_speed += inc;
 216               		.loc 1 466 30 is_stmt 0 view .LVU38
 217 0090 8091 0000 		lds r24,mk_max_speed
 218               	.LVL12:
 466:../../tmk_core/common/command.c ****                 mk_max_speed += inc;
 219               		.loc 1 466 30 view .LVU39
 220 0094 482F      		mov r20,r24
 221 0096 460F      		add r20,r22
 222 0098 5527      		clr r21
 223 009a 551F      		rol r21
 466:../../tmk_core/common/command.c ****                 mk_max_speed += inc;
 224               		.loc 1 466 16 view .LVU40
 225 009c 4F3F      		cpi r20,-1
 226 009e 5105      		cpc r21,__zero_reg__
 227 00a0 04F4      		brge .L15
 467:../../tmk_core/common/command.c ****             else
 228               		.loc 1 467 17 is_stmt 1 view .LVU41
 467:../../tmk_core/common/command.c ****             else
 229               		.loc 1 467 30 is_stmt 0 view .LVU42
 230 00a2 680F      		add r22,r24
 231               	.LVL13:
 467:../../tmk_core/common/command.c ****             else
 232               		.loc 1 467 30 view .LVU43
 233 00a4 6093 0000 		sts mk_max_speed,r22
 234               	.L16:
 470:../../tmk_core/common/command.c ****             break;
 235               		.loc 1 470 13 is_stmt 1 view .LVU44
 236               	.LBB30:
 470:../../tmk_core/common/command.c ****             break;
 237               		.loc 1 470 13 view .LVU45
 470:../../tmk_core/common/command.c ****             break;
 238               		.loc 1 470 13 view .LVU46
 239               	.LBE30:
 240 00a8 8091 0000 		lds r24,mk_max_speed
 241 00ac 1F92      		push __zero_reg__
 242               	.LCFI15:
 243               		.cfi_remember_state
 244               		.cfi_def_cfa_offset 3
 245 00ae 8F93      		push r24
 246               	.LCFI16:
 247               		.cfi_def_cfa_offset 4
 248 00b0 80E0      		ldi r24,lo8(__c.2788)
 249 00b2 90E0      		ldi r25,hi8(__c.2788)
 250 00b4 00C0      		rjmp .L23
 251               	.LVL14:
 252               	.L15:
 253               	.LCFI17:
 254               		.cfi_restore_state
 469:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 255               		.loc 1 469 17 view .LVU47
 469:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 256               		.loc 1 469 30 is_stmt 0 view .LVU48
 257 00b6 8FEF      		ldi r24,lo8(-1)
 258 00b8 8093 0000 		sts mk_max_speed,r24
 259 00bc 00C0      		rjmp .L16
 260               	.LVL15:
 261               	.L9:
 473:../../tmk_core/common/command.c ****                 mk_time_to_max += inc;
 262               		.loc 1 473 13 is_stmt 1 view .LVU49
 473:../../tmk_core/common/command.c ****                 mk_time_to_max += inc;
 263               		.loc 1 473 32 is_stmt 0 view .LVU50
 264 00be 8091 0000 		lds r24,mk_time_to_max
 265               	.LVL16:
 473:../../tmk_core/common/command.c ****                 mk_time_to_max += inc;
 266               		.loc 1 473 32 view .LVU51
 267 00c2 482F      		mov r20,r24
 268 00c4 460F      		add r20,r22
 269 00c6 5527      		clr r21
 270 00c8 551F      		rol r21
 473:../../tmk_core/common/command.c ****                 mk_time_to_max += inc;
 271               		.loc 1 473 16 view .LVU52
 272 00ca 4F3F      		cpi r20,-1
 273 00cc 5105      		cpc r21,__zero_reg__
 274 00ce 04F4      		brge .L17
 474:../../tmk_core/common/command.c ****             else
 275               		.loc 1 474 17 is_stmt 1 view .LVU53
 474:../../tmk_core/common/command.c ****             else
 276               		.loc 1 474 32 is_stmt 0 view .LVU54
 277 00d0 680F      		add r22,r24
 278               	.LVL17:
 474:../../tmk_core/common/command.c ****             else
 279               		.loc 1 474 32 view .LVU55
 280 00d2 6093 0000 		sts mk_time_to_max,r22
 281               	.L18:
 477:../../tmk_core/common/command.c ****             break;
 282               		.loc 1 477 13 is_stmt 1 view .LVU56
 283               	.LBB31:
 477:../../tmk_core/common/command.c ****             break;
 284               		.loc 1 477 13 view .LVU57
 477:../../tmk_core/common/command.c ****             break;
 285               		.loc 1 477 13 view .LVU58
 286               	.LBE31:
 287 00d6 8091 0000 		lds r24,mk_time_to_max
 288 00da 1F92      		push __zero_reg__
 289               	.LCFI18:
 290               		.cfi_remember_state
 291               		.cfi_def_cfa_offset 3
 292 00dc 8F93      		push r24
 293               	.LCFI19:
 294               		.cfi_def_cfa_offset 4
 295 00de 80E0      		ldi r24,lo8(__c.2791)
 296 00e0 90E0      		ldi r25,hi8(__c.2791)
 297 00e2 00C0      		rjmp .L23
 298               	.LVL18:
 299               	.L17:
 300               	.LCFI20:
 301               		.cfi_restore_state
 476:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 302               		.loc 1 476 17 view .LVU59
 476:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 303               		.loc 1 476 32 is_stmt 0 view .LVU60
 304 00e4 8FEF      		ldi r24,lo8(-1)
 305 00e6 8093 0000 		sts mk_time_to_max,r24
 306 00ea 00C0      		rjmp .L18
 307               	.LVL19:
 308               	.L8:
 480:../../tmk_core/common/command.c ****                 mk_wheel_max_speed += inc;
 309               		.loc 1 480 13 is_stmt 1 view .LVU61
 480:../../tmk_core/common/command.c ****                 mk_wheel_max_speed += inc;
 310               		.loc 1 480 36 is_stmt 0 view .LVU62
 311 00ec 8091 0000 		lds r24,mk_wheel_max_speed
 312               	.LVL20:
 480:../../tmk_core/common/command.c ****                 mk_wheel_max_speed += inc;
 313               		.loc 1 480 36 view .LVU63
 314 00f0 482F      		mov r20,r24
 315 00f2 460F      		add r20,r22
 316 00f4 5527      		clr r21
 317 00f6 551F      		rol r21
 480:../../tmk_core/common/command.c ****                 mk_wheel_max_speed += inc;
 318               		.loc 1 480 16 view .LVU64
 319 00f8 4F3F      		cpi r20,-1
 320 00fa 5105      		cpc r21,__zero_reg__
 321 00fc 04F4      		brge .L19
 481:../../tmk_core/common/command.c ****             else
 322               		.loc 1 481 17 is_stmt 1 view .LVU65
 481:../../tmk_core/common/command.c ****             else
 323               		.loc 1 481 36 is_stmt 0 view .LVU66
 324 00fe 680F      		add r22,r24
 325               	.LVL21:
 481:../../tmk_core/common/command.c ****             else
 326               		.loc 1 481 36 view .LVU67
 327 0100 6093 0000 		sts mk_wheel_max_speed,r22
 328               	.L20:
 484:../../tmk_core/common/command.c ****             break;
 329               		.loc 1 484 13 is_stmt 1 view .LVU68
 330               	.LBB32:
 484:../../tmk_core/common/command.c ****             break;
 331               		.loc 1 484 13 view .LVU69
 484:../../tmk_core/common/command.c ****             break;
 332               		.loc 1 484 13 view .LVU70
 333               	.LBE32:
 334 0104 8091 0000 		lds r24,mk_wheel_max_speed
 335 0108 1F92      		push __zero_reg__
 336               	.LCFI21:
 337               		.cfi_remember_state
 338               		.cfi_def_cfa_offset 3
 339 010a 8F93      		push r24
 340               	.LCFI22:
 341               		.cfi_def_cfa_offset 4
 342 010c 80E0      		ldi r24,lo8(__c.2794)
 343 010e 90E0      		ldi r25,hi8(__c.2794)
 344 0110 00C0      		rjmp .L23
 345               	.LVL22:
 346               	.L19:
 347               	.LCFI23:
 348               		.cfi_restore_state
 483:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 349               		.loc 1 483 17 view .LVU71
 483:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 350               		.loc 1 483 36 is_stmt 0 view .LVU72
 351 0112 8FEF      		ldi r24,lo8(-1)
 352 0114 8093 0000 		sts mk_wheel_max_speed,r24
 353 0118 00C0      		rjmp .L20
 354               	.LVL23:
 355               	.L10:
 487:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max += inc;
 356               		.loc 1 487 13 is_stmt 1 view .LVU73
 487:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max += inc;
 357               		.loc 1 487 38 is_stmt 0 view .LVU74
 358 011a 8091 0000 		lds r24,mk_wheel_time_to_max
 359               	.LVL24:
 487:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max += inc;
 360               		.loc 1 487 38 view .LVU75
 361 011e 482F      		mov r20,r24
 362 0120 460F      		add r20,r22
 363 0122 5527      		clr r21
 364 0124 551F      		rol r21
 487:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max += inc;
 365               		.loc 1 487 16 view .LVU76
 366 0126 4F3F      		cpi r20,-1
 367 0128 5105      		cpc r21,__zero_reg__
 368 012a 04F4      		brge .L21
 488:../../tmk_core/common/command.c ****             else
 369               		.loc 1 488 17 is_stmt 1 view .LVU77
 488:../../tmk_core/common/command.c ****             else
 370               		.loc 1 488 38 is_stmt 0 view .LVU78
 371 012c 680F      		add r22,r24
 372               	.LVL25:
 488:../../tmk_core/common/command.c ****             else
 373               		.loc 1 488 38 view .LVU79
 374 012e 6093 0000 		sts mk_wheel_time_to_max,r22
 375               	.L22:
 491:../../tmk_core/common/command.c ****             break;
 376               		.loc 1 491 13 is_stmt 1 view .LVU80
 377               	.LBB33:
 491:../../tmk_core/common/command.c ****             break;
 378               		.loc 1 491 13 view .LVU81
 491:../../tmk_core/common/command.c ****             break;
 379               		.loc 1 491 13 view .LVU82
 380               	.LBE33:
 381 0132 8091 0000 		lds r24,mk_wheel_time_to_max
 382 0136 1F92      		push __zero_reg__
 383               	.LCFI24:
 384               		.cfi_remember_state
 385               		.cfi_def_cfa_offset 3
 386 0138 8F93      		push r24
 387               	.LCFI25:
 388               		.cfi_def_cfa_offset 4
 389 013a 80E0      		ldi r24,lo8(__c.2797)
 390 013c 90E0      		ldi r25,hi8(__c.2797)
 391 013e 00C0      		rjmp .L23
 392               	.LVL26:
 393               	.L21:
 394               	.LCFI26:
 395               		.cfi_restore_state
 490:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 396               		.loc 1 490 17 view .LVU83
 490:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 397               		.loc 1 490 38 is_stmt 0 view .LVU84
 398 0140 8FEF      		ldi r24,lo8(-1)
 399 0142 8093 0000 		sts mk_wheel_time_to_max,r24
 400 0146 00C0      		rjmp .L22
 401               		.cfi_endproc
 402               	.LFE18:
 404               		.section	.text.mousekey_param_dec,"ax",@progbits
 406               	mousekey_param_dec:
 407               	.LVL27:
 408               	.LFB19:
 497:../../tmk_core/common/command.c ****     switch (param) {
 409               		.loc 1 497 1 is_stmt 1 view -0
 410               		.cfi_startproc
 411               	/* prologue: function */
 412               	/* frame size = 0 */
 413               	/* stack size = 0 */
 414               	.L__stack_usage = 0
 498:../../tmk_core/common/command.c ****         case 1:
 415               		.loc 1 498 5 view .LVU86
 416 0000 8330      		cpi r24,lo8(3)
 417 0002 01F0      		breq .L25
 418 0004 00F4      		brsh .L26
 419 0006 8130      		cpi r24,lo8(1)
 420 0008 01F0      		breq .L27
 421 000a 8230      		cpi r24,lo8(2)
 422 000c 01F0      		breq .L28
 423 000e 0895      		ret
 424               	.L26:
 425 0010 8530      		cpi r24,lo8(5)
 426 0012 01F4      		brne .+2
 427 0014 00C0      		rjmp .L30
 428 0016 00F4      		brsh .+2
 429 0018 00C0      		rjmp .L31
 430 001a 8630      		cpi r24,lo8(6)
 431 001c 01F4      		brne .+2
 432 001e 00C0      		rjmp .L32
 433 0020 0895      		ret
 434               	.L27:
 500:../../tmk_core/common/command.c ****                 mk_delay -= dec;
 435               		.loc 1 500 13 view .LVU87
 500:../../tmk_core/common/command.c ****                 mk_delay -= dec;
 436               		.loc 1 500 26 is_stmt 0 view .LVU88
 437 0022 8091 0000 		lds r24,mk_delay
 438               	.LVL28:
 500:../../tmk_core/common/command.c ****                 mk_delay -= dec;
 439               		.loc 1 500 16 view .LVU89
 440 0026 6817      		cp r22,r24
 441 0028 00F4      		brsh .L33
 501:../../tmk_core/common/command.c ****             else
 442               		.loc 1 501 17 is_stmt 1 view .LVU90
 501:../../tmk_core/common/command.c ****             else
 443               		.loc 1 501 26 is_stmt 0 view .LVU91
 444 002a 861B      		sub r24,r22
 445 002c 8093 0000 		sts mk_delay,r24
 446               	.L34:
 504:../../tmk_core/common/command.c ****             break;
 447               		.loc 1 504 13 is_stmt 1 view .LVU92
 448               	.LBB34:
 504:../../tmk_core/common/command.c ****             break;
 449               		.loc 1 504 13 view .LVU93
 504:../../tmk_core/common/command.c ****             break;
 450               		.loc 1 504 13 view .LVU94
 451               	.LBE34:
 452 0030 8091 0000 		lds r24,mk_delay
 453 0034 1F92      		push __zero_reg__
 454               	.LCFI27:
 455               		.cfi_def_cfa_offset 3
 456 0036 8F93      		push r24
 457               	.LCFI28:
 458               		.cfi_def_cfa_offset 4
 459 0038 80E0      		ldi r24,lo8(__c.2804)
 460 003a 90E0      		ldi r25,hi8(__c.2804)
 461               	.L45:
 539:../../tmk_core/common/command.c ****             break;
 462               		.loc 1 539 13 is_stmt 0 view .LVU95
 463 003c 9F93      		push r25
 464               	.LCFI29:
 465               		.cfi_def_cfa_offset 5
 466 003e 8F93      		push r24
 467               	.LCFI30:
 468               		.cfi_def_cfa_offset 6
 469 0040 0E94 0000 		call __xprintf
 470               	.LVL29:
 540:../../tmk_core/common/command.c ****     }
 471               		.loc 1 540 13 is_stmt 1 view .LVU96
 472 0044 0F90      		pop __tmp_reg__
 473 0046 0F90      		pop __tmp_reg__
 474 0048 0F90      		pop __tmp_reg__
 475 004a 0F90      		pop __tmp_reg__
 476               	.LCFI31:
 477               		.cfi_def_cfa_offset 2
 478               	/* epilogue start */
 542:../../tmk_core/common/command.c **** 
 479               		.loc 1 542 1 is_stmt 0 view .LVU97
 480 004c 0895      		ret
 481               	.LVL30:
 482               	.L33:
 503:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_delay);
 483               		.loc 1 503 17 is_stmt 1 view .LVU98
 503:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_delay);
 484               		.loc 1 503 26 is_stmt 0 view .LVU99
 485 004e 1092 0000 		sts mk_delay,__zero_reg__
 486 0052 00C0      		rjmp .L34
 487               	.LVL31:
 488               	.L28:
 507:../../tmk_core/common/command.c ****                 mk_interval -= dec;
 489               		.loc 1 507 13 is_stmt 1 view .LVU100
 507:../../tmk_core/common/command.c ****                 mk_interval -= dec;
 490               		.loc 1 507 29 is_stmt 0 view .LVU101
 491 0054 8091 0000 		lds r24,mk_interval
 492               	.LVL32:
 507:../../tmk_core/common/command.c ****                 mk_interval -= dec;
 493               		.loc 1 507 16 view .LVU102
 494 0058 6817      		cp r22,r24
 495 005a 00F4      		brsh .L35
 508:../../tmk_core/common/command.c ****             else
 496               		.loc 1 508 17 is_stmt 1 view .LVU103
 508:../../tmk_core/common/command.c ****             else
 497               		.loc 1 508 29 is_stmt 0 view .LVU104
 498 005c 861B      		sub r24,r22
 499 005e 8093 0000 		sts mk_interval,r24
 500               	.L36:
 511:../../tmk_core/common/command.c ****             break;
 501               		.loc 1 511 13 is_stmt 1 view .LVU105
 502               	.LBB35:
 511:../../tmk_core/common/command.c ****             break;
 503               		.loc 1 511 13 view .LVU106
 511:../../tmk_core/common/command.c ****             break;
 504               		.loc 1 511 13 view .LVU107
 505               	.LBE35:
 506 0062 8091 0000 		lds r24,mk_interval
 507 0066 1F92      		push __zero_reg__
 508               	.LCFI32:
 509               		.cfi_remember_state
 510               		.cfi_def_cfa_offset 3
 511 0068 8F93      		push r24
 512               	.LCFI33:
 513               		.cfi_def_cfa_offset 4
 514 006a 80E0      		ldi r24,lo8(__c.2808)
 515 006c 90E0      		ldi r25,hi8(__c.2808)
 516 006e 00C0      		rjmp .L45
 517               	.L35:
 518               	.LCFI34:
 519               		.cfi_restore_state
 510:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_interval);
 520               		.loc 1 510 17 view .LVU108
 510:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_interval);
 521               		.loc 1 510 29 is_stmt 0 view .LVU109
 522 0070 1092 0000 		sts mk_interval,__zero_reg__
 523 0074 00C0      		rjmp .L36
 524               	.LVL33:
 525               	.L25:
 514:../../tmk_core/common/command.c ****                 mk_max_speed -= dec;
 526               		.loc 1 514 13 is_stmt 1 view .LVU110
 514:../../tmk_core/common/command.c ****                 mk_max_speed -= dec;
 527               		.loc 1 514 30 is_stmt 0 view .LVU111
 528 0076 8091 0000 		lds r24,mk_max_speed
 529               	.LVL34:
 514:../../tmk_core/common/command.c ****                 mk_max_speed -= dec;
 530               		.loc 1 514 16 view .LVU112
 531 007a 6817      		cp r22,r24
 532 007c 00F4      		brsh .L37
 515:../../tmk_core/common/command.c ****             else
 533               		.loc 1 515 17 is_stmt 1 view .LVU113
 515:../../tmk_core/common/command.c ****             else
 534               		.loc 1 515 30 is_stmt 0 view .LVU114
 535 007e 861B      		sub r24,r22
 536 0080 8093 0000 		sts mk_max_speed,r24
 537               	.L38:
 518:../../tmk_core/common/command.c ****             break;
 538               		.loc 1 518 13 is_stmt 1 view .LVU115
 539               	.LBB36:
 518:../../tmk_core/common/command.c ****             break;
 540               		.loc 1 518 13 view .LVU116
 518:../../tmk_core/common/command.c ****             break;
 541               		.loc 1 518 13 view .LVU117
 542               	.LBE36:
 543 0084 8091 0000 		lds r24,mk_max_speed
 544 0088 1F92      		push __zero_reg__
 545               	.LCFI35:
 546               		.cfi_remember_state
 547               		.cfi_def_cfa_offset 3
 548 008a 8F93      		push r24
 549               	.LCFI36:
 550               		.cfi_def_cfa_offset 4
 551 008c 80E0      		ldi r24,lo8(__c.2811)
 552 008e 90E0      		ldi r25,hi8(__c.2811)
 553 0090 00C0      		rjmp .L45
 554               	.L37:
 555               	.LCFI37:
 556               		.cfi_restore_state
 517:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 557               		.loc 1 517 17 view .LVU118
 517:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 558               		.loc 1 517 30 is_stmt 0 view .LVU119
 559 0092 1092 0000 		sts mk_max_speed,__zero_reg__
 560 0096 00C0      		rjmp .L38
 561               	.LVL35:
 562               	.L31:
 521:../../tmk_core/common/command.c ****                 mk_time_to_max -= dec;
 563               		.loc 1 521 13 is_stmt 1 view .LVU120
 521:../../tmk_core/common/command.c ****                 mk_time_to_max -= dec;
 564               		.loc 1 521 32 is_stmt 0 view .LVU121
 565 0098 8091 0000 		lds r24,mk_time_to_max
 566               	.LVL36:
 521:../../tmk_core/common/command.c ****                 mk_time_to_max -= dec;
 567               		.loc 1 521 16 view .LVU122
 568 009c 6817      		cp r22,r24
 569 009e 00F4      		brsh .L39
 522:../../tmk_core/common/command.c ****             else
 570               		.loc 1 522 17 is_stmt 1 view .LVU123
 522:../../tmk_core/common/command.c ****             else
 571               		.loc 1 522 32 is_stmt 0 view .LVU124
 572 00a0 861B      		sub r24,r22
 573 00a2 8093 0000 		sts mk_time_to_max,r24
 574               	.L40:
 525:../../tmk_core/common/command.c ****             break;
 575               		.loc 1 525 13 is_stmt 1 view .LVU125
 576               	.LBB37:
 525:../../tmk_core/common/command.c ****             break;
 577               		.loc 1 525 13 view .LVU126
 525:../../tmk_core/common/command.c ****             break;
 578               		.loc 1 525 13 view .LVU127
 579               	.LBE37:
 580 00a6 8091 0000 		lds r24,mk_time_to_max
 581 00aa 1F92      		push __zero_reg__
 582               	.LCFI38:
 583               		.cfi_remember_state
 584               		.cfi_def_cfa_offset 3
 585 00ac 8F93      		push r24
 586               	.LCFI39:
 587               		.cfi_def_cfa_offset 4
 588 00ae 80E0      		ldi r24,lo8(__c.2814)
 589 00b0 90E0      		ldi r25,hi8(__c.2814)
 590 00b2 00C0      		rjmp .L45
 591               	.L39:
 592               	.LCFI40:
 593               		.cfi_restore_state
 524:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 594               		.loc 1 524 17 view .LVU128
 524:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 595               		.loc 1 524 32 is_stmt 0 view .LVU129
 596 00b4 1092 0000 		sts mk_time_to_max,__zero_reg__
 597 00b8 00C0      		rjmp .L40
 598               	.LVL37:
 599               	.L30:
 528:../../tmk_core/common/command.c ****                 mk_wheel_max_speed -= dec;
 600               		.loc 1 528 13 is_stmt 1 view .LVU130
 528:../../tmk_core/common/command.c ****                 mk_wheel_max_speed -= dec;
 601               		.loc 1 528 36 is_stmt 0 view .LVU131
 602 00ba 8091 0000 		lds r24,mk_wheel_max_speed
 603               	.LVL38:
 528:../../tmk_core/common/command.c ****                 mk_wheel_max_speed -= dec;
 604               		.loc 1 528 16 view .LVU132
 605 00be 6817      		cp r22,r24
 606 00c0 00F4      		brsh .L41
 529:../../tmk_core/common/command.c ****             else
 607               		.loc 1 529 17 is_stmt 1 view .LVU133
 529:../../tmk_core/common/command.c ****             else
 608               		.loc 1 529 36 is_stmt 0 view .LVU134
 609 00c2 861B      		sub r24,r22
 610 00c4 8093 0000 		sts mk_wheel_max_speed,r24
 611               	.L42:
 532:../../tmk_core/common/command.c ****             break;
 612               		.loc 1 532 13 is_stmt 1 view .LVU135
 613               	.LBB38:
 532:../../tmk_core/common/command.c ****             break;
 614               		.loc 1 532 13 view .LVU136
 532:../../tmk_core/common/command.c ****             break;
 615               		.loc 1 532 13 view .LVU137
 616               	.LBE38:
 617 00c8 8091 0000 		lds r24,mk_wheel_max_speed
 618 00cc 1F92      		push __zero_reg__
 619               	.LCFI41:
 620               		.cfi_remember_state
 621               		.cfi_def_cfa_offset 3
 622 00ce 8F93      		push r24
 623               	.LCFI42:
 624               		.cfi_def_cfa_offset 4
 625 00d0 80E0      		ldi r24,lo8(__c.2817)
 626 00d2 90E0      		ldi r25,hi8(__c.2817)
 627 00d4 00C0      		rjmp .L45
 628               	.L41:
 629               	.LCFI43:
 630               		.cfi_restore_state
 531:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 631               		.loc 1 531 17 view .LVU138
 531:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 632               		.loc 1 531 36 is_stmt 0 view .LVU139
 633 00d6 1092 0000 		sts mk_wheel_max_speed,__zero_reg__
 634 00da 00C0      		rjmp .L42
 635               	.LVL39:
 636               	.L32:
 535:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max -= dec;
 637               		.loc 1 535 13 is_stmt 1 view .LVU140
 535:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max -= dec;
 638               		.loc 1 535 38 is_stmt 0 view .LVU141
 639 00dc 8091 0000 		lds r24,mk_wheel_time_to_max
 640               	.LVL40:
 535:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max -= dec;
 641               		.loc 1 535 16 view .LVU142
 642 00e0 6817      		cp r22,r24
 643 00e2 00F4      		brsh .L43
 536:../../tmk_core/common/command.c ****             else
 644               		.loc 1 536 17 is_stmt 1 view .LVU143
 536:../../tmk_core/common/command.c ****             else
 645               		.loc 1 536 38 is_stmt 0 view .LVU144
 646 00e4 861B      		sub r24,r22
 647 00e6 8093 0000 		sts mk_wheel_time_to_max,r24
 648               	.L44:
 539:../../tmk_core/common/command.c ****             break;
 649               		.loc 1 539 13 is_stmt 1 view .LVU145
 650               	.LBB39:
 539:../../tmk_core/common/command.c ****             break;
 651               		.loc 1 539 13 view .LVU146
 539:../../tmk_core/common/command.c ****             break;
 652               		.loc 1 539 13 view .LVU147
 653               	.LBE39:
 654 00ea 8091 0000 		lds r24,mk_wheel_time_to_max
 655 00ee 1F92      		push __zero_reg__
 656               	.LCFI44:
 657               		.cfi_remember_state
 658               		.cfi_def_cfa_offset 3
 659 00f0 8F93      		push r24
 660               	.LCFI45:
 661               		.cfi_def_cfa_offset 4
 662 00f2 80E0      		ldi r24,lo8(__c.2820)
 663 00f4 90E0      		ldi r25,hi8(__c.2820)
 664 00f6 00C0      		rjmp .L45
 665               	.L43:
 666               	.LCFI46:
 667               		.cfi_restore_state
 538:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 668               		.loc 1 538 17 view .LVU148
 538:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 669               		.loc 1 538 38 is_stmt 0 view .LVU149
 670 00f8 1092 0000 		sts mk_wheel_time_to_max,__zero_reg__
 671 00fc 00C0      		rjmp .L44
 672               		.cfi_endproc
 673               	.LFE19:
 675               		.section	.text.switch_default_layer,"ax",@progbits
 677               	switch_default_layer:
 678               	.LVL41:
 679               	.LFB23:
 566:../../tmk_core/common/command.c **** 
 567:../../tmk_core/common/command.c **** static bool mousekey_console(uint8_t code)
 568:../../tmk_core/common/command.c **** {
 569:../../tmk_core/common/command.c ****     switch (code) {
 570:../../tmk_core/common/command.c ****         case KC_H:
 571:../../tmk_core/common/command.c ****         case KC_SLASH: /* ? */
 572:../../tmk_core/common/command.c ****             mousekey_console_help();
 573:../../tmk_core/common/command.c ****             break;
 574:../../tmk_core/common/command.c ****         case KC_Q:
 575:../../tmk_core/common/command.c ****         case KC_ESC:
 576:../../tmk_core/common/command.c ****             if (mousekey_param) {
 577:../../tmk_core/common/command.c ****                 mousekey_param = 0;
 578:../../tmk_core/common/command.c ****             } else {
 579:../../tmk_core/common/command.c ****                 print("C> ");
 580:../../tmk_core/common/command.c ****                 command_state = CONSOLE;
 581:../../tmk_core/common/command.c ****                 return false;
 582:../../tmk_core/common/command.c ****             }
 583:../../tmk_core/common/command.c ****             break;
 584:../../tmk_core/common/command.c ****         case KC_P:
 585:../../tmk_core/common/command.c ****             mousekey_param_print();
 586:../../tmk_core/common/command.c ****             break;
 587:../../tmk_core/common/command.c ****         case KC_1:
 588:../../tmk_core/common/command.c ****         case KC_2:
 589:../../tmk_core/common/command.c ****         case KC_3:
 590:../../tmk_core/common/command.c ****         case KC_4:
 591:../../tmk_core/common/command.c ****         case KC_5:
 592:../../tmk_core/common/command.c ****         case KC_6:
 593:../../tmk_core/common/command.c ****             mousekey_param = numkey2num(code);
 594:../../tmk_core/common/command.c ****             break;
 595:../../tmk_core/common/command.c ****         case KC_UP:
 596:../../tmk_core/common/command.c ****             mousekey_param_inc(mousekey_param, 1);
 597:../../tmk_core/common/command.c ****             break;
 598:../../tmk_core/common/command.c ****         case KC_DOWN:
 599:../../tmk_core/common/command.c ****             mousekey_param_dec(mousekey_param, 1);
 600:../../tmk_core/common/command.c ****             break;
 601:../../tmk_core/common/command.c ****         case KC_PGUP:
 602:../../tmk_core/common/command.c ****             mousekey_param_inc(mousekey_param, 10);
 603:../../tmk_core/common/command.c ****             break;
 604:../../tmk_core/common/command.c ****         case KC_PGDN:
 605:../../tmk_core/common/command.c ****             mousekey_param_dec(mousekey_param, 10);
 606:../../tmk_core/common/command.c ****             break;
 607:../../tmk_core/common/command.c ****         case KC_D:
 608:../../tmk_core/common/command.c ****             mk_delay = MOUSEKEY_DELAY/10;
 609:../../tmk_core/common/command.c ****             mk_interval = MOUSEKEY_INTERVAL;
 610:../../tmk_core/common/command.c ****             mk_max_speed = MOUSEKEY_MAX_SPEED;
 611:../../tmk_core/common/command.c ****             mk_time_to_max = MOUSEKEY_TIME_TO_MAX;
 612:../../tmk_core/common/command.c ****             mk_wheel_max_speed = MOUSEKEY_WHEEL_MAX_SPEED;
 613:../../tmk_core/common/command.c ****             mk_wheel_time_to_max = MOUSEKEY_WHEEL_TIME_TO_MAX;
 614:../../tmk_core/common/command.c ****             print("set default\n");
 615:../../tmk_core/common/command.c ****             break;
 616:../../tmk_core/common/command.c ****         default:
 617:../../tmk_core/common/command.c ****             print("?");
 618:../../tmk_core/common/command.c ****             return false;
 619:../../tmk_core/common/command.c ****     }
 620:../../tmk_core/common/command.c ****     if (mousekey_param) {
 621:../../tmk_core/common/command.c ****         xprintf("M%d> ", mousekey_param);
 622:../../tmk_core/common/command.c ****     } else {
 623:../../tmk_core/common/command.c ****         print("M>" );
 624:../../tmk_core/common/command.c ****     }
 625:../../tmk_core/common/command.c ****     return true;
 626:../../tmk_core/common/command.c **** }
 627:../../tmk_core/common/command.c **** #endif
 628:../../tmk_core/common/command.c **** 
 629:../../tmk_core/common/command.c **** 
 630:../../tmk_core/common/command.c **** /***********************************************************
 631:../../tmk_core/common/command.c ****  * Utilities
 632:../../tmk_core/common/command.c ****  ***********************************************************/
 633:../../tmk_core/common/command.c **** #if MOUSEKEY_ENABLE
 634:../../tmk_core/common/command.c **** static uint8_t numkey2num(uint8_t code)
 635:../../tmk_core/common/command.c **** {
 636:../../tmk_core/common/command.c ****     switch (code) {
 637:../../tmk_core/common/command.c ****         case KC_1: return 1;
 638:../../tmk_core/common/command.c ****         case KC_2: return 2;
 639:../../tmk_core/common/command.c ****         case KC_3: return 3;
 640:../../tmk_core/common/command.c ****         case KC_4: return 4;
 641:../../tmk_core/common/command.c ****         case KC_5: return 5;
 642:../../tmk_core/common/command.c ****         case KC_6: return 6;
 643:../../tmk_core/common/command.c ****         case KC_7: return 7;
 644:../../tmk_core/common/command.c ****         case KC_8: return 8;
 645:../../tmk_core/common/command.c ****         case KC_9: return 9;
 646:../../tmk_core/common/command.c ****         case KC_0: return 0;
 647:../../tmk_core/common/command.c ****     }
 648:../../tmk_core/common/command.c ****     return 0;
 649:../../tmk_core/common/command.c **** }
 650:../../tmk_core/common/command.c **** #endif
 651:../../tmk_core/common/command.c **** 
 652:../../tmk_core/common/command.c **** static void switch_default_layer(uint8_t layer)
 653:../../tmk_core/common/command.c **** {
 680               		.loc 1 653 1 is_stmt 1 view -0
 681               		.cfi_startproc
 682               		.loc 1 653 1 is_stmt 0 view .LVU151
 683 0000 CF93      		push r28
 684               	.LCFI47:
 685               		.cfi_def_cfa_offset 3
 686               		.cfi_offset 28, -2
 687               	/* prologue: function */
 688               	/* frame size = 0 */
 689               	/* stack size = 1 */
 690               	.L__stack_usage = 1
 691 0002 C82F      		mov r28,r24
 654:../../tmk_core/common/command.c ****     xprintf("L%d\n", layer);
 692               		.loc 1 654 5 is_stmt 1 view .LVU152
 693               	.LBB40:
 694               		.loc 1 654 5 view .LVU153
 695               		.loc 1 654 5 view .LVU154
 696               	.LBE40:
 697 0004 1F92      		push __zero_reg__
 698               	.LCFI48:
 699               		.cfi_def_cfa_offset 4
 700 0006 8F93      		push r24
 701               	.LCFI49:
 702               		.cfi_def_cfa_offset 5
 703 0008 80E0      		ldi r24,lo8(__c.2876)
 704 000a 90E0      		ldi r25,hi8(__c.2876)
 705               	.LVL42:
 706               		.loc 1 654 5 is_stmt 0 view .LVU155
 707 000c 9F93      		push r25
 708               	.LCFI50:
 709               		.cfi_def_cfa_offset 6
 710 000e 8F93      		push r24
 711               	.LCFI51:
 712               		.cfi_def_cfa_offset 7
 713 0010 0E94 0000 		call __xprintf
 714               	.LVL43:
 655:../../tmk_core/common/command.c ****     default_layer_set(1UL<<layer);
 715               		.loc 1 655 5 is_stmt 1 view .LVU156
 716 0014 61E0      		ldi r22,lo8(1)
 717 0016 70E0      		ldi r23,0
 718 0018 80E0      		ldi r24,0
 719 001a 90E0      		ldi r25,0
 720 001c 00C0      		rjmp 2f
 721               		1:
 722 001e 660F      		lsl r22
 723 0020 771F      		rol r23
 724 0022 881F      		rol r24
 725 0024 991F      		rol r25
 726               		2:
 727 0026 CA95      		dec r28
 728 0028 02F4      		brpl 1b
 729 002a 0E94 0000 		call default_layer_set
 730               	.LVL44:
 656:../../tmk_core/common/command.c ****     clear_keyboard();
 731               		.loc 1 656 5 view .LVU157
 732 002e 0F90      		pop __tmp_reg__
 733 0030 0F90      		pop __tmp_reg__
 734 0032 0F90      		pop __tmp_reg__
 735 0034 0F90      		pop __tmp_reg__
 736               	.LCFI52:
 737               		.cfi_def_cfa_offset 3
 738               	/* epilogue start */
 657:../../tmk_core/common/command.c **** }
 739               		.loc 1 657 1 is_stmt 0 view .LVU158
 740 0036 CF91      		pop r28
 741               	.LVL45:
 656:../../tmk_core/common/command.c ****     clear_keyboard();
 742               		.loc 1 656 5 view .LVU159
 743 0038 0C94 0000 		jmp clear_keyboard
 744               	.LVL46:
 745               		.cfi_endproc
 746               	.LFE23:
 748               		.section	.text.command_common,"ax",@progbits
 750               	command_common:
 751               	.LFB14:
 183:../../tmk_core/common/command.c **** #ifdef KEYBOARD_LOCK_ENABLE
 752               		.loc 1 183 1 is_stmt 1 view -0
 753               		.cfi_startproc
 754               	/* prologue: function */
 755               	/* frame size = 0 */
 756               	/* stack size = 0 */
 757               	.L__stack_usage = 0
 190:../../tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 758               		.loc 1 190 5 view .LVU161
 759 0000 8732      		cpi r24,lo8(39)
 760 0002 00F4      		brsh .L48
 761 0004 8E31      		cpi r24,lo8(30)
 762 0006 00F0      		brlo .+2
 763 0008 00C0      		rjmp .L49
 764 000a 8E30      		cpi r24,lo8(14)
 765 000c 01F4      		brne .+2
 766 000e 00C0      		rjmp .L50
 767 0010 00F4      		brsh .L51
 768 0012 8730      		cpi r24,lo8(7)
 769 0014 01F4      		brne .+2
 770 0016 00C0      		rjmp .L52
 771 0018 8B30      		cpi r24,lo8(11)
 772 001a 01F4      		brne .+2
 773 001c 00C0      		rjmp .L53
 774 001e 8630      		cpi r24,lo8(6)
 775 0020 01F4      		brne .+2
 776 0022 00C0      		rjmp .L54
 777               	.L55:
 382:../../tmk_core/common/command.c ****             return false;
 778               		.loc 1 382 13 view .LVU162
 779               	.LBB71:
 382:../../tmk_core/common/command.c ****             return false;
 780               		.loc 1 382 13 view .LVU163
 382:../../tmk_core/common/command.c ****             return false;
 781               		.loc 1 382 13 view .LVU164
 782               	.LBE71:
 783 0024 80E0      		ldi r24,lo8(__c.2711)
 784 0026 90E0      		ldi r25,hi8(__c.2711)
 785 0028 0E94 0000 		call xputs
 383:../../tmk_core/common/command.c ****     }
 786               		.loc 1 383 13 view .LVU165
 383:../../tmk_core/common/command.c ****     }
 787               		.loc 1 383 20 is_stmt 0 view .LVU166
 788 002c 80E0      		ldi r24,0
 789               	/* epilogue start */
 386:../../tmk_core/common/command.c **** 
 790               		.loc 1 386 1 view .LVU167
 791 002e 0895      		ret
 792               	.L51:
 190:../../tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 793               		.loc 1 190 5 view .LVU168
 794 0030 8631      		cpi r24,lo8(22)
 795 0032 01F4      		brne .+2
 796 0034 00C0      		rjmp .L56
 797 0036 00F4      		brsh .L57
 798 0038 8031      		cpi r24,lo8(16)
 799 003a 01F4      		brne .L55
 273:../../tmk_core/common/command.c ****             if (debug_mouse) {
 800               		.loc 1 273 13 is_stmt 1 view .LVU169
 273:../../tmk_core/common/command.c ****             if (debug_mouse) {
 801               		.loc 1 273 28 is_stmt 0 view .LVU170
 802 003c 9091 0000 		lds r25,debug_config
 273:../../tmk_core/common/command.c ****             if (debug_mouse) {
 803               		.loc 1 273 25 view .LVU171
 804 0040 892F      		mov r24,r25
 805 0042 877F      		andi r24,~(1<<3)
 806 0044 93FF      		sbrs r25,3
 807 0046 8860      		ori r24,1<<3
 808 0048 8093 0000 		sts debug_config,r24
 274:../../tmk_core/common/command.c ****                 print("\nmouse: on\n");
 809               		.loc 1 274 13 is_stmt 1 view .LVU172
 274:../../tmk_core/common/command.c ****                 print("\nmouse: on\n");
 810               		.loc 1 274 16 is_stmt 0 view .LVU173
 811 004c 83FF      		sbrs r24,3
 812 004e 00C0      		rjmp .L70
 275:../../tmk_core/common/command.c ****                 debug_enable = true;
 813               		.loc 1 275 17 is_stmt 1 view .LVU174
 814               	.LBB72:
 275:../../tmk_core/common/command.c ****                 debug_enable = true;
 815               		.loc 1 275 17 view .LVU175
 275:../../tmk_core/common/command.c ****                 debug_enable = true;
 816               		.loc 1 275 17 view .LVU176
 817               	.LBE72:
 818 0050 80E0      		ldi r24,lo8(__c.2676)
 819 0052 90E0      		ldi r25,hi8(__c.2676)
 820 0054 00C0      		rjmp .L93
 821               	.L57:
 190:../../tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 822               		.loc 1 190 5 is_stmt 0 view .LVU177
 823 0056 8931      		cpi r24,lo8(25)
 824 0058 01F4      		brne .+2
 825 005a 00C0      		rjmp .L59
 826 005c 8B31      		cpi r24,lo8(27)
 827 005e 01F4      		brne .L55
 255:../../tmk_core/common/command.c ****             if (debug_matrix) {
 828               		.loc 1 255 13 is_stmt 1 view .LVU178
 255:../../tmk_core/common/command.c ****             if (debug_matrix) {
 829               		.loc 1 255 29 is_stmt 0 view .LVU179
 830 0060 9091 0000 		lds r25,debug_config
 255:../../tmk_core/common/command.c ****             if (debug_matrix) {
 831               		.loc 1 255 26 view .LVU180
 832 0064 892F      		mov r24,r25
 833 0066 8D7F      		andi r24,~(1<<1)
 834 0068 91FF      		sbrs r25,1
 835 006a 8260      		ori r24,1<<1
 836 006c 8093 0000 		sts debug_config,r24
 256:../../tmk_core/common/command.c ****                 print("\nmatrix: on\n");
 837               		.loc 1 256 13 is_stmt 1 view .LVU181
 256:../../tmk_core/common/command.c ****                 print("\nmatrix: on\n");
 838               		.loc 1 256 16 is_stmt 0 view .LVU182
 839 0070 81FF      		sbrs r24,1
 840 0072 00C0      		rjmp .L68
 257:../../tmk_core/common/command.c ****                 debug_enable = true;
 841               		.loc 1 257 17 is_stmt 1 view .LVU183
 842               	.LBB73:
 257:../../tmk_core/common/command.c ****                 debug_enable = true;
 843               		.loc 1 257 17 view .LVU184
 257:../../tmk_core/common/command.c ****                 debug_enable = true;
 844               		.loc 1 257 17 view .LVU185
 845               	.LBE73:
 846 0074 80E0      		ldi r24,lo8(__c.2666)
 847 0076 90E0      		ldi r25,hi8(__c.2666)
 848 0078 00C0      		rjmp .L93
 849               	.L48:
 190:../../tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 850               		.loc 1 190 5 is_stmt 0 view .LVU186
 851 007a 8833      		cpi r24,lo8(56)
 852 007c 01F0      		breq .L53
 853 007e 00F4      		brsh .L61
 854 0080 8932      		cpi r24,lo8(41)
 855 0082 01F0      		breq .L62
 856 0084 8533      		cpi r24,lo8(53)
 857 0086 01F0      		breq .L62
 858 0088 8732      		cpi r24,lo8(39)
 859 008a 01F4      		brne .L55
 860               	.L62:
 373:../../tmk_core/common/command.c ****             break;
 861               		.loc 1 373 13 is_stmt 1 view .LVU187
 862 008c 80E0      		ldi r24,0
 863               	.L94:
 379:../../tmk_core/common/command.c ****             break;
 864               		.loc 1 379 13 is_stmt 0 view .LVU188
 865 008e 0E94 0000 		call switch_default_layer
 380:../../tmk_core/common/command.c ****         default:
 866               		.loc 1 380 13 is_stmt 1 view .LVU189
 867 0092 00C0      		rjmp .L90
 868               	.L61:
 190:../../tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 869               		.loc 1 190 5 is_stmt 0 view .LVU190
 870 0094 8334      		cpi r24,lo8(67)
 871 0096 01F0      		breq .L62
 872 0098 00F4      		brsh .L63
 873 009a 8A33      		cpi r24,lo8(58)
 874 009c 00F0      		brlo .L55
 379:../../tmk_core/common/command.c ****             break;
 875               		.loc 1 379 13 is_stmt 1 view .LVU191
 876 009e 8953      		subi r24,lo8(-(-57))
 877 00a0 00C0      		rjmp .L94
 878               	.L63:
 190:../../tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 879               		.loc 1 190 5 is_stmt 0 view .LVU192
 880 00a2 8834      		cpi r24,lo8(72)
 881 00a4 01F0      		breq .+2
 882 00a6 00C0      		rjmp .L55
 237:../../tmk_core/common/command.c ****             print("\n\nbootloader... ");
 883               		.loc 1 237 13 is_stmt 1 view .LVU193
 884 00a8 0E94 0000 		call clear_keyboard
 238:../../tmk_core/common/command.c ****             wait_ms(1000);
 885               		.loc 1 238 13 view .LVU194
 886               	.LBB74:
 238:../../tmk_core/common/command.c ****             wait_ms(1000);
 887               		.loc 1 238 13 view .LVU195
 238:../../tmk_core/common/command.c ****             wait_ms(1000);
 888               		.loc 1 238 13 view .LVU196
 889               	.LBE74:
 890 00ac 80E0      		ldi r24,lo8(__c.2658)
 891 00ae 90E0      		ldi r25,hi8(__c.2658)
 892 00b0 0E94 0000 		call xputs
 239:../../tmk_core/common/command.c ****             bootloader_jump(); // not return
 893               		.loc 1 239 13 view .LVU197
 894               	.LBB75:
 895               	.LBI75:
 896               		.file 2 "/usr/avr/include/util/delay.h"
   1:/usr/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/avr/include/util/delay.h **** 
   6:/usr/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/avr/include/util/delay.h **** 
   9:/usr/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/avr/include/util/delay.h **** 
  12:/usr/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/avr/include/util/delay.h ****      distribution.
  16:/usr/avr/include/util/delay.h **** 
  17:/usr/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/avr/include/util/delay.h **** 
  21:/usr/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/avr/include/util/delay.h **** 
  33:/usr/avr/include/util/delay.h **** /* $Id: delay.h.in 2506 2016-02-08 10:05:45Z joerg_wunsch $ */
  34:/usr/avr/include/util/delay.h **** 
  35:/usr/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/avr/include/util/delay.h **** 
  38:/usr/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/usr/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/usr/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/usr/avr/include/util/delay.h **** #  endif
  42:/usr/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/usr/avr/include/util/delay.h **** 
  44:/usr/avr/include/util/delay.h **** #include <inttypes.h>
  45:/usr/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/usr/avr/include/util/delay.h **** #include <math.h>
  47:/usr/avr/include/util/delay.h **** 
  48:/usr/avr/include/util/delay.h **** /** \file */
  49:/usr/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/usr/avr/include/util/delay.h ****     \code
  51:/usr/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/usr/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/usr/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/usr/avr/include/util/delay.h ****     \endcode
  55:/usr/avr/include/util/delay.h **** 
  56:/usr/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/usr/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/usr/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/usr/avr/include/util/delay.h ****     used.
  60:/usr/avr/include/util/delay.h **** 
  61:/usr/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/usr/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/usr/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/usr/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/usr/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/usr/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/usr/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/usr/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/usr/avr/include/util/delay.h **** 
  70:/usr/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/usr/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/usr/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/usr/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/usr/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/usr/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/usr/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/usr/avr/include/util/delay.h ****     routines linked into the application.
  78:/usr/avr/include/util/delay.h **** 
  79:/usr/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/usr/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/usr/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/usr/avr/include/util/delay.h **** 
  83:/usr/avr/include/util/delay.h **** */
  84:/usr/avr/include/util/delay.h **** 
  85:/usr/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/usr/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/usr/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/usr/avr/include/util/delay.h **** #endif
  89:/usr/avr/include/util/delay.h **** 
  90:/usr/avr/include/util/delay.h **** #ifndef F_CPU
  91:/usr/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/usr/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/usr/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/usr/avr/include/util/delay.h ****     \def F_CPU
  95:/usr/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/usr/avr/include/util/delay.h **** 
  97:/usr/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/usr/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/usr/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/usr/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/usr/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/usr/avr/include/util/delay.h **** 
 103:/usr/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/usr/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/usr/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/usr/avr/include/util/delay.h ****     integer value.
 107:/usr/avr/include/util/delay.h ****  */
 108:/usr/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/usr/avr/include/util/delay.h **** #endif
 110:/usr/avr/include/util/delay.h **** 
 111:/usr/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/usr/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/usr/avr/include/util/delay.h **** #endif
 114:/usr/avr/include/util/delay.h **** 
 115:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/usr/avr/include/util/delay.h **** #  include <math.h>
 119:/usr/avr/include/util/delay.h **** #endif
 120:/usr/avr/include/util/delay.h **** 
 121:/usr/avr/include/util/delay.h **** /**
 122:/usr/avr/include/util/delay.h ****    \ingroup util_delay
 123:/usr/avr/include/util/delay.h **** 
 124:/usr/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/usr/avr/include/util/delay.h **** 
 126:/usr/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/usr/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/usr/avr/include/util/delay.h **** 
 129:/usr/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/usr/avr/include/util/delay.h **** 
 131:/usr/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/usr/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/usr/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/usr/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/usr/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/usr/avr/include/util/delay.h **** 
 137:/usr/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/usr/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/usr/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/usr/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/usr/avr/include/util/delay.h **** 
 142:/usr/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/usr/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/usr/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/usr/avr/include/util/delay.h ****    microseconds of delay.
 146:/usr/avr/include/util/delay.h **** 
 147:/usr/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/usr/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/usr/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/usr/avr/include/util/delay.h ****    respectively.
 151:/usr/avr/include/util/delay.h **** 
 152:/usr/avr/include/util/delay.h ****    \note
 153:/usr/avr/include/util/delay.h **** 
 154:/usr/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/usr/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/usr/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/usr/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/usr/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/usr/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/usr/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/usr/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/usr/avr/include/util/delay.h ****    not available to the compiler then.
 163:/usr/avr/include/util/delay.h **** 
 164:/usr/avr/include/util/delay.h ****  */
 165:/usr/avr/include/util/delay.h **** void
 166:/usr/avr/include/util/delay.h **** _delay_ms(double __ms)
 897               		.loc 2 166 1 view .LVU198
 898               	.LBB76:
 167:/usr/avr/include/util/delay.h **** {
 168:/usr/avr/include/util/delay.h **** 	double __tmp ;
 899               		.loc 2 168 2 view .LVU199
 169:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/usr/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 900               		.loc 2 172 2 view .LVU200
 173:/usr/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 901               		.loc 2 173 2 view .LVU201
 174:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 902               		.loc 2 174 2 view .LVU202
 175:/usr/avr/include/util/delay.h **** 
 176:/usr/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/usr/avr/include/util/delay.h **** 
 179:/usr/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/usr/avr/include/util/delay.h **** 
 182:/usr/avr/include/util/delay.h **** 	#else
 183:/usr/avr/include/util/delay.h **** 		//round up by default
 184:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 903               		.loc 2 184 3 view .LVU203
 185:/usr/avr/include/util/delay.h **** 	#endif
 186:/usr/avr/include/util/delay.h **** 
 187:/usr/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 904               		.loc 2 187 2 view .LVU204
 905 00b4 2FEF      		ldi r18,lo8(3199999)
 906 00b6 83ED      		ldi r24,hi8(3199999)
 907 00b8 90E3      		ldi r25,hlo8(3199999)
 908 00ba 2150      	1:	subi r18,1
 909 00bc 8040      		sbci r24,0
 910 00be 9040      		sbci r25,0
 911 00c0 01F4      		brne 1b
 912 00c2 00C0      		rjmp .
 913 00c4 0000      		nop
 914               	.LBE76:
 915               	.LBE75:
 240:../../tmk_core/common/command.c ****             break;
 916               		.loc 1 240 13 view .LVU205
 917 00c6 0E94 0000 		call bootloader_jump
 918               	.L90:
 241:../../tmk_core/common/command.c ****         case KC_D:
 919               		.loc 1 241 13 view .LVU206
 385:../../tmk_core/common/command.c **** }
 920               		.loc 1 385 12 is_stmt 0 view .LVU207
 921 00ca 81E0      		ldi r24,lo8(1)
 241:../../tmk_core/common/command.c ****         case KC_D:
 922               		.loc 1 241 13 view .LVU208
 923 00cc 0895      		ret
 924               	.L53:
 225:../../tmk_core/common/command.c ****             break;
 925               		.loc 1 225 13 is_stmt 1 view .LVU209
 926               	.LBB77:
 927               	.LBI77:
 116:../../tmk_core/common/command.c **** {
 928               		.loc 1 116 13 view .LVU210
 929               	.LBB78:
 118:../../tmk_core/common/command.c ****           "d:	debug\n"
 930               		.loc 1 118 5 view .LVU211
 931               	.LBE78:
 932               	.LBE77:
 118:../../tmk_core/common/command.c ****           "d:	debug\n"
 933               		.loc 1 118 5 view .LVU212
 118:../../tmk_core/common/command.c ****           "d:	debug\n"
 934               		.loc 1 118 5 view .LVU213
 935               	.LBB80:
 936               	.LBB79:
 937 00ce 80E0      		ldi r24,lo8(__c.2646)
 938 00d0 90E0      		ldi r25,hi8(__c.2646)
 939               	.L91:
 940               	.LBE79:
 941               	.LBE80:
 325:../../tmk_core/common/command.c **** #if defined(__AVR__)
 942               		.loc 1 325 13 is_stmt 0 view .LVU214
 943 00d2 0E94 0000 		call xputs
 333:../../tmk_core/common/command.c ****         case KC_S:
 944               		.loc 1 333 13 is_stmt 1 view .LVU215
 945 00d6 00C0      		rjmp .L90
 946               	.L54:
 228:../../tmk_core/common/command.c ****             debug_keyboard = false;
 947               		.loc 1 228 13 view .LVU216
 229:../../tmk_core/common/command.c ****             debug_mouse    = false;
 948               		.loc 1 229 13 view .LVU217
 230:../../tmk_core/common/command.c ****             debug_enable   = false;
 949               		.loc 1 230 13 view .LVU218
 231:../../tmk_core/common/command.c ****             command_console_help();
 950               		.loc 1 231 13 view .LVU219
 231:../../tmk_core/common/command.c ****             command_console_help();
 951               		.loc 1 231 28 is_stmt 0 view .LVU220
 952 00d8 8091 0000 		lds r24,debug_config
 953 00dc 807F      		andi r24,lo8(-16)
 954 00de 8093 0000 		sts debug_config,r24
 232:../../tmk_core/common/command.c ****             print("C> ");
 955               		.loc 1 232 13 is_stmt 1 view .LVU221
 956               	.LBB81:
 957               	.LBI81:
 392:../../tmk_core/common/command.c **** {
 958               		.loc 1 392 13 view .LVU222
 959               	.LBB82:
 394:../../tmk_core/common/command.c ****           "ESC/q:	quit\n"
 960               		.loc 1 394 5 view .LVU223
 961               	.LBE82:
 962               	.LBE81:
 394:../../tmk_core/common/command.c ****           "ESC/q:	quit\n"
 963               		.loc 1 394 5 view .LVU224
 394:../../tmk_core/common/command.c ****           "ESC/q:	quit\n"
 964               		.loc 1 394 5 view .LVU225
 965               	.LBB84:
 966               	.LBB83:
 967 00e2 80E0      		ldi r24,lo8(__c.2716)
 968 00e4 90E0      		ldi r25,hi8(__c.2716)
 969 00e6 0E94 0000 		call xputs
 970               	.LBE83:
 971               	.LBE84:
 233:../../tmk_core/common/command.c ****             command_state = CONSOLE;
 972               		.loc 1 233 13 view .LVU226
 973               	.LBB85:
 233:../../tmk_core/common/command.c ****             command_state = CONSOLE;
 974               		.loc 1 233 13 view .LVU227
 233:../../tmk_core/common/command.c ****             command_state = CONSOLE;
 975               		.loc 1 233 13 view .LVU228
 976               	.LBE85:
 977 00ea 80E0      		ldi r24,lo8(__c.2655)
 978 00ec 90E0      		ldi r25,hi8(__c.2655)
 979 00ee 0E94 0000 		call xputs
 234:../../tmk_core/common/command.c ****             break;
 980               		.loc 1 234 13 view .LVU229
 234:../../tmk_core/common/command.c ****             break;
 981               		.loc 1 234 27 is_stmt 0 view .LVU230
 982 00f2 81E0      		ldi r24,lo8(1)
 983 00f4 8093 0000 		sts command_state,r24
 235:../../tmk_core/common/command.c ****         case KC_PAUSE:
 984               		.loc 1 235 13 is_stmt 1 view .LVU231
 985 00f8 0895      		ret
 986               	.L52:
 243:../../tmk_core/common/command.c ****                 print("\ndebug: off\n");
 987               		.loc 1 243 13 view .LVU232
 243:../../tmk_core/common/command.c ****                 print("\ndebug: off\n");
 988               		.loc 1 243 17 is_stmt 0 view .LVU233
 989 00fa 8091 0000 		lds r24,debug_config
 243:../../tmk_core/common/command.c ****                 print("\ndebug: off\n");
 990               		.loc 1 243 16 view .LVU234
 991 00fe 80FF      		sbrs r24,0
 992 0100 00C0      		rjmp .L67
 244:../../tmk_core/common/command.c ****                 debug_matrix   = false;
 993               		.loc 1 244 17 is_stmt 1 view .LVU235
 994               	.LBB86:
 244:../../tmk_core/common/command.c ****                 debug_matrix   = false;
 995               		.loc 1 244 17 view .LVU236
 244:../../tmk_core/common/command.c ****                 debug_matrix   = false;
 996               		.loc 1 244 17 view .LVU237
 997               	.LBE86:
 998 0102 80E0      		ldi r24,lo8(__c.2661)
 999 0104 90E0      		ldi r25,hi8(__c.2661)
 1000 0106 0E94 0000 		call xputs
 245:../../tmk_core/common/command.c ****                 debug_keyboard = false;
 1001               		.loc 1 245 17 view .LVU238
 246:../../tmk_core/common/command.c ****                 debug_mouse    = false;
 1002               		.loc 1 246 17 view .LVU239
 247:../../tmk_core/common/command.c ****                 debug_enable   = false;
 1003               		.loc 1 247 17 view .LVU240
 248:../../tmk_core/common/command.c ****             } else {
 1004               		.loc 1 248 17 view .LVU241
 248:../../tmk_core/common/command.c ****             } else {
 1005               		.loc 1 248 32 is_stmt 0 view .LVU242
 1006 010a 8091 0000 		lds r24,debug_config
 1007 010e 807F      		andi r24,lo8(-16)
 1008               	.L92:
 276:../../tmk_core/common/command.c ****             } else {
 1009               		.loc 1 276 30 view .LVU243
 1010 0110 8093 0000 		sts debug_config,r24
 1011 0114 00C0      		rjmp .L90
 1012               	.L67:
 250:../../tmk_core/common/command.c ****                 debug_enable   = true;
 1013               		.loc 1 250 17 is_stmt 1 view .LVU244
 1014               	.LBB87:
 250:../../tmk_core/common/command.c ****                 debug_enable   = true;
 1015               		.loc 1 250 17 view .LVU245
 250:../../tmk_core/common/command.c ****                 debug_enable   = true;
 1016               		.loc 1 250 17 view .LVU246
 1017               	.LBE87:
 1018 0116 80E0      		ldi r24,lo8(__c.2663)
 1019 0118 90E0      		ldi r25,hi8(__c.2663)
 1020               	.L93:
 275:../../tmk_core/common/command.c ****                 debug_enable = true;
 1021               		.loc 1 275 17 is_stmt 0 view .LVU247
 1022 011a 0E94 0000 		call xputs
 276:../../tmk_core/common/command.c ****             } else {
 1023               		.loc 1 276 17 is_stmt 1 view .LVU248
 276:../../tmk_core/common/command.c ****             } else {
 1024               		.loc 1 276 30 is_stmt 0 view .LVU249
 1025 011e 8091 0000 		lds r24,debug_config
 1026 0122 8160      		ori r24,lo8(1<<0)
 1027 0124 00C0      		rjmp .L92
 1028               	.L68:
 260:../../tmk_core/common/command.c ****             }
 1029               		.loc 1 260 17 is_stmt 1 view .LVU250
 1030               	.LBB88:
 260:../../tmk_core/common/command.c ****             }
 1031               		.loc 1 260 17 view .LVU251
 260:../../tmk_core/common/command.c ****             }
 1032               		.loc 1 260 17 view .LVU252
 1033               	.LBE88:
 1034 0126 80E0      		ldi r24,lo8(__c.2668)
 1035 0128 90E0      		ldi r25,hi8(__c.2668)
 1036 012a 00C0      		rjmp .L91
 1037               	.L50:
 264:../../tmk_core/common/command.c ****             if (debug_keyboard) {
 1038               		.loc 1 264 13 view .LVU253
 264:../../tmk_core/common/command.c ****             if (debug_keyboard) {
 1039               		.loc 1 264 31 is_stmt 0 view .LVU254
 1040 012c 9091 0000 		lds r25,debug_config
 264:../../tmk_core/common/command.c ****             if (debug_keyboard) {
 1041               		.loc 1 264 28 view .LVU255
 1042 0130 892F      		mov r24,r25
 1043 0132 8B7F      		andi r24,~(1<<2)
 1044 0134 92FF      		sbrs r25,2
 1045 0136 8460      		ori r24,1<<2
 1046 0138 8093 0000 		sts debug_config,r24
 265:../../tmk_core/common/command.c ****                 print("\nkeyboard: on\n");
 1047               		.loc 1 265 13 is_stmt 1 view .LVU256
 265:../../tmk_core/common/command.c ****                 print("\nkeyboard: on\n");
 1048               		.loc 1 265 16 is_stmt 0 view .LVU257
 1049 013c 82FF      		sbrs r24,2
 1050 013e 00C0      		rjmp .L69
 266:../../tmk_core/common/command.c ****                 debug_enable = true;
 1051               		.loc 1 266 17 is_stmt 1 view .LVU258
 1052               	.LBB89:
 266:../../tmk_core/common/command.c ****                 debug_enable = true;
 1053               		.loc 1 266 17 view .LVU259
 266:../../tmk_core/common/command.c ****                 debug_enable = true;
 1054               		.loc 1 266 17 view .LVU260
 1055               	.LBE89:
 1056 0140 80E0      		ldi r24,lo8(__c.2671)
 1057 0142 90E0      		ldi r25,hi8(__c.2671)
 1058 0144 00C0      		rjmp .L93
 1059               	.L69:
 269:../../tmk_core/common/command.c ****             }
 1060               		.loc 1 269 17 view .LVU261
 1061               	.LBB90:
 269:../../tmk_core/common/command.c ****             }
 1062               		.loc 1 269 17 view .LVU262
 269:../../tmk_core/common/command.c ****             }
 1063               		.loc 1 269 17 view .LVU263
 1064               	.LBE90:
 1065 0146 80E0      		ldi r24,lo8(__c.2673)
 1066 0148 90E0      		ldi r25,hi8(__c.2673)
 1067 014a 00C0      		rjmp .L91
 1068               	.L70:
 278:../../tmk_core/common/command.c ****             }
 1069               		.loc 1 278 17 view .LVU264
 1070               	.LBB91:
 278:../../tmk_core/common/command.c ****             }
 1071               		.loc 1 278 17 view .LVU265
 278:../../tmk_core/common/command.c ****             }
 1072               		.loc 1 278 17 view .LVU266
 1073               	.LBE91:
 1074 014c 80E0      		ldi r24,lo8(__c.2678)
 1075 014e 90E0      		ldi r25,hi8(__c.2678)
 1076 0150 00C0      		rjmp .L91
 1077               	.L59:
 282:../../tmk_core/common/command.c ****             print("DESC: " STR(DESCRIPTION) "\n");
 1078               		.loc 1 282 13 view .LVU267
 1079               	.LBB92:
 282:../../tmk_core/common/command.c ****             print("DESC: " STR(DESCRIPTION) "\n");
 1080               		.loc 1 282 13 view .LVU268
 282:../../tmk_core/common/command.c ****             print("DESC: " STR(DESCRIPTION) "\n");
 1081               		.loc 1 282 13 view .LVU269
 1082               	.LBE92:
 1083 0152 80E0      		ldi r24,lo8(__c.2681)
 1084 0154 90E0      		ldi r25,hi8(__c.2681)
 1085 0156 0E94 0000 		call xputs
 283:../../tmk_core/common/command.c ****             print("VID: " STR(VENDOR_ID) "(" STR(MANUFACTURER) ") "
 1086               		.loc 1 283 13 view .LVU270
 1087               	.LBB93:
 283:../../tmk_core/common/command.c ****             print("VID: " STR(VENDOR_ID) "(" STR(MANUFACTURER) ") "
 1088               		.loc 1 283 13 view .LVU271
 283:../../tmk_core/common/command.c ****             print("VID: " STR(VENDOR_ID) "(" STR(MANUFACTURER) ") "
 1089               		.loc 1 283 13 view .LVU272
 1090               	.LBE93:
 1091 015a 80E0      		ldi r24,lo8(__c.2683)
 1092 015c 90E0      		ldi r25,hi8(__c.2683)
 1093 015e 0E94 0000 		call xputs
 284:../../tmk_core/common/command.c ****                   "PID: " STR(PRODUCT_ID) "(" STR(PRODUCT) ") "
 1094               		.loc 1 284 13 view .LVU273
 1095               	.LBB94:
 284:../../tmk_core/common/command.c ****                   "PID: " STR(PRODUCT_ID) "(" STR(PRODUCT) ") "
 1096               		.loc 1 284 13 view .LVU274
 284:../../tmk_core/common/command.c ****                   "PID: " STR(PRODUCT_ID) "(" STR(PRODUCT) ") "
 1097               		.loc 1 284 13 view .LVU275
 1098               	.LBE94:
 1099 0162 80E0      		ldi r24,lo8(__c.2685)
 1100 0164 90E0      		ldi r25,hi8(__c.2685)
 1101 0166 0E94 0000 		call xputs
 287:../../tmk_core/common/command.c ****             /* build options */
 1102               		.loc 1 287 13 view .LVU276
 1103               	.LBB95:
 287:../../tmk_core/common/command.c ****             /* build options */
 1104               		.loc 1 287 13 view .LVU277
 287:../../tmk_core/common/command.c ****             /* build options */
 1105               		.loc 1 287 13 view .LVU278
 1106               	.LBE95:
 1107 016a 80E0      		ldi r24,lo8(__c.2687)
 1108 016c 90E0      		ldi r25,hi8(__c.2687)
 1109 016e 0E94 0000 		call xputs
 289:../../tmk_core/common/command.c **** #ifdef PROTOCOL_PJRC
 1110               		.loc 1 289 13 view .LVU279
 1111               	.LBB96:
 289:../../tmk_core/common/command.c **** #ifdef PROTOCOL_PJRC
 1112               		.loc 1 289 13 view .LVU280
 289:../../tmk_core/common/command.c **** #ifdef PROTOCOL_PJRC
 1113               		.loc 1 289 13 view .LVU281
 1114               	.LBE96:
 1115 0172 80E0      		ldi r24,lo8(__c.2689)
 1116 0174 90E0      		ldi r25,hi8(__c.2689)
 1117 0176 0E94 0000 		call xputs
 325:../../tmk_core/common/command.c **** #if defined(__AVR__)
 1118               		.loc 1 325 13 view .LVU282
 1119               	.LBB97:
 325:../../tmk_core/common/command.c **** #if defined(__AVR__)
 1120               		.loc 1 325 13 view .LVU283
 325:../../tmk_core/common/command.c **** #if defined(__AVR__)
 1121               		.loc 1 325 13 view .LVU284
 1122               	.LBE97:
 1123 017a 80E0      		ldi r24,lo8(__c.2691)
 1124 017c 90E0      		ldi r25,hi8(__c.2691)
 1125 017e 00C0      		rjmp .L91
 1126               	.L56:
 335:../../tmk_core/common/command.c ****             print_val_hex8(host_keyboard_leds());
 1127               		.loc 1 335 13 view .LVU285
 1128               	.LBB98:
 335:../../tmk_core/common/command.c ****             print_val_hex8(host_keyboard_leds());
 1129               		.loc 1 335 13 view .LVU286
 335:../../tmk_core/common/command.c ****             print_val_hex8(host_keyboard_leds());
 1130               		.loc 1 335 13 view .LVU287
 1131               	.LBE98:
 1132 0180 80E0      		ldi r24,lo8(__c.2694)
 1133 0182 90E0      		ldi r25,hi8(__c.2694)
 1134 0184 0E94 0000 		call xputs
 336:../../tmk_core/common/command.c ****             print_val_hex8(keyboard_protocol);
 1135               		.loc 1 336 13 view .LVU288
 1136 0188 0E94 0000 		call host_keyboard_leds
 1137               	.LBB99:
 336:../../tmk_core/common/command.c ****             print_val_hex8(keyboard_protocol);
 1138               		.loc 1 336 13 view .LVU289
 336:../../tmk_core/common/command.c ****             print_val_hex8(keyboard_protocol);
 1139               		.loc 1 336 13 view .LVU290
 1140               	.LBE99:
 1141 018c 1F92      		push __zero_reg__
 1142               	.LCFI53:
 1143               		.cfi_def_cfa_offset 3
 1144 018e 8F93      		push r24
 1145               	.LCFI54:
 1146               		.cfi_def_cfa_offset 4
 1147 0190 80E0      		ldi r24,lo8(__c.2696)
 1148 0192 90E0      		ldi r25,hi8(__c.2696)
 1149 0194 9F93      		push r25
 1150               	.LCFI55:
 1151               		.cfi_def_cfa_offset 5
 1152 0196 8F93      		push r24
 1153               	.LCFI56:
 1154               		.cfi_def_cfa_offset 6
 1155 0198 0E94 0000 		call __xprintf
 337:../../tmk_core/common/command.c ****             print_val_hex8(keyboard_idle);
 1156               		.loc 1 337 13 view .LVU291
 1157               	.LBB100:
 337:../../tmk_core/common/command.c ****             print_val_hex8(keyboard_idle);
 1158               		.loc 1 337 13 view .LVU292
 337:../../tmk_core/common/command.c ****             print_val_hex8(keyboard_idle);
 1159               		.loc 1 337 13 view .LVU293
 1160               	.LBE100:
 1161 019c 8091 0000 		lds r24,keyboard_protocol
 1162 01a0 1F92      		push __zero_reg__
 1163               	.LCFI57:
 1164               		.cfi_def_cfa_offset 7
 1165 01a2 8F93      		push r24
 1166               	.LCFI58:
 1167               		.cfi_def_cfa_offset 8
 1168 01a4 80E0      		ldi r24,lo8(__c.2698)
 1169 01a6 90E0      		ldi r25,hi8(__c.2698)
 1170 01a8 9F93      		push r25
 1171               	.LCFI59:
 1172               		.cfi_def_cfa_offset 9
 1173 01aa 8F93      		push r24
 1174               	.LCFI60:
 1175               		.cfi_def_cfa_offset 10
 1176 01ac 0E94 0000 		call __xprintf
 338:../../tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 1177               		.loc 1 338 13 view .LVU294
 1178               	.LBB101:
 338:../../tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 1179               		.loc 1 338 13 view .LVU295
 338:../../tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 1180               		.loc 1 338 13 view .LVU296
 1181               	.LBE101:
 1182 01b0 8091 0000 		lds r24,keyboard_idle
 1183 01b4 1F92      		push __zero_reg__
 1184               	.LCFI61:
 1185               		.cfi_def_cfa_offset 11
 1186 01b6 8F93      		push r24
 1187               	.LCFI62:
 1188               		.cfi_def_cfa_offset 12
 1189 01b8 80E0      		ldi r24,lo8(__c.2700)
 1190 01ba 90E0      		ldi r25,hi8(__c.2700)
 1191 01bc 9F93      		push r25
 1192               	.LCFI63:
 1193               		.cfi_def_cfa_offset 13
 1194 01be 8F93      		push r24
 1195               	.LCFI64:
 1196               		.cfi_def_cfa_offset 14
 1197 01c0 0E94 0000 		call __xprintf
 342:../../tmk_core/common/command.c **** 
 1198               		.loc 1 342 13 view .LVU297
 1199 01c4 0E94 0000 		call timer_read32
 1200               	.LBB102:
 342:../../tmk_core/common/command.c **** 
 1201               		.loc 1 342 13 view .LVU298
 342:../../tmk_core/common/command.c **** 
 1202               		.loc 1 342 13 view .LVU299
 1203               	.LBE102:
 1204 01c8 9F93      		push r25
 1205               	.LCFI65:
 1206               		.cfi_def_cfa_offset 15
 1207 01ca 8F93      		push r24
 1208               	.LCFI66:
 1209               		.cfi_def_cfa_offset 16
 1210 01cc 7F93      		push r23
 1211               	.LCFI67:
 1212               		.cfi_def_cfa_offset 17
 1213 01ce 6F93      		push r22
 1214               	.LCFI68:
 1215               		.cfi_def_cfa_offset 18
 1216 01d0 80E0      		ldi r24,lo8(__c.2702)
 1217 01d2 90E0      		ldi r25,hi8(__c.2702)
 1218 01d4 9F93      		push r25
 1219               	.LCFI69:
 1220               		.cfi_def_cfa_offset 19
 1221 01d6 8F93      		push r24
 1222               	.LCFI70:
 1223               		.cfi_def_cfa_offset 20
 1224 01d8 0E94 0000 		call __xprintf
 357:../../tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 1225               		.loc 1 357 13 view .LVU300
 1226 01dc 8DB7      		in r24,__SP_L__
 1227 01de 9EB7      		in r25,__SP_H__
 1228 01e0 4296      		adiw r24,18
 1229 01e2 0FB6      		in __tmp_reg__,__SREG__
 1230 01e4 F894      		cli
 1231 01e6 9EBF      		out __SP_H__,r25
 1232 01e8 0FBE      		out __SREG__,__tmp_reg__
 1233 01ea 8DBF      		out __SP_L__,r24
 1234               	.LCFI71:
 1235               		.cfi_def_cfa_offset 2
 1236 01ec 00C0      		rjmp .L90
 1237               	.L49:
 376:../../tmk_core/common/command.c ****             break;
 1238               		.loc 1 376 13 view .LVU301
 1239 01ee 8D51      		subi r24,lo8(-(-29))
 1240 01f0 00C0      		rjmp .L94
 1241               		.cfi_endproc
 1242               	.LFE14:
 1244               		.section	.text.command_extra,"ax",@progbits
 1245               		.weak	command_extra
 1247               	command_extra:
 1248               	.LVL47:
 1249               	.LFB11:
 100:../../tmk_core/common/command.c ****     (void)code;
 1250               		.loc 1 100 1 view -0
 1251               		.cfi_startproc
 1252               	/* prologue: function */
 1253               	/* frame size = 0 */
 1254               	/* stack size = 0 */
 1255               	.L__stack_usage = 0
 101:../../tmk_core/common/command.c ****     return false;
 1256               		.loc 1 101 5 view .LVU303
 102:../../tmk_core/common/command.c **** }
 1257               		.loc 1 102 5 view .LVU304
 103:../../tmk_core/common/command.c **** 
 1258               		.loc 1 103 1 is_stmt 0 view .LVU305
 1259 0000 80E0      		ldi r24,0
 1260               	.LVL48:
 1261               	/* epilogue start */
 103:../../tmk_core/common/command.c **** 
 1262               		.loc 1 103 1 view .LVU306
 1263 0002 0895      		ret
 1264               		.cfi_endproc
 1265               	.LFE11:
 1267               		.set	command_extra.localalias.0,command_extra
 1268               		.section	.text.command_console_extra,"ax",@progbits
 1269               		.weak	command_console_extra
 1271               	command_console_extra:
 1272               	.LFB25:
 1273               		.cfi_startproc
 1274               	/* prologue: function */
 1275               	/* frame size = 0 */
 1276               	/* stack size = 0 */
 1277               	.L__stack_usage = 0
 1278 0000 0C94 0000 		jmp command_extra.localalias.0
 1279               		.cfi_endproc
 1280               	.LFE25:
 1282               		.section	.text.command_proc,"ax",@progbits
 1283               	.global	command_proc
 1285               	command_proc:
 1286               	.LFB10:
  71:../../tmk_core/common/command.c ****     switch (command_state) {
 1287               		.loc 1 71 1 is_stmt 1 view -0
 1288               		.cfi_startproc
  71:../../tmk_core/common/command.c ****     switch (command_state) {
 1289               		.loc 1 71 1 is_stmt 0 view .LVU308
 1290 0000 0F93      		push r16
 1291               	.LCFI72:
 1292               		.cfi_def_cfa_offset 3
 1293               		.cfi_offset 16, -2
 1294 0002 1F93      		push r17
 1295               	.LCFI73:
 1296               		.cfi_def_cfa_offset 4
 1297               		.cfi_offset 17, -3
 1298 0004 CF93      		push r28
 1299               	.LCFI74:
 1300               		.cfi_def_cfa_offset 5
 1301               		.cfi_offset 28, -4
 1302               	/* prologue: function */
 1303               	/* frame size = 0 */
 1304               	/* stack size = 3 */
 1305               	.L__stack_usage = 3
 1306 0006 C82F      		mov r28,r24
  72:../../tmk_core/common/command.c ****         case ONESHOT:
 1307               		.loc 1 72 5 is_stmt 1 view .LVU309
 1308 0008 8091 0000 		lds r24,command_state
 1309 000c 8130      		cpi r24,lo8(1)
 1310 000e 01F0      		breq .L98
 1311 0010 8823      		tst r24
 1312 0012 01F0      		breq .L99
 1313 0014 8230      		cpi r24,lo8(2)
 1314 0016 01F4      		brne .+2
 1315 0018 00C0      		rjmp .L100
  90:../../tmk_core/common/command.c ****             return false;
 1316               		.loc 1 90 13 view .LVU310
  90:../../tmk_core/common/command.c ****             return false;
 1317               		.loc 1 90 27 is_stmt 0 view .LVU311
 1318 001a 1092 0000 		sts command_state,__zero_reg__
  91:../../tmk_core/common/command.c ****     }
 1319               		.loc 1 91 13 is_stmt 1 view .LVU312
 1320               	.L130:
 1321               	.LBB143:
  75:../../tmk_core/common/command.c ****             return (command_extra(code) || command_common(code));
 1322               		.loc 1 75 24 is_stmt 0 view .LVU313
 1323 001e 80E0      		ldi r24,0
 1324 0020 00C0      		rjmp .L97
 1325               	.L99:
 1326               	.LBE143:
  74:../../tmk_core/common/command.c ****                 return false;
 1327               		.loc 1 74 13 is_stmt 1 view .LVU314
 1328               	.LBB144:
  74:../../tmk_core/common/command.c ****                 return false;
 1329               		.loc 1 74 18 is_stmt 0 view .LVU315
 1330 0022 70E0      		ldi r23,0
 1331 0024 60E0      		ldi r22,0
 1332 0026 8CE0      		ldi r24,lo8(12)
 1333 0028 90E0      		ldi r25,0
 1334 002a 0E94 0000 		call matrix_is_on
  74:../../tmk_core/common/command.c ****                 return false;
 1335               		.loc 1 74 16 view .LVU316
 1336 002e 892B      		or r24,r25
 1337 0030 01F4      		brne .L105
  74:../../tmk_core/common/command.c ****                 return false;
 1338               		.loc 1 74 18 discriminator 1 view .LVU317
 1339 0032 E091 0000 		lds r30,keyboard_report
 1340 0036 F091 0000 		lds r31,keyboard_report+1
  74:../../tmk_core/common/command.c ****                 return false;
 1341               		.loc 1 74 17 discriminator 1 view .LVU318
 1342 003a 8081      		ld r24,Z
 1343 003c 8434      		cpi r24,lo8(68)
 1344 003e 01F4      		brne .L130
 1345               	.L105:
 1346               	.LBE144:
 1347               	.LBB145:
  80:../../tmk_core/common/command.c ****             else
 1348               		.loc 1 80 17 is_stmt 1 view .LVU319
  80:../../tmk_core/common/command.c ****             else
 1349               		.loc 1 80 25 is_stmt 0 view .LVU320
 1350 0040 8C2F      		mov r24,r28
 1351 0042 0E94 0000 		call command_extra
  80:../../tmk_core/common/command.c ****             else
 1352               		.loc 1 80 45 view .LVU321
 1353 0046 8111      		cpse r24,__zero_reg__
 1354 0048 00C0      		rjmp .L132
  80:../../tmk_core/common/command.c ****             else
 1355               		.loc 1 80 48 discriminator 2 view .LVU322
 1356 004a 8C2F      		mov r24,r28
 1357 004c 0E94 0000 		call command_common
 1358               	.L160:
  82:../../tmk_core/common/command.c ****             break;
 1359               		.loc 1 82 53 discriminator 6 view .LVU323
 1360 0050 8170      		andi r24,lo8(1)
 1361               	.L97:
 1362               	/* epilogue start */
 1363               	.LBE145:
  94:../../tmk_core/common/command.c **** 
 1364               		.loc 1 94 1 view .LVU324
 1365 0052 CF91      		pop r28
 1366 0054 1F91      		pop r17
 1367 0056 0F91      		pop r16
 1368 0058 0895      		ret
 1369               	.L98:
  77:../../tmk_core/common/command.c ****         case CONSOLE:
 1370               		.loc 1 77 13 is_stmt 1 view .LVU325
  79:../../tmk_core/common/command.c ****                 return (command_extra(code) || command_common(code));
 1371               		.loc 1 79 13 view .LVU326
 1372               	.LBB166:
  79:../../tmk_core/common/command.c ****                 return (command_extra(code) || command_common(code));
 1373               		.loc 1 79 17 is_stmt 0 view .LVU327
 1374 005a 70E0      		ldi r23,0
 1375 005c 60E0      		ldi r22,0
 1376 005e 8CE0      		ldi r24,lo8(12)
 1377 0060 90E0      		ldi r25,0
 1378 0062 0E94 0000 		call matrix_is_on
 1379 0066 8C01      		movw r16,r24
  79:../../tmk_core/common/command.c ****                 return (command_extra(code) || command_common(code));
 1380               		.loc 1 79 16 view .LVU328
 1381 0068 892B      		or r24,r25
 1382 006a 01F4      		brne .L105
  79:../../tmk_core/common/command.c ****                 return (command_extra(code) || command_common(code));
 1383               		.loc 1 79 17 discriminator 1 view .LVU329
 1384 006c E091 0000 		lds r30,keyboard_report
 1385 0070 F091 0000 		lds r31,keyboard_report+1
 1386 0074 8081      		ld r24,Z
 1387 0076 8434      		cpi r24,lo8(68)
 1388 0078 01F0      		breq .L105
  82:../../tmk_core/common/command.c ****             break;
 1389               		.loc 1 82 17 is_stmt 1 view .LVU330
  82:../../tmk_core/common/command.c ****             break;
 1390               		.loc 1 82 25 is_stmt 0 view .LVU331
 1391 007a 8C2F      		mov r24,r28
 1392 007c 0E94 0000 		call command_console_extra
  82:../../tmk_core/common/command.c ****             break;
 1393               		.loc 1 82 53 view .LVU332
 1394 0080 8111      		cpse r24,__zero_reg__
 1395 0082 00C0      		rjmp .L133
 1396               	.LBB146:
 1397               	.LBI146:
 402:../../tmk_core/common/command.c **** {
 1398               		.loc 1 402 13 is_stmt 1 view .LVU333
 1399               	.LBB147:
 404:../../tmk_core/common/command.c ****         case KC_H:
 1400               		.loc 1 404 5 view .LVU334
 1401 0084 C431      		cpi r28,lo8(20)
 1402 0086 01F0      		breq .L109
 1403 0088 00F4      		brsh .L110
 1404 008a CB30      		cpi r28,lo8(11)
 1405 008c 01F0      		breq .L111
 1406 008e C031      		cpi r28,lo8(16)
 1407 0090 01F0      		breq .L112
 1408               	.L113:
 421:../../tmk_core/common/command.c ****             return false;
 1409               		.loc 1 421 13 view .LVU335
 1410               	.LBE147:
 1411               	.LBE146:
 1412               	.LBE166:
 421:../../tmk_core/common/command.c ****             return false;
 1413               		.loc 1 421 13 view .LVU336
 421:../../tmk_core/common/command.c ****             return false;
 1414               		.loc 1 421 13 view .LVU337
 1415               	.LBB167:
 1416               	.LBB159:
 1417               	.LBB152:
 1418 0092 80E0      		ldi r24,lo8(__c.2730)
 1419 0094 90E0      		ldi r25,hi8(__c.2730)
 1420 0096 0E94 0000 		call xputs
 422:../../tmk_core/common/command.c ****     }
 1421               		.loc 1 422 13 view .LVU338
 1422 009a 00C0      		rjmp .L108
 1423               	.L132:
 1424               	.LBE152:
 1425               	.LBE159:
  80:../../tmk_core/common/command.c ****             else
 1426               		.loc 1 80 45 is_stmt 0 view .LVU339
 1427 009c 81E0      		ldi r24,lo8(1)
 1428 009e 90E0      		ldi r25,0
 1429 00a0 00C0      		rjmp .L160
 1430               	.L110:
 1431               	.LBB160:
 1432               	.LBB153:
 404:../../tmk_core/common/command.c ****         case KC_H:
 1433               		.loc 1 404 5 view .LVU340
 1434 00a2 C932      		cpi r28,lo8(41)
 1435 00a4 01F0      		breq .L109
 1436 00a6 C833      		cpi r28,lo8(56)
 1437 00a8 01F4      		brne .L113
 1438               	.L111:
 407:../../tmk_core/common/command.c ****             break;
 1439               		.loc 1 407 13 is_stmt 1 view .LVU341
 1440               	.LBB148:
 1441               	.LBI148:
 392:../../tmk_core/common/command.c **** {
 1442               		.loc 1 392 13 view .LVU342
 1443               	.LBB149:
 394:../../tmk_core/common/command.c ****           "ESC/q:	quit\n"
 1444               		.loc 1 394 5 view .LVU343
 1445               	.LBE149:
 1446               	.LBE148:
 1447               	.LBE153:
 1448               	.LBE160:
 1449               	.LBE167:
 394:../../tmk_core/common/command.c ****           "ESC/q:	quit\n"
 1450               		.loc 1 394 5 view .LVU344
 394:../../tmk_core/common/command.c ****           "ESC/q:	quit\n"
 1451               		.loc 1 394 5 view .LVU345
 1452               	.LBB168:
 1453               	.LBB161:
 1454               	.LBB154:
 1455               	.LBB151:
 1456               	.LBB150:
 1457 00aa 80E0      		ldi r24,lo8(__c.2716)
 1458 00ac 90E0      		ldi r25,hi8(__c.2716)
 1459 00ae 0E94 0000 		call xputs
 1460               	.LBE150:
 1461               	.LBE151:
 408:../../tmk_core/common/command.c ****         case KC_Q:
 1462               		.loc 1 408 13 view .LVU346
 424:../../tmk_core/common/command.c ****     return true;
 1463               		.loc 1 424 5 view .LVU347
 1464               	.LBE154:
 1465               	.LBE161:
 1466               	.LBE168:
 424:../../tmk_core/common/command.c ****     return true;
 1467               		.loc 1 424 5 view .LVU348
 424:../../tmk_core/common/command.c ****     return true;
 1468               		.loc 1 424 5 view .LVU349
 1469               	.LBB169:
 1470               	.LBB162:
 1471               	.LBB155:
 1472 00b2 80E0      		ldi r24,lo8(__c.2732)
 1473 00b4 90E0      		ldi r25,hi8(__c.2732)
 1474 00b6 0E94 0000 		call xputs
 425:../../tmk_core/common/command.c **** }
 1475               		.loc 1 425 5 view .LVU350
 1476               	.L133:
 1477               	.LBE155:
 1478               	.LBE162:
  82:../../tmk_core/common/command.c ****             break;
 1479               		.loc 1 82 53 is_stmt 0 view .LVU351
 1480 00ba 01E0      		ldi r16,lo8(1)
 1481 00bc 10E0      		ldi r17,0
 1482 00be 00C0      		rjmp .L108
 1483               	.L109:
 1484               	.LBB163:
 1485               	.LBB156:
 411:../../tmk_core/common/command.c ****             return false;
 1486               		.loc 1 411 13 is_stmt 1 view .LVU352
 411:../../tmk_core/common/command.c ****             return false;
 1487               		.loc 1 411 27 is_stmt 0 view .LVU353
 1488 00c0 1092 0000 		sts command_state,__zero_reg__
 412:../../tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
 1489               		.loc 1 412 13 is_stmt 1 view .LVU354
 1490               	.L108:
 1491               	.LBE156:
 1492               	.LBE163:
  82:../../tmk_core/common/command.c ****             break;
 1493               		.loc 1 82 53 is_stmt 0 discriminator 6 view .LVU355
 1494 00c4 802F      		mov r24,r16
 1495 00c6 00C0      		rjmp .L160
 1496               	.L112:
 1497               	.LBB164:
 1498               	.LBB157:
 415:../../tmk_core/common/command.c ****             print("M> ");
 1499               		.loc 1 415 13 is_stmt 1 view .LVU356
 1500 00c8 0E94 0000 		call mousekey_console_help
 416:../../tmk_core/common/command.c ****             command_state = MOUSEKEY;
 1501               		.loc 1 416 13 view .LVU357
 1502               	.LBE157:
 1503               	.LBE164:
 1504               	.LBE169:
 416:../../tmk_core/common/command.c ****             command_state = MOUSEKEY;
 1505               		.loc 1 416 13 view .LVU358
 416:../../tmk_core/common/command.c ****             command_state = MOUSEKEY;
 1506               		.loc 1 416 13 view .LVU359
 1507               	.LBB170:
 1508               	.LBB165:
 1509               	.LBB158:
 1510 00cc 80E0      		ldi r24,lo8(__c.2727)
 1511 00ce 90E0      		ldi r25,hi8(__c.2727)
 1512 00d0 0E94 0000 		call xputs
 417:../../tmk_core/common/command.c ****             return true;
 1513               		.loc 1 417 13 view .LVU360
 417:../../tmk_core/common/command.c ****             return true;
 1514               		.loc 1 417 27 is_stmt 0 view .LVU361
 1515 00d4 82E0      		ldi r24,lo8(2)
 1516 00d6 8093 0000 		sts command_state,r24
 418:../../tmk_core/common/command.c **** #endif
 1517               		.loc 1 418 13 is_stmt 1 view .LVU362
 1518 00da 00C0      		rjmp .L133
 1519               	.L100:
 1520               	.LBE158:
 1521               	.LBE165:
 1522               	.LBE170:
  83:../../tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
 1523               		.loc 1 83 13 view .LVU363
  86:../../tmk_core/common/command.c ****             break;
 1524               		.loc 1 86 13 view .LVU364
 1525               	.LBB171:
 1526               	.LBI171:
 567:../../tmk_core/common/command.c **** {
 1527               		.loc 1 567 13 view .LVU365
 1528               	.LBB172:
 569:../../tmk_core/common/command.c ****         case KC_H:
 1529               		.loc 1 569 5 view .LVU366
 1530 00dc C432      		cpi r28,lo8(36)
 1531 00de 00F4      		brsh .L114
 1532 00e0 CE31      		cpi r28,lo8(30)
 1533 00e2 00F0      		brlo .+2
 1534 00e4 00C0      		rjmp .L115
 1535 00e6 CB30      		cpi r28,lo8(11)
 1536 00e8 01F0      		breq .L116
 1537 00ea 00F4      		brsh .L117
 1538 00ec C730      		cpi r28,lo8(7)
 1539 00ee 01F4      		brne .+2
 1540 00f0 00C0      		rjmp .L118
 1541               	.L119:
 617:../../tmk_core/common/command.c ****             return false;
 1542               		.loc 1 617 13 view .LVU367
 1543               	.LBE172:
 1544               	.LBE171:
 617:../../tmk_core/common/command.c ****             return false;
 1545               		.loc 1 617 13 view .LVU368
 617:../../tmk_core/common/command.c ****             return false;
 1546               		.loc 1 617 13 view .LVU369
 1547               	.LBB240:
 1548               	.LBB214:
 1549 00f2 80E0      		ldi r24,lo8(__c.2854)
 1550 00f4 90E0      		ldi r25,hi8(__c.2854)
 1551               	.L159:
 623:../../tmk_core/common/command.c ****     }
 1552               		.loc 1 623 9 is_stmt 0 view .LVU370
 1553 00f6 0E94 0000 		call xputs
 1554 00fa 00C0      		rjmp .L158
 1555               	.L117:
 569:../../tmk_core/common/command.c ****         case KC_H:
 1556               		.loc 1 569 5 view .LVU371
 1557 00fc C331      		cpi r28,lo8(19)
 1558 00fe 01F0      		breq .L120
 1559 0100 C431      		cpi r28,lo8(20)
 1560 0102 01F4      		brne .L119
 1561               	.L121:
 576:../../tmk_core/common/command.c ****                 mousekey_param = 0;
 1562               		.loc 1 576 13 is_stmt 1 view .LVU372
 576:../../tmk_core/common/command.c ****                 mousekey_param = 0;
 1563               		.loc 1 576 16 is_stmt 0 view .LVU373
 1564 0104 8091 0000 		lds r24,mousekey_param
 1565 0108 8823      		tst r24
 1566 010a 01F0      		breq .L128
 577:../../tmk_core/common/command.c ****             } else {
 1567               		.loc 1 577 17 is_stmt 1 view .LVU374
 577:../../tmk_core/common/command.c ****             } else {
 1568               		.loc 1 577 32 is_stmt 0 view .LVU375
 1569 010c 1092 0000 		sts mousekey_param,__zero_reg__
 583:../../tmk_core/common/command.c ****         case KC_P:
 1570               		.loc 1 583 13 is_stmt 1 view .LVU376
 1571 0110 00C0      		rjmp .L127
 1572               	.L114:
 569:../../tmk_core/common/command.c ****         case KC_H:
 1573               		.loc 1 569 5 is_stmt 0 view .LVU377
 1574 0112 CB34      		cpi r28,lo8(75)
 1575 0114 01F4      		brne .+2
 1576 0116 00C0      		rjmp .L122
 1577 0118 00F4      		brsh .L123
 1578 011a C932      		cpi r28,lo8(41)
 1579 011c 01F0      		breq .L121
 1580 011e C833      		cpi r28,lo8(56)
 1581 0120 01F4      		brne .L119
 1582               	.L116:
 572:../../tmk_core/common/command.c ****             break;
 1583               		.loc 1 572 13 is_stmt 1 view .LVU378
 1584 0122 0E94 0000 		call mousekey_console_help
 573:../../tmk_core/common/command.c ****         case KC_Q:
 1585               		.loc 1 573 13 view .LVU379
 1586               	.L127:
 620:../../tmk_core/common/command.c ****         xprintf("M%d> ", mousekey_param);
 1587               		.loc 1 620 5 view .LVU380
 620:../../tmk_core/common/command.c ****         xprintf("M%d> ", mousekey_param);
 1588               		.loc 1 620 9 is_stmt 0 view .LVU381
 1589 0126 8091 0000 		lds r24,mousekey_param
 620:../../tmk_core/common/command.c ****         xprintf("M%d> ", mousekey_param);
 1590               		.loc 1 620 8 view .LVU382
 1591 012a 8823      		tst r24
 1592 012c 01F4      		brne .+2
 1593 012e 00C0      		rjmp .L129
 621:../../tmk_core/common/command.c ****     } else {
 1594               		.loc 1 621 9 is_stmt 1 view .LVU383
 1595               	.LBE214:
 1596               	.LBE240:
 621:../../tmk_core/common/command.c ****     } else {
 1597               		.loc 1 621 9 view .LVU384
 621:../../tmk_core/common/command.c ****     } else {
 1598               		.loc 1 621 9 view .LVU385
 1599               	.LBB241:
 1600               	.LBB215:
 1601 0130 1F92      		push __zero_reg__
 1602               	.LCFI75:
 1603               		.cfi_def_cfa_offset 6
 1604 0132 8F93      		push r24
 1605               	.LCFI76:
 1606               		.cfi_def_cfa_offset 7
 1607 0134 80E0      		ldi r24,lo8(__c.2856)
 1608 0136 90E0      		ldi r25,hi8(__c.2856)
 1609 0138 9F93      		push r25
 1610               	.LCFI77:
 1611               		.cfi_def_cfa_offset 8
 1612 013a 8F93      		push r24
 1613               	.LCFI78:
 1614               		.cfi_def_cfa_offset 9
 1615 013c 0E94 0000 		call __xprintf
 1616 0140 0F90      		pop __tmp_reg__
 1617 0142 0F90      		pop __tmp_reg__
 1618 0144 0F90      		pop __tmp_reg__
 1619 0146 0F90      		pop __tmp_reg__
 1620               	.LCFI79:
 1621               		.cfi_def_cfa_offset 5
 1622               	.L158:
 1623               	.LBE215:
 1624               	.LBE241:
  93:../../tmk_core/common/command.c **** }
 1625               		.loc 1 93 12 is_stmt 0 view .LVU386
 1626 0148 81E0      		ldi r24,lo8(1)
 1627 014a 00C0      		rjmp .L97
 1628               	.L123:
 1629               	.LBB242:
 1630               	.LBB216:
 569:../../tmk_core/common/command.c ****         case KC_H:
 1631               		.loc 1 569 5 view .LVU387
 1632 014c C135      		cpi r28,lo8(81)
 1633 014e 01F4      		brne .+2
 1634 0150 00C0      		rjmp .L124
 1635 0152 C235      		cpi r28,lo8(82)
 1636 0154 01F4      		brne .+2
 1637 0156 00C0      		rjmp .L125
 1638 0158 CE34      		cpi r28,lo8(78)
 1639 015a 01F4      		brne .L119
 605:../../tmk_core/common/command.c ****             break;
 1640               		.loc 1 605 13 is_stmt 1 view .LVU388
 1641 015c 6AE0      		ldi r22,lo8(10)
 1642 015e 00C0      		rjmp .L157
 1643               	.L128:
 579:../../tmk_core/common/command.c ****                 command_state = CONSOLE;
 1644               		.loc 1 579 17 view .LVU389
 1645               	.LBE216:
 1646               	.LBE242:
 579:../../tmk_core/common/command.c ****                 command_state = CONSOLE;
 1647               		.loc 1 579 17 view .LVU390
 579:../../tmk_core/common/command.c ****                 command_state = CONSOLE;
 1648               		.loc 1 579 17 view .LVU391
 1649               	.LBB243:
 1650               	.LBB217:
 1651 0160 80E0      		ldi r24,lo8(__c.2837)
 1652 0162 90E0      		ldi r25,hi8(__c.2837)
 1653 0164 0E94 0000 		call xputs
 580:../../tmk_core/common/command.c ****                 return false;
 1654               		.loc 1 580 17 view .LVU392
 580:../../tmk_core/common/command.c ****                 return false;
 1655               		.loc 1 580 31 is_stmt 0 view .LVU393
 1656 0168 81E0      		ldi r24,lo8(1)
 1657 016a 8093 0000 		sts command_state,r24
 581:../../tmk_core/common/command.c ****             }
 1658               		.loc 1 581 17 is_stmt 1 view .LVU394
 1659 016e 00C0      		rjmp .L97
 1660               	.L120:
 585:../../tmk_core/common/command.c ****             break;
 1661               		.loc 1 585 13 view .LVU395
 1662               	.LBB173:
 1663               	.LBI173:
 435:../../tmk_core/common/command.c **** {
 1664               		.loc 1 435 13 view .LVU396
 1665               	.LBB174:
 437:../../tmk_core/common/command.c ****     print("1: delay(*10ms): "); pdec(mk_delay); print("\n");
 1666               		.loc 1 437 5 view .LVU397
 1667               	.LBE174:
 1668               	.LBE173:
 1669               	.LBE217:
 1670               	.LBE243:
 437:../../tmk_core/common/command.c ****     print("1: delay(*10ms): "); pdec(mk_delay); print("\n");
 1671               		.loc 1 437 5 view .LVU398
 437:../../tmk_core/common/command.c ****     print("1: delay(*10ms): "); pdec(mk_delay); print("\n");
 1672               		.loc 1 437 5 view .LVU399
 1673               	.LBB244:
 1674               	.LBB218:
 1675               	.LBB194:
 1676               	.LBB175:
 1677 0170 80E0      		ldi r24,lo8(__c.2738)
 1678 0172 90E0      		ldi r25,hi8(__c.2738)
 1679 0174 0E94 0000 		call xputs
 438:../../tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1680               		.loc 1 438 5 view .LVU400
 1681               	.LBE175:
 1682               	.LBE194:
 1683               	.LBE218:
 1684               	.LBE244:
 438:../../tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1685               		.loc 1 438 5 view .LVU401
 438:../../tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1686               		.loc 1 438 5 view .LVU402
 1687               	.LBB245:
 1688               	.LBB219:
 1689               	.LBB195:
 1690               	.LBB176:
 1691 0178 80E0      		ldi r24,lo8(__c.2740)
 1692 017a 90E0      		ldi r25,hi8(__c.2740)
 1693 017c 0E94 0000 		call xputs
 438:../../tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1694               		.loc 1 438 33 view .LVU403
 1695               	.LBE176:
 1696               	.LBE195:
 1697               	.LBE219:
 1698               	.LBE245:
 438:../../tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1699               		.loc 1 438 33 view .LVU404
 438:../../tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1700               		.loc 1 438 33 view .LVU405
 1701               	.LBB246:
 1702               	.LBB220:
 1703               	.LBB196:
 1704               	.LBB177:
 1705 0180 8091 0000 		lds r24,mk_delay
 1706 0184 1F92      		push __zero_reg__
 1707               	.LCFI80:
 1708               		.cfi_def_cfa_offset 6
 1709 0186 8F93      		push r24
 1710               	.LCFI81:
 1711               		.cfi_def_cfa_offset 7
 1712 0188 80E0      		ldi r24,lo8(__c.2742)
 1713 018a 90E0      		ldi r25,hi8(__c.2742)
 1714 018c 9F93      		push r25
 1715               	.LCFI82:
 1716               		.cfi_def_cfa_offset 8
 1717 018e 8F93      		push r24
 1718               	.LCFI83:
 1719               		.cfi_def_cfa_offset 9
 1720 0190 0E94 0000 		call __xprintf
 438:../../tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1721               		.loc 1 438 49 view .LVU406
 1722               	.LBE177:
 1723               	.LBE196:
 1724               	.LBE220:
 1725               	.LBE246:
 438:../../tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1726               		.loc 1 438 49 view .LVU407
 438:../../tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1727               		.loc 1 438 49 view .LVU408
 1728               	.LBB247:
 1729               	.LBB221:
 1730               	.LBB197:
 1731               	.LBB178:
 1732 0194 80E0      		ldi r24,lo8(__c.2744)
 1733 0196 90E0      		ldi r25,hi8(__c.2744)
 1734 0198 0E94 0000 		call xputs
 439:../../tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 1735               		.loc 1 439 5 view .LVU409
 1736               	.LBE178:
 1737               	.LBE197:
 1738               	.LBE221:
 1739               	.LBE247:
 439:../../tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 1740               		.loc 1 439 5 view .LVU410
 439:../../tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 1741               		.loc 1 439 5 view .LVU411
 1742               	.LBB248:
 1743               	.LBB222:
 1744               	.LBB198:
 1745               	.LBB179:
 1746 019c 80E0      		ldi r24,lo8(__c.2746)
 1747 019e 90E0      		ldi r25,hi8(__c.2746)
 1748 01a0 0E94 0000 		call xputs
 439:../../tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 1749               		.loc 1 439 33 view .LVU412
 1750               	.LBE179:
 1751               	.LBE198:
 1752               	.LBE222:
 1753               	.LBE248:
 439:../../tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 1754               		.loc 1 439 33 view .LVU413
 439:../../tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 1755               		.loc 1 439 33 view .LVU414
 1756               	.LBB249:
 1757               	.LBB223:
 1758               	.LBB199:
 1759               	.LBB180:
 1760 01a4 8091 0000 		lds r24,mk_interval
 1761 01a8 1F92      		push __zero_reg__
 1762               	.LCFI84:
 1763               		.cfi_def_cfa_offset 10
 1764 01aa 8F93      		push r24
 1765               	.LCFI85:
 1766               		.cfi_def_cfa_offset 11
 1767 01ac 80E0      		ldi r24,lo8(__c.2748)
 1768 01ae 90E0      		ldi r25,hi8(__c.2748)
 1769 01b0 9F93      		push r25
 1770               	.LCFI86:
 1771               		.cfi_def_cfa_offset 12
 1772 01b2 8F93      		push r24
 1773               	.LCFI87:
 1774               		.cfi_def_cfa_offset 13
 1775 01b4 0E94 0000 		call __xprintf
 439:../../tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 1776               		.loc 1 439 52 view .LVU415
 1777               	.LBE180:
 1778               	.LBE199:
 1779               	.LBE223:
 1780               	.LBE249:
 439:../../tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 1781               		.loc 1 439 52 view .LVU416
 439:../../tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 1782               		.loc 1 439 52 view .LVU417
 1783               	.LBB250:
 1784               	.LBB224:
 1785               	.LBB200:
 1786               	.LBB181:
 1787 01b8 80E0      		ldi r24,lo8(__c.2750)
 1788 01ba 90E0      		ldi r25,hi8(__c.2750)
 1789 01bc 0E94 0000 		call xputs
 440:../../tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 1790               		.loc 1 440 5 view .LVU418
 1791               	.LBE181:
 1792               	.LBE200:
 1793               	.LBE224:
 1794               	.LBE250:
 440:../../tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 1795               		.loc 1 440 5 view .LVU419
 440:../../tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 1796               		.loc 1 440 5 view .LVU420
 1797               	.LBB251:
 1798               	.LBB225:
 1799               	.LBB201:
 1800               	.LBB182:
 1801 01c0 80E0      		ldi r24,lo8(__c.2752)
 1802 01c2 90E0      		ldi r25,hi8(__c.2752)
 1803 01c4 0E94 0000 		call xputs
 440:../../tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 1804               		.loc 1 440 30 view .LVU421
 1805               	.LBE182:
 1806               	.LBE201:
 1807               	.LBE225:
 1808               	.LBE251:
 440:../../tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 1809               		.loc 1 440 30 view .LVU422
 440:../../tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 1810               		.loc 1 440 30 view .LVU423
 1811               	.LBB252:
 1812               	.LBB226:
 1813               	.LBB202:
 1814               	.LBB183:
 1815 01c8 8091 0000 		lds r24,mk_max_speed
 1816 01cc 1F92      		push __zero_reg__
 1817               	.LCFI88:
 1818               		.cfi_def_cfa_offset 14
 1819 01ce 8F93      		push r24
 1820               	.LCFI89:
 1821               		.cfi_def_cfa_offset 15
 1822 01d0 80E0      		ldi r24,lo8(__c.2754)
 1823 01d2 90E0      		ldi r25,hi8(__c.2754)
 1824 01d4 9F93      		push r25
 1825               	.LCFI90:
 1826               		.cfi_def_cfa_offset 16
 1827 01d6 8F93      		push r24
 1828               	.LCFI91:
 1829               		.cfi_def_cfa_offset 17
 1830 01d8 0E94 0000 		call __xprintf
 440:../../tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 1831               		.loc 1 440 50 view .LVU424
 1832               	.LBE183:
 1833               	.LBE202:
 1834               	.LBE226:
 1835               	.LBE252:
 440:../../tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 1836               		.loc 1 440 50 view .LVU425
 440:../../tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 1837               		.loc 1 440 50 view .LVU426
 1838               	.LBB253:
 1839               	.LBB227:
 1840               	.LBB203:
 1841               	.LBB184:
 1842 01dc 80E0      		ldi r24,lo8(__c.2756)
 1843 01de 90E0      		ldi r25,hi8(__c.2756)
 1844 01e0 0E94 0000 		call xputs
 441:../../tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 1845               		.loc 1 441 5 view .LVU427
 1846               	.LBE184:
 1847               	.LBE203:
 1848               	.LBE227:
 1849               	.LBE253:
 441:../../tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 1850               		.loc 1 441 5 view .LVU428
 441:../../tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 1851               		.loc 1 441 5 view .LVU429
 1852               	.LBB254:
 1853               	.LBB228:
 1854               	.LBB204:
 1855               	.LBB185:
 1856 01e4 80E0      		ldi r24,lo8(__c.2758)
 1857 01e6 90E0      		ldi r25,hi8(__c.2758)
 1858 01e8 0E94 0000 		call xputs
 441:../../tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 1859               		.loc 1 441 32 view .LVU430
 1860               	.LBE185:
 1861               	.LBE204:
 1862               	.LBE228:
 1863               	.LBE254:
 441:../../tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 1864               		.loc 1 441 32 view .LVU431
 441:../../tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 1865               		.loc 1 441 32 view .LVU432
 1866               	.LBB255:
 1867               	.LBB229:
 1868               	.LBB205:
 1869               	.LBB186:
 1870 01ec 8091 0000 		lds r24,mk_time_to_max
 1871 01f0 1F92      		push __zero_reg__
 1872               	.LCFI92:
 1873               		.cfi_def_cfa_offset 18
 1874 01f2 8F93      		push r24
 1875               	.LCFI93:
 1876               		.cfi_def_cfa_offset 19
 1877 01f4 80E0      		ldi r24,lo8(__c.2760)
 1878 01f6 90E0      		ldi r25,hi8(__c.2760)
 1879 01f8 9F93      		push r25
 1880               	.LCFI94:
 1881               		.cfi_def_cfa_offset 20
 1882 01fa 8F93      		push r24
 1883               	.LCFI95:
 1884               		.cfi_def_cfa_offset 21
 1885 01fc 0E94 0000 		call __xprintf
 441:../../tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 1886               		.loc 1 441 54 view .LVU433
 1887               	.LBE186:
 1888               	.LBE205:
 1889               	.LBE229:
 1890               	.LBE255:
 441:../../tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 1891               		.loc 1 441 54 view .LVU434
 441:../../tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 1892               		.loc 1 441 54 view .LVU435
 1893               	.LBB256:
 1894               	.LBB230:
 1895               	.LBB206:
 1896               	.LBB187:
 1897 0200 80E0      		ldi r24,lo8(__c.2762)
 1898 0202 90E0      		ldi r25,hi8(__c.2762)
 1899 0204 0E94 0000 		call xputs
 442:../../tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 1900               		.loc 1 442 5 view .LVU436
 1901               	.LBE187:
 1902               	.LBE206:
 1903               	.LBE230:
 1904               	.LBE256:
 442:../../tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 1905               		.loc 1 442 5 view .LVU437
 442:../../tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 1906               		.loc 1 442 5 view .LVU438
 1907               	.LBB257:
 1908               	.LBB231:
 1909               	.LBB207:
 1910               	.LBB188:
 1911 0208 80E0      		ldi r24,lo8(__c.2764)
 1912 020a 90E0      		ldi r25,hi8(__c.2764)
 1913 020c 0E94 0000 		call xputs
 442:../../tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 1914               		.loc 1 442 36 view .LVU439
 1915               	.LBE188:
 1916               	.LBE207:
 1917               	.LBE231:
 1918               	.LBE257:
 442:../../tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 1919               		.loc 1 442 36 view .LVU440
 442:../../tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 1920               		.loc 1 442 36 view .LVU441
 1921               	.LBB258:
 1922               	.LBB232:
 1923               	.LBB208:
 1924               	.LBB189:
 1925 0210 8091 0000 		lds r24,mk_wheel_max_speed
 1926 0214 1F92      		push __zero_reg__
 1927               	.LCFI96:
 1928               		.cfi_def_cfa_offset 22
 1929 0216 8F93      		push r24
 1930               	.LCFI97:
 1931               		.cfi_def_cfa_offset 23
 1932 0218 80E0      		ldi r24,lo8(__c.2766)
 1933 021a 90E0      		ldi r25,hi8(__c.2766)
 1934 021c 9F93      		push r25
 1935               	.LCFI98:
 1936               		.cfi_def_cfa_offset 24
 1937 021e 8F93      		push r24
 1938               	.LCFI99:
 1939               		.cfi_def_cfa_offset 25
 1940 0220 0E94 0000 		call __xprintf
 442:../../tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 1941               		.loc 1 442 62 view .LVU442
 1942               	.LBE189:
 1943               	.LBE208:
 1944               	.LBE232:
 1945               	.LBE258:
 442:../../tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 1946               		.loc 1 442 62 view .LVU443
 442:../../tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 1947               		.loc 1 442 62 view .LVU444
 1948               	.LBB259:
 1949               	.LBB233:
 1950               	.LBB209:
 1951               	.LBB190:
 1952 0224 80E0      		ldi r24,lo8(__c.2768)
 1953 0226 90E0      		ldi r25,hi8(__c.2768)
 1954 0228 0E94 0000 		call xputs
 443:../../tmk_core/common/command.c **** }
 1955               		.loc 1 443 5 view .LVU445
 1956               	.LBE190:
 1957               	.LBE209:
 1958               	.LBE233:
 1959               	.LBE259:
 443:../../tmk_core/common/command.c **** }
 1960               		.loc 1 443 5 view .LVU446
 443:../../tmk_core/common/command.c **** }
 1961               		.loc 1 443 5 view .LVU447
 1962               	.LBB260:
 1963               	.LBB234:
 1964               	.LBB210:
 1965               	.LBB191:
 1966 022c 80E0      		ldi r24,lo8(__c.2770)
 1967 022e 90E0      		ldi r25,hi8(__c.2770)
 1968 0230 0E94 0000 		call xputs
 443:../../tmk_core/common/command.c **** }
 1969               		.loc 1 443 38 view .LVU448
 1970               	.LBE191:
 1971               	.LBE210:
 1972               	.LBE234:
 1973               	.LBE260:
 443:../../tmk_core/common/command.c **** }
 1974               		.loc 1 443 38 view .LVU449
 443:../../tmk_core/common/command.c **** }
 1975               		.loc 1 443 38 view .LVU450
 1976               	.LBB261:
 1977               	.LBB235:
 1978               	.LBB211:
 1979               	.LBB192:
 1980 0234 8091 0000 		lds r24,mk_wheel_time_to_max
 1981 0238 1F92      		push __zero_reg__
 1982               	.LCFI100:
 1983               		.cfi_def_cfa_offset 26
 1984 023a 8F93      		push r24
 1985               	.LCFI101:
 1986               		.cfi_def_cfa_offset 27
 1987 023c 80E0      		ldi r24,lo8(__c.2772)
 1988 023e 90E0      		ldi r25,hi8(__c.2772)
 1989 0240 9F93      		push r25
 1990               	.LCFI102:
 1991               		.cfi_def_cfa_offset 28
 1992 0242 8F93      		push r24
 1993               	.LCFI103:
 1994               		.cfi_def_cfa_offset 29
 1995 0244 0E94 0000 		call __xprintf
 443:../../tmk_core/common/command.c **** }
 1996               		.loc 1 443 66 view .LVU451
 1997               	.LBE192:
 1998               	.LBE211:
 1999               	.LBE235:
 2000               	.LBE261:
 443:../../tmk_core/common/command.c **** }
 2001               		.loc 1 443 66 view .LVU452
 443:../../tmk_core/common/command.c **** }
 2002               		.loc 1 443 66 view .LVU453
 2003               	.LBB262:
 2004               	.LBB236:
 2005               	.LBB212:
 2006               	.LBB193:
 2007 0248 80E0      		ldi r24,lo8(__c.2774)
 2008 024a 90E0      		ldi r25,hi8(__c.2774)
 2009 024c 0E94 0000 		call xputs
 2010 0250 8DB7      		in r24,__SP_L__
 2011 0252 9EB7      		in r25,__SP_H__
 2012 0254 4896      		adiw r24,24
 2013 0256 0FB6      		in __tmp_reg__,__SREG__
 2014 0258 F894      		cli
 2015 025a 9EBF      		out __SP_H__,r25
 2016 025c 0FBE      		out __SREG__,__tmp_reg__
 2017 025e 8DBF      		out __SP_L__,r24
 2018               	.LCFI104:
 2019               		.cfi_def_cfa_offset 5
 2020 0260 00C0      		rjmp .L127
 2021               	.L115:
 2022               	.LBE193:
 2023               	.LBE212:
 593:../../tmk_core/common/command.c ****             break;
 2024               		.loc 1 593 13 view .LVU454
 2025               	.LBB213:
 2026               	.LBI213:
 634:../../tmk_core/common/command.c **** {
 2027               		.loc 1 634 16 view .LVU455
 2028               	.LBE213:
 2029               	.LBE236:
 2030               	.LBE262:
 636:../../tmk_core/common/command.c ****         case KC_1: return 1;
 2031               		.loc 1 636 5 view .LVU456
 2032               	.LBB263:
 2033               	.LBB237:
 593:../../tmk_core/common/command.c ****             break;
 2034               		.loc 1 593 28 is_stmt 0 view .LVU457
 2035 0262 CE51      		subi r28,lo8(-(-30))
 2036 0264 EC2F      		mov r30,r28
 2037 0266 F0E0      		ldi r31,0
 2038 0268 E050      		subi r30,lo8(-(CSWTCH.57))
 2039 026a F040      		sbci r31,hi8(-(CSWTCH.57))
 2040 026c 8081      		ld r24,Z
 2041 026e 8093 0000 		sts mousekey_param,r24
 594:../../tmk_core/common/command.c ****         case KC_UP:
 2042               		.loc 1 594 13 is_stmt 1 view .LVU458
 2043 0272 00C0      		rjmp .L127
 2044               	.L125:
 596:../../tmk_core/common/command.c ****             break;
 2045               		.loc 1 596 13 view .LVU459
 2046 0274 61E0      		ldi r22,lo8(1)
 2047               	.L156:
 602:../../tmk_core/common/command.c ****             break;
 2048               		.loc 1 602 13 is_stmt 0 view .LVU460
 2049 0276 8091 0000 		lds r24,mousekey_param
 2050 027a 0E94 0000 		call mousekey_param_inc
 603:../../tmk_core/common/command.c ****         case KC_PGDN:
 2051               		.loc 1 603 13 is_stmt 1 view .LVU461
 2052 027e 00C0      		rjmp .L127
 2053               	.L124:
 599:../../tmk_core/common/command.c ****             break;
 2054               		.loc 1 599 13 view .LVU462
 2055 0280 61E0      		ldi r22,lo8(1)
 2056               	.L157:
 605:../../tmk_core/common/command.c ****             break;
 2057               		.loc 1 605 13 is_stmt 0 view .LVU463
 2058 0282 8091 0000 		lds r24,mousekey_param
 2059 0286 0E94 0000 		call mousekey_param_dec
 606:../../tmk_core/common/command.c ****         case KC_D:
 2060               		.loc 1 606 13 is_stmt 1 view .LVU464
 2061 028a 00C0      		rjmp .L127
 2062               	.L122:
 602:../../tmk_core/common/command.c ****             break;
 2063               		.loc 1 602 13 view .LVU465
 2064 028c 6AE0      		ldi r22,lo8(10)
 2065 028e 00C0      		rjmp .L156
 2066               	.L118:
 608:../../tmk_core/common/command.c ****             mk_interval = MOUSEKEY_INTERVAL;
 2067               		.loc 1 608 13 view .LVU466
 608:../../tmk_core/common/command.c ****             mk_interval = MOUSEKEY_INTERVAL;
 2068               		.loc 1 608 22 is_stmt 0 view .LVU467
 2069 0290 8EE1      		ldi r24,lo8(30)
 2070 0292 8093 0000 		sts mk_delay,r24
 609:../../tmk_core/common/command.c ****             mk_max_speed = MOUSEKEY_MAX_SPEED;
 2071               		.loc 1 609 13 is_stmt 1 view .LVU468
 609:../../tmk_core/common/command.c ****             mk_max_speed = MOUSEKEY_MAX_SPEED;
 2072               		.loc 1 609 25 is_stmt 0 view .LVU469
 2073 0296 82E3      		ldi r24,lo8(50)
 2074 0298 8093 0000 		sts mk_interval,r24
 610:../../tmk_core/common/command.c ****             mk_time_to_max = MOUSEKEY_TIME_TO_MAX;
 2075               		.loc 1 610 13 is_stmt 1 view .LVU470
 610:../../tmk_core/common/command.c ****             mk_time_to_max = MOUSEKEY_TIME_TO_MAX;
 2076               		.loc 1 610 26 is_stmt 0 view .LVU471
 2077 029c 8AE0      		ldi r24,lo8(10)
 2078 029e 8093 0000 		sts mk_max_speed,r24
 611:../../tmk_core/common/command.c ****             mk_wheel_max_speed = MOUSEKEY_WHEEL_MAX_SPEED;
 2079               		.loc 1 611 13 is_stmt 1 view .LVU472
 611:../../tmk_core/common/command.c ****             mk_wheel_max_speed = MOUSEKEY_WHEEL_MAX_SPEED;
 2080               		.loc 1 611 28 is_stmt 0 view .LVU473
 2081 02a2 84E1      		ldi r24,lo8(20)
 2082 02a4 8093 0000 		sts mk_time_to_max,r24
 612:../../tmk_core/common/command.c ****             mk_wheel_time_to_max = MOUSEKEY_WHEEL_TIME_TO_MAX;
 2083               		.loc 1 612 13 is_stmt 1 view .LVU474
 612:../../tmk_core/common/command.c ****             mk_wheel_time_to_max = MOUSEKEY_WHEEL_TIME_TO_MAX;
 2084               		.loc 1 612 32 is_stmt 0 view .LVU475
 2085 02a8 88E0      		ldi r24,lo8(8)
 2086 02aa 8093 0000 		sts mk_wheel_max_speed,r24
 613:../../tmk_core/common/command.c ****             print("set default\n");
 2087               		.loc 1 613 13 is_stmt 1 view .LVU476
 613:../../tmk_core/common/command.c ****             print("set default\n");
 2088               		.loc 1 613 34 is_stmt 0 view .LVU477
 2089 02ae 88E2      		ldi r24,lo8(40)
 2090 02b0 8093 0000 		sts mk_wheel_time_to_max,r24
 614:../../tmk_core/common/command.c ****             break;
 2091               		.loc 1 614 13 is_stmt 1 view .LVU478
 2092               	.LBE237:
 2093               	.LBE263:
 614:../../tmk_core/common/command.c ****             break;
 2094               		.loc 1 614 13 view .LVU479
 614:../../tmk_core/common/command.c ****             break;
 2095               		.loc 1 614 13 view .LVU480
 2096               	.LBB264:
 2097               	.LBB238:
 2098 02b4 80E0      		ldi r24,lo8(__c.2851)
 2099 02b6 90E0      		ldi r25,hi8(__c.2851)
 2100 02b8 0E94 0000 		call xputs
 615:../../tmk_core/common/command.c ****         default:
 2101               		.loc 1 615 13 view .LVU481
 2102 02bc 00C0      		rjmp .L127
 2103               	.L129:
 623:../../tmk_core/common/command.c ****     }
 2104               		.loc 1 623 9 view .LVU482
 2105               	.LBE238:
 2106               	.LBE264:
 623:../../tmk_core/common/command.c ****     }
 2107               		.loc 1 623 9 view .LVU483
 623:../../tmk_core/common/command.c ****     }
 2108               		.loc 1 623 9 view .LVU484
 2109               	.LBB265:
 2110               	.LBB239:
 2111 02be 80E0      		ldi r24,lo8(__c.2858)
 2112 02c0 90E0      		ldi r25,hi8(__c.2858)
 2113 02c2 00C0      		rjmp .L159
 2114               	.LBE239:
 2115               	.LBE265:
 2116               		.cfi_endproc
 2117               	.LFE10:
 2119               		.section	.rodata.CSWTCH.57,"a"
 2122               	CSWTCH.57:
 2123 0000 01        		.byte	1
 2124 0001 02        		.byte	2
 2125 0002 03        		.byte	3
 2126 0003 04        		.byte	4
 2127 0004 05        		.byte	5
 2128 0005 06        		.byte	6
 2129 0006 07        		.byte	7
 2130 0007 08        		.byte	8
 2131 0008 09        		.byte	9
 2132 0009 00        		.byte	0
 2133               		.section	.progmem.data.__c.2820,"a"
 2136               	__c.2820:
 2137 0000 6D6B 5F77 		.string	"mk_wheel_time_to_max = %d\n"
 2137      6865 656C 
 2137      5F74 696D 
 2137      655F 746F 
 2137      5F6D 6178 
 2138               		.section	.progmem.data.__c.2817,"a"
 2141               	__c.2817:
 2142 0000 6D6B 5F77 		.string	"mk_wheel_max_speed = %d\n"
 2142      6865 656C 
 2142      5F6D 6178 
 2142      5F73 7065 
 2142      6564 203D 
 2143               		.section	.progmem.data.__c.2814,"a"
 2146               	__c.2814:
 2147 0000 6D6B 5F74 		.string	"mk_time_to_max = %d\n"
 2147      696D 655F 
 2147      746F 5F6D 
 2147      6178 203D 
 2147      2025 640A 
 2148               		.section	.progmem.data.__c.2811,"a"
 2151               	__c.2811:
 2152 0000 6D6B 5F6D 		.string	"mk_max_speed = %d\n"
 2152      6178 5F73 
 2152      7065 6564 
 2152      203D 2025 
 2152      640A 00
 2153               		.section	.progmem.data.__c.2808,"a"
 2156               	__c.2808:
 2157 0000 6D6B 5F69 		.string	"mk_interval = %d\n"
 2157      6E74 6572 
 2157      7661 6C20 
 2157      3D20 2564 
 2157      0A00 
 2158               		.section	.progmem.data.__c.2804,"a"
 2161               	__c.2804:
 2162 0000 6D6B 5F64 		.string	"mk_delay = %d\n"
 2162      656C 6179 
 2162      203D 2025 
 2162      640A 00
 2163               		.section	.progmem.data.__c.2797,"a"
 2166               	__c.2797:
 2167 0000 6D6B 5F77 		.string	"mk_wheel_time_to_max = %d\n"
 2167      6865 656C 
 2167      5F74 696D 
 2167      655F 746F 
 2167      5F6D 6178 
 2168               		.section	.progmem.data.__c.2794,"a"
 2171               	__c.2794:
 2172 0000 6D6B 5F77 		.string	"mk_wheel_max_speed = %d\n"
 2172      6865 656C 
 2172      5F6D 6178 
 2172      5F73 7065 
 2172      6564 203D 
 2173               		.section	.progmem.data.__c.2791,"a"
 2176               	__c.2791:
 2177 0000 6D6B 5F74 		.string	"mk_time_to_max = %d\n"
 2177      696D 655F 
 2177      746F 5F6D 
 2177      6178 203D 
 2177      2025 640A 
 2178               		.section	.progmem.data.__c.2788,"a"
 2181               	__c.2788:
 2182 0000 6D6B 5F6D 		.string	"mk_max_speed = %d\n"
 2182      6178 5F73 
 2182      7065 6564 
 2182      203D 2025 
 2182      640A 00
 2183               		.section	.progmem.data.__c.2785,"a"
 2186               	__c.2785:
 2187 0000 6D6B 5F69 		.string	"mk_interval = %d\n"
 2187      6E74 6572 
 2187      7661 6C20 
 2187      3D20 2564 
 2187      0A00 
 2188               		.section	.progmem.data.__c.2781,"a"
 2191               	__c.2781:
 2192 0000 6D6B 5F64 		.string	"mk_delay = %d\n"
 2192      656C 6179 
 2192      203D 2025 
 2192      640A 00
 2193               		.section	.progmem.data.__c.2774,"a"
 2196               	__c.2774:
 2197 0000 0A00      		.string	"\n"
 2198               		.section	.progmem.data.__c.2772,"a"
 2201               	__c.2772:
 2202 0000 2575 00   		.string	"%u"
 2203               		.section	.progmem.data.__c.2770,"a"
 2206               	__c.2770:
 2207 0000 363A 2077 		.string	"6: wheel_time_to_max: "
 2207      6865 656C 
 2207      5F74 696D 
 2207      655F 746F 
 2207      5F6D 6178 
 2208               		.section	.progmem.data.__c.2768,"a"
 2211               	__c.2768:
 2212 0000 0A00      		.string	"\n"
 2213               		.section	.progmem.data.__c.2766,"a"
 2216               	__c.2766:
 2217 0000 2575 00   		.string	"%u"
 2218               		.section	.progmem.data.__c.2764,"a"
 2221               	__c.2764:
 2222 0000 353A 2077 		.string	"5: wheel_max_speed: "
 2222      6865 656C 
 2222      5F6D 6178 
 2222      5F73 7065 
 2222      6564 3A20 
 2223               		.section	.progmem.data.__c.2762,"a"
 2226               	__c.2762:
 2227 0000 0A00      		.string	"\n"
 2228               		.section	.progmem.data.__c.2760,"a"
 2231               	__c.2760:
 2232 0000 2575 00   		.string	"%u"
 2233               		.section	.progmem.data.__c.2758,"a"
 2236               	__c.2758:
 2237 0000 343A 2074 		.string	"4: time_to_max: "
 2237      696D 655F 
 2237      746F 5F6D 
 2237      6178 3A20 
 2237      00
 2238               		.section	.progmem.data.__c.2756,"a"
 2241               	__c.2756:
 2242 0000 0A00      		.string	"\n"
 2243               		.section	.progmem.data.__c.2754,"a"
 2246               	__c.2754:
 2247 0000 2575 00   		.string	"%u"
 2248               		.section	.progmem.data.__c.2752,"a"
 2251               	__c.2752:
 2252 0000 333A 206D 		.string	"3: max_speed: "
 2252      6178 5F73 
 2252      7065 6564 
 2252      3A20 00
 2253               		.section	.progmem.data.__c.2750,"a"
 2256               	__c.2750:
 2257 0000 0A00      		.string	"\n"
 2258               		.section	.progmem.data.__c.2748,"a"
 2261               	__c.2748:
 2262 0000 2575 00   		.string	"%u"
 2263               		.section	.progmem.data.__c.2746,"a"
 2266               	__c.2746:
 2267 0000 323A 2069 		.string	"2: interval(ms): "
 2267      6E74 6572 
 2267      7661 6C28 
 2267      6D73 293A 
 2267      2000 
 2268               		.section	.progmem.data.__c.2744,"a"
 2271               	__c.2744:
 2272 0000 0A00      		.string	"\n"
 2273               		.section	.progmem.data.__c.2742,"a"
 2276               	__c.2742:
 2277 0000 2575 00   		.string	"%u"
 2278               		.section	.progmem.data.__c.2740,"a"
 2281               	__c.2740:
 2282 0000 313A 2064 		.string	"1: delay(*10ms): "
 2282      656C 6179 
 2282      282A 3130 
 2282      6D73 293A 
 2282      2000 
 2283               		.section	.progmem.data.__c.2738,"a"
 2286               	__c.2738:
 2287 0000 0A09 2D20 		.string	"\n\t- Values -\n"
 2287      5661 6C75 
 2287      6573 202D 
 2287      0A00 
 2288               		.section	.progmem.data.__c.2858,"a"
 2291               	__c.2858:
 2292 0000 4D3E 00   		.string	"M>"
 2293               		.section	.progmem.data.__c.2856,"a"
 2296               	__c.2856:
 2297 0000 4D25 643E 		.string	"M%d> "
 2297      2000 
 2298               		.section	.progmem.data.__c.2854,"a"
 2301               	__c.2854:
 2302 0000 3F00      		.string	"?"
 2303               		.section	.progmem.data.__c.2851,"a"
 2306               	__c.2851:
 2307 0000 7365 7420 		.string	"set default\n"
 2307      6465 6661 
 2307      756C 740A 
 2307      00
 2308               		.section	.progmem.data.__c.2837,"a"
 2311               	__c.2837:
 2312 0000 433E 2000 		.string	"C> "
 2313               		.section	.progmem.data.__c.2827,"a"
 2316               	__c.2827:
 2317 0000 7768 6572 		.string	"where delta: cursor=%d, wheel=%d\nSee http://en.wikipedia.org/wiki/Mouse_keys\n"
 2317      6520 6465 
 2317      6C74 613A 
 2317      2063 7572 
 2317      736F 723D 
 2318               		.section	.progmem.data.__c.2825,"a"
 2321               	__c.2825:
 2322 0000 0A09 2D20 		.string	"\n\t- Mousekey -\nESC/q:\tquit\n1:\tdelay(*10ms)\n2:\tinterval(ms)\n3:\tmax_speed\n4:\tti
 2322      4D6F 7573 
 2322      656B 6579 
 2322      202D 0A45 
 2322      5343 2F71 
 2323               		.section	.progmem.data.__c.2730,"a"
 2326               	__c.2730:
 2327 0000 3F00      		.string	"?"
 2328               		.section	.progmem.data.__c.2727,"a"
 2331               	__c.2727:
 2332 0000 4D3E 2000 		.string	"M> "
 2333               		.section	.progmem.data.__c.2732,"a"
 2336               	__c.2732:
 2337 0000 433E 2000 		.string	"C> "
 2338               		.section	.progmem.data.__c.2876,"a"
 2341               	__c.2876:
 2342 0000 4C25 640A 		.string	"L%d\n"
 2342      00
 2343               		.section	.progmem.data.__c.2716,"a"
 2346               	__c.2716:
 2347 0000 0A09 2D20 		.string	"\n\t- Console -\nESC/q:\tquit\nm:\tmousekey\n"
 2347      436F 6E73 
 2347      6F6C 6520 
 2347      2D0A 4553 
 2347      432F 713A 
 2348               		.section	.progmem.data.__c.2646,"a"
 2351               	__c.2646:
 2352 0000 0A09 2D20 		.string	"\n\t- Magic -\nd:\tdebug\nx:\tdebug matrix\nk:\tdebug keyboard\nm:\tdebug mouse\nv:\tvers
 2352      4D61 6769 
 2352      6320 2D0A 
 2352      643A 0964 
 2352      6562 7567 
 2353               		.section	.progmem.data.__c.2711,"a"
 2356               	__c.2711:
 2357 0000 3F00      		.string	"?"
 2358               		.section	.progmem.data.__c.2702,"a"
 2361               	__c.2702:
 2362 0000 7469 6D65 		.string	"timer_read32(): %04lX\n"
 2362      725F 7265 
 2362      6164 3332 
 2362      2829 3A20 
 2362      2530 346C 
 2363               		.section	.progmem.data.__c.2700,"a"
 2366               	__c.2700:
 2367 0000 6B65 7962 		.string	"keyboard_idle: %X\n"
 2367      6F61 7264 
 2367      5F69 646C 
 2367      653A 2025 
 2367      580A 00
 2368               		.section	.progmem.data.__c.2698,"a"
 2371               	__c.2698:
 2372 0000 6B65 7962 		.string	"keyboard_protocol: %X\n"
 2372      6F61 7264 
 2372      5F70 726F 
 2372      746F 636F 
 2372      6C3A 2025 
 2373               		.section	.progmem.data.__c.2696,"a"
 2376               	__c.2696:
 2377 0000 686F 7374 		.string	"host_keyboard_leds(): %X\n"
 2377      5F6B 6579 
 2377      626F 6172 
 2377      645F 6C65 
 2377      6473 2829 
 2378               		.section	.progmem.data.__c.2694,"a"
 2381               	__c.2694:
 2382 0000 0A09 2D20 		.string	"\n\t- Status -\n"
 2382      5374 6174 
 2382      7573 202D 
 2382      0A00 
 2383               		.section	.progmem.data.__c.2691,"a"
 2386               	__c.2691:
 2387 0000 4743 433A 		.string	"GCC: 8.3.0 AVR-LIBC: 2.0.0 AVR_ARCH: avr5\n"
 2387      2038 2E33 
 2387      2E30 2041 
 2387      5652 2D4C 
 2387      4942 433A 
 2388               		.section	.progmem.data.__c.2689,"a"
 2391               	__c.2689:
 2392 0000 4F50 5449 		.string	"OPTIONS: LUFA MOUSEKEY EXTRAKEY CONSOLE COMMAND 4096\n"
 2392      4F4E 533A 
 2392      204C 5546 
 2392      4120 4D4F 
 2392      5553 454B 
 2393               		.section	.progmem.data.__c.2687,"a"
 2396               	__c.2687:
 2397 0000 4255 494C 		.string	"BUILD: 8f86d125 (17:34:05 Dec  9 2020)\n"
 2397      443A 2038 
 2397      6638 3664 
 2397      3132 3520 
 2397      2831 373A 
 2398               		.section	.progmem.data.__c.2685,"a"
 2401               	__c.2685:
 2402 0000 5649 443A 		.string	"VID: 0xFEED(t.m.k.) PID: 0x9801(PC98 keyboard converter) VER: 0x0101\n"
 2402      2030 7846 
 2402      4545 4428 
 2402      742E 6D2E 
 2402      6B2E 2920 
 2403               		.section	.progmem.data.__c.2683,"a"
 2406               	__c.2683:
 2407 0000 4445 5343 		.string	"DESC: converts PC98 keyboard protocol into USB\n"
 2407      3A20 636F 
 2407      6E76 6572 
 2407      7473 2050 
 2407      4339 3820 
 2408               		.section	.progmem.data.__c.2681,"a"
 2411               	__c.2681:
 2412 0000 0A09 2D20 		.string	"\n\t- Version -\n"
 2412      5665 7273 
 2412      696F 6E20 
 2412      2D0A 00
 2413               		.section	.progmem.data.__c.2678,"a"
 2416               	__c.2678:
 2417 0000 0A6D 6F75 		.string	"\nmouse: off\n"
 2417      7365 3A20 
 2417      6F66 660A 
 2417      00
 2418               		.section	.progmem.data.__c.2676,"a"
 2421               	__c.2676:
 2422 0000 0A6D 6F75 		.string	"\nmouse: on\n"
 2422      7365 3A20 
 2422      6F6E 0A00 
 2423               		.section	.progmem.data.__c.2673,"a"
 2426               	__c.2673:
 2427 0000 0A6B 6579 		.string	"\nkeyboard: off\n"
 2427      626F 6172 
 2427      643A 206F 
 2427      6666 0A00 
 2428               		.section	.progmem.data.__c.2671,"a"
 2431               	__c.2671:
 2432 0000 0A6B 6579 		.string	"\nkeyboard: on\n"
 2432      626F 6172 
 2432      643A 206F 
 2432      6E0A 00
 2433               		.section	.progmem.data.__c.2668,"a"
 2436               	__c.2668:
 2437 0000 0A6D 6174 		.string	"\nmatrix: off\n"
 2437      7269 783A 
 2437      206F 6666 
 2437      0A00 
 2438               		.section	.progmem.data.__c.2666,"a"
 2441               	__c.2666:
 2442 0000 0A6D 6174 		.string	"\nmatrix: on\n"
 2442      7269 783A 
 2442      206F 6E0A 
 2442      00
 2443               		.section	.progmem.data.__c.2663,"a"
 2446               	__c.2663:
 2447 0000 0A64 6562 		.string	"\ndebug: on\n"
 2447      7567 3A20 
 2447      6F6E 0A00 
 2448               		.section	.progmem.data.__c.2661,"a"
 2451               	__c.2661:
 2452 0000 0A64 6562 		.string	"\ndebug: off\n"
 2452      7567 3A20 
 2452      6F66 660A 
 2452      00
 2453               		.section	.progmem.data.__c.2658,"a"
 2456               	__c.2658:
 2457 0000 0A0A 626F 		.string	"\n\nbootloader... "
 2457      6F74 6C6F 
 2457      6164 6572 
 2457      2E2E 2E20 
 2457      00
 2458               		.section	.progmem.data.__c.2655,"a"
 2461               	__c.2655:
 2462 0000 433E 2000 		.string	"C> "
 2463               		.section	.bss.mousekey_param,"aw",@nobits
 2466               	mousekey_param:
 2467 0000 00        		.zero	1
 2468               	.global	command_state
 2469               		.section	.bss.command_state,"aw",@nobits
 2472               	command_state:
 2473 0000 00        		.zero	1
 2474               		.text
 2475               	.Letext0:
 2476               		.file 3 "/usr/avr/include/stdint.h"
 2477               		.file 4 "../../tmk_core/common/report.h"
 2478               		.file 5 "../../tmk_core/common/host.h"
 2479               		.file 6 "../../tmk_core/common/avr/xprintf.h"
 2480               		.file 7 "../../tmk_core/common/debug.h"
 2481               		.file 8 "../../tmk_core/common/timer.h"
 2482               		.file 9 "../../tmk_core/common/action_layer.h"
 2483               		.file 10 "../../tmk_core/common/action_util.h"
 2484               		.file 11 "../../tmk_core/common/command.h"
 2485               		.file 12 "../../tmk_core/common/mousekey.h"
 2486               		.file 13 "../../tmk_core/common/action.h"
 2487               		.file 14 "../../tmk_core/common/keycode.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 command.c
     /tmp/ccKqaFKK.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccKqaFKK.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccKqaFKK.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccKqaFKK.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccKqaFKK.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccKqaFKK.s:12     .text.mousekey_console_help:0000000000000000 mousekey_console_help
     /tmp/ccKqaFKK.s:2321   .progmem.data.__c.2825:0000000000000000 __c.2825
     /tmp/ccKqaFKK.s:2316   .progmem.data.__c.2827:0000000000000000 __c.2827
     /tmp/ccKqaFKK.s:75     .text.mousekey_param_inc:0000000000000000 mousekey_param_inc
     /tmp/ccKqaFKK.s:2191   .progmem.data.__c.2781:0000000000000000 __c.2781
     /tmp/ccKqaFKK.s:2186   .progmem.data.__c.2785:0000000000000000 __c.2785
     /tmp/ccKqaFKK.s:2181   .progmem.data.__c.2788:0000000000000000 __c.2788
     /tmp/ccKqaFKK.s:2176   .progmem.data.__c.2791:0000000000000000 __c.2791
     /tmp/ccKqaFKK.s:2171   .progmem.data.__c.2794:0000000000000000 __c.2794
     /tmp/ccKqaFKK.s:2166   .progmem.data.__c.2797:0000000000000000 __c.2797
     /tmp/ccKqaFKK.s:406    .text.mousekey_param_dec:0000000000000000 mousekey_param_dec
     /tmp/ccKqaFKK.s:2161   .progmem.data.__c.2804:0000000000000000 __c.2804
     /tmp/ccKqaFKK.s:2156   .progmem.data.__c.2808:0000000000000000 __c.2808
     /tmp/ccKqaFKK.s:2151   .progmem.data.__c.2811:0000000000000000 __c.2811
     /tmp/ccKqaFKK.s:2146   .progmem.data.__c.2814:0000000000000000 __c.2814
     /tmp/ccKqaFKK.s:2141   .progmem.data.__c.2817:0000000000000000 __c.2817
     /tmp/ccKqaFKK.s:2136   .progmem.data.__c.2820:0000000000000000 __c.2820
     /tmp/ccKqaFKK.s:677    .text.switch_default_layer:0000000000000000 switch_default_layer
     /tmp/ccKqaFKK.s:2341   .progmem.data.__c.2876:0000000000000000 __c.2876
     /tmp/ccKqaFKK.s:750    .text.command_common:0000000000000000 command_common
     /tmp/ccKqaFKK.s:2356   .progmem.data.__c.2711:0000000000000000 __c.2711
     /tmp/ccKqaFKK.s:2421   .progmem.data.__c.2676:0000000000000000 __c.2676
     /tmp/ccKqaFKK.s:2441   .progmem.data.__c.2666:0000000000000000 __c.2666
     /tmp/ccKqaFKK.s:2456   .progmem.data.__c.2658:0000000000000000 __c.2658
     /tmp/ccKqaFKK.s:2351   .progmem.data.__c.2646:0000000000000000 __c.2646
     /tmp/ccKqaFKK.s:2346   .progmem.data.__c.2716:0000000000000000 __c.2716
     /tmp/ccKqaFKK.s:2461   .progmem.data.__c.2655:0000000000000000 __c.2655
     /tmp/ccKqaFKK.s:2472   .bss.command_state:0000000000000000 command_state
     /tmp/ccKqaFKK.s:2451   .progmem.data.__c.2661:0000000000000000 __c.2661
     /tmp/ccKqaFKK.s:2446   .progmem.data.__c.2663:0000000000000000 __c.2663
     /tmp/ccKqaFKK.s:2436   .progmem.data.__c.2668:0000000000000000 __c.2668
     /tmp/ccKqaFKK.s:2431   .progmem.data.__c.2671:0000000000000000 __c.2671
     /tmp/ccKqaFKK.s:2426   .progmem.data.__c.2673:0000000000000000 __c.2673
     /tmp/ccKqaFKK.s:2416   .progmem.data.__c.2678:0000000000000000 __c.2678
     /tmp/ccKqaFKK.s:2411   .progmem.data.__c.2681:0000000000000000 __c.2681
     /tmp/ccKqaFKK.s:2406   .progmem.data.__c.2683:0000000000000000 __c.2683
     /tmp/ccKqaFKK.s:2401   .progmem.data.__c.2685:0000000000000000 __c.2685
     /tmp/ccKqaFKK.s:2396   .progmem.data.__c.2687:0000000000000000 __c.2687
     /tmp/ccKqaFKK.s:2391   .progmem.data.__c.2689:0000000000000000 __c.2689
     /tmp/ccKqaFKK.s:2386   .progmem.data.__c.2691:0000000000000000 __c.2691
     /tmp/ccKqaFKK.s:2381   .progmem.data.__c.2694:0000000000000000 __c.2694
     /tmp/ccKqaFKK.s:2376   .progmem.data.__c.2696:0000000000000000 __c.2696
     /tmp/ccKqaFKK.s:2371   .progmem.data.__c.2698:0000000000000000 __c.2698
     /tmp/ccKqaFKK.s:2366   .progmem.data.__c.2700:0000000000000000 __c.2700
     /tmp/ccKqaFKK.s:2361   .progmem.data.__c.2702:0000000000000000 __c.2702
     /tmp/ccKqaFKK.s:1247   .text.command_extra:0000000000000000 command_extra
     /tmp/ccKqaFKK.s:1247   .text.command_extra:0000000000000000 command_extra.localalias.0
     /tmp/ccKqaFKK.s:1271   .text.command_console_extra:0000000000000000 command_console_extra
     /tmp/ccKqaFKK.s:1285   .text.command_proc:0000000000000000 command_proc
     /tmp/ccKqaFKK.s:2326   .progmem.data.__c.2730:0000000000000000 __c.2730
     /tmp/ccKqaFKK.s:2336   .progmem.data.__c.2732:0000000000000000 __c.2732
     /tmp/ccKqaFKK.s:2331   .progmem.data.__c.2727:0000000000000000 __c.2727
     /tmp/ccKqaFKK.s:2301   .progmem.data.__c.2854:0000000000000000 __c.2854
     /tmp/ccKqaFKK.s:2466   .bss.mousekey_param:0000000000000000 mousekey_param
     /tmp/ccKqaFKK.s:2296   .progmem.data.__c.2856:0000000000000000 __c.2856
     /tmp/ccKqaFKK.s:2311   .progmem.data.__c.2837:0000000000000000 __c.2837
     /tmp/ccKqaFKK.s:2286   .progmem.data.__c.2738:0000000000000000 __c.2738
     /tmp/ccKqaFKK.s:2281   .progmem.data.__c.2740:0000000000000000 __c.2740
     /tmp/ccKqaFKK.s:2276   .progmem.data.__c.2742:0000000000000000 __c.2742
     /tmp/ccKqaFKK.s:2271   .progmem.data.__c.2744:0000000000000000 __c.2744
     /tmp/ccKqaFKK.s:2266   .progmem.data.__c.2746:0000000000000000 __c.2746
     /tmp/ccKqaFKK.s:2261   .progmem.data.__c.2748:0000000000000000 __c.2748
     /tmp/ccKqaFKK.s:2256   .progmem.data.__c.2750:0000000000000000 __c.2750
     /tmp/ccKqaFKK.s:2251   .progmem.data.__c.2752:0000000000000000 __c.2752
     /tmp/ccKqaFKK.s:2246   .progmem.data.__c.2754:0000000000000000 __c.2754
     /tmp/ccKqaFKK.s:2241   .progmem.data.__c.2756:0000000000000000 __c.2756
     /tmp/ccKqaFKK.s:2236   .progmem.data.__c.2758:0000000000000000 __c.2758
     /tmp/ccKqaFKK.s:2231   .progmem.data.__c.2760:0000000000000000 __c.2760
     /tmp/ccKqaFKK.s:2226   .progmem.data.__c.2762:0000000000000000 __c.2762
     /tmp/ccKqaFKK.s:2221   .progmem.data.__c.2764:0000000000000000 __c.2764
     /tmp/ccKqaFKK.s:2216   .progmem.data.__c.2766:0000000000000000 __c.2766
     /tmp/ccKqaFKK.s:2211   .progmem.data.__c.2768:0000000000000000 __c.2768
     /tmp/ccKqaFKK.s:2206   .progmem.data.__c.2770:0000000000000000 __c.2770
     /tmp/ccKqaFKK.s:2201   .progmem.data.__c.2772:0000000000000000 __c.2772
     /tmp/ccKqaFKK.s:2196   .progmem.data.__c.2774:0000000000000000 __c.2774
     /tmp/ccKqaFKK.s:2122   .rodata.CSWTCH.57:0000000000000000 CSWTCH.57
     /tmp/ccKqaFKK.s:2306   .progmem.data.__c.2851:0000000000000000 __c.2851
     /tmp/ccKqaFKK.s:2291   .progmem.data.__c.2858:0000000000000000 __c.2858

UNDEFINED SYMBOLS
xputs
__xprintf
mk_delay
mk_interval
mk_max_speed
mk_time_to_max
mk_wheel_max_speed
mk_wheel_time_to_max
default_layer_set
clear_keyboard
debug_config
bootloader_jump
host_keyboard_leds
keyboard_protocol
keyboard_idle
timer_read32
matrix_is_on
keyboard_report
__do_copy_data
__do_clear_bss
