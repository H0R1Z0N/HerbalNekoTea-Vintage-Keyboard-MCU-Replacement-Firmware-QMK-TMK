   1               		.file	"action_util.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.add_key,"ax",@progbits
  11               	.global	add_key
  13               	add_key:
  14               	.LVL0:
  15               	.LFB101:
  16               		.file 1 "../../tmk_core/common/action_util.c"
   1:../../tmk_core/common/action_util.c **** /*
   2:../../tmk_core/common/action_util.c **** Copyright 2013 Jun Wako <wakojun@gmail.com>
   3:../../tmk_core/common/action_util.c **** 
   4:../../tmk_core/common/action_util.c **** This program is free software: you can redistribute it and/or modify
   5:../../tmk_core/common/action_util.c **** it under the terms of the GNU General Public License as published by
   6:../../tmk_core/common/action_util.c **** the Free Software Foundation, either version 2 of the License, or
   7:../../tmk_core/common/action_util.c **** (at your option) any later version.
   8:../../tmk_core/common/action_util.c **** 
   9:../../tmk_core/common/action_util.c **** This program is distributed in the hope that it will be useful,
  10:../../tmk_core/common/action_util.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:../../tmk_core/common/action_util.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:../../tmk_core/common/action_util.c **** GNU General Public License for more details.
  13:../../tmk_core/common/action_util.c **** 
  14:../../tmk_core/common/action_util.c **** You should have received a copy of the GNU General Public License
  15:../../tmk_core/common/action_util.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:../../tmk_core/common/action_util.c **** */
  17:../../tmk_core/common/action_util.c **** #include "host.h"
  18:../../tmk_core/common/action_util.c **** #include "report.h"
  19:../../tmk_core/common/action_util.c **** #include "debug.h"
  20:../../tmk_core/common/action_util.c **** #include "action_util.h"
  21:../../tmk_core/common/action_util.c **** #include "timer.h"
  22:../../tmk_core/common/action_util.c **** 
  23:../../tmk_core/common/action_util.c **** static inline void add_key_byte(uint8_t code);
  24:../../tmk_core/common/action_util.c **** static inline void del_key_byte(uint8_t code);
  25:../../tmk_core/common/action_util.c **** #ifdef NKRO_ENABLE
  26:../../tmk_core/common/action_util.c **** static inline void add_key_bit(uint8_t code);
  27:../../tmk_core/common/action_util.c **** static inline void del_key_bit(uint8_t code);
  28:../../tmk_core/common/action_util.c **** #endif
  29:../../tmk_core/common/action_util.c **** 
  30:../../tmk_core/common/action_util.c **** static uint8_t real_mods = 0;
  31:../../tmk_core/common/action_util.c **** static uint8_t weak_mods = 0;
  32:../../tmk_core/common/action_util.c **** 
  33:../../tmk_core/common/action_util.c **** #ifdef USB_6KRO_ENABLE
  34:../../tmk_core/common/action_util.c **** #define RO_ADD(a, b) ((a + b) % KEYBOARD_REPORT_KEYS)
  35:../../tmk_core/common/action_util.c **** #define RO_SUB(a, b) ((a - b + KEYBOARD_REPORT_KEYS) % KEYBOARD_REPORT_KEYS)
  36:../../tmk_core/common/action_util.c **** #define RO_INC(a) RO_ADD(a, 1)
  37:../../tmk_core/common/action_util.c **** #define RO_DEC(a) RO_SUB(a, 1)
  38:../../tmk_core/common/action_util.c **** static int8_t cb_head = 0;
  39:../../tmk_core/common/action_util.c **** static int8_t cb_tail = 0;
  40:../../tmk_core/common/action_util.c **** static int8_t cb_count = 0;
  41:../../tmk_core/common/action_util.c **** #endif
  42:../../tmk_core/common/action_util.c **** 
  43:../../tmk_core/common/action_util.c **** // TODO: pointer variable is not needed
  44:../../tmk_core/common/action_util.c **** //report_keyboard_t keyboard_report = {};
  45:../../tmk_core/common/action_util.c **** report_keyboard_t *keyboard_report = &(report_keyboard_t){};
  46:../../tmk_core/common/action_util.c **** 
  47:../../tmk_core/common/action_util.c **** #ifndef NO_ACTION_ONESHOT
  48:../../tmk_core/common/action_util.c **** static int8_t oneshot_mods = 0;
  49:../../tmk_core/common/action_util.c **** #if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
  50:../../tmk_core/common/action_util.c **** static int16_t oneshot_time = 0;
  51:../../tmk_core/common/action_util.c **** #endif
  52:../../tmk_core/common/action_util.c **** #endif
  53:../../tmk_core/common/action_util.c **** 
  54:../../tmk_core/common/action_util.c **** 
  55:../../tmk_core/common/action_util.c **** void send_keyboard_report(void) {
  56:../../tmk_core/common/action_util.c ****     keyboard_report->mods  = real_mods;
  57:../../tmk_core/common/action_util.c ****     keyboard_report->mods |= weak_mods;
  58:../../tmk_core/common/action_util.c **** #ifndef NO_ACTION_ONESHOT
  59:../../tmk_core/common/action_util.c ****     if (oneshot_mods) {
  60:../../tmk_core/common/action_util.c **** #if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
  61:../../tmk_core/common/action_util.c ****         if (TIMER_DIFF_16(timer_read(), oneshot_time) >= ONESHOT_TIMEOUT) {
  62:../../tmk_core/common/action_util.c ****             dprintf("Oneshot: timeout\n");
  63:../../tmk_core/common/action_util.c ****             clear_oneshot_mods();
  64:../../tmk_core/common/action_util.c ****         }
  65:../../tmk_core/common/action_util.c **** #endif
  66:../../tmk_core/common/action_util.c ****         keyboard_report->mods |= oneshot_mods;
  67:../../tmk_core/common/action_util.c ****         if (has_anykey()) {
  68:../../tmk_core/common/action_util.c ****             clear_oneshot_mods();
  69:../../tmk_core/common/action_util.c ****         }
  70:../../tmk_core/common/action_util.c ****     }
  71:../../tmk_core/common/action_util.c **** #endif
  72:../../tmk_core/common/action_util.c ****     host_keyboard_send(keyboard_report);
  73:../../tmk_core/common/action_util.c **** }
  74:../../tmk_core/common/action_util.c **** 
  75:../../tmk_core/common/action_util.c **** /* key */
  76:../../tmk_core/common/action_util.c **** void add_key(uint8_t key)
  77:../../tmk_core/common/action_util.c **** {
  17               		.loc 1 77 1 view -0
  18               		.cfi_startproc
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  78:../../tmk_core/common/action_util.c **** #ifdef NKRO_ENABLE
  79:../../tmk_core/common/action_util.c ****     if (keyboard_protocol && keyboard_nkro) {
  23               		.loc 1 79 5 view .LVU1
  24               		.loc 1 79 8 is_stmt 0 view .LVU2
  25 0000 9091 0000 		lds r25,keyboard_protocol
  26 0004 9923      		tst r25
  27 0006 01F0      		breq .L2
  28               		.loc 1 79 27 discriminator 1 view .LVU3
  29 0008 9091 0000 		lds r25,keyboard_nkro
  30 000c 9923      		tst r25
  31 000e 01F0      		breq .L2
  80:../../tmk_core/common/action_util.c ****         add_key_bit(key);
  32               		.loc 1 80 9 is_stmt 1 view .LVU4
  33               	.LVL1:
  34               	.LBB7:
  35               	.LBI7:
  81:../../tmk_core/common/action_util.c ****         return;
  82:../../tmk_core/common/action_util.c ****     }
  83:../../tmk_core/common/action_util.c **** #endif
  84:../../tmk_core/common/action_util.c ****     add_key_byte(key);
  85:../../tmk_core/common/action_util.c **** }
  86:../../tmk_core/common/action_util.c **** 
  87:../../tmk_core/common/action_util.c **** void del_key(uint8_t key)
  88:../../tmk_core/common/action_util.c **** {
  89:../../tmk_core/common/action_util.c **** #ifdef NKRO_ENABLE
  90:../../tmk_core/common/action_util.c ****     if (keyboard_protocol && keyboard_nkro) {
  91:../../tmk_core/common/action_util.c ****         del_key_bit(key);
  92:../../tmk_core/common/action_util.c ****         return;
  93:../../tmk_core/common/action_util.c ****     }
  94:../../tmk_core/common/action_util.c **** #endif
  95:../../tmk_core/common/action_util.c ****     del_key_byte(key);
  96:../../tmk_core/common/action_util.c **** }
  97:../../tmk_core/common/action_util.c **** 
  98:../../tmk_core/common/action_util.c **** void clear_keys(void)
  99:../../tmk_core/common/action_util.c **** {
 100:../../tmk_core/common/action_util.c ****     // not clear mods
 101:../../tmk_core/common/action_util.c ****     for (int8_t i = 1; i < KEYBOARD_REPORT_SIZE; i++) {
 102:../../tmk_core/common/action_util.c ****         keyboard_report->raw[i] = 0;
 103:../../tmk_core/common/action_util.c ****     }
 104:../../tmk_core/common/action_util.c **** }
 105:../../tmk_core/common/action_util.c **** 
 106:../../tmk_core/common/action_util.c **** 
 107:../../tmk_core/common/action_util.c **** /* modifier */
 108:../../tmk_core/common/action_util.c **** uint8_t get_mods(void) { return real_mods; }
 109:../../tmk_core/common/action_util.c **** void add_mods(uint8_t mods) { real_mods |= mods; }
 110:../../tmk_core/common/action_util.c **** void del_mods(uint8_t mods) { real_mods &= ~mods; }
 111:../../tmk_core/common/action_util.c **** void set_mods(uint8_t mods) { real_mods = mods; }
 112:../../tmk_core/common/action_util.c **** void clear_mods(void) { real_mods = 0; }
 113:../../tmk_core/common/action_util.c **** 
 114:../../tmk_core/common/action_util.c **** /* weak modifier */
 115:../../tmk_core/common/action_util.c **** uint8_t get_weak_mods(void) { return weak_mods; }
 116:../../tmk_core/common/action_util.c **** void add_weak_mods(uint8_t mods) { weak_mods |= mods; }
 117:../../tmk_core/common/action_util.c **** void del_weak_mods(uint8_t mods) { weak_mods &= ~mods; }
 118:../../tmk_core/common/action_util.c **** void set_weak_mods(uint8_t mods) { weak_mods = mods; }
 119:../../tmk_core/common/action_util.c **** void clear_weak_mods(void) { weak_mods = 0; }
 120:../../tmk_core/common/action_util.c **** 
 121:../../tmk_core/common/action_util.c **** /* Oneshot modifier */
 122:../../tmk_core/common/action_util.c **** #ifndef NO_ACTION_ONESHOT
 123:../../tmk_core/common/action_util.c **** void set_oneshot_mods(uint8_t mods)
 124:../../tmk_core/common/action_util.c **** {
 125:../../tmk_core/common/action_util.c ****     oneshot_mods = mods;
 126:../../tmk_core/common/action_util.c **** #if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 127:../../tmk_core/common/action_util.c ****     oneshot_time = timer_read();
 128:../../tmk_core/common/action_util.c **** #endif
 129:../../tmk_core/common/action_util.c **** }
 130:../../tmk_core/common/action_util.c **** void clear_oneshot_mods(void)
 131:../../tmk_core/common/action_util.c **** {
 132:../../tmk_core/common/action_util.c ****     oneshot_mods = 0;
 133:../../tmk_core/common/action_util.c **** #if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 134:../../tmk_core/common/action_util.c ****     oneshot_time = 0;
 135:../../tmk_core/common/action_util.c **** #endif
 136:../../tmk_core/common/action_util.c **** }
 137:../../tmk_core/common/action_util.c **** #endif
 138:../../tmk_core/common/action_util.c **** 
 139:../../tmk_core/common/action_util.c **** 
 140:../../tmk_core/common/action_util.c **** 
 141:../../tmk_core/common/action_util.c **** 
 142:../../tmk_core/common/action_util.c **** /*
 143:../../tmk_core/common/action_util.c ****  * inspect keyboard state
 144:../../tmk_core/common/action_util.c ****  */
 145:../../tmk_core/common/action_util.c **** uint8_t has_anykey(void)
 146:../../tmk_core/common/action_util.c **** {
 147:../../tmk_core/common/action_util.c ****     uint8_t cnt = 0;
 148:../../tmk_core/common/action_util.c ****     for (uint8_t i = 1; i < KEYBOARD_REPORT_SIZE; i++) {
 149:../../tmk_core/common/action_util.c ****         if (keyboard_report->raw[i])
 150:../../tmk_core/common/action_util.c ****             cnt++;
 151:../../tmk_core/common/action_util.c ****     }
 152:../../tmk_core/common/action_util.c ****     return cnt;
 153:../../tmk_core/common/action_util.c **** }
 154:../../tmk_core/common/action_util.c **** 
 155:../../tmk_core/common/action_util.c **** uint8_t has_anymod(void)
 156:../../tmk_core/common/action_util.c **** {
 157:../../tmk_core/common/action_util.c ****     return bitpop(real_mods);
 158:../../tmk_core/common/action_util.c **** }
 159:../../tmk_core/common/action_util.c **** 
 160:../../tmk_core/common/action_util.c **** uint8_t get_first_key(void)
 161:../../tmk_core/common/action_util.c **** {
 162:../../tmk_core/common/action_util.c **** #ifdef NKRO_ENABLE
 163:../../tmk_core/common/action_util.c ****     if (keyboard_protocol && keyboard_nkro) {
 164:../../tmk_core/common/action_util.c ****         uint8_t i = 0;
 165:../../tmk_core/common/action_util.c ****         for (; i < KEYBOARD_REPORT_BITS && !keyboard_report->nkro.bits[i]; i++)
 166:../../tmk_core/common/action_util.c ****             ;
 167:../../tmk_core/common/action_util.c ****         return i<<3 | biton(keyboard_report->nkro.bits[i]);
 168:../../tmk_core/common/action_util.c ****     }
 169:../../tmk_core/common/action_util.c **** #endif
 170:../../tmk_core/common/action_util.c **** #ifdef USB_6KRO_ENABLE
 171:../../tmk_core/common/action_util.c ****     uint8_t i = cb_head;
 172:../../tmk_core/common/action_util.c ****     do {
 173:../../tmk_core/common/action_util.c ****         if (keyboard_report->keys[i] != 0) {
 174:../../tmk_core/common/action_util.c ****             break;
 175:../../tmk_core/common/action_util.c ****         }
 176:../../tmk_core/common/action_util.c ****         i = RO_INC(i);
 177:../../tmk_core/common/action_util.c ****     } while (i != cb_tail);
 178:../../tmk_core/common/action_util.c ****     return keyboard_report->keys[i];
 179:../../tmk_core/common/action_util.c **** #else
 180:../../tmk_core/common/action_util.c ****     return keyboard_report->keys[0];
 181:../../tmk_core/common/action_util.c **** #endif
 182:../../tmk_core/common/action_util.c **** }
 183:../../tmk_core/common/action_util.c **** 
 184:../../tmk_core/common/action_util.c **** 
 185:../../tmk_core/common/action_util.c **** 
 186:../../tmk_core/common/action_util.c **** /* local functions */
 187:../../tmk_core/common/action_util.c **** static inline void add_key_byte(uint8_t code)
 188:../../tmk_core/common/action_util.c **** {
 189:../../tmk_core/common/action_util.c **** #ifdef USB_6KRO_ENABLE
 190:../../tmk_core/common/action_util.c ****     int8_t i = cb_head;
 191:../../tmk_core/common/action_util.c ****     int8_t empty = -1;
 192:../../tmk_core/common/action_util.c ****     if (cb_count) {
 193:../../tmk_core/common/action_util.c ****         do {
 194:../../tmk_core/common/action_util.c ****             if (keyboard_report->keys[i] == code) {
 195:../../tmk_core/common/action_util.c ****                 return;
 196:../../tmk_core/common/action_util.c ****             }
 197:../../tmk_core/common/action_util.c ****             if (empty == -1 && keyboard_report->keys[i] == 0) {
 198:../../tmk_core/common/action_util.c ****                 empty = i;
 199:../../tmk_core/common/action_util.c ****             }
 200:../../tmk_core/common/action_util.c ****             i = RO_INC(i);
 201:../../tmk_core/common/action_util.c ****         } while (i != cb_tail);
 202:../../tmk_core/common/action_util.c ****         if (i == cb_tail) {
 203:../../tmk_core/common/action_util.c ****             if (cb_tail == cb_head) {
 204:../../tmk_core/common/action_util.c ****                 // buffer is full
 205:../../tmk_core/common/action_util.c ****                 if (empty == -1) {
 206:../../tmk_core/common/action_util.c ****                     // pop head when has no empty space
 207:../../tmk_core/common/action_util.c ****                     cb_head = RO_INC(cb_head);
 208:../../tmk_core/common/action_util.c ****                     cb_count--;
 209:../../tmk_core/common/action_util.c ****                 }
 210:../../tmk_core/common/action_util.c ****                 else {
 211:../../tmk_core/common/action_util.c ****                     // left shift when has empty space
 212:../../tmk_core/common/action_util.c ****                     uint8_t offset = 1;
 213:../../tmk_core/common/action_util.c ****                     i = RO_INC(empty);
 214:../../tmk_core/common/action_util.c ****                     do {
 215:../../tmk_core/common/action_util.c ****                         if (keyboard_report->keys[i] != 0) {
 216:../../tmk_core/common/action_util.c ****                             keyboard_report->keys[empty] = keyboard_report->keys[i];
 217:../../tmk_core/common/action_util.c ****                             keyboard_report->keys[i] = 0;
 218:../../tmk_core/common/action_util.c ****                             empty = RO_INC(empty);
 219:../../tmk_core/common/action_util.c ****                         }
 220:../../tmk_core/common/action_util.c ****                         else {
 221:../../tmk_core/common/action_util.c ****                             offset++;
 222:../../tmk_core/common/action_util.c ****                         }
 223:../../tmk_core/common/action_util.c ****                         i = RO_INC(i);
 224:../../tmk_core/common/action_util.c ****                     } while (i != cb_tail);
 225:../../tmk_core/common/action_util.c ****                     cb_tail = RO_SUB(cb_tail, offset);
 226:../../tmk_core/common/action_util.c ****                 }
 227:../../tmk_core/common/action_util.c ****             }
 228:../../tmk_core/common/action_util.c ****         }
 229:../../tmk_core/common/action_util.c ****     }
 230:../../tmk_core/common/action_util.c ****     // add to tail
 231:../../tmk_core/common/action_util.c ****     keyboard_report->keys[cb_tail] = code;
 232:../../tmk_core/common/action_util.c ****     cb_tail = RO_INC(cb_tail);
 233:../../tmk_core/common/action_util.c ****     cb_count++;
 234:../../tmk_core/common/action_util.c **** #else
 235:../../tmk_core/common/action_util.c ****     int8_t i = 0;
 236:../../tmk_core/common/action_util.c ****     int8_t empty = -1;
 237:../../tmk_core/common/action_util.c ****     for (; i < KEYBOARD_REPORT_KEYS; i++) {
 238:../../tmk_core/common/action_util.c ****         if (keyboard_report->keys[i] == code) {
 239:../../tmk_core/common/action_util.c ****             break;
 240:../../tmk_core/common/action_util.c ****         }
 241:../../tmk_core/common/action_util.c ****         if (empty == -1 && keyboard_report->keys[i] == 0) {
 242:../../tmk_core/common/action_util.c ****             empty = i;
 243:../../tmk_core/common/action_util.c ****         }
 244:../../tmk_core/common/action_util.c ****     }
 245:../../tmk_core/common/action_util.c ****     if (i == KEYBOARD_REPORT_KEYS) {
 246:../../tmk_core/common/action_util.c ****         if (empty != -1) {
 247:../../tmk_core/common/action_util.c ****             keyboard_report->keys[empty] = code;
 248:../../tmk_core/common/action_util.c ****         }
 249:../../tmk_core/common/action_util.c ****     }
 250:../../tmk_core/common/action_util.c **** #endif
 251:../../tmk_core/common/action_util.c **** }
 252:../../tmk_core/common/action_util.c **** 
 253:../../tmk_core/common/action_util.c **** static inline void del_key_byte(uint8_t code)
 254:../../tmk_core/common/action_util.c **** {
 255:../../tmk_core/common/action_util.c **** #ifdef USB_6KRO_ENABLE
 256:../../tmk_core/common/action_util.c ****     uint8_t i = cb_head;
 257:../../tmk_core/common/action_util.c ****     if (cb_count) {
 258:../../tmk_core/common/action_util.c ****         do {
 259:../../tmk_core/common/action_util.c ****             if (keyboard_report->keys[i] == code) {
 260:../../tmk_core/common/action_util.c ****                 keyboard_report->keys[i] = 0;
 261:../../tmk_core/common/action_util.c ****                 cb_count--;
 262:../../tmk_core/common/action_util.c ****                 if (cb_count == 0) {
 263:../../tmk_core/common/action_util.c ****                     // reset head and tail
 264:../../tmk_core/common/action_util.c ****                     cb_tail = cb_head = 0;
 265:../../tmk_core/common/action_util.c ****                 }
 266:../../tmk_core/common/action_util.c ****                 if (i == RO_DEC(cb_tail)) {
 267:../../tmk_core/common/action_util.c ****                     // left shift when next to tail
 268:../../tmk_core/common/action_util.c ****                     do {
 269:../../tmk_core/common/action_util.c ****                         cb_tail = RO_DEC(cb_tail);
 270:../../tmk_core/common/action_util.c ****                         if (keyboard_report->keys[RO_DEC(cb_tail)] != 0) {
 271:../../tmk_core/common/action_util.c ****                             break;
 272:../../tmk_core/common/action_util.c ****                         }
 273:../../tmk_core/common/action_util.c ****                     } while (cb_tail != cb_head);
 274:../../tmk_core/common/action_util.c ****                 }
 275:../../tmk_core/common/action_util.c ****                 break;
 276:../../tmk_core/common/action_util.c ****             }
 277:../../tmk_core/common/action_util.c ****             i = RO_INC(i);
 278:../../tmk_core/common/action_util.c ****         } while (i != cb_tail);
 279:../../tmk_core/common/action_util.c ****     }
 280:../../tmk_core/common/action_util.c **** #else
 281:../../tmk_core/common/action_util.c ****     for (uint8_t i = 0; i < KEYBOARD_REPORT_KEYS; i++) {
 282:../../tmk_core/common/action_util.c ****         if (keyboard_report->keys[i] == code) {
 283:../../tmk_core/common/action_util.c ****             keyboard_report->keys[i] = 0;
 284:../../tmk_core/common/action_util.c ****         }
 285:../../tmk_core/common/action_util.c ****     }
 286:../../tmk_core/common/action_util.c **** #endif
 287:../../tmk_core/common/action_util.c **** }
 288:../../tmk_core/common/action_util.c **** 
 289:../../tmk_core/common/action_util.c **** #ifdef NKRO_ENABLE
 290:../../tmk_core/common/action_util.c **** static inline void add_key_bit(uint8_t code)
  36               		.loc 1 290 20 view .LVU5
  37               	.LBB8:
 291:../../tmk_core/common/action_util.c **** {
 292:../../tmk_core/common/action_util.c ****     if ((code>>3) < KEYBOARD_REPORT_BITS) {
  38               		.loc 1 292 5 view .LVU6
  39               		.loc 1 292 19 is_stmt 0 view .LVU7
  40 0010 E82F      		mov r30,r24
  41 0012 E695      		lsr r30
  42 0014 E695      		lsr r30
  43 0016 E695      		lsr r30
  44               		.loc 1 292 8 view .LVU8
  45 0018 EF31      		cpi r30,lo8(31)
  46 001a 01F0      		breq .L3
 293:../../tmk_core/common/action_util.c ****         keyboard_report->nkro.bits[code>>3] |= 1<<(code&7);
  47               		.loc 1 293 9 is_stmt 1 view .LVU9
  48               		.loc 1 293 45 is_stmt 0 view .LVU10
  49 001c 2091 0000 		lds r18,keyboard_report
  50 0020 3091 0000 		lds r19,keyboard_report+1
  51 0024 E20F      		add r30,r18
  52 0026 F32F      		mov r31,r19
  53 0028 F11D      		adc r31,__zero_reg__
  54               		.loc 1 293 56 view .LVU11
  55 002a 8770      		andi r24,lo8(7)
  56               	.LVL2:
  57               		.loc 1 293 49 view .LVU12
  58 002c 21E0      		ldi r18,lo8(1)
  59 002e 30E0      		ldi r19,0
  60 0030 00C0      		rjmp 2f
  61               		1:
  62 0032 220F      		lsl r18
  63               		2:
  64 0034 8A95      		dec r24
  65 0036 02F4      		brpl 1b
  66               		.loc 1 293 45 view .LVU13
  67 0038 8181      		ldd r24,Z+1
  68 003a 822B      		or r24,r18
  69 003c 8183      		std Z+1,r24
  70 003e 0895      		ret
  71               	.LVL3:
  72               	.L3:
 294:../../tmk_core/common/action_util.c ****     } else {
 295:../../tmk_core/common/action_util.c ****         dprintf("add_key_bit: can't add: %02X\n", code);
  73               		.loc 1 295 9 is_stmt 1 view .LVU14
  74               		.loc 1 295 9 view .LVU15
  75 0040 9091 0000 		lds r25,debug_config
  76 0044 90FF      		sbrs r25,0
  77 0046 00C0      		rjmp .L1
  78               		.loc 1 295 9 view .LVU16
  79               	.LBE8:
  80               	.LBE7:
  81               		.loc 1 295 9 view .LVU17
  82               		.loc 1 295 9 view .LVU18
  83               	.LBB10:
  84               	.LBB9:
  85 0048 1F92      		push __zero_reg__
  86               	.LCFI0:
  87               		.cfi_def_cfa_offset 3
  88 004a 8F93      		push r24
  89               	.LCFI1:
  90               		.cfi_def_cfa_offset 4
  91 004c 80E0      		ldi r24,lo8(__c.4912)
  92 004e 90E0      		ldi r25,hi8(__c.4912)
  93               	.LVL4:
  94               		.loc 1 295 9 is_stmt 0 view .LVU19
  95 0050 9F93      		push r25
  96               	.LCFI2:
  97               		.cfi_def_cfa_offset 5
  98               	.LVL5:
  99               		.loc 1 295 9 view .LVU20
 100 0052 8F93      		push r24
 101               	.LCFI3:
 102               		.cfi_def_cfa_offset 6
 103 0054 0E94 0000 		call __xprintf
 104               	.LVL6:
 105               		.loc 1 295 9 view .LVU21
 106 0058 0F90      		pop __tmp_reg__
 107 005a 0F90      		pop __tmp_reg__
 108 005c 0F90      		pop __tmp_reg__
 109 005e 0F90      		pop __tmp_reg__
 110               	.LCFI4:
 111               		.cfi_def_cfa_offset 2
 112 0060 0895      		ret
 113               	.LVL7:
 114               	.L2:
 115               		.loc 1 295 9 view .LVU22
 116               	.LBE9:
 117               	.LBE10:
 118               	.LBB11:
 119               	.LBB12:
 238:../../tmk_core/common/action_util.c ****             break;
 120               		.loc 1 238 28 view .LVU23
 121 0062 2091 0000 		lds r18,keyboard_report
 122 0066 3091 0000 		lds r19,keyboard_report+1
 123 006a F901      		movw r30,r18
 124 006c 3296      		adiw r30,2
 125 006e 9FEF      		ldi r25,lo8(-1)
 126 0070 40E0      		ldi r20,0
 127               	.L6:
 128               	.LVL8:
 238:../../tmk_core/common/action_util.c ****             break;
 129               		.loc 1 238 9 is_stmt 1 view .LVU24
 238:../../tmk_core/common/action_util.c ****             break;
 130               		.loc 1 238 34 is_stmt 0 view .LVU25
 131 0072 5191      		ld r21,Z+
 238:../../tmk_core/common/action_util.c ****             break;
 132               		.loc 1 238 12 view .LVU26
 133 0074 8517      		cp r24,r21
 134 0076 01F0      		breq .L1
 241:../../tmk_core/common/action_util.c ****             empty = i;
 135               		.loc 1 241 9 is_stmt 1 view .LVU27
 241:../../tmk_core/common/action_util.c ****             empty = i;
 136               		.loc 1 241 12 is_stmt 0 view .LVU28
 137 0078 9F3F      		cpi r25,lo8(-1)
 138 007a 01F4      		brne .L5
 241:../../tmk_core/common/action_util.c ****             empty = i;
 139               		.loc 1 241 25 view .LVU29
 140 007c 5111      		cpse r21,__zero_reg__
 141 007e 00C0      		rjmp .L5
 142 0080 942F      		mov r25,r20
 143               	.LVL9:
 144               	.L5:
 241:../../tmk_core/common/action_util.c ****             empty = i;
 145               		.loc 1 241 25 view .LVU30
 146 0082 4F5F      		subi r20,lo8(-(1))
 147               	.LVL10:
 237:../../tmk_core/common/action_util.c ****         if (keyboard_report->keys[i] == code) {
 148               		.loc 1 237 5 view .LVU31
 149 0084 4E31      		cpi r20,lo8(30)
 150 0086 01F4      		brne .L6
 245:../../tmk_core/common/action_util.c ****         if (empty != -1) {
 151               		.loc 1 245 5 is_stmt 1 view .LVU32
 246:../../tmk_core/common/action_util.c ****             keyboard_report->keys[empty] = code;
 152               		.loc 1 246 9 view .LVU33
 246:../../tmk_core/common/action_util.c ****             keyboard_report->keys[empty] = code;
 153               		.loc 1 246 12 is_stmt 0 view .LVU34
 154 0088 9F3F      		cpi r25,lo8(-1)
 155 008a 01F4      		brne .L8
 156               	.LVL11:
 157               	.L1:
 158               	/* epilogue start */
 246:../../tmk_core/common/action_util.c ****             keyboard_report->keys[empty] = code;
 159               		.loc 1 246 12 view .LVU35
 160               	.LBE12:
 161               	.LBE11:
  85:../../tmk_core/common/action_util.c **** 
 162               		.loc 1 85 1 view .LVU36
 163 008c 0895      		ret
 164               	.LVL12:
 165               	.L8:
 166               	.LBB14:
 167               	.LBB13:
 247:../../tmk_core/common/action_util.c ****         }
 168               		.loc 1 247 13 is_stmt 1 view .LVU37
 247:../../tmk_core/common/action_util.c ****         }
 169               		.loc 1 247 42 is_stmt 0 view .LVU38
 170 008e 290F      		add r18,r25
 171 0090 311D      		adc r19,__zero_reg__
 172 0092 97FD      		sbrc r25,7
 173 0094 3A95      		dec r19
 174 0096 F901      		movw r30,r18
 175 0098 8283      		std Z+2,r24
 176 009a 0895      		ret
 177               	.LBE13:
 178               	.LBE14:
 179               		.cfi_endproc
 180               	.LFE101:
 182               		.section	.text.del_key,"ax",@progbits
 183               	.global	del_key
 185               	del_key:
 186               	.LVL13:
 187               	.LFB102:
  88:../../tmk_core/common/action_util.c **** #ifdef NKRO_ENABLE
 188               		.loc 1 88 1 is_stmt 1 view -0
 189               		.cfi_startproc
 190               	/* prologue: function */
 191               	/* frame size = 0 */
 192               	/* stack size = 0 */
 193               	.L__stack_usage = 0
  90:../../tmk_core/common/action_util.c ****         del_key_bit(key);
 194               		.loc 1 90 5 view .LVU40
  90:../../tmk_core/common/action_util.c ****         del_key_bit(key);
 195               		.loc 1 90 8 is_stmt 0 view .LVU41
 196 0000 9091 0000 		lds r25,keyboard_protocol
 197 0004 9923      		tst r25
 198 0006 01F0      		breq .L21
  90:../../tmk_core/common/action_util.c ****         del_key_bit(key);
 199               		.loc 1 90 27 discriminator 1 view .LVU42
 200 0008 9091 0000 		lds r25,keyboard_nkro
 201 000c 9923      		tst r25
 202 000e 01F0      		breq .L21
  91:../../tmk_core/common/action_util.c ****         return;
 203               		.loc 1 91 9 is_stmt 1 view .LVU43
 204               	.LVL14:
 205               	.LBB21:
 206               	.LBI21:
 296:../../tmk_core/common/action_util.c ****     }
 297:../../tmk_core/common/action_util.c **** }
 298:../../tmk_core/common/action_util.c **** 
 299:../../tmk_core/common/action_util.c **** static inline void del_key_bit(uint8_t code)
 207               		.loc 1 299 20 view .LVU44
 208               	.LBB22:
 300:../../tmk_core/common/action_util.c **** {
 301:../../tmk_core/common/action_util.c ****     if ((code>>3) < KEYBOARD_REPORT_BITS) {
 209               		.loc 1 301 5 view .LVU45
 210               		.loc 1 301 19 is_stmt 0 view .LVU46
 211 0010 E82F      		mov r30,r24
 212 0012 E695      		lsr r30
 213 0014 E695      		lsr r30
 214 0016 E695      		lsr r30
 215               		.loc 1 301 8 view .LVU47
 216 0018 EF31      		cpi r30,lo8(31)
 217 001a 01F0      		breq .L22
 302:../../tmk_core/common/action_util.c ****         keyboard_report->nkro.bits[code>>3] &= ~(1<<(code&7));
 218               		.loc 1 302 9 is_stmt 1 view .LVU48
 219               		.loc 1 302 45 is_stmt 0 view .LVU49
 220 001c 2091 0000 		lds r18,keyboard_report
 221 0020 3091 0000 		lds r19,keyboard_report+1
 222 0024 E20F      		add r30,r18
 223 0026 F32F      		mov r31,r19
 224 0028 F11D      		adc r31,__zero_reg__
 225               		.loc 1 302 58 view .LVU50
 226 002a 282F      		mov r18,r24
 227 002c 2770      		andi r18,lo8(7)
 228               		.loc 1 302 51 view .LVU51
 229 002e 81E0      		ldi r24,lo8(1)
 230 0030 90E0      		ldi r25,0
 231               	.LVL15:
 232               		.loc 1 302 51 view .LVU52
 233 0032 00C0      		rjmp 2f
 234               		1:
 235 0034 880F      		lsl r24
 236               		2:
 237 0036 2A95      		dec r18
 238 0038 02F4      		brpl 1b
 239               		.loc 1 302 45 view .LVU53
 240 003a 8095      		com r24
 241 003c 9181      		ldd r25,Z+1
 242 003e 8923      		and r24,r25
 243 0040 8183      		std Z+1,r24
 244 0042 0895      		ret
 245               	.LVL16:
 246               	.L22:
 303:../../tmk_core/common/action_util.c ****     } else {
 304:../../tmk_core/common/action_util.c ****         dprintf("del_key_bit: can't del: %02X\n", code);
 247               		.loc 1 304 9 is_stmt 1 view .LVU54
 248               		.loc 1 304 9 view .LVU55
 249 0044 9091 0000 		lds r25,debug_config
 250 0048 90FF      		sbrs r25,0
 251 004a 00C0      		rjmp .L20
 252               		.loc 1 304 9 view .LVU56
 253               	.LBE22:
 254               	.LBE21:
 255               		.loc 1 304 9 view .LVU57
 256               		.loc 1 304 9 view .LVU58
 257               	.LBB24:
 258               	.LBB23:
 259 004c 1F92      		push __zero_reg__
 260               	.LCFI5:
 261               		.cfi_def_cfa_offset 3
 262 004e 8F93      		push r24
 263               	.LCFI6:
 264               		.cfi_def_cfa_offset 4
 265 0050 80E0      		ldi r24,lo8(__c.4917)
 266 0052 90E0      		ldi r25,hi8(__c.4917)
 267               	.LVL17:
 268               		.loc 1 304 9 is_stmt 0 view .LVU59
 269 0054 9F93      		push r25
 270               	.LCFI7:
 271               		.cfi_def_cfa_offset 5
 272               	.LVL18:
 273               		.loc 1 304 9 view .LVU60
 274 0056 8F93      		push r24
 275               	.LCFI8:
 276               		.cfi_def_cfa_offset 6
 277 0058 0E94 0000 		call __xprintf
 278               	.LVL19:
 279               		.loc 1 304 9 view .LVU61
 280 005c 0F90      		pop __tmp_reg__
 281 005e 0F90      		pop __tmp_reg__
 282 0060 0F90      		pop __tmp_reg__
 283 0062 0F90      		pop __tmp_reg__
 284               	.LCFI9:
 285               		.cfi_def_cfa_offset 2
 286 0064 0895      		ret
 287               	.LVL20:
 288               	.L21:
 289               		.loc 1 304 9 view .LVU62
 290               	.LBE23:
 291               	.LBE24:
 292               	.LBB25:
 293               	.LBB26:
 282:../../tmk_core/common/action_util.c ****             keyboard_report->keys[i] = 0;
 294               		.loc 1 282 28 view .LVU63
 295 0066 2091 0000 		lds r18,keyboard_report
 296 006a 3091 0000 		lds r19,keyboard_report+1
 297 006e F901      		movw r30,r18
 298 0070 3296      		adiw r30,2
 299 0072 205E      		subi r18,-32
 300 0074 3F4F      		sbci r19,-1
 301               	.L26:
 302               	.LVL21:
 282:../../tmk_core/common/action_util.c ****             keyboard_report->keys[i] = 0;
 303               		.loc 1 282 9 is_stmt 1 view .LVU64
 282:../../tmk_core/common/action_util.c ****             keyboard_report->keys[i] = 0;
 304               		.loc 1 282 34 is_stmt 0 view .LVU65
 305 0076 9191      		ld r25,Z+
 306               	.LVL22:
 282:../../tmk_core/common/action_util.c ****             keyboard_report->keys[i] = 0;
 307               		.loc 1 282 12 view .LVU66
 308 0078 8913      		cpse r24,r25
 309 007a 00C0      		rjmp .L25
 283:../../tmk_core/common/action_util.c ****         }
 310               		.loc 1 283 13 is_stmt 1 view .LVU67
 283:../../tmk_core/common/action_util.c ****         }
 311               		.loc 1 283 38 is_stmt 0 view .LVU68
 312 007c DF01      		movw r26,r30
 313 007e 1197      		sbiw r26,1
 314 0080 1C92      		st X,__zero_reg__
 315               	.L25:
 316               	.LVL23:
 281:../../tmk_core/common/action_util.c ****         if (keyboard_report->keys[i] == code) {
 317               		.loc 1 281 5 view .LVU69
 318 0082 E217      		cp r30,r18
 319 0084 F307      		cpc r31,r19
 320 0086 01F4      		brne .L26
 321               	.LVL24:
 322               	.L20:
 323               	/* epilogue start */
 281:../../tmk_core/common/action_util.c ****         if (keyboard_report->keys[i] == code) {
 324               		.loc 1 281 5 view .LVU70
 325               	.LBE26:
 326               	.LBE25:
  96:../../tmk_core/common/action_util.c **** 
 327               		.loc 1 96 1 view .LVU71
 328 0088 0895      		ret
 329               		.cfi_endproc
 330               	.LFE102:
 332               		.section	.text.clear_keys,"ax",@progbits
 333               	.global	clear_keys
 335               	clear_keys:
 336               	.LFB103:
  99:../../tmk_core/common/action_util.c ****     // not clear mods
 337               		.loc 1 99 1 is_stmt 1 view -0
 338               		.cfi_startproc
 339               	/* prologue: function */
 340               	/* frame size = 0 */
 341               	/* stack size = 0 */
 342               	.L__stack_usage = 0
 101:../../tmk_core/common/action_util.c ****         keyboard_report->raw[i] = 0;
 343               		.loc 1 101 5 view .LVU73
 344               	.LBB27:
 101:../../tmk_core/common/action_util.c ****         keyboard_report->raw[i] = 0;
 345               		.loc 1 101 10 view .LVU74
 346               	.LVL25:
 101:../../tmk_core/common/action_util.c ****         keyboard_report->raw[i] = 0;
 347               		.loc 1 101 10 is_stmt 0 view .LVU75
 348               	.LBE27:
  99:../../tmk_core/common/action_util.c ****     // not clear mods
 349               		.loc 1 99 1 view .LVU76
 350 0000 81E0      		ldi r24,lo8(1)
 351 0002 90E0      		ldi r25,0
 352               	.LVL26:
 353               	.L36:
 354               	.LBB28:
 102:../../tmk_core/common/action_util.c ****     }
 355               		.loc 1 102 9 is_stmt 1 discriminator 3 view .LVU77
 102:../../tmk_core/common/action_util.c ****     }
 356               		.loc 1 102 24 is_stmt 0 discriminator 3 view .LVU78
 357 0004 E091 0000 		lds r30,keyboard_report
 358 0008 F091 0000 		lds r31,keyboard_report+1
 102:../../tmk_core/common/action_util.c ****     }
 359               		.loc 1 102 33 discriminator 3 view .LVU79
 360 000c E80F      		add r30,r24
 361 000e F91F      		adc r31,r25
 362 0010 1082      		st Z,__zero_reg__
 363               	.LVL27:
 102:../../tmk_core/common/action_util.c ****     }
 364               		.loc 1 102 33 discriminator 3 view .LVU80
 365 0012 0196      		adiw r24,1
 366               	.LVL28:
 101:../../tmk_core/common/action_util.c ****         keyboard_report->raw[i] = 0;
 367               		.loc 1 101 5 discriminator 3 view .LVU81
 368 0014 8032      		cpi r24,32
 369 0016 9105      		cpc r25,__zero_reg__
 370 0018 01F4      		brne .L36
 371               	/* epilogue start */
 372               	.LBE28:
 104:../../tmk_core/common/action_util.c **** 
 373               		.loc 1 104 1 view .LVU82
 374 001a 0895      		ret
 375               		.cfi_endproc
 376               	.LFE103:
 378               		.section	.text.get_mods,"ax",@progbits
 379               	.global	get_mods
 381               	get_mods:
 382               	.LFB104:
 108:../../tmk_core/common/action_util.c **** void add_mods(uint8_t mods) { real_mods |= mods; }
 383               		.loc 1 108 24 is_stmt 1 view -0
 384               		.cfi_startproc
 385               	/* prologue: function */
 386               	/* frame size = 0 */
 387               	/* stack size = 0 */
 388               	.L__stack_usage = 0
 108:../../tmk_core/common/action_util.c **** void add_mods(uint8_t mods) { real_mods |= mods; }
 389               		.loc 1 108 26 view .LVU84
 108:../../tmk_core/common/action_util.c **** void add_mods(uint8_t mods) { real_mods |= mods; }
 390               		.loc 1 108 1 is_stmt 0 view .LVU85
 391 0000 8091 0000 		lds r24,real_mods
 392               	/* epilogue start */
 393 0004 0895      		ret
 394               		.cfi_endproc
 395               	.LFE104:
 397               		.section	.text.add_mods,"ax",@progbits
 398               	.global	add_mods
 400               	add_mods:
 401               	.LVL29:
 402               	.LFB105:
 109:../../tmk_core/common/action_util.c **** void del_mods(uint8_t mods) { real_mods &= ~mods; }
 403               		.loc 1 109 29 is_stmt 1 view -0
 404               		.cfi_startproc
 405               	/* prologue: function */
 406               	/* frame size = 0 */
 407               	/* stack size = 0 */
 408               	.L__stack_usage = 0
 109:../../tmk_core/common/action_util.c **** void del_mods(uint8_t mods) { real_mods &= ~mods; }
 409               		.loc 1 109 31 view .LVU87
 109:../../tmk_core/common/action_util.c **** void del_mods(uint8_t mods) { real_mods &= ~mods; }
 410               		.loc 1 109 41 is_stmt 0 view .LVU88
 411 0000 9091 0000 		lds r25,real_mods
 412 0004 892B      		or r24,r25
 413               	.LVL30:
 109:../../tmk_core/common/action_util.c **** void del_mods(uint8_t mods) { real_mods &= ~mods; }
 414               		.loc 1 109 41 view .LVU89
 415 0006 8093 0000 		sts real_mods,r24
 416               	/* epilogue start */
 109:../../tmk_core/common/action_util.c **** void del_mods(uint8_t mods) { real_mods &= ~mods; }
 417               		.loc 1 109 1 view .LVU90
 418 000a 0895      		ret
 419               		.cfi_endproc
 420               	.LFE105:
 422               		.section	.text.del_mods,"ax",@progbits
 423               	.global	del_mods
 425               	del_mods:
 426               	.LVL31:
 427               	.LFB106:
 110:../../tmk_core/common/action_util.c **** void set_mods(uint8_t mods) { real_mods = mods; }
 428               		.loc 1 110 29 is_stmt 1 view -0
 429               		.cfi_startproc
 430               	/* prologue: function */
 431               	/* frame size = 0 */
 432               	/* stack size = 0 */
 433               	.L__stack_usage = 0
 110:../../tmk_core/common/action_util.c **** void set_mods(uint8_t mods) { real_mods = mods; }
 434               		.loc 1 110 31 view .LVU92
 110:../../tmk_core/common/action_util.c **** void set_mods(uint8_t mods) { real_mods = mods; }
 435               		.loc 1 110 41 is_stmt 0 view .LVU93
 436 0000 8095      		com r24
 437               	.LVL32:
 110:../../tmk_core/common/action_util.c **** void set_mods(uint8_t mods) { real_mods = mods; }
 438               		.loc 1 110 41 view .LVU94
 439 0002 9091 0000 		lds r25,real_mods
 440 0006 9823      		and r25,r24
 441 0008 9093 0000 		sts real_mods,r25
 442               	/* epilogue start */
 110:../../tmk_core/common/action_util.c **** void set_mods(uint8_t mods) { real_mods = mods; }
 443               		.loc 1 110 1 view .LVU95
 444 000c 0895      		ret
 445               		.cfi_endproc
 446               	.LFE106:
 448               		.section	.text.set_mods,"ax",@progbits
 449               	.global	set_mods
 451               	set_mods:
 452               	.LVL33:
 453               	.LFB107:
 111:../../tmk_core/common/action_util.c **** void clear_mods(void) { real_mods = 0; }
 454               		.loc 1 111 29 is_stmt 1 view -0
 455               		.cfi_startproc
 456               	/* prologue: function */
 457               	/* frame size = 0 */
 458               	/* stack size = 0 */
 459               	.L__stack_usage = 0
 111:../../tmk_core/common/action_util.c **** void clear_mods(void) { real_mods = 0; }
 460               		.loc 1 111 31 view .LVU97
 111:../../tmk_core/common/action_util.c **** void clear_mods(void) { real_mods = 0; }
 461               		.loc 1 111 41 is_stmt 0 view .LVU98
 462 0000 8093 0000 		sts real_mods,r24
 463               	/* epilogue start */
 111:../../tmk_core/common/action_util.c **** void clear_mods(void) { real_mods = 0; }
 464               		.loc 1 111 1 view .LVU99
 465 0004 0895      		ret
 466               		.cfi_endproc
 467               	.LFE107:
 469               		.section	.text.clear_mods,"ax",@progbits
 470               	.global	clear_mods
 472               	clear_mods:
 473               	.LFB108:
 112:../../tmk_core/common/action_util.c **** 
 474               		.loc 1 112 23 is_stmt 1 view -0
 475               		.cfi_startproc
 476               	/* prologue: function */
 477               	/* frame size = 0 */
 478               	/* stack size = 0 */
 479               	.L__stack_usage = 0
 112:../../tmk_core/common/action_util.c **** 
 480               		.loc 1 112 25 view .LVU101
 112:../../tmk_core/common/action_util.c **** 
 481               		.loc 1 112 35 is_stmt 0 view .LVU102
 482 0000 1092 0000 		sts real_mods,__zero_reg__
 483               	/* epilogue start */
 112:../../tmk_core/common/action_util.c **** 
 484               		.loc 1 112 1 view .LVU103
 485 0004 0895      		ret
 486               		.cfi_endproc
 487               	.LFE108:
 489               		.section	.text.get_weak_mods,"ax",@progbits
 490               	.global	get_weak_mods
 492               	get_weak_mods:
 493               	.LFB109:
 115:../../tmk_core/common/action_util.c **** void add_weak_mods(uint8_t mods) { weak_mods |= mods; }
 494               		.loc 1 115 29 is_stmt 1 view -0
 495               		.cfi_startproc
 496               	/* prologue: function */
 497               	/* frame size = 0 */
 498               	/* stack size = 0 */
 499               	.L__stack_usage = 0
 115:../../tmk_core/common/action_util.c **** void add_weak_mods(uint8_t mods) { weak_mods |= mods; }
 500               		.loc 1 115 31 view .LVU105
 115:../../tmk_core/common/action_util.c **** void add_weak_mods(uint8_t mods) { weak_mods |= mods; }
 501               		.loc 1 115 1 is_stmt 0 view .LVU106
 502 0000 8091 0000 		lds r24,weak_mods
 503               	/* epilogue start */
 504 0004 0895      		ret
 505               		.cfi_endproc
 506               	.LFE109:
 508               		.section	.text.add_weak_mods,"ax",@progbits
 509               	.global	add_weak_mods
 511               	add_weak_mods:
 512               	.LVL34:
 513               	.LFB110:
 116:../../tmk_core/common/action_util.c **** void del_weak_mods(uint8_t mods) { weak_mods &= ~mods; }
 514               		.loc 1 116 34 is_stmt 1 view -0
 515               		.cfi_startproc
 516               	/* prologue: function */
 517               	/* frame size = 0 */
 518               	/* stack size = 0 */
 519               	.L__stack_usage = 0
 116:../../tmk_core/common/action_util.c **** void del_weak_mods(uint8_t mods) { weak_mods &= ~mods; }
 520               		.loc 1 116 36 view .LVU108
 116:../../tmk_core/common/action_util.c **** void del_weak_mods(uint8_t mods) { weak_mods &= ~mods; }
 521               		.loc 1 116 46 is_stmt 0 view .LVU109
 522 0000 9091 0000 		lds r25,weak_mods
 523 0004 892B      		or r24,r25
 524               	.LVL35:
 116:../../tmk_core/common/action_util.c **** void del_weak_mods(uint8_t mods) { weak_mods &= ~mods; }
 525               		.loc 1 116 46 view .LVU110
 526 0006 8093 0000 		sts weak_mods,r24
 527               	/* epilogue start */
 116:../../tmk_core/common/action_util.c **** void del_weak_mods(uint8_t mods) { weak_mods &= ~mods; }
 528               		.loc 1 116 1 view .LVU111
 529 000a 0895      		ret
 530               		.cfi_endproc
 531               	.LFE110:
 533               		.section	.text.del_weak_mods,"ax",@progbits
 534               	.global	del_weak_mods
 536               	del_weak_mods:
 537               	.LVL36:
 538               	.LFB111:
 117:../../tmk_core/common/action_util.c **** void set_weak_mods(uint8_t mods) { weak_mods = mods; }
 539               		.loc 1 117 34 is_stmt 1 view -0
 540               		.cfi_startproc
 541               	/* prologue: function */
 542               	/* frame size = 0 */
 543               	/* stack size = 0 */
 544               	.L__stack_usage = 0
 117:../../tmk_core/common/action_util.c **** void set_weak_mods(uint8_t mods) { weak_mods = mods; }
 545               		.loc 1 117 36 view .LVU113
 117:../../tmk_core/common/action_util.c **** void set_weak_mods(uint8_t mods) { weak_mods = mods; }
 546               		.loc 1 117 46 is_stmt 0 view .LVU114
 547 0000 8095      		com r24
 548               	.LVL37:
 117:../../tmk_core/common/action_util.c **** void set_weak_mods(uint8_t mods) { weak_mods = mods; }
 549               		.loc 1 117 46 view .LVU115
 550 0002 9091 0000 		lds r25,weak_mods
 551 0006 9823      		and r25,r24
 552 0008 9093 0000 		sts weak_mods,r25
 553               	/* epilogue start */
 117:../../tmk_core/common/action_util.c **** void set_weak_mods(uint8_t mods) { weak_mods = mods; }
 554               		.loc 1 117 1 view .LVU116
 555 000c 0895      		ret
 556               		.cfi_endproc
 557               	.LFE111:
 559               		.section	.text.set_weak_mods,"ax",@progbits
 560               	.global	set_weak_mods
 562               	set_weak_mods:
 563               	.LVL38:
 564               	.LFB112:
 118:../../tmk_core/common/action_util.c **** void clear_weak_mods(void) { weak_mods = 0; }
 565               		.loc 1 118 34 is_stmt 1 view -0
 566               		.cfi_startproc
 567               	/* prologue: function */
 568               	/* frame size = 0 */
 569               	/* stack size = 0 */
 570               	.L__stack_usage = 0
 118:../../tmk_core/common/action_util.c **** void clear_weak_mods(void) { weak_mods = 0; }
 571               		.loc 1 118 36 view .LVU118
 118:../../tmk_core/common/action_util.c **** void clear_weak_mods(void) { weak_mods = 0; }
 572               		.loc 1 118 46 is_stmt 0 view .LVU119
 573 0000 8093 0000 		sts weak_mods,r24
 574               	/* epilogue start */
 118:../../tmk_core/common/action_util.c **** void clear_weak_mods(void) { weak_mods = 0; }
 575               		.loc 1 118 1 view .LVU120
 576 0004 0895      		ret
 577               		.cfi_endproc
 578               	.LFE112:
 580               		.section	.text.clear_weak_mods,"ax",@progbits
 581               	.global	clear_weak_mods
 583               	clear_weak_mods:
 584               	.LFB113:
 119:../../tmk_core/common/action_util.c **** 
 585               		.loc 1 119 28 is_stmt 1 view -0
 586               		.cfi_startproc
 587               	/* prologue: function */
 588               	/* frame size = 0 */
 589               	/* stack size = 0 */
 590               	.L__stack_usage = 0
 119:../../tmk_core/common/action_util.c **** 
 591               		.loc 1 119 30 view .LVU122
 119:../../tmk_core/common/action_util.c **** 
 592               		.loc 1 119 40 is_stmt 0 view .LVU123
 593 0000 1092 0000 		sts weak_mods,__zero_reg__
 594               	/* epilogue start */
 119:../../tmk_core/common/action_util.c **** 
 595               		.loc 1 119 1 view .LVU124
 596 0004 0895      		ret
 597               		.cfi_endproc
 598               	.LFE113:
 600               		.section	.text.set_oneshot_mods,"ax",@progbits
 601               	.global	set_oneshot_mods
 603               	set_oneshot_mods:
 604               	.LVL39:
 605               	.LFB114:
 124:../../tmk_core/common/action_util.c ****     oneshot_mods = mods;
 606               		.loc 1 124 1 is_stmt 1 view -0
 607               		.cfi_startproc
 608               	/* prologue: function */
 609               	/* frame size = 0 */
 610               	/* stack size = 0 */
 611               	.L__stack_usage = 0
 125:../../tmk_core/common/action_util.c **** #if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 612               		.loc 1 125 5 view .LVU126
 125:../../tmk_core/common/action_util.c **** #if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 613               		.loc 1 125 18 is_stmt 0 view .LVU127
 614 0000 8093 0000 		sts oneshot_mods,r24
 615               	/* epilogue start */
 129:../../tmk_core/common/action_util.c **** void clear_oneshot_mods(void)
 616               		.loc 1 129 1 view .LVU128
 617 0004 0895      		ret
 618               		.cfi_endproc
 619               	.LFE114:
 621               		.section	.text.clear_oneshot_mods,"ax",@progbits
 622               	.global	clear_oneshot_mods
 624               	clear_oneshot_mods:
 625               	.LFB115:
 131:../../tmk_core/common/action_util.c ****     oneshot_mods = 0;
 626               		.loc 1 131 1 is_stmt 1 view -0
 627               		.cfi_startproc
 628               	/* prologue: function */
 629               	/* frame size = 0 */
 630               	/* stack size = 0 */
 631               	.L__stack_usage = 0
 132:../../tmk_core/common/action_util.c **** #if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 632               		.loc 1 132 5 view .LVU130
 132:../../tmk_core/common/action_util.c **** #if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 633               		.loc 1 132 18 is_stmt 0 view .LVU131
 634 0000 1092 0000 		sts oneshot_mods,__zero_reg__
 635               	/* epilogue start */
 136:../../tmk_core/common/action_util.c **** #endif
 636               		.loc 1 136 1 view .LVU132
 637 0004 0895      		ret
 638               		.cfi_endproc
 639               	.LFE115:
 641               		.section	.text.has_anykey,"ax",@progbits
 642               	.global	has_anykey
 644               	has_anykey:
 645               	.LFB116:
 146:../../tmk_core/common/action_util.c ****     uint8_t cnt = 0;
 646               		.loc 1 146 1 is_stmt 1 view -0
 647               		.cfi_startproc
 648               	/* prologue: function */
 649               	/* frame size = 0 */
 650               	/* stack size = 0 */
 651               	.L__stack_usage = 0
 147:../../tmk_core/common/action_util.c ****     for (uint8_t i = 1; i < KEYBOARD_REPORT_SIZE; i++) {
 652               		.loc 1 147 5 view .LVU134
 653               	.LVL40:
 148:../../tmk_core/common/action_util.c ****         if (keyboard_report->raw[i])
 654               		.loc 1 148 5 view .LVU135
 655               	.LBB29:
 148:../../tmk_core/common/action_util.c ****         if (keyboard_report->raw[i])
 656               		.loc 1 148 10 view .LVU136
 149:../../tmk_core/common/action_util.c ****             cnt++;
 657               		.loc 1 149 28 is_stmt 0 view .LVU137
 658 0000 2091 0000 		lds r18,keyboard_report
 659 0004 3091 0000 		lds r19,keyboard_report+1
 660 0008 F901      		movw r30,r18
 661 000a 3196      		adiw r30,1
 662 000c 205E      		subi r18,-32
 663 000e 3F4F      		sbci r19,-1
 664               	.LBE29:
 147:../../tmk_core/common/action_util.c ****     for (uint8_t i = 1; i < KEYBOARD_REPORT_SIZE; i++) {
 665               		.loc 1 147 13 view .LVU138
 666 0010 80E0      		ldi r24,0
 667               	.LVL41:
 668               	.L52:
 669               	.LBB30:
 149:../../tmk_core/common/action_util.c ****             cnt++;
 670               		.loc 1 149 9 is_stmt 1 view .LVU139
 149:../../tmk_core/common/action_util.c ****             cnt++;
 671               		.loc 1 149 33 is_stmt 0 view .LVU140
 672 0012 9191      		ld r25,Z+
 673               	.LVL42:
 149:../../tmk_core/common/action_util.c ****             cnt++;
 674               		.loc 1 149 12 view .LVU141
 675 0014 9111      		cpse r25,__zero_reg__
 150:../../tmk_core/common/action_util.c ****     }
 676               		.loc 1 150 13 is_stmt 1 view .LVU142
 150:../../tmk_core/common/action_util.c ****     }
 677               		.loc 1 150 16 is_stmt 0 view .LVU143
 678 0016 8F5F      		subi r24,lo8(-(1))
 679               	.LVL43:
 680               	.L51:
 148:../../tmk_core/common/action_util.c ****         if (keyboard_report->raw[i])
 681               		.loc 1 148 5 discriminator 2 view .LVU144
 682 0018 E217      		cp r30,r18
 683 001a F307      		cpc r31,r19
 684 001c 01F4      		brne .L52
 685               	/* epilogue start */
 148:../../tmk_core/common/action_util.c ****         if (keyboard_report->raw[i])
 686               		.loc 1 148 5 discriminator 2 view .LVU145
 687               	.LBE30:
 153:../../tmk_core/common/action_util.c **** 
 688               		.loc 1 153 1 view .LVU146
 689 001e 0895      		ret
 690               		.cfi_endproc
 691               	.LFE116:
 693               		.section	.text.send_keyboard_report,"ax",@progbits
 694               	.global	send_keyboard_report
 696               	send_keyboard_report:
 697               	.LFB100:
  55:../../tmk_core/common/action_util.c ****     keyboard_report->mods  = real_mods;
 698               		.loc 1 55 33 is_stmt 1 view -0
 699               		.cfi_startproc
 700               	/* prologue: function */
 701               	/* frame size = 0 */
 702               	/* stack size = 0 */
 703               	.L__stack_usage = 0
  56:../../tmk_core/common/action_util.c ****     keyboard_report->mods |= weak_mods;
 704               		.loc 1 56 5 view .LVU148
  56:../../tmk_core/common/action_util.c ****     keyboard_report->mods |= weak_mods;
 705               		.loc 1 56 20 is_stmt 0 view .LVU149
 706 0000 E091 0000 		lds r30,keyboard_report
 707 0004 F091 0000 		lds r31,keyboard_report+1
  56:../../tmk_core/common/action_util.c ****     keyboard_report->mods |= weak_mods;
 708               		.loc 1 56 28 view .LVU150
 709 0008 8091 0000 		lds r24,real_mods
 710 000c 8083      		st Z,r24
  57:../../tmk_core/common/action_util.c **** #ifndef NO_ACTION_ONESHOT
 711               		.loc 1 57 5 is_stmt 1 view .LVU151
  57:../../tmk_core/common/action_util.c **** #ifndef NO_ACTION_ONESHOT
 712               		.loc 1 57 27 is_stmt 0 view .LVU152
 713 000e E091 0000 		lds r30,keyboard_report
 714 0012 F091 0000 		lds r31,keyboard_report+1
 715 0016 8081      		ld r24,Z
 716 0018 9091 0000 		lds r25,weak_mods
 717 001c 892B      		or r24,r25
 718 001e 8083      		st Z,r24
  59:../../tmk_core/common/action_util.c **** #if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 719               		.loc 1 59 5 is_stmt 1 view .LVU153
  59:../../tmk_core/common/action_util.c **** #if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 720               		.loc 1 59 9 is_stmt 0 view .LVU154
 721 0020 9091 0000 		lds r25,oneshot_mods
  59:../../tmk_core/common/action_util.c **** #if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 722               		.loc 1 59 8 view .LVU155
 723 0024 9923      		tst r25
 724 0026 01F0      		breq .L59
  66:../../tmk_core/common/action_util.c ****         if (has_anykey()) {
 725               		.loc 1 66 9 is_stmt 1 view .LVU156
  66:../../tmk_core/common/action_util.c ****         if (has_anykey()) {
 726               		.loc 1 66 31 is_stmt 0 view .LVU157
 727 0028 E091 0000 		lds r30,keyboard_report
 728 002c F091 0000 		lds r31,keyboard_report+1
 729 0030 8081      		ld r24,Z
 730 0032 892B      		or r24,r25
 731 0034 8083      		st Z,r24
  67:../../tmk_core/common/action_util.c ****             clear_oneshot_mods();
 732               		.loc 1 67 9 is_stmt 1 view .LVU158
  67:../../tmk_core/common/action_util.c ****             clear_oneshot_mods();
 733               		.loc 1 67 13 is_stmt 0 view .LVU159
 734 0036 0E94 0000 		call has_anykey
 735               	.LVL44:
  67:../../tmk_core/common/action_util.c ****             clear_oneshot_mods();
 736               		.loc 1 67 12 view .LVU160
 737 003a 8111      		cpse r24,__zero_reg__
  68:../../tmk_core/common/action_util.c ****         }
 738               		.loc 1 68 13 is_stmt 1 view .LVU161
 739               	.LBB33:
 740               	.LBI33:
 130:../../tmk_core/common/action_util.c **** {
 741               		.loc 1 130 6 view .LVU162
 742               	.LBB34:
 132:../../tmk_core/common/action_util.c **** #if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 743               		.loc 1 132 5 view .LVU163
 132:../../tmk_core/common/action_util.c **** #if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 744               		.loc 1 132 18 is_stmt 0 view .LVU164
 745 003c 1092 0000 		sts oneshot_mods,__zero_reg__
 746               	.L59:
 747               	.LBE34:
 748               	.LBE33:
  72:../../tmk_core/common/action_util.c **** }
 749               		.loc 1 72 5 is_stmt 1 view .LVU165
 750 0040 8091 0000 		lds r24,keyboard_report
 751 0044 9091 0000 		lds r25,keyboard_report+1
 752 0048 0C94 0000 		jmp host_keyboard_send
 753               	.LVL45:
 754               		.cfi_endproc
 755               	.LFE100:
 757               		.section	.text.has_anymod,"ax",@progbits
 758               	.global	has_anymod
 760               	has_anymod:
 761               	.LFB117:
 156:../../tmk_core/common/action_util.c ****     return bitpop(real_mods);
 762               		.loc 1 156 1 view -0
 763               		.cfi_startproc
 764               	/* prologue: function */
 765               	/* frame size = 0 */
 766               	/* stack size = 0 */
 767               	.L__stack_usage = 0
 157:../../tmk_core/common/action_util.c **** }
 768               		.loc 1 157 5 view .LVU167
 157:../../tmk_core/common/action_util.c **** }
 769               		.loc 1 157 12 is_stmt 0 view .LVU168
 770 0000 8091 0000 		lds r24,real_mods
 771 0004 0C94 0000 		jmp bitpop
 772               	.LVL46:
 773               		.cfi_endproc
 774               	.LFE117:
 776               		.section	.text.get_first_key,"ax",@progbits
 777               	.global	get_first_key
 779               	get_first_key:
 780               	.LFB118:
 161:../../tmk_core/common/action_util.c **** #ifdef NKRO_ENABLE
 781               		.loc 1 161 1 is_stmt 1 view -0
 782               		.cfi_startproc
 783 0000 CF93      		push r28
 784               	.LCFI10:
 785               		.cfi_def_cfa_offset 3
 786               		.cfi_offset 28, -2
 787 0002 DF93      		push r29
 788               	.LCFI11:
 789               		.cfi_def_cfa_offset 4
 790               		.cfi_offset 29, -3
 791               	/* prologue: function */
 792               	/* frame size = 0 */
 793               	/* stack size = 2 */
 794               	.L__stack_usage = 2
 163:../../tmk_core/common/action_util.c ****         uint8_t i = 0;
 795               		.loc 1 163 5 view .LVU170
 796 0004 E091 0000 		lds r30,keyboard_report
 797 0008 F091 0000 		lds r31,keyboard_report+1
 163:../../tmk_core/common/action_util.c ****         uint8_t i = 0;
 798               		.loc 1 163 8 is_stmt 0 view .LVU171
 799 000c 8091 0000 		lds r24,keyboard_protocol
 800 0010 8823      		tst r24
 801 0012 01F0      		breq .L66
 163:../../tmk_core/common/action_util.c ****         uint8_t i = 0;
 802               		.loc 1 163 27 discriminator 1 view .LVU172
 803 0014 8091 0000 		lds r24,keyboard_nkro
 804 0018 DF01      		movw r26,r30
 805 001a 1196      		adiw r26,1
 806               	.LBB35:
 164:../../tmk_core/common/action_util.c ****         for (; i < KEYBOARD_REPORT_BITS && !keyboard_report->nkro.bits[i]; i++)
 807               		.loc 1 164 17 discriminator 1 view .LVU173
 808 001c C0E0      		ldi r28,0
 809               	.LBE35:
 163:../../tmk_core/common/action_util.c ****         uint8_t i = 0;
 810               		.loc 1 163 27 discriminator 1 view .LVU174
 811 001e 8111      		cpse r24,__zero_reg__
 812 0020 00C0      		rjmp .L67
 813               	.L66:
 180:../../tmk_core/common/action_util.c **** #endif
 814               		.loc 1 180 5 is_stmt 1 view .LVU175
 180:../../tmk_core/common/action_util.c **** #endif
 815               		.loc 1 180 33 is_stmt 0 view .LVU176
 816 0022 8281      		ldd r24,Z+2
 817 0024 00C0      		rjmp .L65
 818               	.LVL47:
 819               	.L69:
 820               	.LBB36:
 166:../../tmk_core/common/action_util.c ****         return i<<3 | biton(keyboard_report->nkro.bits[i]);
 821               		.loc 1 166 13 is_stmt 1 discriminator 3 view .LVU177
 165:../../tmk_core/common/action_util.c ****             ;
 822               		.loc 1 165 77 is_stmt 0 discriminator 3 view .LVU178
 823 0026 CF5F      		subi r28,lo8(-(1))
 824               	.LVL48:
 165:../../tmk_core/common/action_util.c ****             ;
 825               		.loc 1 165 9 discriminator 3 view .LVU179
 826 0028 CF31      		cpi r28,lo8(31)
 827 002a 01F0      		breq .L68
 828               	.LVL49:
 829               	.L67:
 165:../../tmk_core/common/action_util.c ****             ;
 830               		.loc 1 165 71 discriminator 2 view .LVU180
 831 002c 8D91      		ld r24,X+
 165:../../tmk_core/common/action_util.c ****             ;
 832               		.loc 1 165 41 discriminator 2 view .LVU181
 833 002e 8823      		tst r24
 834 0030 01F0      		breq .L69
 835               	.L68:
 167:../../tmk_core/common/action_util.c ****     }
 836               		.loc 1 167 9 is_stmt 1 view .LVU182
 167:../../tmk_core/common/action_util.c ****     }
 837               		.loc 1 167 17 is_stmt 0 view .LVU183
 838 0032 D0E0      		ldi r29,0
 167:../../tmk_core/common/action_util.c ****     }
 839               		.loc 1 167 23 view .LVU184
 840 0034 EC0F      		add r30,r28
 841 0036 FD1F      		adc r31,r29
 842 0038 8181      		ldd r24,Z+1
 843 003a 0E94 0000 		call biton
 844               	.LVL50:
 167:../../tmk_core/common/action_util.c ****     }
 845               		.loc 1 167 17 view .LVU185
 846 003e 93E0      		ldi r25,3
 847               		1:
 848 0040 CC0F      		lsl r28
 849 0042 DD1F      		rol r29
 850 0044 9A95      		dec r25
 851 0046 01F4      		brne 1b
 852               	.LVL51:
 167:../../tmk_core/common/action_util.c ****     }
 853               		.loc 1 167 21 view .LVU186
 854 0048 8C2B      		or r24,r28
 855               	.L65:
 856               	/* epilogue start */
 167:../../tmk_core/common/action_util.c ****     }
 857               		.loc 1 167 21 view .LVU187
 858               	.LBE36:
 182:../../tmk_core/common/action_util.c **** 
 859               		.loc 1 182 1 view .LVU188
 860 004a DF91      		pop r29
 861 004c CF91      		pop r28
 862 004e 0895      		ret
 863               		.cfi_endproc
 864               	.LFE118:
 866               		.section	.progmem.data.__c.4917,"a"
 869               	__c.4917:
 870 0000 6465 6C5F 		.string	"del_key_bit: can't del: %02X\n"
 870      6B65 795F 
 870      6269 743A 
 870      2063 616E 
 870      2774 2064 
 871               		.section	.progmem.data.__c.4912,"a"
 874               	__c.4912:
 875 0000 6164 645F 		.string	"add_key_bit: can't add: %02X\n"
 875      6B65 795F 
 875      6269 743A 
 875      2063 616E 
 875      2774 2061 
 876               		.section	.bss.oneshot_mods,"aw",@nobits
 879               	oneshot_mods:
 880 0000 00        		.zero	1
 881               	.global	keyboard_report
 882               		.section	.data.keyboard_report,"aw"
 885               	keyboard_report:
 886 0000 0000      		.word	__compound_literal.0
 887               		.section	.bss.__compound_literal.0,"aw",@nobits
 890               	__compound_literal.0:
 891 0000 0000 0000 		.zero	32
 891      0000 0000 
 891      0000 0000 
 891      0000 0000 
 891      0000 0000 
 892               		.section	.bss.weak_mods,"aw",@nobits
 895               	weak_mods:
 896 0000 00        		.zero	1
 897               		.section	.bss.real_mods,"aw",@nobits
 900               	real_mods:
 901 0000 00        		.zero	1
 902               		.text
 903               	.Letext0:
 904               		.file 2 "/usr/avr/include/stdint.h"
 905               		.file 3 "../../tmk_core/protocol/lufa/lufa-abcminiuser/LUFA/Drivers/USB/Core/AVR8/../StdRequestTyp
 906               		.file 4 "../../tmk_core/protocol/lufa/lufa-abcminiuser/LUFA/Drivers/USB/Core/AVR8/../DeviceStandar
 907               		.file 5 "../../tmk_core/protocol/lufa/lufa-abcminiuser/LUFA/Drivers/USB/Core/USBTask.h"
 908               		.file 6 "../../tmk_core/protocol/lufa/lufa-abcminiuser/LUFA/Drivers/USB/Core/HostStandardReq.h"
 909               		.file 7 "/usr/avr/include/stdio.h"
 910               		.file 8 "../../tmk_core/common/report.h"
 911               		.file 9 "../../tmk_core/common/host.h"
 912               		.file 10 "../../tmk_core/common/avr/xprintf.h"
 913               		.file 11 "../../tmk_core/common/debug.h"
 914               		.file 12 "../../tmk_core/common/action_util.h"
 915               		.file 13 "../../tmk_core/common/timer.h"
 916               		.file 14 "../../tmk_core/common/util.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 action_util.c
     /tmp/ccpMJykx.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccpMJykx.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccpMJykx.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccpMJykx.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccpMJykx.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccpMJykx.s:13     .text.add_key:0000000000000000 add_key
     /tmp/ccpMJykx.s:885    .data.keyboard_report:0000000000000000 keyboard_report
     /tmp/ccpMJykx.s:874    .progmem.data.__c.4912:0000000000000000 __c.4912
     /tmp/ccpMJykx.s:185    .text.del_key:0000000000000000 del_key
     /tmp/ccpMJykx.s:869    .progmem.data.__c.4917:0000000000000000 __c.4917
     /tmp/ccpMJykx.s:335    .text.clear_keys:0000000000000000 clear_keys
     /tmp/ccpMJykx.s:381    .text.get_mods:0000000000000000 get_mods
     /tmp/ccpMJykx.s:900    .bss.real_mods:0000000000000000 real_mods
     /tmp/ccpMJykx.s:400    .text.add_mods:0000000000000000 add_mods
     /tmp/ccpMJykx.s:425    .text.del_mods:0000000000000000 del_mods
     /tmp/ccpMJykx.s:451    .text.set_mods:0000000000000000 set_mods
     /tmp/ccpMJykx.s:472    .text.clear_mods:0000000000000000 clear_mods
     /tmp/ccpMJykx.s:492    .text.get_weak_mods:0000000000000000 get_weak_mods
     /tmp/ccpMJykx.s:895    .bss.weak_mods:0000000000000000 weak_mods
     /tmp/ccpMJykx.s:511    .text.add_weak_mods:0000000000000000 add_weak_mods
     /tmp/ccpMJykx.s:536    .text.del_weak_mods:0000000000000000 del_weak_mods
     /tmp/ccpMJykx.s:562    .text.set_weak_mods:0000000000000000 set_weak_mods
     /tmp/ccpMJykx.s:583    .text.clear_weak_mods:0000000000000000 clear_weak_mods
     /tmp/ccpMJykx.s:603    .text.set_oneshot_mods:0000000000000000 set_oneshot_mods
     /tmp/ccpMJykx.s:879    .bss.oneshot_mods:0000000000000000 oneshot_mods
     /tmp/ccpMJykx.s:624    .text.clear_oneshot_mods:0000000000000000 clear_oneshot_mods
     /tmp/ccpMJykx.s:644    .text.has_anykey:0000000000000000 has_anykey
     /tmp/ccpMJykx.s:696    .text.send_keyboard_report:0000000000000000 send_keyboard_report
     /tmp/ccpMJykx.s:760    .text.has_anymod:0000000000000000 has_anymod
     /tmp/ccpMJykx.s:779    .text.get_first_key:0000000000000000 get_first_key
     /tmp/ccpMJykx.s:890    .bss.__compound_literal.0:0000000000000000 __compound_literal.0

UNDEFINED SYMBOLS
keyboard_protocol
keyboard_nkro
debug_config
__xprintf
host_keyboard_send
bitpop
biton
__do_copy_data
__do_clear_bss
