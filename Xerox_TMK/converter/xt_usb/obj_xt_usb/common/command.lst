   1               		.file	"command.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.mousekey_console_help,"ax",@progbits
  12               	mousekey_console_help:
  13               	.LFB113:
  14               		.file 1 "../../tmk_core/common/command.c"
   1:../../tmk_core/common/command.c **** /*
   2:../../tmk_core/common/command.c **** Copyright 2011 Jun Wako <wakojun@gmail.com>
   3:../../tmk_core/common/command.c **** 
   4:../../tmk_core/common/command.c **** This program is free software: you can redistribute it and/or modify
   5:../../tmk_core/common/command.c **** it under the terms of the GNU General Public License as published by
   6:../../tmk_core/common/command.c **** the Free Software Foundation, either version 2 of the License, or
   7:../../tmk_core/common/command.c **** (at your option) any later version.
   8:../../tmk_core/common/command.c **** 
   9:../../tmk_core/common/command.c **** This program is distributed in the hope that it will be useful,
  10:../../tmk_core/common/command.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:../../tmk_core/common/command.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:../../tmk_core/common/command.c **** GNU General Public License for more details.
  13:../../tmk_core/common/command.c **** 
  14:../../tmk_core/common/command.c **** You should have received a copy of the GNU General Public License
  15:../../tmk_core/common/command.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:../../tmk_core/common/command.c **** */
  17:../../tmk_core/common/command.c **** #include <stdint.h>
  18:../../tmk_core/common/command.c **** #include <stdbool.h>
  19:../../tmk_core/common/command.c **** #include "wait.h"
  20:../../tmk_core/common/command.c **** #include "keycode.h"
  21:../../tmk_core/common/command.c **** #include "host.h"
  22:../../tmk_core/common/command.c **** #include "keymap.h"
  23:../../tmk_core/common/command.c **** #include "print.h"
  24:../../tmk_core/common/command.c **** #include "debug.h"
  25:../../tmk_core/common/command.c **** #include "util.h"
  26:../../tmk_core/common/command.c **** #include "timer.h"
  27:../../tmk_core/common/command.c **** #include "keyboard.h"
  28:../../tmk_core/common/command.c **** #include "bootloader.h"
  29:../../tmk_core/common/command.c **** #include "action_layer.h"
  30:../../tmk_core/common/command.c **** #include "action_util.h"
  31:../../tmk_core/common/command.c **** #include "eeconfig.h"
  32:../../tmk_core/common/command.c **** #include "sleep_led.h"
  33:../../tmk_core/common/command.c **** #include "led.h"
  34:../../tmk_core/common/command.c **** #include "command.h"
  35:../../tmk_core/common/command.c **** #include "backlight.h"
  36:../../tmk_core/common/command.c **** 
  37:../../tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
  38:../../tmk_core/common/command.c **** #include "mousekey.h"
  39:../../tmk_core/common/command.c **** #endif
  40:../../tmk_core/common/command.c **** 
  41:../../tmk_core/common/command.c **** #ifdef PROTOCOL_PJRC
  42:../../tmk_core/common/command.c **** #   include "usb_keyboard.h"
  43:../../tmk_core/common/command.c **** #   ifdef EXTRAKEY_ENABLE
  44:../../tmk_core/common/command.c **** #       include "usb_extra.h"
  45:../../tmk_core/common/command.c **** #   endif
  46:../../tmk_core/common/command.c **** #endif
  47:../../tmk_core/common/command.c **** 
  48:../../tmk_core/common/command.c **** #ifdef PROTOCOL_VUSB
  49:../../tmk_core/common/command.c **** #   include "usbdrv.h"
  50:../../tmk_core/common/command.c **** #endif
  51:../../tmk_core/common/command.c **** 
  52:../../tmk_core/common/command.c **** 
  53:../../tmk_core/common/command.c **** static bool command_common(uint8_t code);
  54:../../tmk_core/common/command.c **** static void command_common_help(void);
  55:../../tmk_core/common/command.c **** static bool command_console(uint8_t code);
  56:../../tmk_core/common/command.c **** static void command_console_help(void);
  57:../../tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
  58:../../tmk_core/common/command.c **** static bool mousekey_console(uint8_t code);
  59:../../tmk_core/common/command.c **** static void mousekey_console_help(void);
  60:../../tmk_core/common/command.c **** static uint8_t numkey2num(uint8_t code);
  61:../../tmk_core/common/command.c **** #endif
  62:../../tmk_core/common/command.c **** 
  63:../../tmk_core/common/command.c **** 
  64:../../tmk_core/common/command.c **** static void switch_default_layer(uint8_t layer);
  65:../../tmk_core/common/command.c **** 
  66:../../tmk_core/common/command.c **** 
  67:../../tmk_core/common/command.c **** command_state_t command_state = ONESHOT;
  68:../../tmk_core/common/command.c **** 
  69:../../tmk_core/common/command.c **** 
  70:../../tmk_core/common/command.c **** bool command_proc(uint8_t code)
  71:../../tmk_core/common/command.c **** {
  72:../../tmk_core/common/command.c ****     switch (command_state) {
  73:../../tmk_core/common/command.c ****         case ONESHOT:
  74:../../tmk_core/common/command.c ****             if (!IS_COMMAND())
  75:../../tmk_core/common/command.c ****                 return false;
  76:../../tmk_core/common/command.c ****             return (command_extra(code) || command_common(code));
  77:../../tmk_core/common/command.c ****             break;
  78:../../tmk_core/common/command.c ****         case CONSOLE:
  79:../../tmk_core/common/command.c ****             if (IS_COMMAND())
  80:../../tmk_core/common/command.c ****                 return (command_extra(code) || command_common(code));
  81:../../tmk_core/common/command.c ****             else
  82:../../tmk_core/common/command.c ****                 return (command_console_extra(code) || command_console(code));
  83:../../tmk_core/common/command.c ****             break;
  84:../../tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
  85:../../tmk_core/common/command.c ****         case MOUSEKEY:
  86:../../tmk_core/common/command.c ****             mousekey_console(code);
  87:../../tmk_core/common/command.c ****             break;
  88:../../tmk_core/common/command.c **** #endif
  89:../../tmk_core/common/command.c ****         default:
  90:../../tmk_core/common/command.c ****             command_state = ONESHOT;
  91:../../tmk_core/common/command.c ****             return false;
  92:../../tmk_core/common/command.c ****     }
  93:../../tmk_core/common/command.c ****     return true;
  94:../../tmk_core/common/command.c **** }
  95:../../tmk_core/common/command.c **** 
  96:../../tmk_core/common/command.c **** /* TODO: Refactoring is needed. */
  97:../../tmk_core/common/command.c **** /* This allows to define extra commands. return false when not processed. */
  98:../../tmk_core/common/command.c **** bool command_extra(uint8_t code) __attribute__ ((weak));
  99:../../tmk_core/common/command.c **** bool command_extra(uint8_t code)
 100:../../tmk_core/common/command.c **** {
 101:../../tmk_core/common/command.c ****     (void)code;
 102:../../tmk_core/common/command.c ****     return false;
 103:../../tmk_core/common/command.c **** }
 104:../../tmk_core/common/command.c **** 
 105:../../tmk_core/common/command.c **** bool command_console_extra(uint8_t code) __attribute__ ((weak));
 106:../../tmk_core/common/command.c **** bool command_console_extra(uint8_t code)
 107:../../tmk_core/common/command.c **** {
 108:../../tmk_core/common/command.c ****     (void)code;
 109:../../tmk_core/common/command.c ****     return false;
 110:../../tmk_core/common/command.c **** }
 111:../../tmk_core/common/command.c **** 
 112:../../tmk_core/common/command.c **** 
 113:../../tmk_core/common/command.c **** /***********************************************************
 114:../../tmk_core/common/command.c ****  * Command common
 115:../../tmk_core/common/command.c ****  ***********************************************************/
 116:../../tmk_core/common/command.c **** static void command_common_help(void)
 117:../../tmk_core/common/command.c **** {
 118:../../tmk_core/common/command.c ****     print("\n\t- Magic -\n"
 119:../../tmk_core/common/command.c ****           "d:	debug\n"
 120:../../tmk_core/common/command.c ****           "x:	debug matrix\n"
 121:../../tmk_core/common/command.c ****           "k:	debug keyboard\n"
 122:../../tmk_core/common/command.c ****           "m:	debug mouse\n"
 123:../../tmk_core/common/command.c ****           "v:	version\n"
 124:../../tmk_core/common/command.c ****           "s:	status\n"
 125:../../tmk_core/common/command.c ****           "c:	console mode\n"
 126:../../tmk_core/common/command.c ****           "0-4:	layer0-4(F10-F4)\n"
 127:../../tmk_core/common/command.c ****           "Paus:	bootloader\n"
 128:../../tmk_core/common/command.c **** 
 129:../../tmk_core/common/command.c **** #ifdef KEYBOARD_LOCK_ENABLE
 130:../../tmk_core/common/command.c ****           "Caps:	Lock\n"
 131:../../tmk_core/common/command.c **** #endif
 132:../../tmk_core/common/command.c **** 
 133:../../tmk_core/common/command.c **** #ifdef BOOTMAGIC_ENABLE
 134:../../tmk_core/common/command.c ****           "e:	eeprom\n"
 135:../../tmk_core/common/command.c **** #endif
 136:../../tmk_core/common/command.c **** 
 137:../../tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 138:../../tmk_core/common/command.c ****           "n:	NKRO\n"
 139:../../tmk_core/common/command.c **** #endif
 140:../../tmk_core/common/command.c **** 
 141:../../tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 142:../../tmk_core/common/command.c ****           "z:	sleep LED test\n"
 143:../../tmk_core/common/command.c **** #endif
 144:../../tmk_core/common/command.c ****     );
 145:../../tmk_core/common/command.c **** }
 146:../../tmk_core/common/command.c **** 
 147:../../tmk_core/common/command.c **** #ifdef BOOTMAGIC_ENABLE
 148:../../tmk_core/common/command.c **** static void print_eeconfig(void)
 149:../../tmk_core/common/command.c **** {
 150:../../tmk_core/common/command.c ****     print("default_layer: "); print_dec(eeconfig_read_default_layer()); print("\n");
 151:../../tmk_core/common/command.c **** 
 152:../../tmk_core/common/command.c ****     debug_config_t dc;
 153:../../tmk_core/common/command.c ****     dc.raw = eeconfig_read_debug();
 154:../../tmk_core/common/command.c ****     print("debug_config.raw: "); print_hex8(dc.raw); print("\n");
 155:../../tmk_core/common/command.c ****     print(".enable: "); print_dec(dc.enable); print("\n");
 156:../../tmk_core/common/command.c ****     print(".matrix: "); print_dec(dc.matrix); print("\n");
 157:../../tmk_core/common/command.c ****     print(".keyboard: "); print_dec(dc.keyboard); print("\n");
 158:../../tmk_core/common/command.c ****     print(".mouse: "); print_dec(dc.mouse); print("\n");
 159:../../tmk_core/common/command.c **** 
 160:../../tmk_core/common/command.c ****     keymap_config_t kc;
 161:../../tmk_core/common/command.c ****     kc.raw = eeconfig_read_keymap();
 162:../../tmk_core/common/command.c ****     print("keymap_config.raw: "); print_hex8(kc.raw); print("\n");
 163:../../tmk_core/common/command.c ****     print(".swap_control_capslock: "); print_dec(kc.swap_control_capslock); print("\n");
 164:../../tmk_core/common/command.c ****     print(".capslock_to_control: "); print_dec(kc.capslock_to_control); print("\n");
 165:../../tmk_core/common/command.c ****     print(".swap_lalt_lgui: "); print_dec(kc.swap_lalt_lgui); print("\n");
 166:../../tmk_core/common/command.c ****     print(".swap_ralt_rgui: "); print_dec(kc.swap_ralt_rgui); print("\n");
 167:../../tmk_core/common/command.c ****     print(".no_gui: "); print_dec(kc.no_gui); print("\n");
 168:../../tmk_core/common/command.c ****     print(".swap_grave_esc: "); print_dec(kc.swap_grave_esc); print("\n");
 169:../../tmk_core/common/command.c ****     print(".swap_backslash_backspace: "); print_dec(kc.swap_backslash_backspace); print("\n");
 170:../../tmk_core/common/command.c ****     print(".nkro: "); print_dec(kc.nkro); print("\n");
 171:../../tmk_core/common/command.c **** 
 172:../../tmk_core/common/command.c **** #ifdef BACKLIGHT_ENABLE
 173:../../tmk_core/common/command.c ****     backlight_config_t bc;
 174:../../tmk_core/common/command.c ****     bc.raw = eeconfig_read_backlight();
 175:../../tmk_core/common/command.c ****     print("backlight_config.raw: "); print_hex8(bc.raw); print("\n");
 176:../../tmk_core/common/command.c ****     print(".enable: "); print_dec(bc.enable); print("\n");
 177:../../tmk_core/common/command.c ****     print(".level: "); print_dec(bc.level); print("\n");
 178:../../tmk_core/common/command.c **** #endif
 179:../../tmk_core/common/command.c **** }
 180:../../tmk_core/common/command.c **** #endif
 181:../../tmk_core/common/command.c **** 
 182:../../tmk_core/common/command.c **** static bool command_common(uint8_t code)
 183:../../tmk_core/common/command.c **** {
 184:../../tmk_core/common/command.c **** #ifdef KEYBOARD_LOCK_ENABLE
 185:../../tmk_core/common/command.c ****     static host_driver_t *host_driver = 0;
 186:../../tmk_core/common/command.c **** #endif
 187:../../tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 188:../../tmk_core/common/command.c ****     static bool sleep_led_test = false;
 189:../../tmk_core/common/command.c **** #endif
 190:../../tmk_core/common/command.c ****     switch (code) {
 191:../../tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 192:../../tmk_core/common/command.c ****         case KC_Z:
 193:../../tmk_core/common/command.c ****             // test breathing sleep LED
 194:../../tmk_core/common/command.c ****             print("Sleep LED test\n");
 195:../../tmk_core/common/command.c ****             if (sleep_led_test) {
 196:../../tmk_core/common/command.c ****                 sleep_led_disable();
 197:../../tmk_core/common/command.c ****                 led_set(host_keyboard_leds());
 198:../../tmk_core/common/command.c ****             } else {
 199:../../tmk_core/common/command.c ****                 sleep_led_enable();
 200:../../tmk_core/common/command.c ****             }
 201:../../tmk_core/common/command.c ****             sleep_led_test = !sleep_led_test;
 202:../../tmk_core/common/command.c ****             break;
 203:../../tmk_core/common/command.c **** #endif
 204:../../tmk_core/common/command.c **** #ifdef BOOTMAGIC_ENABLE
 205:../../tmk_core/common/command.c ****         case KC_E:
 206:../../tmk_core/common/command.c ****             print("eeconfig:\n");
 207:../../tmk_core/common/command.c ****             print_eeconfig();
 208:../../tmk_core/common/command.c ****             break;
 209:../../tmk_core/common/command.c **** #endif
 210:../../tmk_core/common/command.c **** #ifdef KEYBOARD_LOCK_ENABLE
 211:../../tmk_core/common/command.c ****         case KC_CAPSLOCK:
 212:../../tmk_core/common/command.c ****             if (host_get_driver()) {
 213:../../tmk_core/common/command.c ****                 host_driver = host_get_driver();
 214:../../tmk_core/common/command.c ****                 clear_keyboard();
 215:../../tmk_core/common/command.c ****                 host_set_driver(0);
 216:../../tmk_core/common/command.c ****                 print("Locked.\n");
 217:../../tmk_core/common/command.c ****             } else {
 218:../../tmk_core/common/command.c ****                 host_set_driver(host_driver);
 219:../../tmk_core/common/command.c ****                 print("Unlocked.\n");
 220:../../tmk_core/common/command.c ****             }
 221:../../tmk_core/common/command.c ****             break;
 222:../../tmk_core/common/command.c **** #endif
 223:../../tmk_core/common/command.c ****         case KC_H:
 224:../../tmk_core/common/command.c ****         case KC_SLASH: /* ? */
 225:../../tmk_core/common/command.c ****             command_common_help();
 226:../../tmk_core/common/command.c ****             break;
 227:../../tmk_core/common/command.c ****         case KC_C:
 228:../../tmk_core/common/command.c ****             debug_matrix   = false;
 229:../../tmk_core/common/command.c ****             debug_keyboard = false;
 230:../../tmk_core/common/command.c ****             debug_mouse    = false;
 231:../../tmk_core/common/command.c ****             debug_enable   = false;
 232:../../tmk_core/common/command.c ****             command_console_help();
 233:../../tmk_core/common/command.c ****             print("C> ");
 234:../../tmk_core/common/command.c ****             command_state = CONSOLE;
 235:../../tmk_core/common/command.c ****             break;
 236:../../tmk_core/common/command.c ****         case KC_PAUSE:
 237:../../tmk_core/common/command.c ****             clear_keyboard();
 238:../../tmk_core/common/command.c ****             print("\n\nbootloader... ");
 239:../../tmk_core/common/command.c ****             wait_ms(1000);
 240:../../tmk_core/common/command.c ****             bootloader_jump(); // not return
 241:../../tmk_core/common/command.c ****             break;
 242:../../tmk_core/common/command.c ****         case KC_D:
 243:../../tmk_core/common/command.c ****             if (debug_enable) {
 244:../../tmk_core/common/command.c ****                 print("\ndebug: off\n");
 245:../../tmk_core/common/command.c ****                 debug_matrix   = false;
 246:../../tmk_core/common/command.c ****                 debug_keyboard = false;
 247:../../tmk_core/common/command.c ****                 debug_mouse    = false;
 248:../../tmk_core/common/command.c ****                 debug_enable   = false;
 249:../../tmk_core/common/command.c ****             } else {
 250:../../tmk_core/common/command.c ****                 print("\ndebug: on\n");
 251:../../tmk_core/common/command.c ****                 debug_enable   = true;
 252:../../tmk_core/common/command.c ****             }
 253:../../tmk_core/common/command.c ****             break;
 254:../../tmk_core/common/command.c ****         case KC_X: // debug matrix toggle
 255:../../tmk_core/common/command.c ****             debug_matrix = !debug_matrix;
 256:../../tmk_core/common/command.c ****             if (debug_matrix) {
 257:../../tmk_core/common/command.c ****                 print("\nmatrix: on\n");
 258:../../tmk_core/common/command.c ****                 debug_enable = true;
 259:../../tmk_core/common/command.c ****             } else {
 260:../../tmk_core/common/command.c ****                 print("\nmatrix: off\n");
 261:../../tmk_core/common/command.c ****             }
 262:../../tmk_core/common/command.c ****             break;
 263:../../tmk_core/common/command.c ****         case KC_K: // debug keyboard toggle
 264:../../tmk_core/common/command.c ****             debug_keyboard = !debug_keyboard;
 265:../../tmk_core/common/command.c ****             if (debug_keyboard) {
 266:../../tmk_core/common/command.c ****                 print("\nkeyboard: on\n");
 267:../../tmk_core/common/command.c ****                 debug_enable = true;
 268:../../tmk_core/common/command.c ****             } else {
 269:../../tmk_core/common/command.c ****                 print("\nkeyboard: off\n");
 270:../../tmk_core/common/command.c ****             }
 271:../../tmk_core/common/command.c ****             break;
 272:../../tmk_core/common/command.c ****         case KC_M: // debug mouse toggle
 273:../../tmk_core/common/command.c ****             debug_mouse = !debug_mouse;
 274:../../tmk_core/common/command.c ****             if (debug_mouse) {
 275:../../tmk_core/common/command.c ****                 print("\nmouse: on\n");
 276:../../tmk_core/common/command.c ****                 debug_enable = true;
 277:../../tmk_core/common/command.c ****             } else {
 278:../../tmk_core/common/command.c ****                 print("\nmouse: off\n");
 279:../../tmk_core/common/command.c ****             }
 280:../../tmk_core/common/command.c ****             break;
 281:../../tmk_core/common/command.c ****         case KC_V: // print version & information
 282:../../tmk_core/common/command.c ****             print("\n\t- Version -\n");
 283:../../tmk_core/common/command.c ****             print("DESC: " STR(DESCRIPTION) "\n");
 284:../../tmk_core/common/command.c ****             print("VID: " STR(VENDOR_ID) "(" STR(MANUFACTURER) ") "
 285:../../tmk_core/common/command.c ****                   "PID: " STR(PRODUCT_ID) "(" STR(PRODUCT) ") "
 286:../../tmk_core/common/command.c ****                   "VER: " STR(DEVICE_VER) "\n");
 287:../../tmk_core/common/command.c ****             print("BUILD: " STR(TMK_VERSION) " (" __TIME__ " " __DATE__ ")\n");
 288:../../tmk_core/common/command.c ****             /* build options */
 289:../../tmk_core/common/command.c ****             print("OPTIONS:"
 290:../../tmk_core/common/command.c **** #ifdef PROTOCOL_PJRC
 291:../../tmk_core/common/command.c ****             " PJRC"
 292:../../tmk_core/common/command.c **** #endif
 293:../../tmk_core/common/command.c **** #ifdef PROTOCOL_LUFA
 294:../../tmk_core/common/command.c ****             " LUFA"
 295:../../tmk_core/common/command.c **** #endif
 296:../../tmk_core/common/command.c **** #ifdef PROTOCOL_VUSB
 297:../../tmk_core/common/command.c ****             " VUSB"
 298:../../tmk_core/common/command.c **** #endif
 299:../../tmk_core/common/command.c **** #ifdef PROTOCOL_CHIBIOS
 300:../../tmk_core/common/command.c ****             " CHIBIOS"
 301:../../tmk_core/common/command.c **** #endif
 302:../../tmk_core/common/command.c **** #ifdef BOOTMAGIC_ENABLE
 303:../../tmk_core/common/command.c ****             " BOOTMAGIC"
 304:../../tmk_core/common/command.c **** #endif
 305:../../tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
 306:../../tmk_core/common/command.c ****             " MOUSEKEY"
 307:../../tmk_core/common/command.c **** #endif
 308:../../tmk_core/common/command.c **** #ifdef EXTRAKEY_ENABLE
 309:../../tmk_core/common/command.c ****             " EXTRAKEY"
 310:../../tmk_core/common/command.c **** #endif
 311:../../tmk_core/common/command.c **** #ifdef CONSOLE_ENABLE
 312:../../tmk_core/common/command.c ****             " CONSOLE"
 313:../../tmk_core/common/command.c **** #endif
 314:../../tmk_core/common/command.c **** #ifdef COMMAND_ENABLE
 315:../../tmk_core/common/command.c ****             " COMMAND"
 316:../../tmk_core/common/command.c **** #endif
 317:../../tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 318:../../tmk_core/common/command.c ****             " NKRO"
 319:../../tmk_core/common/command.c **** #endif
 320:../../tmk_core/common/command.c **** #ifdef KEYMAP_SECTION_ENABLE
 321:../../tmk_core/common/command.c ****             " KEYMAP_SECTION"
 322:../../tmk_core/common/command.c **** #endif
 323:../../tmk_core/common/command.c ****             " " STR(BOOTLOADER_SIZE) "\n");
 324:../../tmk_core/common/command.c **** 
 325:../../tmk_core/common/command.c ****             print("GCC: " STR(__GNUC__) "." STR(__GNUC_MINOR__) "." STR(__GNUC_PATCHLEVEL__)
 326:../../tmk_core/common/command.c **** #if defined(__AVR__)
 327:../../tmk_core/common/command.c ****                   " AVR-LIBC: " __AVR_LIBC_VERSION_STRING__
 328:../../tmk_core/common/command.c ****                   " AVR_ARCH: avr" STR(__AVR_ARCH__) "\n");
 329:../../tmk_core/common/command.c **** #elif defined(__arm__)
 330:../../tmk_core/common/command.c ****             // TODO
 331:../../tmk_core/common/command.c ****             );
 332:../../tmk_core/common/command.c **** #endif
 333:../../tmk_core/common/command.c ****             break;
 334:../../tmk_core/common/command.c ****         case KC_S:
 335:../../tmk_core/common/command.c ****             print("\n\t- Status -\n");
 336:../../tmk_core/common/command.c ****             print_val_hex8(host_keyboard_leds());
 337:../../tmk_core/common/command.c ****             print_val_hex8(keyboard_protocol);
 338:../../tmk_core/common/command.c ****             print_val_hex8(keyboard_idle);
 339:../../tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 340:../../tmk_core/common/command.c ****             print_val_hex8(keyboard_nkro);
 341:../../tmk_core/common/command.c **** #endif
 342:../../tmk_core/common/command.c ****             print_val_hex32(timer_read32());
 343:../../tmk_core/common/command.c **** 
 344:../../tmk_core/common/command.c **** #ifdef PROTOCOL_PJRC
 345:../../tmk_core/common/command.c ****             print_val_hex8(UDCON);
 346:../../tmk_core/common/command.c ****             print_val_hex8(UDIEN);
 347:../../tmk_core/common/command.c ****             print_val_hex8(UDINT);
 348:../../tmk_core/common/command.c ****             print_val_hex8(usb_keyboard_leds);
 349:../../tmk_core/common/command.c ****             print_val_hex8(usb_keyboard_idle_count);
 350:../../tmk_core/common/command.c **** #endif
 351:../../tmk_core/common/command.c **** 
 352:../../tmk_core/common/command.c **** #ifdef PROTOCOL_PJRC
 353:../../tmk_core/common/command.c **** #   if USB_COUNT_SOF
 354:../../tmk_core/common/command.c ****             print_val_hex8(usbSofCount);
 355:../../tmk_core/common/command.c **** #   endif
 356:../../tmk_core/common/command.c **** #endif
 357:../../tmk_core/common/command.c ****             break;
 358:../../tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 359:../../tmk_core/common/command.c ****         case KC_N:
 360:../../tmk_core/common/command.c ****             clear_keyboard(); //Prevents stuck keys.
 361:../../tmk_core/common/command.c ****             keyboard_nkro = !keyboard_nkro;
 362:../../tmk_core/common/command.c ****             if (keyboard_nkro) {
 363:../../tmk_core/common/command.c ****                 print("NKRO: on\n");
 364:../../tmk_core/common/command.c ****             } else {
 365:../../tmk_core/common/command.c ****                 print("NKRO: off\n");
 366:../../tmk_core/common/command.c ****             }
 367:../../tmk_core/common/command.c ****             break;
 368:../../tmk_core/common/command.c **** #endif
 369:../../tmk_core/common/command.c ****         case KC_ESC:
 370:../../tmk_core/common/command.c ****         case KC_GRV:
 371:../../tmk_core/common/command.c ****         case KC_0:
 372:../../tmk_core/common/command.c ****         case KC_F10:
 373:../../tmk_core/common/command.c ****             switch_default_layer(0);
 374:../../tmk_core/common/command.c ****             break;
 375:../../tmk_core/common/command.c ****         case KC_1 ... KC_9:
 376:../../tmk_core/common/command.c ****             switch_default_layer((code - KC_1) + 1);
 377:../../tmk_core/common/command.c ****             break;
 378:../../tmk_core/common/command.c ****         case KC_F1 ... KC_F9:
 379:../../tmk_core/common/command.c ****             switch_default_layer((code - KC_F1) + 1);
 380:../../tmk_core/common/command.c ****             break;
 381:../../tmk_core/common/command.c ****         default:
 382:../../tmk_core/common/command.c ****             print("?");
 383:../../tmk_core/common/command.c ****             return false;
 384:../../tmk_core/common/command.c ****     }
 385:../../tmk_core/common/command.c ****     return true;
 386:../../tmk_core/common/command.c **** }
 387:../../tmk_core/common/command.c **** 
 388:../../tmk_core/common/command.c **** 
 389:../../tmk_core/common/command.c **** /***********************************************************
 390:../../tmk_core/common/command.c ****  * Command console
 391:../../tmk_core/common/command.c ****  ***********************************************************/
 392:../../tmk_core/common/command.c **** static void command_console_help(void)
 393:../../tmk_core/common/command.c **** {
 394:../../tmk_core/common/command.c ****     print("\n\t- Console -\n"
 395:../../tmk_core/common/command.c ****           "ESC/q:	quit\n"
 396:../../tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
 397:../../tmk_core/common/command.c ****           "m:	mousekey\n"
 398:../../tmk_core/common/command.c **** #endif
 399:../../tmk_core/common/command.c ****     );
 400:../../tmk_core/common/command.c **** }
 401:../../tmk_core/common/command.c **** 
 402:../../tmk_core/common/command.c **** static bool command_console(uint8_t code)
 403:../../tmk_core/common/command.c **** {
 404:../../tmk_core/common/command.c ****     switch (code) {
 405:../../tmk_core/common/command.c ****         case KC_H:
 406:../../tmk_core/common/command.c ****         case KC_SLASH: /* ? */
 407:../../tmk_core/common/command.c ****             command_console_help();
 408:../../tmk_core/common/command.c ****             break;
 409:../../tmk_core/common/command.c ****         case KC_Q:
 410:../../tmk_core/common/command.c ****         case KC_ESC:
 411:../../tmk_core/common/command.c ****             command_state = ONESHOT;
 412:../../tmk_core/common/command.c ****             return false;
 413:../../tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
 414:../../tmk_core/common/command.c ****         case KC_M:
 415:../../tmk_core/common/command.c ****             mousekey_console_help();
 416:../../tmk_core/common/command.c ****             print("M> ");
 417:../../tmk_core/common/command.c ****             command_state = MOUSEKEY;
 418:../../tmk_core/common/command.c ****             return true;
 419:../../tmk_core/common/command.c **** #endif
 420:../../tmk_core/common/command.c ****         default:
 421:../../tmk_core/common/command.c ****             print("?");
 422:../../tmk_core/common/command.c ****             return false;
 423:../../tmk_core/common/command.c ****     }
 424:../../tmk_core/common/command.c ****     print("C> ");
 425:../../tmk_core/common/command.c ****     return true;
 426:../../tmk_core/common/command.c **** }
 427:../../tmk_core/common/command.c **** 
 428:../../tmk_core/common/command.c **** 
 429:../../tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
 430:../../tmk_core/common/command.c **** /***********************************************************
 431:../../tmk_core/common/command.c ****  * Mousekey console
 432:../../tmk_core/common/command.c ****  ***********************************************************/
 433:../../tmk_core/common/command.c **** static uint8_t mousekey_param = 0;
 434:../../tmk_core/common/command.c **** 
 435:../../tmk_core/common/command.c **** static void mousekey_param_print(void)
 436:../../tmk_core/common/command.c **** {
 437:../../tmk_core/common/command.c ****     print("\n\t- Values -\n");
 438:../../tmk_core/common/command.c ****     print("1: delay(*10ms): "); pdec(mk_delay); print("\n");
 439:../../tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 440:../../tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 441:../../tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 442:../../tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 443:../../tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 444:../../tmk_core/common/command.c **** }
 445:../../tmk_core/common/command.c **** 
 446:../../tmk_core/common/command.c **** //#define PRINT_SET_VAL(v)  print(#v " = "); print_dec(v); print("\n");
 447:../../tmk_core/common/command.c **** #define PRINT_SET_VAL(v)  xprintf(#v " = %d\n", (v))
 448:../../tmk_core/common/command.c **** static void mousekey_param_inc(uint8_t param, uint8_t inc)
 449:../../tmk_core/common/command.c **** {
 450:../../tmk_core/common/command.c ****     switch (param) {
 451:../../tmk_core/common/command.c ****         case 1:
 452:../../tmk_core/common/command.c ****             if (mk_delay + inc < UINT8_MAX)
 453:../../tmk_core/common/command.c ****                 mk_delay += inc;
 454:../../tmk_core/common/command.c ****             else
 455:../../tmk_core/common/command.c ****                 mk_delay = UINT8_MAX;
 456:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_delay);
 457:../../tmk_core/common/command.c ****             break;
 458:../../tmk_core/common/command.c ****         case 2:
 459:../../tmk_core/common/command.c ****             if (mk_interval + inc < UINT8_MAX)
 460:../../tmk_core/common/command.c ****                 mk_interval += inc;
 461:../../tmk_core/common/command.c ****             else
 462:../../tmk_core/common/command.c ****                 mk_interval = UINT8_MAX;
 463:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_interval);
 464:../../tmk_core/common/command.c ****             break;
 465:../../tmk_core/common/command.c ****         case 3:
 466:../../tmk_core/common/command.c ****             if (mk_max_speed + inc < UINT8_MAX)
 467:../../tmk_core/common/command.c ****                 mk_max_speed += inc;
 468:../../tmk_core/common/command.c ****             else
 469:../../tmk_core/common/command.c ****                 mk_max_speed = UINT8_MAX;
 470:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 471:../../tmk_core/common/command.c ****             break;
 472:../../tmk_core/common/command.c ****         case 4:
 473:../../tmk_core/common/command.c ****             if (mk_time_to_max + inc < UINT8_MAX)
 474:../../tmk_core/common/command.c ****                 mk_time_to_max += inc;
 475:../../tmk_core/common/command.c ****             else
 476:../../tmk_core/common/command.c ****                 mk_time_to_max = UINT8_MAX;
 477:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 478:../../tmk_core/common/command.c ****             break;
 479:../../tmk_core/common/command.c ****         case 5:
 480:../../tmk_core/common/command.c ****             if (mk_wheel_max_speed + inc < UINT8_MAX)
 481:../../tmk_core/common/command.c ****                 mk_wheel_max_speed += inc;
 482:../../tmk_core/common/command.c ****             else
 483:../../tmk_core/common/command.c ****                 mk_wheel_max_speed = UINT8_MAX;
 484:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 485:../../tmk_core/common/command.c ****             break;
 486:../../tmk_core/common/command.c ****         case 6:
 487:../../tmk_core/common/command.c ****             if (mk_wheel_time_to_max + inc < UINT8_MAX)
 488:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max += inc;
 489:../../tmk_core/common/command.c ****             else
 490:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max = UINT8_MAX;
 491:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 492:../../tmk_core/common/command.c ****             break;
 493:../../tmk_core/common/command.c ****     }
 494:../../tmk_core/common/command.c **** }
 495:../../tmk_core/common/command.c **** 
 496:../../tmk_core/common/command.c **** static void mousekey_param_dec(uint8_t param, uint8_t dec)
 497:../../tmk_core/common/command.c **** {
 498:../../tmk_core/common/command.c ****     switch (param) {
 499:../../tmk_core/common/command.c ****         case 1:
 500:../../tmk_core/common/command.c ****             if (mk_delay > dec)
 501:../../tmk_core/common/command.c ****                 mk_delay -= dec;
 502:../../tmk_core/common/command.c ****             else
 503:../../tmk_core/common/command.c ****                 mk_delay = 0;
 504:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_delay);
 505:../../tmk_core/common/command.c ****             break;
 506:../../tmk_core/common/command.c ****         case 2:
 507:../../tmk_core/common/command.c ****             if (mk_interval > dec)
 508:../../tmk_core/common/command.c ****                 mk_interval -= dec;
 509:../../tmk_core/common/command.c ****             else
 510:../../tmk_core/common/command.c ****                 mk_interval = 0;
 511:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_interval);
 512:../../tmk_core/common/command.c ****             break;
 513:../../tmk_core/common/command.c ****         case 3:
 514:../../tmk_core/common/command.c ****             if (mk_max_speed > dec)
 515:../../tmk_core/common/command.c ****                 mk_max_speed -= dec;
 516:../../tmk_core/common/command.c ****             else
 517:../../tmk_core/common/command.c ****                 mk_max_speed = 0;
 518:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 519:../../tmk_core/common/command.c ****             break;
 520:../../tmk_core/common/command.c ****         case 4:
 521:../../tmk_core/common/command.c ****             if (mk_time_to_max > dec)
 522:../../tmk_core/common/command.c ****                 mk_time_to_max -= dec;
 523:../../tmk_core/common/command.c ****             else
 524:../../tmk_core/common/command.c ****                 mk_time_to_max = 0;
 525:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 526:../../tmk_core/common/command.c ****             break;
 527:../../tmk_core/common/command.c ****         case 5:
 528:../../tmk_core/common/command.c ****             if (mk_wheel_max_speed > dec)
 529:../../tmk_core/common/command.c ****                 mk_wheel_max_speed -= dec;
 530:../../tmk_core/common/command.c ****             else
 531:../../tmk_core/common/command.c ****                 mk_wheel_max_speed = 0;
 532:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 533:../../tmk_core/common/command.c ****             break;
 534:../../tmk_core/common/command.c ****         case 6:
 535:../../tmk_core/common/command.c ****             if (mk_wheel_time_to_max > dec)
 536:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max -= dec;
 537:../../tmk_core/common/command.c ****             else
 538:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max = 0;
 539:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 540:../../tmk_core/common/command.c ****             break;
 541:../../tmk_core/common/command.c ****     }
 542:../../tmk_core/common/command.c **** }
 543:../../tmk_core/common/command.c **** 
 544:../../tmk_core/common/command.c **** static void mousekey_console_help(void)
 545:../../tmk_core/common/command.c **** {
  15               		.loc 1 545 1 view -0
  16               		.cfi_startproc
  17               	/* prologue: function */
  18               	/* frame size = 0 */
  19               	/* stack size = 0 */
  20               	.L__stack_usage = 0
 546:../../tmk_core/common/command.c ****     print("\n\t- Mousekey -\n"
  21               		.loc 1 546 5 view .LVU1
  22               	.LBB29:
  23               		.loc 1 546 5 view .LVU2
  24               		.loc 1 546 5 view .LVU3
  25               	.LBE29:
  26 0000 80E0      		ldi r24,lo8(__c.5356)
  27 0002 90E0      		ldi r25,hi8(__c.5356)
  28 0004 0E94 0000 		call xputs
  29               	.LVL0:
 547:../../tmk_core/common/command.c ****           "ESC/q:	quit\n"
 548:../../tmk_core/common/command.c ****           "1:	delay(*10ms)\n"
 549:../../tmk_core/common/command.c ****           "2:	interval(ms)\n"
 550:../../tmk_core/common/command.c ****           "3:	max_speed\n"
 551:../../tmk_core/common/command.c ****           "4:	time_to_max\n"
 552:../../tmk_core/common/command.c ****           "5:	wheel_max_speed\n"
 553:../../tmk_core/common/command.c ****           "6:	wheel_time_to_max\n"
 554:../../tmk_core/common/command.c ****           "\n"
 555:../../tmk_core/common/command.c ****           "p:	print values\n"
 556:../../tmk_core/common/command.c ****           "d:	set defaults\n"
 557:../../tmk_core/common/command.c ****           "up:	+1\n"
 558:../../tmk_core/common/command.c ****           "down:	-1\n"
 559:../../tmk_core/common/command.c ****           "pgup:	+10\n"
 560:../../tmk_core/common/command.c ****           "pgdown:	-10\n"
 561:../../tmk_core/common/command.c ****           "\n"
 562:../../tmk_core/common/command.c ****           "speed = delta * max_speed * (repeat / time_to_max)\n");
 563:../../tmk_core/common/command.c ****     xprintf("where delta: cursor=%d, wheel=%d\n" 
  30               		.loc 1 563 5 view .LVU4
  31               	.LBB30:
  32               		.loc 1 563 5 view .LVU5
  33               		.loc 1 563 5 view .LVU6
  34               	.LBE30:
  35 0008 1F92      		push __zero_reg__
  36               	.LCFI0:
  37               		.cfi_def_cfa_offset 3
  38 000a 81E0      		ldi r24,lo8(1)
  39 000c 8F93      		push r24
  40               	.LCFI1:
  41               		.cfi_def_cfa_offset 4
  42 000e 1F92      		push __zero_reg__
  43               	.LCFI2:
  44               		.cfi_def_cfa_offset 5
  45 0010 85E0      		ldi r24,lo8(5)
  46 0012 8F93      		push r24
  47               	.LCFI3:
  48               		.cfi_def_cfa_offset 6
  49 0014 80E0      		ldi r24,lo8(__c.5358)
  50 0016 90E0      		ldi r25,hi8(__c.5358)
  51 0018 9F93      		push r25
  52               	.LCFI4:
  53               		.cfi_def_cfa_offset 7
  54 001a 8F93      		push r24
  55               	.LCFI5:
  56               		.cfi_def_cfa_offset 8
  57 001c 0E94 0000 		call __xprintf
  58               	.LVL1:
 564:../../tmk_core/common/command.c ****             "See http://en.wikipedia.org/wiki/Mouse_keys\n", MOUSEKEY_MOVE_DELTA,  MOUSEKEY_WHEEL_D
 565:../../tmk_core/common/command.c **** }
  59               		.loc 1 565 1 is_stmt 0 view .LVU7
  60 0020 0F90      		pop __tmp_reg__
  61 0022 0F90      		pop __tmp_reg__
  62 0024 0F90      		pop __tmp_reg__
  63 0026 0F90      		pop __tmp_reg__
  64 0028 0F90      		pop __tmp_reg__
  65 002a 0F90      		pop __tmp_reg__
  66               	.LCFI6:
  67               		.cfi_def_cfa_offset 2
  68               	/* epilogue start */
  69 002c 0895      		ret
  70               		.cfi_endproc
  71               	.LFE113:
  73               		.section	.text.mousekey_param_inc,"ax",@progbits
  75               	mousekey_param_inc:
  76               	.LVL2:
  77               	.LFB111:
 449:../../tmk_core/common/command.c ****     switch (param) {
  78               		.loc 1 449 1 is_stmt 1 view -0
  79               		.cfi_startproc
  80               	/* prologue: function */
  81               	/* frame size = 0 */
  82               	/* stack size = 0 */
  83               	.L__stack_usage = 0
 450:../../tmk_core/common/command.c ****         case 1:
  84               		.loc 1 450 5 view .LVU9
  85 0000 8330      		cpi r24,lo8(3)
  86 0002 01F4      		brne .+2
  87 0004 00C0      		rjmp .L3
  88 0006 00F4      		brsh .L4
  89 0008 8130      		cpi r24,lo8(1)
  90 000a 01F0      		breq .L5
  91 000c 8230      		cpi r24,lo8(2)
  92 000e 01F0      		breq .L6
  93 0010 0895      		ret
  94               	.L4:
  95 0012 8530      		cpi r24,lo8(5)
  96 0014 01F4      		brne .+2
  97 0016 00C0      		rjmp .L8
  98 0018 00F4      		brsh .+2
  99 001a 00C0      		rjmp .L9
 100 001c 8630      		cpi r24,lo8(6)
 101 001e 01F4      		brne .+2
 102 0020 00C0      		rjmp .L10
 103 0022 0895      		ret
 104               	.L5:
 452:../../tmk_core/common/command.c ****                 mk_delay += inc;
 105               		.loc 1 452 13 view .LVU10
 452:../../tmk_core/common/command.c ****                 mk_delay += inc;
 106               		.loc 1 452 26 is_stmt 0 view .LVU11
 107 0024 8091 0000 		lds r24,mk_delay
 108               	.LVL3:
 452:../../tmk_core/common/command.c ****                 mk_delay += inc;
 109               		.loc 1 452 26 view .LVU12
 110 0028 482F      		mov r20,r24
 111 002a 460F      		add r20,r22
 112 002c 5527      		clr r21
 113 002e 551F      		rol r21
 452:../../tmk_core/common/command.c ****                 mk_delay += inc;
 114               		.loc 1 452 16 view .LVU13
 115 0030 4F3F      		cpi r20,-1
 116 0032 5105      		cpc r21,__zero_reg__
 117 0034 04F4      		brge .L11
 453:../../tmk_core/common/command.c ****             else
 118               		.loc 1 453 17 is_stmt 1 view .LVU14
 453:../../tmk_core/common/command.c ****             else
 119               		.loc 1 453 26 is_stmt 0 view .LVU15
 120 0036 680F      		add r22,r24
 121               	.LVL4:
 453:../../tmk_core/common/command.c ****             else
 122               		.loc 1 453 26 view .LVU16
 123 0038 6093 0000 		sts mk_delay,r22
 124               	.L12:
 456:../../tmk_core/common/command.c ****             break;
 125               		.loc 1 456 13 is_stmt 1 view .LVU17
 126               	.LBB31:
 456:../../tmk_core/common/command.c ****             break;
 127               		.loc 1 456 13 view .LVU18
 456:../../tmk_core/common/command.c ****             break;
 128               		.loc 1 456 13 view .LVU19
 129               	.LBE31:
 130 003c 8091 0000 		lds r24,mk_delay
 131 0040 1F92      		push __zero_reg__
 132               	.LCFI7:
 133               		.cfi_def_cfa_offset 3
 134 0042 8F93      		push r24
 135               	.LCFI8:
 136               		.cfi_def_cfa_offset 4
 137 0044 80E0      		ldi r24,lo8(__c.5312)
 138 0046 90E0      		ldi r25,hi8(__c.5312)
 139               	.L23:
 491:../../tmk_core/common/command.c ****             break;
 140               		.loc 1 491 13 is_stmt 0 view .LVU20
 141 0048 9F93      		push r25
 142               	.LCFI9:
 143               		.cfi_def_cfa_offset 5
 144 004a 8F93      		push r24
 145               	.LCFI10:
 146               		.cfi_def_cfa_offset 6
 147 004c 0E94 0000 		call __xprintf
 148               	.LVL5:
 492:../../tmk_core/common/command.c ****     }
 149               		.loc 1 492 13 is_stmt 1 view .LVU21
 150 0050 0F90      		pop __tmp_reg__
 151 0052 0F90      		pop __tmp_reg__
 152 0054 0F90      		pop __tmp_reg__
 153 0056 0F90      		pop __tmp_reg__
 154               	.LCFI11:
 155               		.cfi_def_cfa_offset 2
 156               	/* epilogue start */
 494:../../tmk_core/common/command.c **** 
 157               		.loc 1 494 1 is_stmt 0 view .LVU22
 158 0058 0895      		ret
 159               	.LVL6:
 160               	.L11:
 455:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_delay);
 161               		.loc 1 455 17 is_stmt 1 view .LVU23
 455:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_delay);
 162               		.loc 1 455 26 is_stmt 0 view .LVU24
 163 005a 8FEF      		ldi r24,lo8(-1)
 164 005c 8093 0000 		sts mk_delay,r24
 165 0060 00C0      		rjmp .L12
 166               	.LVL7:
 167               	.L6:
 459:../../tmk_core/common/command.c ****                 mk_interval += inc;
 168               		.loc 1 459 13 is_stmt 1 view .LVU25
 459:../../tmk_core/common/command.c ****                 mk_interval += inc;
 169               		.loc 1 459 29 is_stmt 0 view .LVU26
 170 0062 8091 0000 		lds r24,mk_interval
 171               	.LVL8:
 459:../../tmk_core/common/command.c ****                 mk_interval += inc;
 172               		.loc 1 459 29 view .LVU27
 173 0066 482F      		mov r20,r24
 174 0068 460F      		add r20,r22
 175 006a 5527      		clr r21
 176 006c 551F      		rol r21
 459:../../tmk_core/common/command.c ****                 mk_interval += inc;
 177               		.loc 1 459 16 view .LVU28
 178 006e 4F3F      		cpi r20,-1
 179 0070 5105      		cpc r21,__zero_reg__
 180 0072 04F4      		brge .L13
 460:../../tmk_core/common/command.c ****             else
 181               		.loc 1 460 17 is_stmt 1 view .LVU29
 460:../../tmk_core/common/command.c ****             else
 182               		.loc 1 460 29 is_stmt 0 view .LVU30
 183 0074 680F      		add r22,r24
 184               	.LVL9:
 460:../../tmk_core/common/command.c ****             else
 185               		.loc 1 460 29 view .LVU31
 186 0076 6093 0000 		sts mk_interval,r22
 187               	.L14:
 463:../../tmk_core/common/command.c ****             break;
 188               		.loc 1 463 13 is_stmt 1 view .LVU32
 189               	.LBB32:
 463:../../tmk_core/common/command.c ****             break;
 190               		.loc 1 463 13 view .LVU33
 463:../../tmk_core/common/command.c ****             break;
 191               		.loc 1 463 13 view .LVU34
 192               	.LBE32:
 193 007a 8091 0000 		lds r24,mk_interval
 194 007e 1F92      		push __zero_reg__
 195               	.LCFI12:
 196               		.cfi_remember_state
 197               		.cfi_def_cfa_offset 3
 198 0080 8F93      		push r24
 199               	.LCFI13:
 200               		.cfi_def_cfa_offset 4
 201 0082 80E0      		ldi r24,lo8(__c.5316)
 202 0084 90E0      		ldi r25,hi8(__c.5316)
 203 0086 00C0      		rjmp .L23
 204               	.LVL10:
 205               	.L13:
 206               	.LCFI14:
 207               		.cfi_restore_state
 462:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_interval);
 208               		.loc 1 462 17 view .LVU35
 462:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_interval);
 209               		.loc 1 462 29 is_stmt 0 view .LVU36
 210 0088 8FEF      		ldi r24,lo8(-1)
 211 008a 8093 0000 		sts mk_interval,r24
 212 008e 00C0      		rjmp .L14
 213               	.LVL11:
 214               	.L3:
 466:../../tmk_core/common/command.c ****                 mk_max_speed += inc;
 215               		.loc 1 466 13 is_stmt 1 view .LVU37
 466:../../tmk_core/common/command.c ****                 mk_max_speed += inc;
 216               		.loc 1 466 30 is_stmt 0 view .LVU38
 217 0090 8091 0000 		lds r24,mk_max_speed
 218               	.LVL12:
 466:../../tmk_core/common/command.c ****                 mk_max_speed += inc;
 219               		.loc 1 466 30 view .LVU39
 220 0094 482F      		mov r20,r24
 221 0096 460F      		add r20,r22
 222 0098 5527      		clr r21
 223 009a 551F      		rol r21
 466:../../tmk_core/common/command.c ****                 mk_max_speed += inc;
 224               		.loc 1 466 16 view .LVU40
 225 009c 4F3F      		cpi r20,-1
 226 009e 5105      		cpc r21,__zero_reg__
 227 00a0 04F4      		brge .L15
 467:../../tmk_core/common/command.c ****             else
 228               		.loc 1 467 17 is_stmt 1 view .LVU41
 467:../../tmk_core/common/command.c ****             else
 229               		.loc 1 467 30 is_stmt 0 view .LVU42
 230 00a2 680F      		add r22,r24
 231               	.LVL13:
 467:../../tmk_core/common/command.c ****             else
 232               		.loc 1 467 30 view .LVU43
 233 00a4 6093 0000 		sts mk_max_speed,r22
 234               	.L16:
 470:../../tmk_core/common/command.c ****             break;
 235               		.loc 1 470 13 is_stmt 1 view .LVU44
 236               	.LBB33:
 470:../../tmk_core/common/command.c ****             break;
 237               		.loc 1 470 13 view .LVU45
 470:../../tmk_core/common/command.c ****             break;
 238               		.loc 1 470 13 view .LVU46
 239               	.LBE33:
 240 00a8 8091 0000 		lds r24,mk_max_speed
 241 00ac 1F92      		push __zero_reg__
 242               	.LCFI15:
 243               		.cfi_remember_state
 244               		.cfi_def_cfa_offset 3
 245 00ae 8F93      		push r24
 246               	.LCFI16:
 247               		.cfi_def_cfa_offset 4
 248 00b0 80E0      		ldi r24,lo8(__c.5319)
 249 00b2 90E0      		ldi r25,hi8(__c.5319)
 250 00b4 00C0      		rjmp .L23
 251               	.LVL14:
 252               	.L15:
 253               	.LCFI17:
 254               		.cfi_restore_state
 469:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 255               		.loc 1 469 17 view .LVU47
 469:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 256               		.loc 1 469 30 is_stmt 0 view .LVU48
 257 00b6 8FEF      		ldi r24,lo8(-1)
 258 00b8 8093 0000 		sts mk_max_speed,r24
 259 00bc 00C0      		rjmp .L16
 260               	.LVL15:
 261               	.L9:
 473:../../tmk_core/common/command.c ****                 mk_time_to_max += inc;
 262               		.loc 1 473 13 is_stmt 1 view .LVU49
 473:../../tmk_core/common/command.c ****                 mk_time_to_max += inc;
 263               		.loc 1 473 32 is_stmt 0 view .LVU50
 264 00be 8091 0000 		lds r24,mk_time_to_max
 265               	.LVL16:
 473:../../tmk_core/common/command.c ****                 mk_time_to_max += inc;
 266               		.loc 1 473 32 view .LVU51
 267 00c2 482F      		mov r20,r24
 268 00c4 460F      		add r20,r22
 269 00c6 5527      		clr r21
 270 00c8 551F      		rol r21
 473:../../tmk_core/common/command.c ****                 mk_time_to_max += inc;
 271               		.loc 1 473 16 view .LVU52
 272 00ca 4F3F      		cpi r20,-1
 273 00cc 5105      		cpc r21,__zero_reg__
 274 00ce 04F4      		brge .L17
 474:../../tmk_core/common/command.c ****             else
 275               		.loc 1 474 17 is_stmt 1 view .LVU53
 474:../../tmk_core/common/command.c ****             else
 276               		.loc 1 474 32 is_stmt 0 view .LVU54
 277 00d0 680F      		add r22,r24
 278               	.LVL17:
 474:../../tmk_core/common/command.c ****             else
 279               		.loc 1 474 32 view .LVU55
 280 00d2 6093 0000 		sts mk_time_to_max,r22
 281               	.L18:
 477:../../tmk_core/common/command.c ****             break;
 282               		.loc 1 477 13 is_stmt 1 view .LVU56
 283               	.LBB34:
 477:../../tmk_core/common/command.c ****             break;
 284               		.loc 1 477 13 view .LVU57
 477:../../tmk_core/common/command.c ****             break;
 285               		.loc 1 477 13 view .LVU58
 286               	.LBE34:
 287 00d6 8091 0000 		lds r24,mk_time_to_max
 288 00da 1F92      		push __zero_reg__
 289               	.LCFI18:
 290               		.cfi_remember_state
 291               		.cfi_def_cfa_offset 3
 292 00dc 8F93      		push r24
 293               	.LCFI19:
 294               		.cfi_def_cfa_offset 4
 295 00de 80E0      		ldi r24,lo8(__c.5322)
 296 00e0 90E0      		ldi r25,hi8(__c.5322)
 297 00e2 00C0      		rjmp .L23
 298               	.LVL18:
 299               	.L17:
 300               	.LCFI20:
 301               		.cfi_restore_state
 476:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 302               		.loc 1 476 17 view .LVU59
 476:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 303               		.loc 1 476 32 is_stmt 0 view .LVU60
 304 00e4 8FEF      		ldi r24,lo8(-1)
 305 00e6 8093 0000 		sts mk_time_to_max,r24
 306 00ea 00C0      		rjmp .L18
 307               	.LVL19:
 308               	.L8:
 480:../../tmk_core/common/command.c ****                 mk_wheel_max_speed += inc;
 309               		.loc 1 480 13 is_stmt 1 view .LVU61
 480:../../tmk_core/common/command.c ****                 mk_wheel_max_speed += inc;
 310               		.loc 1 480 36 is_stmt 0 view .LVU62
 311 00ec 8091 0000 		lds r24,mk_wheel_max_speed
 312               	.LVL20:
 480:../../tmk_core/common/command.c ****                 mk_wheel_max_speed += inc;
 313               		.loc 1 480 36 view .LVU63
 314 00f0 482F      		mov r20,r24
 315 00f2 460F      		add r20,r22
 316 00f4 5527      		clr r21
 317 00f6 551F      		rol r21
 480:../../tmk_core/common/command.c ****                 mk_wheel_max_speed += inc;
 318               		.loc 1 480 16 view .LVU64
 319 00f8 4F3F      		cpi r20,-1
 320 00fa 5105      		cpc r21,__zero_reg__
 321 00fc 04F4      		brge .L19
 481:../../tmk_core/common/command.c ****             else
 322               		.loc 1 481 17 is_stmt 1 view .LVU65
 481:../../tmk_core/common/command.c ****             else
 323               		.loc 1 481 36 is_stmt 0 view .LVU66
 324 00fe 680F      		add r22,r24
 325               	.LVL21:
 481:../../tmk_core/common/command.c ****             else
 326               		.loc 1 481 36 view .LVU67
 327 0100 6093 0000 		sts mk_wheel_max_speed,r22
 328               	.L20:
 484:../../tmk_core/common/command.c ****             break;
 329               		.loc 1 484 13 is_stmt 1 view .LVU68
 330               	.LBB35:
 484:../../tmk_core/common/command.c ****             break;
 331               		.loc 1 484 13 view .LVU69
 484:../../tmk_core/common/command.c ****             break;
 332               		.loc 1 484 13 view .LVU70
 333               	.LBE35:
 334 0104 8091 0000 		lds r24,mk_wheel_max_speed
 335 0108 1F92      		push __zero_reg__
 336               	.LCFI21:
 337               		.cfi_remember_state
 338               		.cfi_def_cfa_offset 3
 339 010a 8F93      		push r24
 340               	.LCFI22:
 341               		.cfi_def_cfa_offset 4
 342 010c 80E0      		ldi r24,lo8(__c.5325)
 343 010e 90E0      		ldi r25,hi8(__c.5325)
 344 0110 00C0      		rjmp .L23
 345               	.LVL22:
 346               	.L19:
 347               	.LCFI23:
 348               		.cfi_restore_state
 483:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 349               		.loc 1 483 17 view .LVU71
 483:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 350               		.loc 1 483 36 is_stmt 0 view .LVU72
 351 0112 8FEF      		ldi r24,lo8(-1)
 352 0114 8093 0000 		sts mk_wheel_max_speed,r24
 353 0118 00C0      		rjmp .L20
 354               	.LVL23:
 355               	.L10:
 487:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max += inc;
 356               		.loc 1 487 13 is_stmt 1 view .LVU73
 487:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max += inc;
 357               		.loc 1 487 38 is_stmt 0 view .LVU74
 358 011a 8091 0000 		lds r24,mk_wheel_time_to_max
 359               	.LVL24:
 487:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max += inc;
 360               		.loc 1 487 38 view .LVU75
 361 011e 482F      		mov r20,r24
 362 0120 460F      		add r20,r22
 363 0122 5527      		clr r21
 364 0124 551F      		rol r21
 487:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max += inc;
 365               		.loc 1 487 16 view .LVU76
 366 0126 4F3F      		cpi r20,-1
 367 0128 5105      		cpc r21,__zero_reg__
 368 012a 04F4      		brge .L21
 488:../../tmk_core/common/command.c ****             else
 369               		.loc 1 488 17 is_stmt 1 view .LVU77
 488:../../tmk_core/common/command.c ****             else
 370               		.loc 1 488 38 is_stmt 0 view .LVU78
 371 012c 680F      		add r22,r24
 372               	.LVL25:
 488:../../tmk_core/common/command.c ****             else
 373               		.loc 1 488 38 view .LVU79
 374 012e 6093 0000 		sts mk_wheel_time_to_max,r22
 375               	.L22:
 491:../../tmk_core/common/command.c ****             break;
 376               		.loc 1 491 13 is_stmt 1 view .LVU80
 377               	.LBB36:
 491:../../tmk_core/common/command.c ****             break;
 378               		.loc 1 491 13 view .LVU81
 491:../../tmk_core/common/command.c ****             break;
 379               		.loc 1 491 13 view .LVU82
 380               	.LBE36:
 381 0132 8091 0000 		lds r24,mk_wheel_time_to_max
 382 0136 1F92      		push __zero_reg__
 383               	.LCFI24:
 384               		.cfi_remember_state
 385               		.cfi_def_cfa_offset 3
 386 0138 8F93      		push r24
 387               	.LCFI25:
 388               		.cfi_def_cfa_offset 4
 389 013a 80E0      		ldi r24,lo8(__c.5328)
 390 013c 90E0      		ldi r25,hi8(__c.5328)
 391 013e 00C0      		rjmp .L23
 392               	.LVL26:
 393               	.L21:
 394               	.LCFI26:
 395               		.cfi_restore_state
 490:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 396               		.loc 1 490 17 view .LVU83
 490:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 397               		.loc 1 490 38 is_stmt 0 view .LVU84
 398 0140 8FEF      		ldi r24,lo8(-1)
 399 0142 8093 0000 		sts mk_wheel_time_to_max,r24
 400 0146 00C0      		rjmp .L22
 401               		.cfi_endproc
 402               	.LFE111:
 404               		.section	.text.mousekey_param_dec,"ax",@progbits
 406               	mousekey_param_dec:
 407               	.LVL27:
 408               	.LFB112:
 497:../../tmk_core/common/command.c ****     switch (param) {
 409               		.loc 1 497 1 is_stmt 1 view -0
 410               		.cfi_startproc
 411               	/* prologue: function */
 412               	/* frame size = 0 */
 413               	/* stack size = 0 */
 414               	.L__stack_usage = 0
 498:../../tmk_core/common/command.c ****         case 1:
 415               		.loc 1 498 5 view .LVU86
 416 0000 8330      		cpi r24,lo8(3)
 417 0002 01F0      		breq .L25
 418 0004 00F4      		brsh .L26
 419 0006 8130      		cpi r24,lo8(1)
 420 0008 01F0      		breq .L27
 421 000a 8230      		cpi r24,lo8(2)
 422 000c 01F0      		breq .L28
 423 000e 0895      		ret
 424               	.L26:
 425 0010 8530      		cpi r24,lo8(5)
 426 0012 01F4      		brne .+2
 427 0014 00C0      		rjmp .L30
 428 0016 00F4      		brsh .+2
 429 0018 00C0      		rjmp .L31
 430 001a 8630      		cpi r24,lo8(6)
 431 001c 01F4      		brne .+2
 432 001e 00C0      		rjmp .L32
 433 0020 0895      		ret
 434               	.L27:
 500:../../tmk_core/common/command.c ****                 mk_delay -= dec;
 435               		.loc 1 500 13 view .LVU87
 500:../../tmk_core/common/command.c ****                 mk_delay -= dec;
 436               		.loc 1 500 26 is_stmt 0 view .LVU88
 437 0022 8091 0000 		lds r24,mk_delay
 438               	.LVL28:
 500:../../tmk_core/common/command.c ****                 mk_delay -= dec;
 439               		.loc 1 500 16 view .LVU89
 440 0026 6817      		cp r22,r24
 441 0028 00F4      		brsh .L33
 501:../../tmk_core/common/command.c ****             else
 442               		.loc 1 501 17 is_stmt 1 view .LVU90
 501:../../tmk_core/common/command.c ****             else
 443               		.loc 1 501 26 is_stmt 0 view .LVU91
 444 002a 861B      		sub r24,r22
 445 002c 8093 0000 		sts mk_delay,r24
 446               	.L34:
 504:../../tmk_core/common/command.c ****             break;
 447               		.loc 1 504 13 is_stmt 1 view .LVU92
 448               	.LBB37:
 504:../../tmk_core/common/command.c ****             break;
 449               		.loc 1 504 13 view .LVU93
 504:../../tmk_core/common/command.c ****             break;
 450               		.loc 1 504 13 view .LVU94
 451               	.LBE37:
 452 0030 8091 0000 		lds r24,mk_delay
 453 0034 1F92      		push __zero_reg__
 454               	.LCFI27:
 455               		.cfi_def_cfa_offset 3
 456 0036 8F93      		push r24
 457               	.LCFI28:
 458               		.cfi_def_cfa_offset 4
 459 0038 80E0      		ldi r24,lo8(__c.5335)
 460 003a 90E0      		ldi r25,hi8(__c.5335)
 461               	.L45:
 539:../../tmk_core/common/command.c ****             break;
 462               		.loc 1 539 13 is_stmt 0 view .LVU95
 463 003c 9F93      		push r25
 464               	.LCFI29:
 465               		.cfi_def_cfa_offset 5
 466 003e 8F93      		push r24
 467               	.LCFI30:
 468               		.cfi_def_cfa_offset 6
 469 0040 0E94 0000 		call __xprintf
 470               	.LVL29:
 540:../../tmk_core/common/command.c ****     }
 471               		.loc 1 540 13 is_stmt 1 view .LVU96
 472 0044 0F90      		pop __tmp_reg__
 473 0046 0F90      		pop __tmp_reg__
 474 0048 0F90      		pop __tmp_reg__
 475 004a 0F90      		pop __tmp_reg__
 476               	.LCFI31:
 477               		.cfi_def_cfa_offset 2
 478               	/* epilogue start */
 542:../../tmk_core/common/command.c **** 
 479               		.loc 1 542 1 is_stmt 0 view .LVU97
 480 004c 0895      		ret
 481               	.LVL30:
 482               	.L33:
 503:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_delay);
 483               		.loc 1 503 17 is_stmt 1 view .LVU98
 503:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_delay);
 484               		.loc 1 503 26 is_stmt 0 view .LVU99
 485 004e 1092 0000 		sts mk_delay,__zero_reg__
 486 0052 00C0      		rjmp .L34
 487               	.LVL31:
 488               	.L28:
 507:../../tmk_core/common/command.c ****                 mk_interval -= dec;
 489               		.loc 1 507 13 is_stmt 1 view .LVU100
 507:../../tmk_core/common/command.c ****                 mk_interval -= dec;
 490               		.loc 1 507 29 is_stmt 0 view .LVU101
 491 0054 8091 0000 		lds r24,mk_interval
 492               	.LVL32:
 507:../../tmk_core/common/command.c ****                 mk_interval -= dec;
 493               		.loc 1 507 16 view .LVU102
 494 0058 6817      		cp r22,r24
 495 005a 00F4      		brsh .L35
 508:../../tmk_core/common/command.c ****             else
 496               		.loc 1 508 17 is_stmt 1 view .LVU103
 508:../../tmk_core/common/command.c ****             else
 497               		.loc 1 508 29 is_stmt 0 view .LVU104
 498 005c 861B      		sub r24,r22
 499 005e 8093 0000 		sts mk_interval,r24
 500               	.L36:
 511:../../tmk_core/common/command.c ****             break;
 501               		.loc 1 511 13 is_stmt 1 view .LVU105
 502               	.LBB38:
 511:../../tmk_core/common/command.c ****             break;
 503               		.loc 1 511 13 view .LVU106
 511:../../tmk_core/common/command.c ****             break;
 504               		.loc 1 511 13 view .LVU107
 505               	.LBE38:
 506 0062 8091 0000 		lds r24,mk_interval
 507 0066 1F92      		push __zero_reg__
 508               	.LCFI32:
 509               		.cfi_remember_state
 510               		.cfi_def_cfa_offset 3
 511 0068 8F93      		push r24
 512               	.LCFI33:
 513               		.cfi_def_cfa_offset 4
 514 006a 80E0      		ldi r24,lo8(__c.5339)
 515 006c 90E0      		ldi r25,hi8(__c.5339)
 516 006e 00C0      		rjmp .L45
 517               	.L35:
 518               	.LCFI34:
 519               		.cfi_restore_state
 510:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_interval);
 520               		.loc 1 510 17 view .LVU108
 510:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_interval);
 521               		.loc 1 510 29 is_stmt 0 view .LVU109
 522 0070 1092 0000 		sts mk_interval,__zero_reg__
 523 0074 00C0      		rjmp .L36
 524               	.LVL33:
 525               	.L25:
 514:../../tmk_core/common/command.c ****                 mk_max_speed -= dec;
 526               		.loc 1 514 13 is_stmt 1 view .LVU110
 514:../../tmk_core/common/command.c ****                 mk_max_speed -= dec;
 527               		.loc 1 514 30 is_stmt 0 view .LVU111
 528 0076 8091 0000 		lds r24,mk_max_speed
 529               	.LVL34:
 514:../../tmk_core/common/command.c ****                 mk_max_speed -= dec;
 530               		.loc 1 514 16 view .LVU112
 531 007a 6817      		cp r22,r24
 532 007c 00F4      		brsh .L37
 515:../../tmk_core/common/command.c ****             else
 533               		.loc 1 515 17 is_stmt 1 view .LVU113
 515:../../tmk_core/common/command.c ****             else
 534               		.loc 1 515 30 is_stmt 0 view .LVU114
 535 007e 861B      		sub r24,r22
 536 0080 8093 0000 		sts mk_max_speed,r24
 537               	.L38:
 518:../../tmk_core/common/command.c ****             break;
 538               		.loc 1 518 13 is_stmt 1 view .LVU115
 539               	.LBB39:
 518:../../tmk_core/common/command.c ****             break;
 540               		.loc 1 518 13 view .LVU116
 518:../../tmk_core/common/command.c ****             break;
 541               		.loc 1 518 13 view .LVU117
 542               	.LBE39:
 543 0084 8091 0000 		lds r24,mk_max_speed
 544 0088 1F92      		push __zero_reg__
 545               	.LCFI35:
 546               		.cfi_remember_state
 547               		.cfi_def_cfa_offset 3
 548 008a 8F93      		push r24
 549               	.LCFI36:
 550               		.cfi_def_cfa_offset 4
 551 008c 80E0      		ldi r24,lo8(__c.5342)
 552 008e 90E0      		ldi r25,hi8(__c.5342)
 553 0090 00C0      		rjmp .L45
 554               	.L37:
 555               	.LCFI37:
 556               		.cfi_restore_state
 517:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 557               		.loc 1 517 17 view .LVU118
 517:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 558               		.loc 1 517 30 is_stmt 0 view .LVU119
 559 0092 1092 0000 		sts mk_max_speed,__zero_reg__
 560 0096 00C0      		rjmp .L38
 561               	.LVL35:
 562               	.L31:
 521:../../tmk_core/common/command.c ****                 mk_time_to_max -= dec;
 563               		.loc 1 521 13 is_stmt 1 view .LVU120
 521:../../tmk_core/common/command.c ****                 mk_time_to_max -= dec;
 564               		.loc 1 521 32 is_stmt 0 view .LVU121
 565 0098 8091 0000 		lds r24,mk_time_to_max
 566               	.LVL36:
 521:../../tmk_core/common/command.c ****                 mk_time_to_max -= dec;
 567               		.loc 1 521 16 view .LVU122
 568 009c 6817      		cp r22,r24
 569 009e 00F4      		brsh .L39
 522:../../tmk_core/common/command.c ****             else
 570               		.loc 1 522 17 is_stmt 1 view .LVU123
 522:../../tmk_core/common/command.c ****             else
 571               		.loc 1 522 32 is_stmt 0 view .LVU124
 572 00a0 861B      		sub r24,r22
 573 00a2 8093 0000 		sts mk_time_to_max,r24
 574               	.L40:
 525:../../tmk_core/common/command.c ****             break;
 575               		.loc 1 525 13 is_stmt 1 view .LVU125
 576               	.LBB40:
 525:../../tmk_core/common/command.c ****             break;
 577               		.loc 1 525 13 view .LVU126
 525:../../tmk_core/common/command.c ****             break;
 578               		.loc 1 525 13 view .LVU127
 579               	.LBE40:
 580 00a6 8091 0000 		lds r24,mk_time_to_max
 581 00aa 1F92      		push __zero_reg__
 582               	.LCFI38:
 583               		.cfi_remember_state
 584               		.cfi_def_cfa_offset 3
 585 00ac 8F93      		push r24
 586               	.LCFI39:
 587               		.cfi_def_cfa_offset 4
 588 00ae 80E0      		ldi r24,lo8(__c.5345)
 589 00b0 90E0      		ldi r25,hi8(__c.5345)
 590 00b2 00C0      		rjmp .L45
 591               	.L39:
 592               	.LCFI40:
 593               		.cfi_restore_state
 524:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 594               		.loc 1 524 17 view .LVU128
 524:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 595               		.loc 1 524 32 is_stmt 0 view .LVU129
 596 00b4 1092 0000 		sts mk_time_to_max,__zero_reg__
 597 00b8 00C0      		rjmp .L40
 598               	.LVL37:
 599               	.L30:
 528:../../tmk_core/common/command.c ****                 mk_wheel_max_speed -= dec;
 600               		.loc 1 528 13 is_stmt 1 view .LVU130
 528:../../tmk_core/common/command.c ****                 mk_wheel_max_speed -= dec;
 601               		.loc 1 528 36 is_stmt 0 view .LVU131
 602 00ba 8091 0000 		lds r24,mk_wheel_max_speed
 603               	.LVL38:
 528:../../tmk_core/common/command.c ****                 mk_wheel_max_speed -= dec;
 604               		.loc 1 528 16 view .LVU132
 605 00be 6817      		cp r22,r24
 606 00c0 00F4      		brsh .L41
 529:../../tmk_core/common/command.c ****             else
 607               		.loc 1 529 17 is_stmt 1 view .LVU133
 529:../../tmk_core/common/command.c ****             else
 608               		.loc 1 529 36 is_stmt 0 view .LVU134
 609 00c2 861B      		sub r24,r22
 610 00c4 8093 0000 		sts mk_wheel_max_speed,r24
 611               	.L42:
 532:../../tmk_core/common/command.c ****             break;
 612               		.loc 1 532 13 is_stmt 1 view .LVU135
 613               	.LBB41:
 532:../../tmk_core/common/command.c ****             break;
 614               		.loc 1 532 13 view .LVU136
 532:../../tmk_core/common/command.c ****             break;
 615               		.loc 1 532 13 view .LVU137
 616               	.LBE41:
 617 00c8 8091 0000 		lds r24,mk_wheel_max_speed
 618 00cc 1F92      		push __zero_reg__
 619               	.LCFI41:
 620               		.cfi_remember_state
 621               		.cfi_def_cfa_offset 3
 622 00ce 8F93      		push r24
 623               	.LCFI42:
 624               		.cfi_def_cfa_offset 4
 625 00d0 80E0      		ldi r24,lo8(__c.5348)
 626 00d2 90E0      		ldi r25,hi8(__c.5348)
 627 00d4 00C0      		rjmp .L45
 628               	.L41:
 629               	.LCFI43:
 630               		.cfi_restore_state
 531:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 631               		.loc 1 531 17 view .LVU138
 531:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 632               		.loc 1 531 36 is_stmt 0 view .LVU139
 633 00d6 1092 0000 		sts mk_wheel_max_speed,__zero_reg__
 634 00da 00C0      		rjmp .L42
 635               	.LVL39:
 636               	.L32:
 535:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max -= dec;
 637               		.loc 1 535 13 is_stmt 1 view .LVU140
 535:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max -= dec;
 638               		.loc 1 535 38 is_stmt 0 view .LVU141
 639 00dc 8091 0000 		lds r24,mk_wheel_time_to_max
 640               	.LVL40:
 535:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max -= dec;
 641               		.loc 1 535 16 view .LVU142
 642 00e0 6817      		cp r22,r24
 643 00e2 00F4      		brsh .L43
 536:../../tmk_core/common/command.c ****             else
 644               		.loc 1 536 17 is_stmt 1 view .LVU143
 536:../../tmk_core/common/command.c ****             else
 645               		.loc 1 536 38 is_stmt 0 view .LVU144
 646 00e4 861B      		sub r24,r22
 647 00e6 8093 0000 		sts mk_wheel_time_to_max,r24
 648               	.L44:
 539:../../tmk_core/common/command.c ****             break;
 649               		.loc 1 539 13 is_stmt 1 view .LVU145
 650               	.LBB42:
 539:../../tmk_core/common/command.c ****             break;
 651               		.loc 1 539 13 view .LVU146
 539:../../tmk_core/common/command.c ****             break;
 652               		.loc 1 539 13 view .LVU147
 653               	.LBE42:
 654 00ea 8091 0000 		lds r24,mk_wheel_time_to_max
 655 00ee 1F92      		push __zero_reg__
 656               	.LCFI44:
 657               		.cfi_remember_state
 658               		.cfi_def_cfa_offset 3
 659 00f0 8F93      		push r24
 660               	.LCFI45:
 661               		.cfi_def_cfa_offset 4
 662 00f2 80E0      		ldi r24,lo8(__c.5351)
 663 00f4 90E0      		ldi r25,hi8(__c.5351)
 664 00f6 00C0      		rjmp .L45
 665               	.L43:
 666               	.LCFI46:
 667               		.cfi_restore_state
 538:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 668               		.loc 1 538 17 view .LVU148
 538:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 669               		.loc 1 538 38 is_stmt 0 view .LVU149
 670 00f8 1092 0000 		sts mk_wheel_time_to_max,__zero_reg__
 671 00fc 00C0      		rjmp .L44
 672               		.cfi_endproc
 673               	.LFE112:
 675               		.section	.text.switch_default_layer,"ax",@progbits
 677               	switch_default_layer:
 678               	.LVL41:
 679               	.LFB116:
 566:../../tmk_core/common/command.c **** 
 567:../../tmk_core/common/command.c **** static bool mousekey_console(uint8_t code)
 568:../../tmk_core/common/command.c **** {
 569:../../tmk_core/common/command.c ****     switch (code) {
 570:../../tmk_core/common/command.c ****         case KC_H:
 571:../../tmk_core/common/command.c ****         case KC_SLASH: /* ? */
 572:../../tmk_core/common/command.c ****             mousekey_console_help();
 573:../../tmk_core/common/command.c ****             break;
 574:../../tmk_core/common/command.c ****         case KC_Q:
 575:../../tmk_core/common/command.c ****         case KC_ESC:
 576:../../tmk_core/common/command.c ****             if (mousekey_param) {
 577:../../tmk_core/common/command.c ****                 mousekey_param = 0;
 578:../../tmk_core/common/command.c ****             } else {
 579:../../tmk_core/common/command.c ****                 print("C> ");
 580:../../tmk_core/common/command.c ****                 command_state = CONSOLE;
 581:../../tmk_core/common/command.c ****                 return false;
 582:../../tmk_core/common/command.c ****             }
 583:../../tmk_core/common/command.c ****             break;
 584:../../tmk_core/common/command.c ****         case KC_P:
 585:../../tmk_core/common/command.c ****             mousekey_param_print();
 586:../../tmk_core/common/command.c ****             break;
 587:../../tmk_core/common/command.c ****         case KC_1:
 588:../../tmk_core/common/command.c ****         case KC_2:
 589:../../tmk_core/common/command.c ****         case KC_3:
 590:../../tmk_core/common/command.c ****         case KC_4:
 591:../../tmk_core/common/command.c ****         case KC_5:
 592:../../tmk_core/common/command.c ****         case KC_6:
 593:../../tmk_core/common/command.c ****             mousekey_param = numkey2num(code);
 594:../../tmk_core/common/command.c ****             break;
 595:../../tmk_core/common/command.c ****         case KC_UP:
 596:../../tmk_core/common/command.c ****             mousekey_param_inc(mousekey_param, 1);
 597:../../tmk_core/common/command.c ****             break;
 598:../../tmk_core/common/command.c ****         case KC_DOWN:
 599:../../tmk_core/common/command.c ****             mousekey_param_dec(mousekey_param, 1);
 600:../../tmk_core/common/command.c ****             break;
 601:../../tmk_core/common/command.c ****         case KC_PGUP:
 602:../../tmk_core/common/command.c ****             mousekey_param_inc(mousekey_param, 10);
 603:../../tmk_core/common/command.c ****             break;
 604:../../tmk_core/common/command.c ****         case KC_PGDN:
 605:../../tmk_core/common/command.c ****             mousekey_param_dec(mousekey_param, 10);
 606:../../tmk_core/common/command.c ****             break;
 607:../../tmk_core/common/command.c ****         case KC_D:
 608:../../tmk_core/common/command.c ****             mk_delay = MOUSEKEY_DELAY/10;
 609:../../tmk_core/common/command.c ****             mk_interval = MOUSEKEY_INTERVAL;
 610:../../tmk_core/common/command.c ****             mk_max_speed = MOUSEKEY_MAX_SPEED;
 611:../../tmk_core/common/command.c ****             mk_time_to_max = MOUSEKEY_TIME_TO_MAX;
 612:../../tmk_core/common/command.c ****             mk_wheel_max_speed = MOUSEKEY_WHEEL_MAX_SPEED;
 613:../../tmk_core/common/command.c ****             mk_wheel_time_to_max = MOUSEKEY_WHEEL_TIME_TO_MAX;
 614:../../tmk_core/common/command.c ****             print("set default\n");
 615:../../tmk_core/common/command.c ****             break;
 616:../../tmk_core/common/command.c ****         default:
 617:../../tmk_core/common/command.c ****             print("?");
 618:../../tmk_core/common/command.c ****             return false;
 619:../../tmk_core/common/command.c ****     }
 620:../../tmk_core/common/command.c ****     if (mousekey_param) {
 621:../../tmk_core/common/command.c ****         xprintf("M%d> ", mousekey_param);
 622:../../tmk_core/common/command.c ****     } else {
 623:../../tmk_core/common/command.c ****         print("M>" );
 624:../../tmk_core/common/command.c ****     }
 625:../../tmk_core/common/command.c ****     return true;
 626:../../tmk_core/common/command.c **** }
 627:../../tmk_core/common/command.c **** #endif
 628:../../tmk_core/common/command.c **** 
 629:../../tmk_core/common/command.c **** 
 630:../../tmk_core/common/command.c **** /***********************************************************
 631:../../tmk_core/common/command.c ****  * Utilities
 632:../../tmk_core/common/command.c ****  ***********************************************************/
 633:../../tmk_core/common/command.c **** #if MOUSEKEY_ENABLE
 634:../../tmk_core/common/command.c **** static uint8_t numkey2num(uint8_t code)
 635:../../tmk_core/common/command.c **** {
 636:../../tmk_core/common/command.c ****     switch (code) {
 637:../../tmk_core/common/command.c ****         case KC_1: return 1;
 638:../../tmk_core/common/command.c ****         case KC_2: return 2;
 639:../../tmk_core/common/command.c ****         case KC_3: return 3;
 640:../../tmk_core/common/command.c ****         case KC_4: return 4;
 641:../../tmk_core/common/command.c ****         case KC_5: return 5;
 642:../../tmk_core/common/command.c ****         case KC_6: return 6;
 643:../../tmk_core/common/command.c ****         case KC_7: return 7;
 644:../../tmk_core/common/command.c ****         case KC_8: return 8;
 645:../../tmk_core/common/command.c ****         case KC_9: return 9;
 646:../../tmk_core/common/command.c ****         case KC_0: return 0;
 647:../../tmk_core/common/command.c ****     }
 648:../../tmk_core/common/command.c ****     return 0;
 649:../../tmk_core/common/command.c **** }
 650:../../tmk_core/common/command.c **** #endif
 651:../../tmk_core/common/command.c **** 
 652:../../tmk_core/common/command.c **** static void switch_default_layer(uint8_t layer)
 653:../../tmk_core/common/command.c **** {
 680               		.loc 1 653 1 is_stmt 1 view -0
 681               		.cfi_startproc
 682               		.loc 1 653 1 is_stmt 0 view .LVU151
 683 0000 CF93      		push r28
 684               	.LCFI47:
 685               		.cfi_def_cfa_offset 3
 686               		.cfi_offset 28, -2
 687               	/* prologue: function */
 688               	/* frame size = 0 */
 689               	/* stack size = 1 */
 690               	.L__stack_usage = 1
 691 0002 C82F      		mov r28,r24
 654:../../tmk_core/common/command.c ****     xprintf("L%d\n", layer);
 692               		.loc 1 654 5 is_stmt 1 view .LVU152
 693               	.LBB43:
 694               		.loc 1 654 5 view .LVU153
 695               		.loc 1 654 5 view .LVU154
 696               	.LBE43:
 697 0004 1F92      		push __zero_reg__
 698               	.LCFI48:
 699               		.cfi_def_cfa_offset 4
 700 0006 8F93      		push r24
 701               	.LCFI49:
 702               		.cfi_def_cfa_offset 5
 703 0008 80E0      		ldi r24,lo8(__c.5407)
 704 000a 90E0      		ldi r25,hi8(__c.5407)
 705               	.LVL42:
 706               		.loc 1 654 5 is_stmt 0 view .LVU155
 707 000c 9F93      		push r25
 708               	.LCFI50:
 709               		.cfi_def_cfa_offset 6
 710 000e 8F93      		push r24
 711               	.LCFI51:
 712               		.cfi_def_cfa_offset 7
 713 0010 0E94 0000 		call __xprintf
 714               	.LVL43:
 655:../../tmk_core/common/command.c ****     default_layer_set(1UL<<layer);
 715               		.loc 1 655 5 is_stmt 1 view .LVU156
 716 0014 61E0      		ldi r22,lo8(1)
 717 0016 70E0      		ldi r23,0
 718 0018 80E0      		ldi r24,0
 719 001a 90E0      		ldi r25,0
 720 001c 00C0      		rjmp 2f
 721               		1:
 722 001e 660F      		lsl r22
 723 0020 771F      		rol r23
 724 0022 881F      		rol r24
 725 0024 991F      		rol r25
 726               		2:
 727 0026 CA95      		dec r28
 728 0028 02F4      		brpl 1b
 729 002a 0E94 0000 		call default_layer_set
 730               	.LVL44:
 656:../../tmk_core/common/command.c ****     clear_keyboard();
 731               		.loc 1 656 5 view .LVU157
 732 002e 0F90      		pop __tmp_reg__
 733 0030 0F90      		pop __tmp_reg__
 734 0032 0F90      		pop __tmp_reg__
 735 0034 0F90      		pop __tmp_reg__
 736               	.LCFI52:
 737               		.cfi_def_cfa_offset 3
 738               	/* epilogue start */
 657:../../tmk_core/common/command.c **** }
 739               		.loc 1 657 1 is_stmt 0 view .LVU158
 740 0036 CF91      		pop r28
 741               	.LVL45:
 656:../../tmk_core/common/command.c ****     clear_keyboard();
 742               		.loc 1 656 5 view .LVU159
 743 0038 0C94 0000 		jmp clear_keyboard
 744               	.LVL46:
 745               		.cfi_endproc
 746               	.LFE116:
 748               		.section	.text.command_common,"ax",@progbits
 750               	command_common:
 751               	.LFB107:
 183:../../tmk_core/common/command.c **** #ifdef KEYBOARD_LOCK_ENABLE
 752               		.loc 1 183 1 is_stmt 1 view -0
 753               		.cfi_startproc
 754 0000 CF93      		push r28
 755               	.LCFI53:
 756               		.cfi_def_cfa_offset 3
 757               		.cfi_offset 28, -2
 758               	/* prologue: function */
 759               	/* frame size = 0 */
 760               	/* stack size = 1 */
 761               	.L__stack_usage = 1
 190:../../tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 762               		.loc 1 190 5 view .LVU161
 763 0002 8732      		cpi r24,lo8(39)
 764 0004 00F0      		brlo .+2
 765 0006 00C0      		rjmp .L48
 766 0008 8E31      		cpi r24,lo8(30)
 767 000a 00F0      		brlo .+2
 768 000c 00C0      		rjmp .L49
 769 000e 8031      		cpi r24,lo8(16)
 770 0010 01F4      		brne .+2
 771 0012 00C0      		rjmp .L50
 772 0014 00F4      		brsh .L51
 773 0016 8730      		cpi r24,lo8(7)
 774 0018 01F4      		brne .+2
 775 001a 00C0      		rjmp .L52
 776 001c 00F4      		brsh .L53
 777 001e 8630      		cpi r24,lo8(6)
 778 0020 01F4      		brne .+2
 779 0022 00C0      		rjmp .L54
 780               	.L55:
 382:../../tmk_core/common/command.c ****             return false;
 781               		.loc 1 382 13 view .LVU162
 782               	.LBB77:
 382:../../tmk_core/common/command.c ****             return false;
 783               		.loc 1 382 13 view .LVU163
 382:../../tmk_core/common/command.c ****             return false;
 784               		.loc 1 382 13 view .LVU164
 785               	.LBE77:
 786 0024 80E0      		ldi r24,lo8(__c.5242)
 787 0026 90E0      		ldi r25,hi8(__c.5242)
 788 0028 0E94 0000 		call xputs
 383:../../tmk_core/common/command.c ****     }
 789               		.loc 1 383 13 view .LVU165
 383:../../tmk_core/common/command.c ****     }
 790               		.loc 1 383 20 is_stmt 0 view .LVU166
 791 002c C0E0      		ldi r28,0
 792 002e 00C0      		rjmp .L47
 793               	.L53:
 190:../../tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 794               		.loc 1 190 5 view .LVU167
 795 0030 8B30      		cpi r24,lo8(11)
 796 0032 01F4      		brne .+2
 797 0034 00C0      		rjmp .L56
 798 0036 8E30      		cpi r24,lo8(14)
 799 0038 01F4      		brne .L55
 264:../../tmk_core/common/command.c ****             if (debug_keyboard) {
 800               		.loc 1 264 13 is_stmt 1 view .LVU168
 264:../../tmk_core/common/command.c ****             if (debug_keyboard) {
 801               		.loc 1 264 31 is_stmt 0 view .LVU169
 802 003a 9091 0000 		lds r25,debug_config
 264:../../tmk_core/common/command.c ****             if (debug_keyboard) {
 803               		.loc 1 264 28 view .LVU170
 804 003e 892F      		mov r24,r25
 805 0040 8B7F      		andi r24,~(1<<2)
 806 0042 92FF      		sbrs r25,2
 807 0044 8460      		ori r24,1<<2
 808 0046 8093 0000 		sts debug_config,r24
 265:../../tmk_core/common/command.c ****                 print("\nkeyboard: on\n");
 809               		.loc 1 265 13 is_stmt 1 view .LVU171
 265:../../tmk_core/common/command.c ****                 print("\nkeyboard: on\n");
 810               		.loc 1 265 16 is_stmt 0 view .LVU172
 811 004a 82FF      		sbrs r24,2
 812 004c 00C0      		rjmp .L71
 266:../../tmk_core/common/command.c ****                 debug_enable = true;
 813               		.loc 1 266 17 is_stmt 1 view .LVU173
 814               	.LBB78:
 266:../../tmk_core/common/command.c ****                 debug_enable = true;
 815               		.loc 1 266 17 view .LVU174
 266:../../tmk_core/common/command.c ****                 debug_enable = true;
 816               		.loc 1 266 17 view .LVU175
 817               	.LBE78:
 818 004e 80E0      		ldi r24,lo8(__c.5195)
 819 0050 90E0      		ldi r25,hi8(__c.5195)
 820 0052 00C0      		rjmp .L97
 821               	.L51:
 190:../../tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 822               		.loc 1 190 5 is_stmt 0 view .LVU176
 823 0054 8631      		cpi r24,lo8(22)
 824 0056 01F4      		brne .+2
 825 0058 00C0      		rjmp .L58
 826 005a 00F4      		brsh .L59
 827 005c 8131      		cpi r24,lo8(17)
 828 005e 01F4      		brne .L55
 360:../../tmk_core/common/command.c ****             keyboard_nkro = !keyboard_nkro;
 829               		.loc 1 360 13 is_stmt 1 view .LVU177
 830 0060 0E94 0000 		call clear_keyboard
 361:../../tmk_core/common/command.c ****             if (keyboard_nkro) {
 831               		.loc 1 361 13 view .LVU178
 832 0064 C091 0000 		lds r28,keyboard_nkro
 833 0068 81E0      		ldi r24,lo8(1)
 834 006a C827      		eor r28,r24
 361:../../tmk_core/common/command.c ****             if (keyboard_nkro) {
 835               		.loc 1 361 27 is_stmt 0 view .LVU179
 836 006c C093 0000 		sts keyboard_nkro,r28
 362:../../tmk_core/common/command.c ****                 print("NKRO: on\n");
 837               		.loc 1 362 13 is_stmt 1 view .LVU180
 362:../../tmk_core/common/command.c ****                 print("NKRO: on\n");
 838               		.loc 1 362 16 is_stmt 0 view .LVU181
 839 0070 CC23      		tst r28
 840 0072 01F4      		brne .+2
 841 0074 00C0      		rjmp .L73
 363:../../tmk_core/common/command.c ****             } else {
 842               		.loc 1 363 17 is_stmt 1 view .LVU182
 843               	.LBB79:
 363:../../tmk_core/common/command.c ****             } else {
 844               		.loc 1 363 17 view .LVU183
 363:../../tmk_core/common/command.c ****             } else {
 845               		.loc 1 363 17 view .LVU184
 846               	.LBE79:
 847 0076 80E0      		ldi r24,lo8(__c.5231)
 848 0078 90E0      		ldi r25,hi8(__c.5231)
 849 007a 0E94 0000 		call xputs
 850               	.L47:
 386:../../tmk_core/common/command.c **** 
 851               		.loc 1 386 1 is_stmt 0 view .LVU185
 852 007e 8C2F      		mov r24,r28
 853               	/* epilogue start */
 854 0080 CF91      		pop r28
 855 0082 0895      		ret
 856               	.L59:
 190:../../tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 857               		.loc 1 190 5 view .LVU186
 858 0084 8931      		cpi r24,lo8(25)
 859 0086 01F4      		brne .+2
 860 0088 00C0      		rjmp .L61
 861 008a 8B31      		cpi r24,lo8(27)
 862 008c 01F4      		brne .L55
 255:../../tmk_core/common/command.c ****             if (debug_matrix) {
 863               		.loc 1 255 13 is_stmt 1 view .LVU187
 255:../../tmk_core/common/command.c ****             if (debug_matrix) {
 864               		.loc 1 255 29 is_stmt 0 view .LVU188
 865 008e 9091 0000 		lds r25,debug_config
 255:../../tmk_core/common/command.c ****             if (debug_matrix) {
 866               		.loc 1 255 26 view .LVU189
 867 0092 892F      		mov r24,r25
 868 0094 8D7F      		andi r24,~(1<<1)
 869 0096 91FF      		sbrs r25,1
 870 0098 8260      		ori r24,1<<1
 871 009a 8093 0000 		sts debug_config,r24
 256:../../tmk_core/common/command.c ****                 print("\nmatrix: on\n");
 872               		.loc 1 256 13 is_stmt 1 view .LVU190
 256:../../tmk_core/common/command.c ****                 print("\nmatrix: on\n");
 873               		.loc 1 256 16 is_stmt 0 view .LVU191
 874 009e 81FF      		sbrs r24,1
 875 00a0 00C0      		rjmp .L70
 257:../../tmk_core/common/command.c ****                 debug_enable = true;
 876               		.loc 1 257 17 is_stmt 1 view .LVU192
 877               	.LBB80:
 257:../../tmk_core/common/command.c ****                 debug_enable = true;
 878               		.loc 1 257 17 view .LVU193
 257:../../tmk_core/common/command.c ****                 debug_enable = true;
 879               		.loc 1 257 17 view .LVU194
 880               	.LBE80:
 881 00a2 80E0      		ldi r24,lo8(__c.5190)
 882 00a4 90E0      		ldi r25,hi8(__c.5190)
 883 00a6 00C0      		rjmp .L97
 884               	.L48:
 190:../../tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 885               		.loc 1 190 5 is_stmt 0 view .LVU195
 886 00a8 8833      		cpi r24,lo8(56)
 887 00aa 01F0      		breq .L56
 888 00ac 00F4      		brsh .L63
 889 00ae 8932      		cpi r24,lo8(41)
 890 00b0 01F0      		breq .L64
 891 00b2 8533      		cpi r24,lo8(53)
 892 00b4 01F0      		breq .L64
 893 00b6 8732      		cpi r24,lo8(39)
 894 00b8 01F0      		breq .+2
 895 00ba 00C0      		rjmp .L55
 896               	.L64:
 373:../../tmk_core/common/command.c ****             break;
 897               		.loc 1 373 13 is_stmt 1 view .LVU196
 898 00bc 80E0      		ldi r24,0
 899               	.L93:
 379:../../tmk_core/common/command.c ****             break;
 900               		.loc 1 379 13 is_stmt 0 view .LVU197
 901 00be 0E94 0000 		call switch_default_layer
 902 00c2 00C0      		rjmp .L94
 903               	.L63:
 190:../../tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 904               		.loc 1 190 5 view .LVU198
 905 00c4 8334      		cpi r24,lo8(67)
 906 00c6 01F0      		breq .L64
 907 00c8 00F4      		brsh .L65
 908 00ca 8A33      		cpi r24,lo8(58)
 909 00cc 00F4      		brsh .+2
 910 00ce 00C0      		rjmp .L55
 379:../../tmk_core/common/command.c ****             break;
 911               		.loc 1 379 13 is_stmt 1 view .LVU199
 912 00d0 8953      		subi r24,lo8(-(-57))
 913 00d2 00C0      		rjmp .L93
 914               	.L65:
 190:../../tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 915               		.loc 1 190 5 is_stmt 0 view .LVU200
 916 00d4 8834      		cpi r24,lo8(72)
 917 00d6 01F0      		breq .+2
 918 00d8 00C0      		rjmp .L55
 237:../../tmk_core/common/command.c ****             print("\n\nbootloader... ");
 919               		.loc 1 237 13 is_stmt 1 view .LVU201
 920 00da 0E94 0000 		call clear_keyboard
 238:../../tmk_core/common/command.c ****             wait_ms(1000);
 921               		.loc 1 238 13 view .LVU202
 922               	.LBB81:
 238:../../tmk_core/common/command.c ****             wait_ms(1000);
 923               		.loc 1 238 13 view .LVU203
 238:../../tmk_core/common/command.c ****             wait_ms(1000);
 924               		.loc 1 238 13 view .LVU204
 925               	.LBE81:
 926 00de 80E0      		ldi r24,lo8(__c.5182)
 927 00e0 90E0      		ldi r25,hi8(__c.5182)
 928 00e2 0E94 0000 		call xputs
 239:../../tmk_core/common/command.c ****             bootloader_jump(); // not return
 929               		.loc 1 239 13 view .LVU205
 930               	.LBB82:
 931               	.LBI82:
 932               		.file 2 "/usr/avr/include/util/delay.h"
   1:/usr/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/avr/include/util/delay.h **** 
   6:/usr/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/avr/include/util/delay.h **** 
   9:/usr/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/avr/include/util/delay.h **** 
  12:/usr/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/avr/include/util/delay.h ****      distribution.
  16:/usr/avr/include/util/delay.h **** 
  17:/usr/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/avr/include/util/delay.h **** 
  21:/usr/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/avr/include/util/delay.h **** 
  33:/usr/avr/include/util/delay.h **** /* $Id: delay.h.in 2506 2016-02-08 10:05:45Z joerg_wunsch $ */
  34:/usr/avr/include/util/delay.h **** 
  35:/usr/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/avr/include/util/delay.h **** 
  38:/usr/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/usr/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/usr/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/usr/avr/include/util/delay.h **** #  endif
  42:/usr/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/usr/avr/include/util/delay.h **** 
  44:/usr/avr/include/util/delay.h **** #include <inttypes.h>
  45:/usr/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/usr/avr/include/util/delay.h **** #include <math.h>
  47:/usr/avr/include/util/delay.h **** 
  48:/usr/avr/include/util/delay.h **** /** \file */
  49:/usr/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/usr/avr/include/util/delay.h ****     \code
  51:/usr/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/usr/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/usr/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/usr/avr/include/util/delay.h ****     \endcode
  55:/usr/avr/include/util/delay.h **** 
  56:/usr/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/usr/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/usr/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/usr/avr/include/util/delay.h ****     used.
  60:/usr/avr/include/util/delay.h **** 
  61:/usr/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/usr/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/usr/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/usr/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/usr/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/usr/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/usr/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/usr/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/usr/avr/include/util/delay.h **** 
  70:/usr/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/usr/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/usr/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/usr/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/usr/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/usr/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/usr/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/usr/avr/include/util/delay.h ****     routines linked into the application.
  78:/usr/avr/include/util/delay.h **** 
  79:/usr/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/usr/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/usr/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/usr/avr/include/util/delay.h **** 
  83:/usr/avr/include/util/delay.h **** */
  84:/usr/avr/include/util/delay.h **** 
  85:/usr/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/usr/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/usr/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/usr/avr/include/util/delay.h **** #endif
  89:/usr/avr/include/util/delay.h **** 
  90:/usr/avr/include/util/delay.h **** #ifndef F_CPU
  91:/usr/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/usr/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/usr/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/usr/avr/include/util/delay.h ****     \def F_CPU
  95:/usr/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/usr/avr/include/util/delay.h **** 
  97:/usr/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/usr/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/usr/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/usr/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/usr/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/usr/avr/include/util/delay.h **** 
 103:/usr/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/usr/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/usr/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/usr/avr/include/util/delay.h ****     integer value.
 107:/usr/avr/include/util/delay.h ****  */
 108:/usr/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/usr/avr/include/util/delay.h **** #endif
 110:/usr/avr/include/util/delay.h **** 
 111:/usr/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/usr/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/usr/avr/include/util/delay.h **** #endif
 114:/usr/avr/include/util/delay.h **** 
 115:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/usr/avr/include/util/delay.h **** #  include <math.h>
 119:/usr/avr/include/util/delay.h **** #endif
 120:/usr/avr/include/util/delay.h **** 
 121:/usr/avr/include/util/delay.h **** /**
 122:/usr/avr/include/util/delay.h ****    \ingroup util_delay
 123:/usr/avr/include/util/delay.h **** 
 124:/usr/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/usr/avr/include/util/delay.h **** 
 126:/usr/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/usr/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/usr/avr/include/util/delay.h **** 
 129:/usr/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/usr/avr/include/util/delay.h **** 
 131:/usr/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/usr/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/usr/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/usr/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/usr/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/usr/avr/include/util/delay.h **** 
 137:/usr/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/usr/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/usr/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/usr/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/usr/avr/include/util/delay.h **** 
 142:/usr/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/usr/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/usr/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/usr/avr/include/util/delay.h ****    microseconds of delay.
 146:/usr/avr/include/util/delay.h **** 
 147:/usr/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/usr/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/usr/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/usr/avr/include/util/delay.h ****    respectively.
 151:/usr/avr/include/util/delay.h **** 
 152:/usr/avr/include/util/delay.h ****    \note
 153:/usr/avr/include/util/delay.h **** 
 154:/usr/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/usr/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/usr/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/usr/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/usr/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/usr/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/usr/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/usr/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/usr/avr/include/util/delay.h ****    not available to the compiler then.
 163:/usr/avr/include/util/delay.h **** 
 164:/usr/avr/include/util/delay.h ****  */
 165:/usr/avr/include/util/delay.h **** void
 166:/usr/avr/include/util/delay.h **** _delay_ms(double __ms)
 933               		.loc 2 166 1 view .LVU206
 934               	.LBB83:
 167:/usr/avr/include/util/delay.h **** {
 168:/usr/avr/include/util/delay.h **** 	double __tmp ;
 935               		.loc 2 168 2 view .LVU207
 169:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/usr/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 936               		.loc 2 172 2 view .LVU208
 173:/usr/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 937               		.loc 2 173 2 view .LVU209
 174:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 938               		.loc 2 174 2 view .LVU210
 175:/usr/avr/include/util/delay.h **** 
 176:/usr/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/usr/avr/include/util/delay.h **** 
 179:/usr/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/usr/avr/include/util/delay.h **** 
 182:/usr/avr/include/util/delay.h **** 	#else
 183:/usr/avr/include/util/delay.h **** 		//round up by default
 184:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 939               		.loc 2 184 3 view .LVU211
 185:/usr/avr/include/util/delay.h **** 	#endif
 186:/usr/avr/include/util/delay.h **** 
 187:/usr/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 940               		.loc 2 187 2 view .LVU212
 941 00e6 2FEF      		ldi r18,lo8(3199999)
 942 00e8 83ED      		ldi r24,hi8(3199999)
 943 00ea 90E3      		ldi r25,hlo8(3199999)
 944 00ec 2150      	1:	subi r18,1
 945 00ee 8040      		sbci r24,0
 946 00f0 9040      		sbci r25,0
 947 00f2 01F4      		brne 1b
 948 00f4 00C0      		rjmp .
 949 00f6 0000      		nop
 950               	.LBE83:
 951               	.LBE82:
 240:../../tmk_core/common/command.c ****             break;
 952               		.loc 1 240 13 view .LVU213
 953 00f8 0E94 0000 		call bootloader_jump
 241:../../tmk_core/common/command.c ****         case KC_D:
 954               		.loc 1 241 13 view .LVU214
 955 00fc 00C0      		rjmp .L94
 956               	.L56:
 225:../../tmk_core/common/command.c ****             break;
 957               		.loc 1 225 13 view .LVU215
 958               	.LBB84:
 959               	.LBI84:
 116:../../tmk_core/common/command.c **** {
 960               		.loc 1 116 13 view .LVU216
 961               	.LBB85:
 118:../../tmk_core/common/command.c ****           "d:	debug\n"
 962               		.loc 1 118 5 view .LVU217
 963               	.LBE85:
 964               	.LBE84:
 118:../../tmk_core/common/command.c ****           "d:	debug\n"
 965               		.loc 1 118 5 view .LVU218
 118:../../tmk_core/common/command.c ****           "d:	debug\n"
 966               		.loc 1 118 5 view .LVU219
 967               	.LBB87:
 968               	.LBB86:
 969 00fe 80E0      		ldi r24,lo8(__c.5170)
 970 0100 90E0      		ldi r25,hi8(__c.5170)
 971               	.L95:
 972               	.LBE86:
 973               	.LBE87:
 365:../../tmk_core/common/command.c ****             }
 974               		.loc 1 365 17 is_stmt 0 view .LVU220
 975 0102 0E94 0000 		call xputs
 976 0106 00C0      		rjmp .L94
 977               	.L54:
 228:../../tmk_core/common/command.c ****             debug_keyboard = false;
 978               		.loc 1 228 13 is_stmt 1 view .LVU221
 229:../../tmk_core/common/command.c ****             debug_mouse    = false;
 979               		.loc 1 229 13 view .LVU222
 230:../../tmk_core/common/command.c ****             debug_enable   = false;
 980               		.loc 1 230 13 view .LVU223
 231:../../tmk_core/common/command.c ****             command_console_help();
 981               		.loc 1 231 13 view .LVU224
 231:../../tmk_core/common/command.c ****             command_console_help();
 982               		.loc 1 231 28 is_stmt 0 view .LVU225
 983 0108 8091 0000 		lds r24,debug_config
 984 010c 807F      		andi r24,lo8(-16)
 985 010e 8093 0000 		sts debug_config,r24
 232:../../tmk_core/common/command.c ****             print("C> ");
 986               		.loc 1 232 13 is_stmt 1 view .LVU226
 987               	.LBB88:
 988               	.LBI88:
 392:../../tmk_core/common/command.c **** {
 989               		.loc 1 392 13 view .LVU227
 990               	.LBB89:
 394:../../tmk_core/common/command.c ****           "ESC/q:	quit\n"
 991               		.loc 1 394 5 view .LVU228
 992               	.LBE89:
 993               	.LBE88:
 394:../../tmk_core/common/command.c ****           "ESC/q:	quit\n"
 994               		.loc 1 394 5 view .LVU229
 394:../../tmk_core/common/command.c ****           "ESC/q:	quit\n"
 995               		.loc 1 394 5 view .LVU230
 996               	.LBB91:
 997               	.LBB90:
 998 0112 80E0      		ldi r24,lo8(__c.5247)
 999 0114 90E0      		ldi r25,hi8(__c.5247)
 1000 0116 0E94 0000 		call xputs
 1001               	.LBE90:
 1002               	.LBE91:
 233:../../tmk_core/common/command.c ****             command_state = CONSOLE;
 1003               		.loc 1 233 13 view .LVU231
 1004               	.LBB92:
 233:../../tmk_core/common/command.c ****             command_state = CONSOLE;
 1005               		.loc 1 233 13 view .LVU232
 233:../../tmk_core/common/command.c ****             command_state = CONSOLE;
 1006               		.loc 1 233 13 view .LVU233
 1007               	.LBE92:
 1008 011a 80E0      		ldi r24,lo8(__c.5179)
 1009 011c 90E0      		ldi r25,hi8(__c.5179)
 1010 011e 0E94 0000 		call xputs
 234:../../tmk_core/common/command.c ****             break;
 1011               		.loc 1 234 13 view .LVU234
 234:../../tmk_core/common/command.c ****             break;
 1012               		.loc 1 234 27 is_stmt 0 view .LVU235
 1013 0122 81E0      		ldi r24,lo8(1)
 1014 0124 8093 0000 		sts command_state,r24
 235:../../tmk_core/common/command.c ****         case KC_PAUSE:
 1015               		.loc 1 235 13 is_stmt 1 view .LVU236
 1016               	.L94:
 380:../../tmk_core/common/command.c ****         default:
 1017               		.loc 1 380 13 view .LVU237
 385:../../tmk_core/common/command.c **** }
 1018               		.loc 1 385 12 is_stmt 0 view .LVU238
 1019 0128 C1E0      		ldi r28,lo8(1)
 380:../../tmk_core/common/command.c ****         default:
 1020               		.loc 1 380 13 view .LVU239
 1021 012a 00C0      		rjmp .L47
 1022               	.L52:
 243:../../tmk_core/common/command.c ****                 print("\ndebug: off\n");
 1023               		.loc 1 243 13 is_stmt 1 view .LVU240
 243:../../tmk_core/common/command.c ****                 print("\ndebug: off\n");
 1024               		.loc 1 243 17 is_stmt 0 view .LVU241
 1025 012c 8091 0000 		lds r24,debug_config
 243:../../tmk_core/common/command.c ****                 print("\ndebug: off\n");
 1026               		.loc 1 243 16 view .LVU242
 1027 0130 80FF      		sbrs r24,0
 1028 0132 00C0      		rjmp .L69
 244:../../tmk_core/common/command.c ****                 debug_matrix   = false;
 1029               		.loc 1 244 17 is_stmt 1 view .LVU243
 1030               	.LBB93:
 244:../../tmk_core/common/command.c ****                 debug_matrix   = false;
 1031               		.loc 1 244 17 view .LVU244
 244:../../tmk_core/common/command.c ****                 debug_matrix   = false;
 1032               		.loc 1 244 17 view .LVU245
 1033               	.LBE93:
 1034 0134 80E0      		ldi r24,lo8(__c.5185)
 1035 0136 90E0      		ldi r25,hi8(__c.5185)
 1036 0138 0E94 0000 		call xputs
 245:../../tmk_core/common/command.c ****                 debug_keyboard = false;
 1037               		.loc 1 245 17 view .LVU246
 246:../../tmk_core/common/command.c ****                 debug_mouse    = false;
 1038               		.loc 1 246 17 view .LVU247
 247:../../tmk_core/common/command.c ****                 debug_enable   = false;
 1039               		.loc 1 247 17 view .LVU248
 248:../../tmk_core/common/command.c ****             } else {
 1040               		.loc 1 248 17 view .LVU249
 248:../../tmk_core/common/command.c ****             } else {
 1041               		.loc 1 248 32 is_stmt 0 view .LVU250
 1042 013c 8091 0000 		lds r24,debug_config
 1043 0140 807F      		andi r24,lo8(-16)
 1044               	.L96:
 276:../../tmk_core/common/command.c ****             } else {
 1045               		.loc 1 276 30 view .LVU251
 1046 0142 8093 0000 		sts debug_config,r24
 1047 0146 00C0      		rjmp .L94
 1048               	.L69:
 250:../../tmk_core/common/command.c ****                 debug_enable   = true;
 1049               		.loc 1 250 17 is_stmt 1 view .LVU252
 1050               	.LBB94:
 250:../../tmk_core/common/command.c ****                 debug_enable   = true;
 1051               		.loc 1 250 17 view .LVU253
 250:../../tmk_core/common/command.c ****                 debug_enable   = true;
 1052               		.loc 1 250 17 view .LVU254
 1053               	.LBE94:
 1054 0148 80E0      		ldi r24,lo8(__c.5187)
 1055 014a 90E0      		ldi r25,hi8(__c.5187)
 1056               	.L97:
 275:../../tmk_core/common/command.c ****                 debug_enable = true;
 1057               		.loc 1 275 17 is_stmt 0 view .LVU255
 1058 014c 0E94 0000 		call xputs
 276:../../tmk_core/common/command.c ****             } else {
 1059               		.loc 1 276 17 is_stmt 1 view .LVU256
 276:../../tmk_core/common/command.c ****             } else {
 1060               		.loc 1 276 30 is_stmt 0 view .LVU257
 1061 0150 8091 0000 		lds r24,debug_config
 1062 0154 8160      		ori r24,lo8(1<<0)
 1063 0156 00C0      		rjmp .L96
 1064               	.L70:
 260:../../tmk_core/common/command.c ****             }
 1065               		.loc 1 260 17 is_stmt 1 view .LVU258
 1066               	.LBB95:
 260:../../tmk_core/common/command.c ****             }
 1067               		.loc 1 260 17 view .LVU259
 260:../../tmk_core/common/command.c ****             }
 1068               		.loc 1 260 17 view .LVU260
 1069               	.LBE95:
 1070 0158 80E0      		ldi r24,lo8(__c.5192)
 1071 015a 90E0      		ldi r25,hi8(__c.5192)
 1072 015c 00C0      		rjmp .L95
 1073               	.L71:
 269:../../tmk_core/common/command.c ****             }
 1074               		.loc 1 269 17 view .LVU261
 1075               	.LBB96:
 269:../../tmk_core/common/command.c ****             }
 1076               		.loc 1 269 17 view .LVU262
 269:../../tmk_core/common/command.c ****             }
 1077               		.loc 1 269 17 view .LVU263
 1078               	.LBE96:
 1079 015e 80E0      		ldi r24,lo8(__c.5197)
 1080 0160 90E0      		ldi r25,hi8(__c.5197)
 1081 0162 00C0      		rjmp .L95
 1082               	.L50:
 273:../../tmk_core/common/command.c ****             if (debug_mouse) {
 1083               		.loc 1 273 13 view .LVU264
 273:../../tmk_core/common/command.c ****             if (debug_mouse) {
 1084               		.loc 1 273 28 is_stmt 0 view .LVU265
 1085 0164 9091 0000 		lds r25,debug_config
 273:../../tmk_core/common/command.c ****             if (debug_mouse) {
 1086               		.loc 1 273 25 view .LVU266
 1087 0168 892F      		mov r24,r25
 1088 016a 877F      		andi r24,~(1<<3)
 1089 016c 93FF      		sbrs r25,3
 1090 016e 8860      		ori r24,1<<3
 1091 0170 8093 0000 		sts debug_config,r24
 274:../../tmk_core/common/command.c ****                 print("\nmouse: on\n");
 1092               		.loc 1 274 13 is_stmt 1 view .LVU267
 274:../../tmk_core/common/command.c ****                 print("\nmouse: on\n");
 1093               		.loc 1 274 16 is_stmt 0 view .LVU268
 1094 0174 83FF      		sbrs r24,3
 1095 0176 00C0      		rjmp .L72
 275:../../tmk_core/common/command.c ****                 debug_enable = true;
 1096               		.loc 1 275 17 is_stmt 1 view .LVU269
 1097               	.LBB97:
 275:../../tmk_core/common/command.c ****                 debug_enable = true;
 1098               		.loc 1 275 17 view .LVU270
 275:../../tmk_core/common/command.c ****                 debug_enable = true;
 1099               		.loc 1 275 17 view .LVU271
 1100               	.LBE97:
 1101 0178 80E0      		ldi r24,lo8(__c.5200)
 1102 017a 90E0      		ldi r25,hi8(__c.5200)
 1103 017c 00C0      		rjmp .L97
 1104               	.L72:
 278:../../tmk_core/common/command.c ****             }
 1105               		.loc 1 278 17 view .LVU272
 1106               	.LBB98:
 278:../../tmk_core/common/command.c ****             }
 1107               		.loc 1 278 17 view .LVU273
 278:../../tmk_core/common/command.c ****             }
 1108               		.loc 1 278 17 view .LVU274
 1109               	.LBE98:
 1110 017e 80E0      		ldi r24,lo8(__c.5202)
 1111 0180 90E0      		ldi r25,hi8(__c.5202)
 1112 0182 00C0      		rjmp .L95
 1113               	.L61:
 282:../../tmk_core/common/command.c ****             print("DESC: " STR(DESCRIPTION) "\n");
 1114               		.loc 1 282 13 view .LVU275
 1115               	.LBB99:
 282:../../tmk_core/common/command.c ****             print("DESC: " STR(DESCRIPTION) "\n");
 1116               		.loc 1 282 13 view .LVU276
 282:../../tmk_core/common/command.c ****             print("DESC: " STR(DESCRIPTION) "\n");
 1117               		.loc 1 282 13 view .LVU277
 1118               	.LBE99:
 1119 0184 80E0      		ldi r24,lo8(__c.5205)
 1120 0186 90E0      		ldi r25,hi8(__c.5205)
 1121 0188 0E94 0000 		call xputs
 283:../../tmk_core/common/command.c ****             print("VID: " STR(VENDOR_ID) "(" STR(MANUFACTURER) ") "
 1122               		.loc 1 283 13 view .LVU278
 1123               	.LBB100:
 283:../../tmk_core/common/command.c ****             print("VID: " STR(VENDOR_ID) "(" STR(MANUFACTURER) ") "
 1124               		.loc 1 283 13 view .LVU279
 283:../../tmk_core/common/command.c ****             print("VID: " STR(VENDOR_ID) "(" STR(MANUFACTURER) ") "
 1125               		.loc 1 283 13 view .LVU280
 1126               	.LBE100:
 1127 018c 80E0      		ldi r24,lo8(__c.5207)
 1128 018e 90E0      		ldi r25,hi8(__c.5207)
 1129 0190 0E94 0000 		call xputs
 284:../../tmk_core/common/command.c ****                   "PID: " STR(PRODUCT_ID) "(" STR(PRODUCT) ") "
 1130               		.loc 1 284 13 view .LVU281
 1131               	.LBB101:
 284:../../tmk_core/common/command.c ****                   "PID: " STR(PRODUCT_ID) "(" STR(PRODUCT) ") "
 1132               		.loc 1 284 13 view .LVU282
 284:../../tmk_core/common/command.c ****                   "PID: " STR(PRODUCT_ID) "(" STR(PRODUCT) ") "
 1133               		.loc 1 284 13 view .LVU283
 1134               	.LBE101:
 1135 0194 80E0      		ldi r24,lo8(__c.5209)
 1136 0196 90E0      		ldi r25,hi8(__c.5209)
 1137 0198 0E94 0000 		call xputs
 287:../../tmk_core/common/command.c ****             /* build options */
 1138               		.loc 1 287 13 view .LVU284
 1139               	.LBB102:
 287:../../tmk_core/common/command.c ****             /* build options */
 1140               		.loc 1 287 13 view .LVU285
 287:../../tmk_core/common/command.c ****             /* build options */
 1141               		.loc 1 287 13 view .LVU286
 1142               	.LBE102:
 1143 019c 80E0      		ldi r24,lo8(__c.5211)
 1144 019e 90E0      		ldi r25,hi8(__c.5211)
 1145 01a0 0E94 0000 		call xputs
 289:../../tmk_core/common/command.c **** #ifdef PROTOCOL_PJRC
 1146               		.loc 1 289 13 view .LVU287
 1147               	.LBB103:
 289:../../tmk_core/common/command.c **** #ifdef PROTOCOL_PJRC
 1148               		.loc 1 289 13 view .LVU288
 289:../../tmk_core/common/command.c **** #ifdef PROTOCOL_PJRC
 1149               		.loc 1 289 13 view .LVU289
 1150               	.LBE103:
 1151 01a4 80E0      		ldi r24,lo8(__c.5213)
 1152 01a6 90E0      		ldi r25,hi8(__c.5213)
 1153 01a8 0E94 0000 		call xputs
 325:../../tmk_core/common/command.c **** #if defined(__AVR__)
 1154               		.loc 1 325 13 view .LVU290
 1155               	.LBB104:
 325:../../tmk_core/common/command.c **** #if defined(__AVR__)
 1156               		.loc 1 325 13 view .LVU291
 325:../../tmk_core/common/command.c **** #if defined(__AVR__)
 1157               		.loc 1 325 13 view .LVU292
 1158               	.LBE104:
 1159 01ac 80E0      		ldi r24,lo8(__c.5215)
 1160 01ae 90E0      		ldi r25,hi8(__c.5215)
 1161 01b0 00C0      		rjmp .L95
 1162               	.L58:
 335:../../tmk_core/common/command.c ****             print_val_hex8(host_keyboard_leds());
 1163               		.loc 1 335 13 view .LVU293
 1164               	.LBB105:
 335:../../tmk_core/common/command.c ****             print_val_hex8(host_keyboard_leds());
 1165               		.loc 1 335 13 view .LVU294
 335:../../tmk_core/common/command.c ****             print_val_hex8(host_keyboard_leds());
 1166               		.loc 1 335 13 view .LVU295
 1167               	.LBE105:
 1168 01b2 80E0      		ldi r24,lo8(__c.5218)
 1169 01b4 90E0      		ldi r25,hi8(__c.5218)
 1170 01b6 0E94 0000 		call xputs
 336:../../tmk_core/common/command.c ****             print_val_hex8(keyboard_protocol);
 1171               		.loc 1 336 13 view .LVU296
 1172 01ba 0E94 0000 		call host_keyboard_leds
 1173               	.LBB106:
 336:../../tmk_core/common/command.c ****             print_val_hex8(keyboard_protocol);
 1174               		.loc 1 336 13 view .LVU297
 336:../../tmk_core/common/command.c ****             print_val_hex8(keyboard_protocol);
 1175               		.loc 1 336 13 view .LVU298
 1176               	.LBE106:
 1177 01be 1F92      		push __zero_reg__
 1178               	.LCFI54:
 1179               		.cfi_def_cfa_offset 4
 1180 01c0 8F93      		push r24
 1181               	.LCFI55:
 1182               		.cfi_def_cfa_offset 5
 1183 01c2 80E0      		ldi r24,lo8(__c.5220)
 1184 01c4 90E0      		ldi r25,hi8(__c.5220)
 1185 01c6 9F93      		push r25
 1186               	.LCFI56:
 1187               		.cfi_def_cfa_offset 6
 1188 01c8 8F93      		push r24
 1189               	.LCFI57:
 1190               		.cfi_def_cfa_offset 7
 1191 01ca 0E94 0000 		call __xprintf
 337:../../tmk_core/common/command.c ****             print_val_hex8(keyboard_idle);
 1192               		.loc 1 337 13 view .LVU299
 1193               	.LBB107:
 337:../../tmk_core/common/command.c ****             print_val_hex8(keyboard_idle);
 1194               		.loc 1 337 13 view .LVU300
 337:../../tmk_core/common/command.c ****             print_val_hex8(keyboard_idle);
 1195               		.loc 1 337 13 view .LVU301
 1196               	.LBE107:
 1197 01ce 8091 0000 		lds r24,keyboard_protocol
 1198 01d2 1F92      		push __zero_reg__
 1199               	.LCFI58:
 1200               		.cfi_def_cfa_offset 8
 1201 01d4 8F93      		push r24
 1202               	.LCFI59:
 1203               		.cfi_def_cfa_offset 9
 1204 01d6 80E0      		ldi r24,lo8(__c.5222)
 1205 01d8 90E0      		ldi r25,hi8(__c.5222)
 1206 01da 9F93      		push r25
 1207               	.LCFI60:
 1208               		.cfi_def_cfa_offset 10
 1209 01dc 8F93      		push r24
 1210               	.LCFI61:
 1211               		.cfi_def_cfa_offset 11
 1212 01de 0E94 0000 		call __xprintf
 338:../../tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 1213               		.loc 1 338 13 view .LVU302
 1214               	.LBB108:
 338:../../tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 1215               		.loc 1 338 13 view .LVU303
 338:../../tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 1216               		.loc 1 338 13 view .LVU304
 1217               	.LBE108:
 1218 01e2 8091 0000 		lds r24,keyboard_idle
 1219 01e6 1F92      		push __zero_reg__
 1220               	.LCFI62:
 1221               		.cfi_def_cfa_offset 12
 1222 01e8 8F93      		push r24
 1223               	.LCFI63:
 1224               		.cfi_def_cfa_offset 13
 1225 01ea 80E0      		ldi r24,lo8(__c.5224)
 1226 01ec 90E0      		ldi r25,hi8(__c.5224)
 1227 01ee 9F93      		push r25
 1228               	.LCFI64:
 1229               		.cfi_def_cfa_offset 14
 1230 01f0 8F93      		push r24
 1231               	.LCFI65:
 1232               		.cfi_def_cfa_offset 15
 1233 01f2 0E94 0000 		call __xprintf
 340:../../tmk_core/common/command.c **** #endif
 1234               		.loc 1 340 13 view .LVU305
 1235               	.LBB109:
 340:../../tmk_core/common/command.c **** #endif
 1236               		.loc 1 340 13 view .LVU306
 340:../../tmk_core/common/command.c **** #endif
 1237               		.loc 1 340 13 view .LVU307
 1238               	.LBE109:
 1239 01f6 8091 0000 		lds r24,keyboard_nkro
 1240 01fa 1F92      		push __zero_reg__
 1241               	.LCFI66:
 1242               		.cfi_def_cfa_offset 16
 1243 01fc 8F93      		push r24
 1244               	.LCFI67:
 1245               		.cfi_def_cfa_offset 17
 1246 01fe 80E0      		ldi r24,lo8(__c.5226)
 1247 0200 90E0      		ldi r25,hi8(__c.5226)
 1248 0202 9F93      		push r25
 1249               	.LCFI68:
 1250               		.cfi_def_cfa_offset 18
 1251 0204 8F93      		push r24
 1252               	.LCFI69:
 1253               		.cfi_def_cfa_offset 19
 1254 0206 0E94 0000 		call __xprintf
 342:../../tmk_core/common/command.c **** 
 1255               		.loc 1 342 13 view .LVU308
 1256 020a 0E94 0000 		call timer_read32
 1257               	.LBB110:
 342:../../tmk_core/common/command.c **** 
 1258               		.loc 1 342 13 view .LVU309
 342:../../tmk_core/common/command.c **** 
 1259               		.loc 1 342 13 view .LVU310
 1260               	.LBE110:
 1261 020e 9F93      		push r25
 1262               	.LCFI70:
 1263               		.cfi_def_cfa_offset 20
 1264 0210 8F93      		push r24
 1265               	.LCFI71:
 1266               		.cfi_def_cfa_offset 21
 1267 0212 7F93      		push r23
 1268               	.LCFI72:
 1269               		.cfi_def_cfa_offset 22
 1270 0214 6F93      		push r22
 1271               	.LCFI73:
 1272               		.cfi_def_cfa_offset 23
 1273 0216 80E0      		ldi r24,lo8(__c.5228)
 1274 0218 90E0      		ldi r25,hi8(__c.5228)
 1275 021a 9F93      		push r25
 1276               	.LCFI74:
 1277               		.cfi_def_cfa_offset 24
 1278 021c 8F93      		push r24
 1279               	.LCFI75:
 1280               		.cfi_def_cfa_offset 25
 1281 021e 0E94 0000 		call __xprintf
 357:../../tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 1282               		.loc 1 357 13 view .LVU311
 1283 0222 8DB7      		in r24,__SP_L__
 1284 0224 9EB7      		in r25,__SP_H__
 1285 0226 4696      		adiw r24,22
 1286 0228 0FB6      		in __tmp_reg__,__SREG__
 1287 022a F894      		cli
 1288 022c 9EBF      		out __SP_H__,r25
 1289 022e 0FBE      		out __SREG__,__tmp_reg__
 1290 0230 8DBF      		out __SP_L__,r24
 1291               	.LCFI76:
 1292               		.cfi_def_cfa_offset 3
 1293 0232 00C0      		rjmp .L94
 1294               	.L73:
 365:../../tmk_core/common/command.c ****             }
 1295               		.loc 1 365 17 view .LVU312
 1296               	.LBB111:
 365:../../tmk_core/common/command.c ****             }
 1297               		.loc 1 365 17 view .LVU313
 365:../../tmk_core/common/command.c ****             }
 1298               		.loc 1 365 17 view .LVU314
 1299               	.LBE111:
 1300 0234 80E0      		ldi r24,lo8(__c.5233)
 1301 0236 90E0      		ldi r25,hi8(__c.5233)
 1302 0238 00C0      		rjmp .L95
 1303               	.L49:
 376:../../tmk_core/common/command.c ****             break;
 1304               		.loc 1 376 13 view .LVU315
 1305 023a 8D51      		subi r24,lo8(-(-29))
 1306 023c 00C0      		rjmp .L93
 1307               		.cfi_endproc
 1308               	.LFE107:
 1310               		.section	.text.command_extra,"ax",@progbits
 1311               		.weak	command_extra
 1313               	command_extra:
 1314               	.LVL47:
 1315               	.LFB104:
 100:../../tmk_core/common/command.c ****     (void)code;
 1316               		.loc 1 100 1 view -0
 1317               		.cfi_startproc
 1318               	/* prologue: function */
 1319               	/* frame size = 0 */
 1320               	/* stack size = 0 */
 1321               	.L__stack_usage = 0
 101:../../tmk_core/common/command.c ****     return false;
 1322               		.loc 1 101 5 view .LVU317
 102:../../tmk_core/common/command.c **** }
 1323               		.loc 1 102 5 view .LVU318
 103:../../tmk_core/common/command.c **** 
 1324               		.loc 1 103 1 is_stmt 0 view .LVU319
 1325 0000 80E0      		ldi r24,0
 1326               	.LVL48:
 1327               	/* epilogue start */
 103:../../tmk_core/common/command.c **** 
 1328               		.loc 1 103 1 view .LVU320
 1329 0002 0895      		ret
 1330               		.cfi_endproc
 1331               	.LFE104:
 1333               		.set	command_extra.localalias.0,command_extra
 1334               		.section	.text.command_console_extra,"ax",@progbits
 1335               		.weak	command_console_extra
 1337               	command_console_extra:
 1338               	.LFB118:
 1339               		.cfi_startproc
 1340               	/* prologue: function */
 1341               	/* frame size = 0 */
 1342               	/* stack size = 0 */
 1343               	.L__stack_usage = 0
 1344 0000 0C94 0000 		jmp command_extra.localalias.0
 1345               		.cfi_endproc
 1346               	.LFE118:
 1348               		.section	.text.command_proc,"ax",@progbits
 1349               	.global	command_proc
 1351               	command_proc:
 1352               	.LFB103:
  71:../../tmk_core/common/command.c ****     switch (command_state) {
 1353               		.loc 1 71 1 is_stmt 1 view -0
 1354               		.cfi_startproc
  71:../../tmk_core/common/command.c ****     switch (command_state) {
 1355               		.loc 1 71 1 is_stmt 0 view .LVU322
 1356 0000 CF93      		push r28
 1357               	.LCFI77:
 1358               		.cfi_def_cfa_offset 3
 1359               		.cfi_offset 28, -2
 1360               	/* prologue: function */
 1361               	/* frame size = 0 */
 1362               	/* stack size = 1 */
 1363               	.L__stack_usage = 1
 1364 0002 C82F      		mov r28,r24
  72:../../tmk_core/common/command.c ****         case ONESHOT:
 1365               		.loc 1 72 5 is_stmt 1 view .LVU323
 1366 0004 8091 0000 		lds r24,command_state
 1367 0008 8130      		cpi r24,lo8(1)
 1368 000a 01F0      		breq .L101
 1369 000c 8823      		tst r24
 1370 000e 01F0      		breq .L102
 1371 0010 8230      		cpi r24,lo8(2)
 1372 0012 01F4      		brne .+2
 1373 0014 00C0      		rjmp .L103
  90:../../tmk_core/common/command.c ****             return false;
 1374               		.loc 1 90 13 view .LVU324
  90:../../tmk_core/common/command.c ****             return false;
 1375               		.loc 1 90 27 is_stmt 0 view .LVU325
 1376 0016 1092 0000 		sts command_state,__zero_reg__
  91:../../tmk_core/common/command.c ****     }
 1377               		.loc 1 91 13 is_stmt 1 view .LVU326
 1378               	.L131:
  75:../../tmk_core/common/command.c ****             return (command_extra(code) || command_common(code));
 1379               		.loc 1 75 24 is_stmt 0 view .LVU327
 1380 001a 80E0      		ldi r24,0
 1381 001c 00C0      		rjmp .L100
 1382               	.L102:
  74:../../tmk_core/common/command.c ****                 return false;
 1383               		.loc 1 74 13 is_stmt 1 view .LVU328
  74:../../tmk_core/common/command.c ****                 return false;
 1384               		.loc 1 74 18 is_stmt 0 view .LVU329
 1385 001e E091 0000 		lds r30,keyboard_report
 1386 0022 F091 0000 		lds r31,keyboard_report+1
  74:../../tmk_core/common/command.c ****                 return false;
 1387               		.loc 1 74 17 view .LVU330
 1388 0026 8081      		ld r24,Z
 1389 0028 8152      		subi r24,lo8(-(-33))
  74:../../tmk_core/common/command.c ****                 return false;
 1390               		.loc 1 74 16 view .LVU331
 1391 002a 8230      		cpi r24,lo8(2)
 1392 002c 00F4      		brsh .L131
 1393               	.L164:
  80:../../tmk_core/common/command.c ****             else
 1394               		.loc 1 80 17 is_stmt 1 view .LVU332
  80:../../tmk_core/common/command.c ****             else
 1395               		.loc 1 80 25 is_stmt 0 view .LVU333
 1396 002e 8C2F      		mov r24,r28
 1397 0030 0E94 0000 		call command_extra
  80:../../tmk_core/common/command.c ****             else
 1398               		.loc 1 80 45 view .LVU334
 1399 0034 8111      		cpse r24,__zero_reg__
 1400 0036 00C0      		rjmp .L133
  80:../../tmk_core/common/command.c ****             else
 1401               		.loc 1 80 48 discriminator 2 view .LVU335
 1402 0038 8C2F      		mov r24,r28
 1403 003a 0E94 0000 		call command_common
 1404               	.L109:
  82:../../tmk_core/common/command.c ****             break;
 1405               		.loc 1 82 53 discriminator 6 view .LVU336
 1406 003e 8170      		andi r24,lo8(1)
 1407               	.L100:
 1408               	/* epilogue start */
  94:../../tmk_core/common/command.c **** 
 1409               		.loc 1 94 1 view .LVU337
 1410 0040 CF91      		pop r28
 1411 0042 0895      		ret
 1412               	.L101:
  77:../../tmk_core/common/command.c ****         case CONSOLE:
 1413               		.loc 1 77 13 is_stmt 1 view .LVU338
  79:../../tmk_core/common/command.c ****                 return (command_extra(code) || command_common(code));
 1414               		.loc 1 79 13 view .LVU339
  79:../../tmk_core/common/command.c ****                 return (command_extra(code) || command_common(code));
 1415               		.loc 1 79 17 is_stmt 0 view .LVU340
 1416 0044 E091 0000 		lds r30,keyboard_report
 1417 0048 F091 0000 		lds r31,keyboard_report+1
 1418 004c 8081      		ld r24,Z
 1419 004e 8152      		subi r24,lo8(-(-33))
  79:../../tmk_core/common/command.c ****                 return (command_extra(code) || command_common(code));
 1420               		.loc 1 79 16 view .LVU341
 1421 0050 8230      		cpi r24,lo8(2)
 1422 0052 00F0      		brlo .L164
  82:../../tmk_core/common/command.c ****             break;
 1423               		.loc 1 82 17 is_stmt 1 view .LVU342
  82:../../tmk_core/common/command.c ****             break;
 1424               		.loc 1 82 25 is_stmt 0 view .LVU343
 1425 0054 8C2F      		mov r24,r28
 1426 0056 0E94 0000 		call command_console_extra
  82:../../tmk_core/common/command.c ****             break;
 1427               		.loc 1 82 53 view .LVU344
 1428 005a 8111      		cpse r24,__zero_reg__
 1429 005c 00C0      		rjmp .L134
 1430               	.LBB150:
 1431               	.LBI150:
 402:../../tmk_core/common/command.c **** {
 1432               		.loc 1 402 13 is_stmt 1 view .LVU345
 1433               	.LBB151:
 404:../../tmk_core/common/command.c ****         case KC_H:
 1434               		.loc 1 404 5 view .LVU346
 1435 005e C431      		cpi r28,lo8(20)
 1436 0060 01F0      		breq .L110
 1437 0062 00F4      		brsh .L111
 1438 0064 CB30      		cpi r28,lo8(11)
 1439 0066 01F0      		breq .L112
 1440 0068 C031      		cpi r28,lo8(16)
 1441 006a 01F0      		breq .L113
 1442               	.L114:
 421:../../tmk_core/common/command.c ****             return false;
 1443               		.loc 1 421 13 view .LVU347
 1444               	.LBE151:
 1445               	.LBE150:
 421:../../tmk_core/common/command.c ****             return false;
 1446               		.loc 1 421 13 view .LVU348
 421:../../tmk_core/common/command.c ****             return false;
 1447               		.loc 1 421 13 view .LVU349
 1448               	.LBB163:
 1449               	.LBB156:
 1450 006c 80E0      		ldi r24,lo8(__c.5261)
 1451 006e 90E0      		ldi r25,hi8(__c.5261)
 1452 0070 0E94 0000 		call xputs
 1453 0074 00C0      		rjmp .L157
 1454               	.L133:
 1455               	.LBE156:
 1456               	.LBE163:
  80:../../tmk_core/common/command.c ****             else
 1457               		.loc 1 80 45 is_stmt 0 view .LVU350
 1458 0076 81E0      		ldi r24,lo8(1)
 1459 0078 90E0      		ldi r25,0
 1460 007a 00C0      		rjmp .L109
 1461               	.L111:
 1462               	.LBB164:
 1463               	.LBB157:
 404:../../tmk_core/common/command.c ****         case KC_H:
 1464               		.loc 1 404 5 view .LVU351
 1465 007c C932      		cpi r28,lo8(41)
 1466 007e 01F0      		breq .L110
 1467 0080 C833      		cpi r28,lo8(56)
 1468 0082 01F4      		brne .L114
 1469               	.L112:
 407:../../tmk_core/common/command.c ****             break;
 1470               		.loc 1 407 13 is_stmt 1 view .LVU352
 1471               	.LBB152:
 1472               	.LBI152:
 392:../../tmk_core/common/command.c **** {
 1473               		.loc 1 392 13 view .LVU353
 1474               	.LBB153:
 394:../../tmk_core/common/command.c ****           "ESC/q:	quit\n"
 1475               		.loc 1 394 5 view .LVU354
 1476               	.LBE153:
 1477               	.LBE152:
 1478               	.LBE157:
 1479               	.LBE164:
 394:../../tmk_core/common/command.c ****           "ESC/q:	quit\n"
 1480               		.loc 1 394 5 view .LVU355
 394:../../tmk_core/common/command.c ****           "ESC/q:	quit\n"
 1481               		.loc 1 394 5 view .LVU356
 1482               	.LBB165:
 1483               	.LBB158:
 1484               	.LBB155:
 1485               	.LBB154:
 1486 0084 80E0      		ldi r24,lo8(__c.5247)
 1487 0086 90E0      		ldi r25,hi8(__c.5247)
 1488 0088 0E94 0000 		call xputs
 1489               	.LBE154:
 1490               	.LBE155:
 408:../../tmk_core/common/command.c ****         case KC_Q:
 1491               		.loc 1 408 13 view .LVU357
 424:../../tmk_core/common/command.c ****     return true;
 1492               		.loc 1 424 5 view .LVU358
 1493               	.LBE158:
 1494               	.LBE165:
 424:../../tmk_core/common/command.c ****     return true;
 1495               		.loc 1 424 5 view .LVU359
 424:../../tmk_core/common/command.c ****     return true;
 1496               		.loc 1 424 5 view .LVU360
 1497               	.LBB166:
 1498               	.LBB159:
 1499 008c 80E0      		ldi r24,lo8(__c.5263)
 1500 008e 90E0      		ldi r25,hi8(__c.5263)
 1501 0090 0E94 0000 		call xputs
 425:../../tmk_core/common/command.c **** }
 1502               		.loc 1 425 5 view .LVU361
 1503               	.L134:
 1504               	.LBE159:
 1505               	.LBE166:
  82:../../tmk_core/common/command.c ****             break;
 1506               		.loc 1 82 53 is_stmt 0 view .LVU362
 1507 0094 81E0      		ldi r24,lo8(1)
 1508 0096 00C0      		rjmp .L109
 1509               	.L110:
 1510               	.LBB167:
 1511               	.LBB160:
 411:../../tmk_core/common/command.c ****             return false;
 1512               		.loc 1 411 13 is_stmt 1 view .LVU363
 411:../../tmk_core/common/command.c ****             return false;
 1513               		.loc 1 411 27 is_stmt 0 view .LVU364
 1514 0098 1092 0000 		sts command_state,__zero_reg__
 412:../../tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
 1515               		.loc 1 412 13 is_stmt 1 view .LVU365
 1516               	.L157:
 422:../../tmk_core/common/command.c ****     }
 1517               		.loc 1 422 13 view .LVU366
 1518               	.LBE160:
 1519               	.LBE167:
  82:../../tmk_core/common/command.c ****             break;
 1520               		.loc 1 82 53 is_stmt 0 view .LVU367
 1521 009c 80E0      		ldi r24,0
 1522 009e 00C0      		rjmp .L109
 1523               	.L113:
 1524               	.LBB168:
 1525               	.LBB161:
 415:../../tmk_core/common/command.c ****             print("M> ");
 1526               		.loc 1 415 13 is_stmt 1 view .LVU368
 1527 00a0 0E94 0000 		call mousekey_console_help
 416:../../tmk_core/common/command.c ****             command_state = MOUSEKEY;
 1528               		.loc 1 416 13 view .LVU369
 1529               	.LBE161:
 1530               	.LBE168:
 416:../../tmk_core/common/command.c ****             command_state = MOUSEKEY;
 1531               		.loc 1 416 13 view .LVU370
 416:../../tmk_core/common/command.c ****             command_state = MOUSEKEY;
 1532               		.loc 1 416 13 view .LVU371
 1533               	.LBB169:
 1534               	.LBB162:
 1535 00a4 80E0      		ldi r24,lo8(__c.5258)
 1536 00a6 90E0      		ldi r25,hi8(__c.5258)
 1537 00a8 0E94 0000 		call xputs
 417:../../tmk_core/common/command.c ****             return true;
 1538               		.loc 1 417 13 view .LVU372
 417:../../tmk_core/common/command.c ****             return true;
 1539               		.loc 1 417 27 is_stmt 0 view .LVU373
 1540 00ac 82E0      		ldi r24,lo8(2)
 1541 00ae 8093 0000 		sts command_state,r24
 418:../../tmk_core/common/command.c **** #endif
 1542               		.loc 1 418 13 is_stmt 1 view .LVU374
 1543 00b2 00C0      		rjmp .L134
 1544               	.L103:
 1545               	.LBE162:
 1546               	.LBE169:
  83:../../tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
 1547               		.loc 1 83 13 view .LVU375
  86:../../tmk_core/common/command.c ****             break;
 1548               		.loc 1 86 13 view .LVU376
 1549               	.LBB170:
 1550               	.LBI170:
 567:../../tmk_core/common/command.c **** {
 1551               		.loc 1 567 13 view .LVU377
 1552               	.LBB171:
 569:../../tmk_core/common/command.c ****         case KC_H:
 1553               		.loc 1 569 5 view .LVU378
 1554 00b4 C432      		cpi r28,lo8(36)
 1555 00b6 00F4      		brsh .L115
 1556 00b8 CE31      		cpi r28,lo8(30)
 1557 00ba 00F0      		brlo .+2
 1558 00bc 00C0      		rjmp .L116
 1559 00be CB30      		cpi r28,lo8(11)
 1560 00c0 01F0      		breq .L117
 1561 00c2 00F4      		brsh .L118
 1562 00c4 C730      		cpi r28,lo8(7)
 1563 00c6 01F4      		brne .+2
 1564 00c8 00C0      		rjmp .L119
 1565               	.L120:
 617:../../tmk_core/common/command.c ****             return false;
 1566               		.loc 1 617 13 view .LVU379
 1567               	.LBE171:
 1568               	.LBE170:
 617:../../tmk_core/common/command.c ****             return false;
 1569               		.loc 1 617 13 view .LVU380
 617:../../tmk_core/common/command.c ****             return false;
 1570               		.loc 1 617 13 view .LVU381
 1571               	.LBB239:
 1572               	.LBB213:
 1573 00ca 80E0      		ldi r24,lo8(__c.5385)
 1574 00cc 90E0      		ldi r25,hi8(__c.5385)
 1575               	.L161:
 623:../../tmk_core/common/command.c ****     }
 1576               		.loc 1 623 9 is_stmt 0 view .LVU382
 1577 00ce 0E94 0000 		call xputs
 1578 00d2 00C0      		rjmp .L160
 1579               	.L118:
 569:../../tmk_core/common/command.c ****         case KC_H:
 1580               		.loc 1 569 5 view .LVU383
 1581 00d4 C331      		cpi r28,lo8(19)
 1582 00d6 01F0      		breq .L121
 1583 00d8 C431      		cpi r28,lo8(20)
 1584 00da 01F4      		brne .L120
 1585               	.L122:
 576:../../tmk_core/common/command.c ****                 mousekey_param = 0;
 1586               		.loc 1 576 13 is_stmt 1 view .LVU384
 576:../../tmk_core/common/command.c ****                 mousekey_param = 0;
 1587               		.loc 1 576 16 is_stmt 0 view .LVU385
 1588 00dc 8091 0000 		lds r24,mousekey_param
 1589 00e0 8823      		tst r24
 1590 00e2 01F0      		breq .L129
 577:../../tmk_core/common/command.c ****             } else {
 1591               		.loc 1 577 17 is_stmt 1 view .LVU386
 577:../../tmk_core/common/command.c ****             } else {
 1592               		.loc 1 577 32 is_stmt 0 view .LVU387
 1593 00e4 1092 0000 		sts mousekey_param,__zero_reg__
 583:../../tmk_core/common/command.c ****         case KC_P:
 1594               		.loc 1 583 13 is_stmt 1 view .LVU388
 1595 00e8 00C0      		rjmp .L128
 1596               	.L115:
 569:../../tmk_core/common/command.c ****         case KC_H:
 1597               		.loc 1 569 5 is_stmt 0 view .LVU389
 1598 00ea CB34      		cpi r28,lo8(75)
 1599 00ec 01F4      		brne .+2
 1600 00ee 00C0      		rjmp .L123
 1601 00f0 00F4      		brsh .L124
 1602 00f2 C932      		cpi r28,lo8(41)
 1603 00f4 01F0      		breq .L122
 1604 00f6 C833      		cpi r28,lo8(56)
 1605 00f8 01F4      		brne .L120
 1606               	.L117:
 572:../../tmk_core/common/command.c ****             break;
 1607               		.loc 1 572 13 is_stmt 1 view .LVU390
 1608 00fa 0E94 0000 		call mousekey_console_help
 573:../../tmk_core/common/command.c ****         case KC_Q:
 1609               		.loc 1 573 13 view .LVU391
 1610               	.L128:
 620:../../tmk_core/common/command.c ****         xprintf("M%d> ", mousekey_param);
 1611               		.loc 1 620 5 view .LVU392
 620:../../tmk_core/common/command.c ****         xprintf("M%d> ", mousekey_param);
 1612               		.loc 1 620 9 is_stmt 0 view .LVU393
 1613 00fe 8091 0000 		lds r24,mousekey_param
 620:../../tmk_core/common/command.c ****         xprintf("M%d> ", mousekey_param);
 1614               		.loc 1 620 8 view .LVU394
 1615 0102 8823      		tst r24
 1616 0104 01F4      		brne .+2
 1617 0106 00C0      		rjmp .L130
 621:../../tmk_core/common/command.c ****     } else {
 1618               		.loc 1 621 9 is_stmt 1 view .LVU395
 1619               	.LBE213:
 1620               	.LBE239:
 621:../../tmk_core/common/command.c ****     } else {
 1621               		.loc 1 621 9 view .LVU396
 621:../../tmk_core/common/command.c ****     } else {
 1622               		.loc 1 621 9 view .LVU397
 1623               	.LBB240:
 1624               	.LBB214:
 1625 0108 1F92      		push __zero_reg__
 1626               	.LCFI78:
 1627               		.cfi_def_cfa_offset 4
 1628 010a 8F93      		push r24
 1629               	.LCFI79:
 1630               		.cfi_def_cfa_offset 5
 1631 010c 80E0      		ldi r24,lo8(__c.5387)
 1632 010e 90E0      		ldi r25,hi8(__c.5387)
 1633 0110 9F93      		push r25
 1634               	.LCFI80:
 1635               		.cfi_def_cfa_offset 6
 1636 0112 8F93      		push r24
 1637               	.LCFI81:
 1638               		.cfi_def_cfa_offset 7
 1639 0114 0E94 0000 		call __xprintf
 1640 0118 0F90      		pop __tmp_reg__
 1641 011a 0F90      		pop __tmp_reg__
 1642 011c 0F90      		pop __tmp_reg__
 1643 011e 0F90      		pop __tmp_reg__
 1644               	.LCFI82:
 1645               		.cfi_def_cfa_offset 3
 1646               	.L160:
 1647               	.LBE214:
 1648               	.LBE240:
  93:../../tmk_core/common/command.c **** }
 1649               		.loc 1 93 12 is_stmt 0 view .LVU398
 1650 0120 81E0      		ldi r24,lo8(1)
 1651 0122 00C0      		rjmp .L100
 1652               	.L124:
 1653               	.LBB241:
 1654               	.LBB215:
 569:../../tmk_core/common/command.c ****         case KC_H:
 1655               		.loc 1 569 5 view .LVU399
 1656 0124 C135      		cpi r28,lo8(81)
 1657 0126 01F4      		brne .+2
 1658 0128 00C0      		rjmp .L125
 1659 012a C235      		cpi r28,lo8(82)
 1660 012c 01F4      		brne .+2
 1661 012e 00C0      		rjmp .L126
 1662 0130 CE34      		cpi r28,lo8(78)
 1663 0132 01F4      		brne .L120
 605:../../tmk_core/common/command.c ****             break;
 1664               		.loc 1 605 13 is_stmt 1 view .LVU400
 1665 0134 6AE0      		ldi r22,lo8(10)
 1666 0136 00C0      		rjmp .L159
 1667               	.L129:
 579:../../tmk_core/common/command.c ****                 command_state = CONSOLE;
 1668               		.loc 1 579 17 view .LVU401
 1669               	.LBE215:
 1670               	.LBE241:
 579:../../tmk_core/common/command.c ****                 command_state = CONSOLE;
 1671               		.loc 1 579 17 view .LVU402
 579:../../tmk_core/common/command.c ****                 command_state = CONSOLE;
 1672               		.loc 1 579 17 view .LVU403
 1673               	.LBB242:
 1674               	.LBB216:
 1675 0138 80E0      		ldi r24,lo8(__c.5368)
 1676 013a 90E0      		ldi r25,hi8(__c.5368)
 1677 013c 0E94 0000 		call xputs
 580:../../tmk_core/common/command.c ****                 return false;
 1678               		.loc 1 580 17 view .LVU404
 580:../../tmk_core/common/command.c ****                 return false;
 1679               		.loc 1 580 31 is_stmt 0 view .LVU405
 1680 0140 81E0      		ldi r24,lo8(1)
 1681 0142 8093 0000 		sts command_state,r24
 581:../../tmk_core/common/command.c ****             }
 1682               		.loc 1 581 17 is_stmt 1 view .LVU406
 1683 0146 00C0      		rjmp .L100
 1684               	.L121:
 585:../../tmk_core/common/command.c ****             break;
 1685               		.loc 1 585 13 view .LVU407
 1686               	.LBB172:
 1687               	.LBI172:
 435:../../tmk_core/common/command.c **** {
 1688               		.loc 1 435 13 view .LVU408
 1689               	.LBB173:
 437:../../tmk_core/common/command.c ****     print("1: delay(*10ms): "); pdec(mk_delay); print("\n");
 1690               		.loc 1 437 5 view .LVU409
 1691               	.LBE173:
 1692               	.LBE172:
 1693               	.LBE216:
 1694               	.LBE242:
 437:../../tmk_core/common/command.c ****     print("1: delay(*10ms): "); pdec(mk_delay); print("\n");
 1695               		.loc 1 437 5 view .LVU410
 437:../../tmk_core/common/command.c ****     print("1: delay(*10ms): "); pdec(mk_delay); print("\n");
 1696               		.loc 1 437 5 view .LVU411
 1697               	.LBB243:
 1698               	.LBB217:
 1699               	.LBB193:
 1700               	.LBB174:
 1701 0148 80E0      		ldi r24,lo8(__c.5269)
 1702 014a 90E0      		ldi r25,hi8(__c.5269)
 1703 014c 0E94 0000 		call xputs
 438:../../tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1704               		.loc 1 438 5 view .LVU412
 1705               	.LBE174:
 1706               	.LBE193:
 1707               	.LBE217:
 1708               	.LBE243:
 438:../../tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1709               		.loc 1 438 5 view .LVU413
 438:../../tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1710               		.loc 1 438 5 view .LVU414
 1711               	.LBB244:
 1712               	.LBB218:
 1713               	.LBB194:
 1714               	.LBB175:
 1715 0150 80E0      		ldi r24,lo8(__c.5271)
 1716 0152 90E0      		ldi r25,hi8(__c.5271)
 1717 0154 0E94 0000 		call xputs
 438:../../tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1718               		.loc 1 438 33 view .LVU415
 1719               	.LBE175:
 1720               	.LBE194:
 1721               	.LBE218:
 1722               	.LBE244:
 438:../../tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1723               		.loc 1 438 33 view .LVU416
 438:../../tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1724               		.loc 1 438 33 view .LVU417
 1725               	.LBB245:
 1726               	.LBB219:
 1727               	.LBB195:
 1728               	.LBB176:
 1729 0158 8091 0000 		lds r24,mk_delay
 1730 015c 1F92      		push __zero_reg__
 1731               	.LCFI83:
 1732               		.cfi_def_cfa_offset 4
 1733 015e 8F93      		push r24
 1734               	.LCFI84:
 1735               		.cfi_def_cfa_offset 5
 1736 0160 80E0      		ldi r24,lo8(__c.5273)
 1737 0162 90E0      		ldi r25,hi8(__c.5273)
 1738 0164 9F93      		push r25
 1739               	.LCFI85:
 1740               		.cfi_def_cfa_offset 6
 1741 0166 8F93      		push r24
 1742               	.LCFI86:
 1743               		.cfi_def_cfa_offset 7
 1744 0168 0E94 0000 		call __xprintf
 438:../../tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1745               		.loc 1 438 49 view .LVU418
 1746               	.LBE176:
 1747               	.LBE195:
 1748               	.LBE219:
 1749               	.LBE245:
 438:../../tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1750               		.loc 1 438 49 view .LVU419
 438:../../tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1751               		.loc 1 438 49 view .LVU420
 1752               	.LBB246:
 1753               	.LBB220:
 1754               	.LBB196:
 1755               	.LBB177:
 1756 016c 80E0      		ldi r24,lo8(__c.5275)
 1757 016e 90E0      		ldi r25,hi8(__c.5275)
 1758 0170 0E94 0000 		call xputs
 439:../../tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 1759               		.loc 1 439 5 view .LVU421
 1760               	.LBE177:
 1761               	.LBE196:
 1762               	.LBE220:
 1763               	.LBE246:
 439:../../tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 1764               		.loc 1 439 5 view .LVU422
 439:../../tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 1765               		.loc 1 439 5 view .LVU423
 1766               	.LBB247:
 1767               	.LBB221:
 1768               	.LBB197:
 1769               	.LBB178:
 1770 0174 80E0      		ldi r24,lo8(__c.5277)
 1771 0176 90E0      		ldi r25,hi8(__c.5277)
 1772 0178 0E94 0000 		call xputs
 439:../../tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 1773               		.loc 1 439 33 view .LVU424
 1774               	.LBE178:
 1775               	.LBE197:
 1776               	.LBE221:
 1777               	.LBE247:
 439:../../tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 1778               		.loc 1 439 33 view .LVU425
 439:../../tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 1779               		.loc 1 439 33 view .LVU426
 1780               	.LBB248:
 1781               	.LBB222:
 1782               	.LBB198:
 1783               	.LBB179:
 1784 017c 8091 0000 		lds r24,mk_interval
 1785 0180 1F92      		push __zero_reg__
 1786               	.LCFI87:
 1787               		.cfi_def_cfa_offset 8
 1788 0182 8F93      		push r24
 1789               	.LCFI88:
 1790               		.cfi_def_cfa_offset 9
 1791 0184 80E0      		ldi r24,lo8(__c.5279)
 1792 0186 90E0      		ldi r25,hi8(__c.5279)
 1793 0188 9F93      		push r25
 1794               	.LCFI89:
 1795               		.cfi_def_cfa_offset 10
 1796 018a 8F93      		push r24
 1797               	.LCFI90:
 1798               		.cfi_def_cfa_offset 11
 1799 018c 0E94 0000 		call __xprintf
 439:../../tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 1800               		.loc 1 439 52 view .LVU427
 1801               	.LBE179:
 1802               	.LBE198:
 1803               	.LBE222:
 1804               	.LBE248:
 439:../../tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 1805               		.loc 1 439 52 view .LVU428
 439:../../tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 1806               		.loc 1 439 52 view .LVU429
 1807               	.LBB249:
 1808               	.LBB223:
 1809               	.LBB199:
 1810               	.LBB180:
 1811 0190 80E0      		ldi r24,lo8(__c.5281)
 1812 0192 90E0      		ldi r25,hi8(__c.5281)
 1813 0194 0E94 0000 		call xputs
 440:../../tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 1814               		.loc 1 440 5 view .LVU430
 1815               	.LBE180:
 1816               	.LBE199:
 1817               	.LBE223:
 1818               	.LBE249:
 440:../../tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 1819               		.loc 1 440 5 view .LVU431
 440:../../tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 1820               		.loc 1 440 5 view .LVU432
 1821               	.LBB250:
 1822               	.LBB224:
 1823               	.LBB200:
 1824               	.LBB181:
 1825 0198 80E0      		ldi r24,lo8(__c.5283)
 1826 019a 90E0      		ldi r25,hi8(__c.5283)
 1827 019c 0E94 0000 		call xputs
 440:../../tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 1828               		.loc 1 440 30 view .LVU433
 1829               	.LBE181:
 1830               	.LBE200:
 1831               	.LBE224:
 1832               	.LBE250:
 440:../../tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 1833               		.loc 1 440 30 view .LVU434
 440:../../tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 1834               		.loc 1 440 30 view .LVU435
 1835               	.LBB251:
 1836               	.LBB225:
 1837               	.LBB201:
 1838               	.LBB182:
 1839 01a0 8091 0000 		lds r24,mk_max_speed
 1840 01a4 1F92      		push __zero_reg__
 1841               	.LCFI91:
 1842               		.cfi_def_cfa_offset 12
 1843 01a6 8F93      		push r24
 1844               	.LCFI92:
 1845               		.cfi_def_cfa_offset 13
 1846 01a8 80E0      		ldi r24,lo8(__c.5285)
 1847 01aa 90E0      		ldi r25,hi8(__c.5285)
 1848 01ac 9F93      		push r25
 1849               	.LCFI93:
 1850               		.cfi_def_cfa_offset 14
 1851 01ae 8F93      		push r24
 1852               	.LCFI94:
 1853               		.cfi_def_cfa_offset 15
 1854 01b0 0E94 0000 		call __xprintf
 440:../../tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 1855               		.loc 1 440 50 view .LVU436
 1856               	.LBE182:
 1857               	.LBE201:
 1858               	.LBE225:
 1859               	.LBE251:
 440:../../tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 1860               		.loc 1 440 50 view .LVU437
 440:../../tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 1861               		.loc 1 440 50 view .LVU438
 1862               	.LBB252:
 1863               	.LBB226:
 1864               	.LBB202:
 1865               	.LBB183:
 1866 01b4 80E0      		ldi r24,lo8(__c.5287)
 1867 01b6 90E0      		ldi r25,hi8(__c.5287)
 1868 01b8 0E94 0000 		call xputs
 441:../../tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 1869               		.loc 1 441 5 view .LVU439
 1870               	.LBE183:
 1871               	.LBE202:
 1872               	.LBE226:
 1873               	.LBE252:
 441:../../tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 1874               		.loc 1 441 5 view .LVU440
 441:../../tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 1875               		.loc 1 441 5 view .LVU441
 1876               	.LBB253:
 1877               	.LBB227:
 1878               	.LBB203:
 1879               	.LBB184:
 1880 01bc 80E0      		ldi r24,lo8(__c.5289)
 1881 01be 90E0      		ldi r25,hi8(__c.5289)
 1882 01c0 0E94 0000 		call xputs
 441:../../tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 1883               		.loc 1 441 32 view .LVU442
 1884               	.LBE184:
 1885               	.LBE203:
 1886               	.LBE227:
 1887               	.LBE253:
 441:../../tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 1888               		.loc 1 441 32 view .LVU443
 441:../../tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 1889               		.loc 1 441 32 view .LVU444
 1890               	.LBB254:
 1891               	.LBB228:
 1892               	.LBB204:
 1893               	.LBB185:
 1894 01c4 8091 0000 		lds r24,mk_time_to_max
 1895 01c8 1F92      		push __zero_reg__
 1896               	.LCFI95:
 1897               		.cfi_def_cfa_offset 16
 1898 01ca 8F93      		push r24
 1899               	.LCFI96:
 1900               		.cfi_def_cfa_offset 17
 1901 01cc 80E0      		ldi r24,lo8(__c.5291)
 1902 01ce 90E0      		ldi r25,hi8(__c.5291)
 1903 01d0 9F93      		push r25
 1904               	.LCFI97:
 1905               		.cfi_def_cfa_offset 18
 1906 01d2 8F93      		push r24
 1907               	.LCFI98:
 1908               		.cfi_def_cfa_offset 19
 1909 01d4 0E94 0000 		call __xprintf
 441:../../tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 1910               		.loc 1 441 54 view .LVU445
 1911               	.LBE185:
 1912               	.LBE204:
 1913               	.LBE228:
 1914               	.LBE254:
 441:../../tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 1915               		.loc 1 441 54 view .LVU446
 441:../../tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 1916               		.loc 1 441 54 view .LVU447
 1917               	.LBB255:
 1918               	.LBB229:
 1919               	.LBB205:
 1920               	.LBB186:
 1921 01d8 80E0      		ldi r24,lo8(__c.5293)
 1922 01da 90E0      		ldi r25,hi8(__c.5293)
 1923 01dc 0E94 0000 		call xputs
 442:../../tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 1924               		.loc 1 442 5 view .LVU448
 1925               	.LBE186:
 1926               	.LBE205:
 1927               	.LBE229:
 1928               	.LBE255:
 442:../../tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 1929               		.loc 1 442 5 view .LVU449
 442:../../tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 1930               		.loc 1 442 5 view .LVU450
 1931               	.LBB256:
 1932               	.LBB230:
 1933               	.LBB206:
 1934               	.LBB187:
 1935 01e0 80E0      		ldi r24,lo8(__c.5295)
 1936 01e2 90E0      		ldi r25,hi8(__c.5295)
 1937 01e4 0E94 0000 		call xputs
 442:../../tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 1938               		.loc 1 442 36 view .LVU451
 1939               	.LBE187:
 1940               	.LBE206:
 1941               	.LBE230:
 1942               	.LBE256:
 442:../../tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 1943               		.loc 1 442 36 view .LVU452
 442:../../tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 1944               		.loc 1 442 36 view .LVU453
 1945               	.LBB257:
 1946               	.LBB231:
 1947               	.LBB207:
 1948               	.LBB188:
 1949 01e8 8091 0000 		lds r24,mk_wheel_max_speed
 1950 01ec 1F92      		push __zero_reg__
 1951               	.LCFI99:
 1952               		.cfi_def_cfa_offset 20
 1953 01ee 8F93      		push r24
 1954               	.LCFI100:
 1955               		.cfi_def_cfa_offset 21
 1956 01f0 80E0      		ldi r24,lo8(__c.5297)
 1957 01f2 90E0      		ldi r25,hi8(__c.5297)
 1958 01f4 9F93      		push r25
 1959               	.LCFI101:
 1960               		.cfi_def_cfa_offset 22
 1961 01f6 8F93      		push r24
 1962               	.LCFI102:
 1963               		.cfi_def_cfa_offset 23
 1964 01f8 0E94 0000 		call __xprintf
 442:../../tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 1965               		.loc 1 442 62 view .LVU454
 1966               	.LBE188:
 1967               	.LBE207:
 1968               	.LBE231:
 1969               	.LBE257:
 442:../../tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 1970               		.loc 1 442 62 view .LVU455
 442:../../tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 1971               		.loc 1 442 62 view .LVU456
 1972               	.LBB258:
 1973               	.LBB232:
 1974               	.LBB208:
 1975               	.LBB189:
 1976 01fc 80E0      		ldi r24,lo8(__c.5299)
 1977 01fe 90E0      		ldi r25,hi8(__c.5299)
 1978 0200 0E94 0000 		call xputs
 443:../../tmk_core/common/command.c **** }
 1979               		.loc 1 443 5 view .LVU457
 1980               	.LBE189:
 1981               	.LBE208:
 1982               	.LBE232:
 1983               	.LBE258:
 443:../../tmk_core/common/command.c **** }
 1984               		.loc 1 443 5 view .LVU458
 443:../../tmk_core/common/command.c **** }
 1985               		.loc 1 443 5 view .LVU459
 1986               	.LBB259:
 1987               	.LBB233:
 1988               	.LBB209:
 1989               	.LBB190:
 1990 0204 80E0      		ldi r24,lo8(__c.5301)
 1991 0206 90E0      		ldi r25,hi8(__c.5301)
 1992 0208 0E94 0000 		call xputs
 443:../../tmk_core/common/command.c **** }
 1993               		.loc 1 443 38 view .LVU460
 1994               	.LBE190:
 1995               	.LBE209:
 1996               	.LBE233:
 1997               	.LBE259:
 443:../../tmk_core/common/command.c **** }
 1998               		.loc 1 443 38 view .LVU461
 443:../../tmk_core/common/command.c **** }
 1999               		.loc 1 443 38 view .LVU462
 2000               	.LBB260:
 2001               	.LBB234:
 2002               	.LBB210:
 2003               	.LBB191:
 2004 020c 8091 0000 		lds r24,mk_wheel_time_to_max
 2005 0210 1F92      		push __zero_reg__
 2006               	.LCFI103:
 2007               		.cfi_def_cfa_offset 24
 2008 0212 8F93      		push r24
 2009               	.LCFI104:
 2010               		.cfi_def_cfa_offset 25
 2011 0214 80E0      		ldi r24,lo8(__c.5303)
 2012 0216 90E0      		ldi r25,hi8(__c.5303)
 2013 0218 9F93      		push r25
 2014               	.LCFI105:
 2015               		.cfi_def_cfa_offset 26
 2016 021a 8F93      		push r24
 2017               	.LCFI106:
 2018               		.cfi_def_cfa_offset 27
 2019 021c 0E94 0000 		call __xprintf
 443:../../tmk_core/common/command.c **** }
 2020               		.loc 1 443 66 view .LVU463
 2021               	.LBE191:
 2022               	.LBE210:
 2023               	.LBE234:
 2024               	.LBE260:
 443:../../tmk_core/common/command.c **** }
 2025               		.loc 1 443 66 view .LVU464
 443:../../tmk_core/common/command.c **** }
 2026               		.loc 1 443 66 view .LVU465
 2027               	.LBB261:
 2028               	.LBB235:
 2029               	.LBB211:
 2030               	.LBB192:
 2031 0220 80E0      		ldi r24,lo8(__c.5305)
 2032 0222 90E0      		ldi r25,hi8(__c.5305)
 2033 0224 0E94 0000 		call xputs
 2034 0228 8DB7      		in r24,__SP_L__
 2035 022a 9EB7      		in r25,__SP_H__
 2036 022c 4896      		adiw r24,24
 2037 022e 0FB6      		in __tmp_reg__,__SREG__
 2038 0230 F894      		cli
 2039 0232 9EBF      		out __SP_H__,r25
 2040 0234 0FBE      		out __SREG__,__tmp_reg__
 2041 0236 8DBF      		out __SP_L__,r24
 2042               	.LCFI107:
 2043               		.cfi_def_cfa_offset 3
 2044 0238 00C0      		rjmp .L128
 2045               	.L116:
 2046               	.LBE192:
 2047               	.LBE211:
 593:../../tmk_core/common/command.c ****             break;
 2048               		.loc 1 593 13 view .LVU466
 2049               	.LBB212:
 2050               	.LBI212:
 634:../../tmk_core/common/command.c **** {
 2051               		.loc 1 634 16 view .LVU467
 2052               	.LBE212:
 2053               	.LBE235:
 2054               	.LBE261:
 636:../../tmk_core/common/command.c ****         case KC_1: return 1;
 2055               		.loc 1 636 5 view .LVU468
 2056               	.LBB262:
 2057               	.LBB236:
 593:../../tmk_core/common/command.c ****             break;
 2058               		.loc 1 593 28 is_stmt 0 view .LVU469
 2059 023a CE51      		subi r28,lo8(-(-30))
 2060 023c EC2F      		mov r30,r28
 2061 023e F0E0      		ldi r31,0
 2062 0240 E050      		subi r30,lo8(-(CSWTCH.60))
 2063 0242 F040      		sbci r31,hi8(-(CSWTCH.60))
 2064 0244 8081      		ld r24,Z
 2065 0246 8093 0000 		sts mousekey_param,r24
 594:../../tmk_core/common/command.c ****         case KC_UP:
 2066               		.loc 1 594 13 is_stmt 1 view .LVU470
 2067 024a 00C0      		rjmp .L128
 2068               	.L126:
 596:../../tmk_core/common/command.c ****             break;
 2069               		.loc 1 596 13 view .LVU471
 2070 024c 61E0      		ldi r22,lo8(1)
 2071               	.L158:
 602:../../tmk_core/common/command.c ****             break;
 2072               		.loc 1 602 13 is_stmt 0 view .LVU472
 2073 024e 8091 0000 		lds r24,mousekey_param
 2074 0252 0E94 0000 		call mousekey_param_inc
 603:../../tmk_core/common/command.c ****         case KC_PGDN:
 2075               		.loc 1 603 13 is_stmt 1 view .LVU473
 2076 0256 00C0      		rjmp .L128
 2077               	.L125:
 599:../../tmk_core/common/command.c ****             break;
 2078               		.loc 1 599 13 view .LVU474
 2079 0258 61E0      		ldi r22,lo8(1)
 2080               	.L159:
 605:../../tmk_core/common/command.c ****             break;
 2081               		.loc 1 605 13 is_stmt 0 view .LVU475
 2082 025a 8091 0000 		lds r24,mousekey_param
 2083 025e 0E94 0000 		call mousekey_param_dec
 606:../../tmk_core/common/command.c ****         case KC_D:
 2084               		.loc 1 606 13 is_stmt 1 view .LVU476
 2085 0262 00C0      		rjmp .L128
 2086               	.L123:
 602:../../tmk_core/common/command.c ****             break;
 2087               		.loc 1 602 13 view .LVU477
 2088 0264 6AE0      		ldi r22,lo8(10)
 2089 0266 00C0      		rjmp .L158
 2090               	.L119:
 608:../../tmk_core/common/command.c ****             mk_interval = MOUSEKEY_INTERVAL;
 2091               		.loc 1 608 13 view .LVU478
 608:../../tmk_core/common/command.c ****             mk_interval = MOUSEKEY_INTERVAL;
 2092               		.loc 1 608 22 is_stmt 0 view .LVU479
 2093 0268 8EE1      		ldi r24,lo8(30)
 2094 026a 8093 0000 		sts mk_delay,r24
 609:../../tmk_core/common/command.c ****             mk_max_speed = MOUSEKEY_MAX_SPEED;
 2095               		.loc 1 609 13 is_stmt 1 view .LVU480
 609:../../tmk_core/common/command.c ****             mk_max_speed = MOUSEKEY_MAX_SPEED;
 2096               		.loc 1 609 25 is_stmt 0 view .LVU481
 2097 026e 82E3      		ldi r24,lo8(50)
 2098 0270 8093 0000 		sts mk_interval,r24
 610:../../tmk_core/common/command.c ****             mk_time_to_max = MOUSEKEY_TIME_TO_MAX;
 2099               		.loc 1 610 13 is_stmt 1 view .LVU482
 610:../../tmk_core/common/command.c ****             mk_time_to_max = MOUSEKEY_TIME_TO_MAX;
 2100               		.loc 1 610 26 is_stmt 0 view .LVU483
 2101 0274 8AE0      		ldi r24,lo8(10)
 2102 0276 8093 0000 		sts mk_max_speed,r24
 611:../../tmk_core/common/command.c ****             mk_wheel_max_speed = MOUSEKEY_WHEEL_MAX_SPEED;
 2103               		.loc 1 611 13 is_stmt 1 view .LVU484
 611:../../tmk_core/common/command.c ****             mk_wheel_max_speed = MOUSEKEY_WHEEL_MAX_SPEED;
 2104               		.loc 1 611 28 is_stmt 0 view .LVU485
 2105 027a 84E1      		ldi r24,lo8(20)
 2106 027c 8093 0000 		sts mk_time_to_max,r24
 612:../../tmk_core/common/command.c ****             mk_wheel_time_to_max = MOUSEKEY_WHEEL_TIME_TO_MAX;
 2107               		.loc 1 612 13 is_stmt 1 view .LVU486
 612:../../tmk_core/common/command.c ****             mk_wheel_time_to_max = MOUSEKEY_WHEEL_TIME_TO_MAX;
 2108               		.loc 1 612 32 is_stmt 0 view .LVU487
 2109 0280 88E0      		ldi r24,lo8(8)
 2110 0282 8093 0000 		sts mk_wheel_max_speed,r24
 613:../../tmk_core/common/command.c ****             print("set default\n");
 2111               		.loc 1 613 13 is_stmt 1 view .LVU488
 613:../../tmk_core/common/command.c ****             print("set default\n");
 2112               		.loc 1 613 34 is_stmt 0 view .LVU489
 2113 0286 88E2      		ldi r24,lo8(40)
 2114 0288 8093 0000 		sts mk_wheel_time_to_max,r24
 614:../../tmk_core/common/command.c ****             break;
 2115               		.loc 1 614 13 is_stmt 1 view .LVU490
 2116               	.LBE236:
 2117               	.LBE262:
 614:../../tmk_core/common/command.c ****             break;
 2118               		.loc 1 614 13 view .LVU491
 614:../../tmk_core/common/command.c ****             break;
 2119               		.loc 1 614 13 view .LVU492
 2120               	.LBB263:
 2121               	.LBB237:
 2122 028c 80E0      		ldi r24,lo8(__c.5382)
 2123 028e 90E0      		ldi r25,hi8(__c.5382)
 2124 0290 0E94 0000 		call xputs
 615:../../tmk_core/common/command.c ****         default:
 2125               		.loc 1 615 13 view .LVU493
 2126 0294 00C0      		rjmp .L128
 2127               	.L130:
 623:../../tmk_core/common/command.c ****     }
 2128               		.loc 1 623 9 view .LVU494
 2129               	.LBE237:
 2130               	.LBE263:
 623:../../tmk_core/common/command.c ****     }
 2131               		.loc 1 623 9 view .LVU495
 623:../../tmk_core/common/command.c ****     }
 2132               		.loc 1 623 9 view .LVU496
 2133               	.LBB264:
 2134               	.LBB238:
 2135 0296 80E0      		ldi r24,lo8(__c.5389)
 2136 0298 90E0      		ldi r25,hi8(__c.5389)
 2137 029a 00C0      		rjmp .L161
 2138               	.LBE238:
 2139               	.LBE264:
 2140               		.cfi_endproc
 2141               	.LFE103:
 2143               		.section	.rodata.CSWTCH.60,"a"
 2146               	CSWTCH.60:
 2147 0000 01        		.byte	1
 2148 0001 02        		.byte	2
 2149 0002 03        		.byte	3
 2150 0003 04        		.byte	4
 2151 0004 05        		.byte	5
 2152 0005 06        		.byte	6
 2153 0006 07        		.byte	7
 2154 0007 08        		.byte	8
 2155 0008 09        		.byte	9
 2156 0009 00        		.byte	0
 2157               		.section	.progmem.data.__c.5351,"a"
 2160               	__c.5351:
 2161 0000 6D6B 5F77 		.string	"mk_wheel_time_to_max = %d\n"
 2161      6865 656C 
 2161      5F74 696D 
 2161      655F 746F 
 2161      5F6D 6178 
 2162               		.section	.progmem.data.__c.5348,"a"
 2165               	__c.5348:
 2166 0000 6D6B 5F77 		.string	"mk_wheel_max_speed = %d\n"
 2166      6865 656C 
 2166      5F6D 6178 
 2166      5F73 7065 
 2166      6564 203D 
 2167               		.section	.progmem.data.__c.5345,"a"
 2170               	__c.5345:
 2171 0000 6D6B 5F74 		.string	"mk_time_to_max = %d\n"
 2171      696D 655F 
 2171      746F 5F6D 
 2171      6178 203D 
 2171      2025 640A 
 2172               		.section	.progmem.data.__c.5342,"a"
 2175               	__c.5342:
 2176 0000 6D6B 5F6D 		.string	"mk_max_speed = %d\n"
 2176      6178 5F73 
 2176      7065 6564 
 2176      203D 2025 
 2176      640A 00
 2177               		.section	.progmem.data.__c.5339,"a"
 2180               	__c.5339:
 2181 0000 6D6B 5F69 		.string	"mk_interval = %d\n"
 2181      6E74 6572 
 2181      7661 6C20 
 2181      3D20 2564 
 2181      0A00 
 2182               		.section	.progmem.data.__c.5335,"a"
 2185               	__c.5335:
 2186 0000 6D6B 5F64 		.string	"mk_delay = %d\n"
 2186      656C 6179 
 2186      203D 2025 
 2186      640A 00
 2187               		.section	.progmem.data.__c.5328,"a"
 2190               	__c.5328:
 2191 0000 6D6B 5F77 		.string	"mk_wheel_time_to_max = %d\n"
 2191      6865 656C 
 2191      5F74 696D 
 2191      655F 746F 
 2191      5F6D 6178 
 2192               		.section	.progmem.data.__c.5325,"a"
 2195               	__c.5325:
 2196 0000 6D6B 5F77 		.string	"mk_wheel_max_speed = %d\n"
 2196      6865 656C 
 2196      5F6D 6178 
 2196      5F73 7065 
 2196      6564 203D 
 2197               		.section	.progmem.data.__c.5322,"a"
 2200               	__c.5322:
 2201 0000 6D6B 5F74 		.string	"mk_time_to_max = %d\n"
 2201      696D 655F 
 2201      746F 5F6D 
 2201      6178 203D 
 2201      2025 640A 
 2202               		.section	.progmem.data.__c.5319,"a"
 2205               	__c.5319:
 2206 0000 6D6B 5F6D 		.string	"mk_max_speed = %d\n"
 2206      6178 5F73 
 2206      7065 6564 
 2206      203D 2025 
 2206      640A 00
 2207               		.section	.progmem.data.__c.5316,"a"
 2210               	__c.5316:
 2211 0000 6D6B 5F69 		.string	"mk_interval = %d\n"
 2211      6E74 6572 
 2211      7661 6C20 
 2211      3D20 2564 
 2211      0A00 
 2212               		.section	.progmem.data.__c.5312,"a"
 2215               	__c.5312:
 2216 0000 6D6B 5F64 		.string	"mk_delay = %d\n"
 2216      656C 6179 
 2216      203D 2025 
 2216      640A 00
 2217               		.section	.progmem.data.__c.5305,"a"
 2220               	__c.5305:
 2221 0000 0A00      		.string	"\n"
 2222               		.section	.progmem.data.__c.5303,"a"
 2225               	__c.5303:
 2226 0000 2575 00   		.string	"%u"
 2227               		.section	.progmem.data.__c.5301,"a"
 2230               	__c.5301:
 2231 0000 363A 2077 		.string	"6: wheel_time_to_max: "
 2231      6865 656C 
 2231      5F74 696D 
 2231      655F 746F 
 2231      5F6D 6178 
 2232               		.section	.progmem.data.__c.5299,"a"
 2235               	__c.5299:
 2236 0000 0A00      		.string	"\n"
 2237               		.section	.progmem.data.__c.5297,"a"
 2240               	__c.5297:
 2241 0000 2575 00   		.string	"%u"
 2242               		.section	.progmem.data.__c.5295,"a"
 2245               	__c.5295:
 2246 0000 353A 2077 		.string	"5: wheel_max_speed: "
 2246      6865 656C 
 2246      5F6D 6178 
 2246      5F73 7065 
 2246      6564 3A20 
 2247               		.section	.progmem.data.__c.5293,"a"
 2250               	__c.5293:
 2251 0000 0A00      		.string	"\n"
 2252               		.section	.progmem.data.__c.5291,"a"
 2255               	__c.5291:
 2256 0000 2575 00   		.string	"%u"
 2257               		.section	.progmem.data.__c.5289,"a"
 2260               	__c.5289:
 2261 0000 343A 2074 		.string	"4: time_to_max: "
 2261      696D 655F 
 2261      746F 5F6D 
 2261      6178 3A20 
 2261      00
 2262               		.section	.progmem.data.__c.5287,"a"
 2265               	__c.5287:
 2266 0000 0A00      		.string	"\n"
 2267               		.section	.progmem.data.__c.5285,"a"
 2270               	__c.5285:
 2271 0000 2575 00   		.string	"%u"
 2272               		.section	.progmem.data.__c.5283,"a"
 2275               	__c.5283:
 2276 0000 333A 206D 		.string	"3: max_speed: "
 2276      6178 5F73 
 2276      7065 6564 
 2276      3A20 00
 2277               		.section	.progmem.data.__c.5281,"a"
 2280               	__c.5281:
 2281 0000 0A00      		.string	"\n"
 2282               		.section	.progmem.data.__c.5279,"a"
 2285               	__c.5279:
 2286 0000 2575 00   		.string	"%u"
 2287               		.section	.progmem.data.__c.5277,"a"
 2290               	__c.5277:
 2291 0000 323A 2069 		.string	"2: interval(ms): "
 2291      6E74 6572 
 2291      7661 6C28 
 2291      6D73 293A 
 2291      2000 
 2292               		.section	.progmem.data.__c.5275,"a"
 2295               	__c.5275:
 2296 0000 0A00      		.string	"\n"
 2297               		.section	.progmem.data.__c.5273,"a"
 2300               	__c.5273:
 2301 0000 2575 00   		.string	"%u"
 2302               		.section	.progmem.data.__c.5271,"a"
 2305               	__c.5271:
 2306 0000 313A 2064 		.string	"1: delay(*10ms): "
 2306      656C 6179 
 2306      282A 3130 
 2306      6D73 293A 
 2306      2000 
 2307               		.section	.progmem.data.__c.5269,"a"
 2310               	__c.5269:
 2311 0000 0A09 2D20 		.string	"\n\t- Values -\n"
 2311      5661 6C75 
 2311      6573 202D 
 2311      0A00 
 2312               		.section	.progmem.data.__c.5389,"a"
 2315               	__c.5389:
 2316 0000 4D3E 00   		.string	"M>"
 2317               		.section	.progmem.data.__c.5387,"a"
 2320               	__c.5387:
 2321 0000 4D25 643E 		.string	"M%d> "
 2321      2000 
 2322               		.section	.progmem.data.__c.5385,"a"
 2325               	__c.5385:
 2326 0000 3F00      		.string	"?"
 2327               		.section	.progmem.data.__c.5382,"a"
 2330               	__c.5382:
 2331 0000 7365 7420 		.string	"set default\n"
 2331      6465 6661 
 2331      756C 740A 
 2331      00
 2332               		.section	.progmem.data.__c.5368,"a"
 2335               	__c.5368:
 2336 0000 433E 2000 		.string	"C> "
 2337               		.section	.progmem.data.__c.5358,"a"
 2340               	__c.5358:
 2341 0000 7768 6572 		.string	"where delta: cursor=%d, wheel=%d\nSee http://en.wikipedia.org/wiki/Mouse_keys\n"
 2341      6520 6465 
 2341      6C74 613A 
 2341      2063 7572 
 2341      736F 723D 
 2342               		.section	.progmem.data.__c.5356,"a"
 2345               	__c.5356:
 2346 0000 0A09 2D20 		.string	"\n\t- Mousekey -\nESC/q:\tquit\n1:\tdelay(*10ms)\n2:\tinterval(ms)\n3:\tmax_speed\n4:\tti
 2346      4D6F 7573 
 2346      656B 6579 
 2346      202D 0A45 
 2346      5343 2F71 
 2347               		.section	.progmem.data.__c.5261,"a"
 2350               	__c.5261:
 2351 0000 3F00      		.string	"?"
 2352               		.section	.progmem.data.__c.5258,"a"
 2355               	__c.5258:
 2356 0000 4D3E 2000 		.string	"M> "
 2357               		.section	.progmem.data.__c.5263,"a"
 2360               	__c.5263:
 2361 0000 433E 2000 		.string	"C> "
 2362               		.section	.progmem.data.__c.5407,"a"
 2365               	__c.5407:
 2366 0000 4C25 640A 		.string	"L%d\n"
 2366      00
 2367               		.section	.progmem.data.__c.5247,"a"
 2370               	__c.5247:
 2371 0000 0A09 2D20 		.string	"\n\t- Console -\nESC/q:\tquit\nm:\tmousekey\n"
 2371      436F 6E73 
 2371      6F6C 6520 
 2371      2D0A 4553 
 2371      432F 713A 
 2372               		.section	.progmem.data.__c.5170,"a"
 2375               	__c.5170:
 2376 0000 0A09 2D20 		.string	"\n\t- Magic -\nd:\tdebug\nx:\tdebug matrix\nk:\tdebug keyboard\nm:\tdebug mouse\nv:\tvers
 2376      4D61 6769 
 2376      6320 2D0A 
 2376      643A 0964 
 2376      6562 7567 
 2377               		.section	.progmem.data.__c.5242,"a"
 2380               	__c.5242:
 2381 0000 3F00      		.string	"?"
 2382               		.section	.progmem.data.__c.5233,"a"
 2385               	__c.5233:
 2386 0000 4E4B 524F 		.string	"NKRO: off\n"
 2386      3A20 6F66 
 2386      660A 00
 2387               		.section	.progmem.data.__c.5231,"a"
 2390               	__c.5231:
 2391 0000 4E4B 524F 		.string	"NKRO: on\n"
 2391      3A20 6F6E 
 2391      0A00 
 2392               		.section	.progmem.data.__c.5228,"a"
 2395               	__c.5228:
 2396 0000 7469 6D65 		.string	"timer_read32(): %04lX\n"
 2396      725F 7265 
 2396      6164 3332 
 2396      2829 3A20 
 2396      2530 346C 
 2397               		.section	.progmem.data.__c.5226,"a"
 2400               	__c.5226:
 2401 0000 6B65 7962 		.string	"keyboard_nkro: %X\n"
 2401      6F61 7264 
 2401      5F6E 6B72 
 2401      6F3A 2025 
 2401      580A 00
 2402               		.section	.progmem.data.__c.5224,"a"
 2405               	__c.5224:
 2406 0000 6B65 7962 		.string	"keyboard_idle: %X\n"
 2406      6F61 7264 
 2406      5F69 646C 
 2406      653A 2025 
 2406      580A 00
 2407               		.section	.progmem.data.__c.5222,"a"
 2410               	__c.5222:
 2411 0000 6B65 7962 		.string	"keyboard_protocol: %X\n"
 2411      6F61 7264 
 2411      5F70 726F 
 2411      746F 636F 
 2411      6C3A 2025 
 2412               		.section	.progmem.data.__c.5220,"a"
 2415               	__c.5220:
 2416 0000 686F 7374 		.string	"host_keyboard_leds(): %X\n"
 2416      5F6B 6579 
 2416      626F 6172 
 2416      645F 6C65 
 2416      6473 2829 
 2417               		.section	.progmem.data.__c.5218,"a"
 2420               	__c.5218:
 2421 0000 0A09 2D20 		.string	"\n\t- Status -\n"
 2421      5374 6174 
 2421      7573 202D 
 2421      0A00 
 2422               		.section	.progmem.data.__c.5215,"a"
 2425               	__c.5215:
 2426 0000 4743 433A 		.string	"GCC: 8.3.0 AVR-LIBC: 2.0.0 AVR_ARCH: avr5\n"
 2426      2038 2E33 
 2426      2E30 2041 
 2426      5652 2D4C 
 2426      4942 433A 
 2427               		.section	.progmem.data.__c.5213,"a"
 2430               	__c.5213:
 2431 0000 4F50 5449 		.string	"OPTIONS: LUFA MOUSEKEY EXTRAKEY CONSOLE COMMAND NKRO 4096\n"
 2431      4F4E 533A 
 2431      204C 5546 
 2431      4120 4D4F 
 2431      5553 454B 
 2432               		.section	.progmem.data.__c.5211,"a"
 2435               	__c.5211:
 2436 0000 4255 494C 		.string	"BUILD: 8f86d125 (00:35:49 Dec 22 2020)\n"
 2436      443A 2038 
 2436      6638 3664 
 2436      3132 3520 
 2436      2830 303A 
 2437               		.section	.progmem.data.__c.5209,"a"
 2440               	__c.5209:
 2441 0000 5649 443A 		.string	"VID: 0xFEED(t.m.k.) PID: 0x6512(XT keyboard converter) VER: 0x0001\n"
 2441      2030 7846 
 2441      4545 4428 
 2441      742E 6D2E 
 2441      6B2E 2920 
 2442               		.section	.progmem.data.__c.5207,"a"
 2445               	__c.5207:
 2446 0000 4445 5343 		.string	"DESC: convert XT keyboard to USB\n"
 2446      3A20 636F 
 2446      6E76 6572 
 2446      7420 5854 
 2446      206B 6579 
 2447               		.section	.progmem.data.__c.5205,"a"
 2450               	__c.5205:
 2451 0000 0A09 2D20 		.string	"\n\t- Version -\n"
 2451      5665 7273 
 2451      696F 6E20 
 2451      2D0A 00
 2452               		.section	.progmem.data.__c.5202,"a"
 2455               	__c.5202:
 2456 0000 0A6D 6F75 		.string	"\nmouse: off\n"
 2456      7365 3A20 
 2456      6F66 660A 
 2456      00
 2457               		.section	.progmem.data.__c.5200,"a"
 2460               	__c.5200:
 2461 0000 0A6D 6F75 		.string	"\nmouse: on\n"
 2461      7365 3A20 
 2461      6F6E 0A00 
 2462               		.section	.progmem.data.__c.5197,"a"
 2465               	__c.5197:
 2466 0000 0A6B 6579 		.string	"\nkeyboard: off\n"
 2466      626F 6172 
 2466      643A 206F 
 2466      6666 0A00 
 2467               		.section	.progmem.data.__c.5195,"a"
 2470               	__c.5195:
 2471 0000 0A6B 6579 		.string	"\nkeyboard: on\n"
 2471      626F 6172 
 2471      643A 206F 
 2471      6E0A 00
 2472               		.section	.progmem.data.__c.5192,"a"
 2475               	__c.5192:
 2476 0000 0A6D 6174 		.string	"\nmatrix: off\n"
 2476      7269 783A 
 2476      206F 6666 
 2476      0A00 
 2477               		.section	.progmem.data.__c.5190,"a"
 2480               	__c.5190:
 2481 0000 0A6D 6174 		.string	"\nmatrix: on\n"
 2481      7269 783A 
 2481      206F 6E0A 
 2481      00
 2482               		.section	.progmem.data.__c.5187,"a"
 2485               	__c.5187:
 2486 0000 0A64 6562 		.string	"\ndebug: on\n"
 2486      7567 3A20 
 2486      6F6E 0A00 
 2487               		.section	.progmem.data.__c.5185,"a"
 2490               	__c.5185:
 2491 0000 0A64 6562 		.string	"\ndebug: off\n"
 2491      7567 3A20 
 2491      6F66 660A 
 2491      00
 2492               		.section	.progmem.data.__c.5182,"a"
 2495               	__c.5182:
 2496 0000 0A0A 626F 		.string	"\n\nbootloader... "
 2496      6F74 6C6F 
 2496      6164 6572 
 2496      2E2E 2E20 
 2496      00
 2497               		.section	.progmem.data.__c.5179,"a"
 2500               	__c.5179:
 2501 0000 433E 2000 		.string	"C> "
 2502               		.section	.bss.mousekey_param,"aw",@nobits
 2505               	mousekey_param:
 2506 0000 00        		.zero	1
 2507               	.global	command_state
 2508               		.section	.bss.command_state,"aw",@nobits
 2511               	command_state:
 2512 0000 00        		.zero	1
 2513               		.text
 2514               	.Letext0:
 2515               		.file 3 "/usr/avr/include/stdint.h"
 2516               		.file 4 "../../tmk_core/protocol/lufa/lufa-abcminiuser/LUFA/Drivers/USB/Core/AVR8/../StdRequestTyp
 2517               		.file 5 "../../tmk_core/protocol/lufa/lufa-abcminiuser/LUFA/Drivers/USB/Core/AVR8/../DeviceStandar
 2518               		.file 6 "../../tmk_core/protocol/lufa/lufa-abcminiuser/LUFA/Drivers/USB/Core/USBTask.h"
 2519               		.file 7 "../../tmk_core/protocol/lufa/lufa-abcminiuser/LUFA/Drivers/USB/Core/HostStandardReq.h"
 2520               		.file 8 "/usr/avr/include/stdio.h"
 2521               		.file 9 "../../tmk_core/common/report.h"
 2522               		.file 10 "../../tmk_core/common/host.h"
 2523               		.file 11 "../../tmk_core/common/avr/xprintf.h"
 2524               		.file 12 "../../tmk_core/common/debug.h"
 2525               		.file 13 "../../tmk_core/common/timer.h"
 2526               		.file 14 "../../tmk_core/common/action_layer.h"
 2527               		.file 15 "../../tmk_core/common/action_util.h"
 2528               		.file 16 "../../tmk_core/common/command.h"
 2529               		.file 17 "../../tmk_core/common/mousekey.h"
 2530               		.file 18 "../../tmk_core/common/action.h"
 2531               		.file 19 "../../tmk_core/common/keycode.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 command.c
     /tmp/ccGQfzhx.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccGQfzhx.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccGQfzhx.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccGQfzhx.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccGQfzhx.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccGQfzhx.s:12     .text.mousekey_console_help:0000000000000000 mousekey_console_help
     /tmp/ccGQfzhx.s:2345   .progmem.data.__c.5356:0000000000000000 __c.5356
     /tmp/ccGQfzhx.s:2340   .progmem.data.__c.5358:0000000000000000 __c.5358
     /tmp/ccGQfzhx.s:75     .text.mousekey_param_inc:0000000000000000 mousekey_param_inc
     /tmp/ccGQfzhx.s:2215   .progmem.data.__c.5312:0000000000000000 __c.5312
     /tmp/ccGQfzhx.s:2210   .progmem.data.__c.5316:0000000000000000 __c.5316
     /tmp/ccGQfzhx.s:2205   .progmem.data.__c.5319:0000000000000000 __c.5319
     /tmp/ccGQfzhx.s:2200   .progmem.data.__c.5322:0000000000000000 __c.5322
     /tmp/ccGQfzhx.s:2195   .progmem.data.__c.5325:0000000000000000 __c.5325
     /tmp/ccGQfzhx.s:2190   .progmem.data.__c.5328:0000000000000000 __c.5328
     /tmp/ccGQfzhx.s:406    .text.mousekey_param_dec:0000000000000000 mousekey_param_dec
     /tmp/ccGQfzhx.s:2185   .progmem.data.__c.5335:0000000000000000 __c.5335
     /tmp/ccGQfzhx.s:2180   .progmem.data.__c.5339:0000000000000000 __c.5339
     /tmp/ccGQfzhx.s:2175   .progmem.data.__c.5342:0000000000000000 __c.5342
     /tmp/ccGQfzhx.s:2170   .progmem.data.__c.5345:0000000000000000 __c.5345
     /tmp/ccGQfzhx.s:2165   .progmem.data.__c.5348:0000000000000000 __c.5348
     /tmp/ccGQfzhx.s:2160   .progmem.data.__c.5351:0000000000000000 __c.5351
     /tmp/ccGQfzhx.s:677    .text.switch_default_layer:0000000000000000 switch_default_layer
     /tmp/ccGQfzhx.s:2365   .progmem.data.__c.5407:0000000000000000 __c.5407
     /tmp/ccGQfzhx.s:750    .text.command_common:0000000000000000 command_common
     /tmp/ccGQfzhx.s:2380   .progmem.data.__c.5242:0000000000000000 __c.5242
     /tmp/ccGQfzhx.s:2470   .progmem.data.__c.5195:0000000000000000 __c.5195
     /tmp/ccGQfzhx.s:2390   .progmem.data.__c.5231:0000000000000000 __c.5231
     /tmp/ccGQfzhx.s:2480   .progmem.data.__c.5190:0000000000000000 __c.5190
     /tmp/ccGQfzhx.s:2495   .progmem.data.__c.5182:0000000000000000 __c.5182
     /tmp/ccGQfzhx.s:2375   .progmem.data.__c.5170:0000000000000000 __c.5170
     /tmp/ccGQfzhx.s:2370   .progmem.data.__c.5247:0000000000000000 __c.5247
     /tmp/ccGQfzhx.s:2500   .progmem.data.__c.5179:0000000000000000 __c.5179
     /tmp/ccGQfzhx.s:2511   .bss.command_state:0000000000000000 command_state
     /tmp/ccGQfzhx.s:2490   .progmem.data.__c.5185:0000000000000000 __c.5185
     /tmp/ccGQfzhx.s:2485   .progmem.data.__c.5187:0000000000000000 __c.5187
     /tmp/ccGQfzhx.s:2475   .progmem.data.__c.5192:0000000000000000 __c.5192
     /tmp/ccGQfzhx.s:2465   .progmem.data.__c.5197:0000000000000000 __c.5197
     /tmp/ccGQfzhx.s:2460   .progmem.data.__c.5200:0000000000000000 __c.5200
     /tmp/ccGQfzhx.s:2455   .progmem.data.__c.5202:0000000000000000 __c.5202
     /tmp/ccGQfzhx.s:2450   .progmem.data.__c.5205:0000000000000000 __c.5205
     /tmp/ccGQfzhx.s:2445   .progmem.data.__c.5207:0000000000000000 __c.5207
     /tmp/ccGQfzhx.s:2440   .progmem.data.__c.5209:0000000000000000 __c.5209
     /tmp/ccGQfzhx.s:2435   .progmem.data.__c.5211:0000000000000000 __c.5211
     /tmp/ccGQfzhx.s:2430   .progmem.data.__c.5213:0000000000000000 __c.5213
     /tmp/ccGQfzhx.s:2425   .progmem.data.__c.5215:0000000000000000 __c.5215
     /tmp/ccGQfzhx.s:2420   .progmem.data.__c.5218:0000000000000000 __c.5218
     /tmp/ccGQfzhx.s:2415   .progmem.data.__c.5220:0000000000000000 __c.5220
     /tmp/ccGQfzhx.s:2410   .progmem.data.__c.5222:0000000000000000 __c.5222
     /tmp/ccGQfzhx.s:2405   .progmem.data.__c.5224:0000000000000000 __c.5224
     /tmp/ccGQfzhx.s:2400   .progmem.data.__c.5226:0000000000000000 __c.5226
     /tmp/ccGQfzhx.s:2395   .progmem.data.__c.5228:0000000000000000 __c.5228
     /tmp/ccGQfzhx.s:2385   .progmem.data.__c.5233:0000000000000000 __c.5233
     /tmp/ccGQfzhx.s:1313   .text.command_extra:0000000000000000 command_extra
     /tmp/ccGQfzhx.s:1313   .text.command_extra:0000000000000000 command_extra.localalias.0
     /tmp/ccGQfzhx.s:1337   .text.command_console_extra:0000000000000000 command_console_extra
     /tmp/ccGQfzhx.s:1351   .text.command_proc:0000000000000000 command_proc
     /tmp/ccGQfzhx.s:2350   .progmem.data.__c.5261:0000000000000000 __c.5261
     /tmp/ccGQfzhx.s:2360   .progmem.data.__c.5263:0000000000000000 __c.5263
     /tmp/ccGQfzhx.s:2355   .progmem.data.__c.5258:0000000000000000 __c.5258
     /tmp/ccGQfzhx.s:2325   .progmem.data.__c.5385:0000000000000000 __c.5385
     /tmp/ccGQfzhx.s:2505   .bss.mousekey_param:0000000000000000 mousekey_param
     /tmp/ccGQfzhx.s:2320   .progmem.data.__c.5387:0000000000000000 __c.5387
     /tmp/ccGQfzhx.s:2335   .progmem.data.__c.5368:0000000000000000 __c.5368
     /tmp/ccGQfzhx.s:2310   .progmem.data.__c.5269:0000000000000000 __c.5269
     /tmp/ccGQfzhx.s:2305   .progmem.data.__c.5271:0000000000000000 __c.5271
     /tmp/ccGQfzhx.s:2300   .progmem.data.__c.5273:0000000000000000 __c.5273
     /tmp/ccGQfzhx.s:2295   .progmem.data.__c.5275:0000000000000000 __c.5275
     /tmp/ccGQfzhx.s:2290   .progmem.data.__c.5277:0000000000000000 __c.5277
     /tmp/ccGQfzhx.s:2285   .progmem.data.__c.5279:0000000000000000 __c.5279
     /tmp/ccGQfzhx.s:2280   .progmem.data.__c.5281:0000000000000000 __c.5281
     /tmp/ccGQfzhx.s:2275   .progmem.data.__c.5283:0000000000000000 __c.5283
     /tmp/ccGQfzhx.s:2270   .progmem.data.__c.5285:0000000000000000 __c.5285
     /tmp/ccGQfzhx.s:2265   .progmem.data.__c.5287:0000000000000000 __c.5287
     /tmp/ccGQfzhx.s:2260   .progmem.data.__c.5289:0000000000000000 __c.5289
     /tmp/ccGQfzhx.s:2255   .progmem.data.__c.5291:0000000000000000 __c.5291
     /tmp/ccGQfzhx.s:2250   .progmem.data.__c.5293:0000000000000000 __c.5293
     /tmp/ccGQfzhx.s:2245   .progmem.data.__c.5295:0000000000000000 __c.5295
     /tmp/ccGQfzhx.s:2240   .progmem.data.__c.5297:0000000000000000 __c.5297
     /tmp/ccGQfzhx.s:2235   .progmem.data.__c.5299:0000000000000000 __c.5299
     /tmp/ccGQfzhx.s:2230   .progmem.data.__c.5301:0000000000000000 __c.5301
     /tmp/ccGQfzhx.s:2225   .progmem.data.__c.5303:0000000000000000 __c.5303
     /tmp/ccGQfzhx.s:2220   .progmem.data.__c.5305:0000000000000000 __c.5305
     /tmp/ccGQfzhx.s:2146   .rodata.CSWTCH.60:0000000000000000 CSWTCH.60
     /tmp/ccGQfzhx.s:2330   .progmem.data.__c.5382:0000000000000000 __c.5382
     /tmp/ccGQfzhx.s:2315   .progmem.data.__c.5389:0000000000000000 __c.5389

UNDEFINED SYMBOLS
xputs
__xprintf
mk_delay
mk_interval
mk_max_speed
mk_time_to_max
mk_wheel_max_speed
mk_wheel_time_to_max
default_layer_set
clear_keyboard
debug_config
keyboard_nkro
bootloader_jump
host_keyboard_leds
keyboard_protocol
keyboard_idle
timer_read32
keyboard_report
__do_copy_data
__do_clear_bss
