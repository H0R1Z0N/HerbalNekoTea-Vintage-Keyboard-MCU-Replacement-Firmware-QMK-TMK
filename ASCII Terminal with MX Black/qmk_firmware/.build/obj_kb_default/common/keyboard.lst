   1               		.file	"keyboard.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.text.matrix_setup,"ax",@progbits
  12               		.weak	matrix_setup
  14               	matrix_setup:
  15               	.LFB103:
  16               		.file 1 "./tmk_core/common/keyboard.c"
   1:./tmk_core/common/keyboard.c **** /*
   2:./tmk_core/common/keyboard.c **** Copyright 2011, 2012, 2013 Jun Wako <wakojun@gmail.com>
   3:./tmk_core/common/keyboard.c **** 
   4:./tmk_core/common/keyboard.c **** This program is free software: you can redistribute it and/or modify
   5:./tmk_core/common/keyboard.c **** it under the terms of the GNU General Public License as published by
   6:./tmk_core/common/keyboard.c **** the Free Software Foundation, either version 2 of the License, or
   7:./tmk_core/common/keyboard.c **** (at your option) any later version.
   8:./tmk_core/common/keyboard.c **** 
   9:./tmk_core/common/keyboard.c **** This program is distributed in the hope that it will be useful,
  10:./tmk_core/common/keyboard.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:./tmk_core/common/keyboard.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:./tmk_core/common/keyboard.c **** GNU General Public License for more details.
  13:./tmk_core/common/keyboard.c **** 
  14:./tmk_core/common/keyboard.c **** You should have received a copy of the GNU General Public License
  15:./tmk_core/common/keyboard.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:./tmk_core/common/keyboard.c **** */
  17:./tmk_core/common/keyboard.c **** #include <stdint.h>
  18:./tmk_core/common/keyboard.c **** #include "keyboard.h"
  19:./tmk_core/common/keyboard.c **** #include "matrix.h"
  20:./tmk_core/common/keyboard.c **** #include "keymap.h"
  21:./tmk_core/common/keyboard.c **** #include "host.h"
  22:./tmk_core/common/keyboard.c **** #include "led.h"
  23:./tmk_core/common/keyboard.c **** #include "keycode.h"
  24:./tmk_core/common/keyboard.c **** #include "timer.h"
  25:./tmk_core/common/keyboard.c **** #include "print.h"
  26:./tmk_core/common/keyboard.c **** #include "debug.h"
  27:./tmk_core/common/keyboard.c **** #include "command.h"
  28:./tmk_core/common/keyboard.c **** #include "util.h"
  29:./tmk_core/common/keyboard.c **** #include "sendchar.h"
  30:./tmk_core/common/keyboard.c **** #include "eeconfig.h"
  31:./tmk_core/common/keyboard.c **** #include "backlight.h"
  32:./tmk_core/common/keyboard.c **** #include "action_layer.h"
  33:./tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
  34:./tmk_core/common/keyboard.c **** #   include "bootmagic.h"
  35:./tmk_core/common/keyboard.c **** #else
  36:./tmk_core/common/keyboard.c **** #   include "magic.h"
  37:./tmk_core/common/keyboard.c **** #endif
  38:./tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
  39:./tmk_core/common/keyboard.c **** #   include "mousekey.h"
  40:./tmk_core/common/keyboard.c **** #endif
  41:./tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  42:./tmk_core/common/keyboard.c **** #   include "ps2_mouse.h"
  43:./tmk_core/common/keyboard.c **** #endif
  44:./tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  45:./tmk_core/common/keyboard.c **** #   include "serial_mouse.h"
  46:./tmk_core/common/keyboard.c **** #endif
  47:./tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  48:./tmk_core/common/keyboard.c **** #   include "adb.h"
  49:./tmk_core/common/keyboard.c **** #endif
  50:./tmk_core/common/keyboard.c **** #ifdef RGBLIGHT_ENABLE
  51:./tmk_core/common/keyboard.c **** #   include "rgblight.h"
  52:./tmk_core/common/keyboard.c **** #endif
  53:./tmk_core/common/keyboard.c **** #ifdef SERIAL_LINK_ENABLE
  54:./tmk_core/common/keyboard.c **** #   include "serial_link/system/serial_link.h"
  55:./tmk_core/common/keyboard.c **** #endif
  56:./tmk_core/common/keyboard.c **** #ifdef VISUALIZER_ENABLE
  57:./tmk_core/common/keyboard.c **** #   include "visualizer/visualizer.h"
  58:./tmk_core/common/keyboard.c **** #endif
  59:./tmk_core/common/keyboard.c **** 
  60:./tmk_core/common/keyboard.c **** 
  61:./tmk_core/common/keyboard.c **** 
  62:./tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
  63:./tmk_core/common/keyboard.c **** static bool has_ghost_in_row(uint8_t row)
  64:./tmk_core/common/keyboard.c **** {
  65:./tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = matrix_get_row(row);
  66:./tmk_core/common/keyboard.c ****     // No ghost exists when less than 2 keys are down on the row
  67:./tmk_core/common/keyboard.c ****     if (((matrix_row - 1) & matrix_row) == 0)
  68:./tmk_core/common/keyboard.c ****         return false;
  69:./tmk_core/common/keyboard.c **** 
  70:./tmk_core/common/keyboard.c ****     // Ghost occurs when the row shares column line with other row
  71:./tmk_core/common/keyboard.c ****     for (uint8_t i=0; i < MATRIX_ROWS; i++) {
  72:./tmk_core/common/keyboard.c ****         if (i != row && (matrix_get_row(i) & matrix_row))
  73:./tmk_core/common/keyboard.c ****             return true;
  74:./tmk_core/common/keyboard.c ****     }
  75:./tmk_core/common/keyboard.c ****     return false;
  76:./tmk_core/common/keyboard.c **** }
  77:./tmk_core/common/keyboard.c **** #endif
  78:./tmk_core/common/keyboard.c **** 
  79:./tmk_core/common/keyboard.c **** __attribute__ ((weak))
  80:./tmk_core/common/keyboard.c **** void matrix_setup(void) {
  17               		.loc 1 80 25 view -0
  18               		.cfi_startproc
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  81:./tmk_core/common/keyboard.c **** }
  23               		.loc 1 81 1 view .LVU1
  24               	/* epilogue start */
  25 0000 0895      		ret
  26               		.cfi_endproc
  27               	.LFE103:
  29               		.section	.text.keyboard_setup,"ax",@progbits
  30               	.global	keyboard_setup
  32               	keyboard_setup:
  33               	.LFB104:
  82:./tmk_core/common/keyboard.c **** 
  83:./tmk_core/common/keyboard.c **** void keyboard_setup(void) {
  34               		.loc 1 83 27 view -0
  35               		.cfi_startproc
  36               	/* prologue: function */
  37               	/* frame size = 0 */
  38               	/* stack size = 0 */
  39               	.L__stack_usage = 0
  84:./tmk_core/common/keyboard.c ****     matrix_setup();
  40               		.loc 1 84 5 view .LVU3
  41 0000 0C94 0000 		jmp matrix_setup
  42               	.LVL0:
  43               		.cfi_endproc
  44               	.LFE104:
  46               		.section	.text.keyboard_init,"ax",@progbits
  47               	.global	keyboard_init
  49               	keyboard_init:
  50               	.LFB105:
  85:./tmk_core/common/keyboard.c **** }
  86:./tmk_core/common/keyboard.c **** 
  87:./tmk_core/common/keyboard.c **** void keyboard_init(void) {
  51               		.loc 1 87 26 view -0
  52               		.cfi_startproc
  53               	/* prologue: function */
  54               	/* frame size = 0 */
  55               	/* stack size = 0 */
  56               	.L__stack_usage = 0
  88:./tmk_core/common/keyboard.c ****     timer_init();
  57               		.loc 1 88 5 view .LVU5
  58 0000 0E94 0000 		call timer_init
  59               	.LVL1:
  89:./tmk_core/common/keyboard.c ****     matrix_init();
  60               		.loc 1 89 5 view .LVU6
  61 0004 0E94 0000 		call matrix_init
  62               	.LVL2:
  90:./tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  91:./tmk_core/common/keyboard.c ****     ps2_mouse_init();
  92:./tmk_core/common/keyboard.c **** #endif
  93:./tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  94:./tmk_core/common/keyboard.c ****     serial_mouse_init();
  95:./tmk_core/common/keyboard.c **** #endif
  96:./tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  97:./tmk_core/common/keyboard.c ****     adb_mouse_init();
  98:./tmk_core/common/keyboard.c **** #endif
  99:./tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
 100:./tmk_core/common/keyboard.c ****     bootmagic();
  63               		.loc 1 100 5 view .LVU7
  64 0008 0C94 0000 		jmp bootmagic
  65               	.LVL3:
  66               		.cfi_endproc
  67               	.LFE105:
  69               		.section	.text.keyboard_task,"ax",@progbits
  70               	.global	keyboard_task
  72               	keyboard_task:
  73               	.LFB106:
 101:./tmk_core/common/keyboard.c **** #else
 102:./tmk_core/common/keyboard.c ****     magic();
 103:./tmk_core/common/keyboard.c **** #endif
 104:./tmk_core/common/keyboard.c **** #ifdef BACKLIGHT_ENABLE
 105:./tmk_core/common/keyboard.c ****     backlight_init();
 106:./tmk_core/common/keyboard.c **** #endif
 107:./tmk_core/common/keyboard.c **** #ifdef RGBLIGHT_ENABLE
 108:./tmk_core/common/keyboard.c ****     rgblight_init();
 109:./tmk_core/common/keyboard.c **** #endif
 110:./tmk_core/common/keyboard.c **** #if defined(NKRO_ENABLE) && defined(FORCE_NKRO)
 111:./tmk_core/common/keyboard.c ****     keymap_config.nkro = 1;
 112:./tmk_core/common/keyboard.c **** #endif
 113:./tmk_core/common/keyboard.c **** }
 114:./tmk_core/common/keyboard.c **** 
 115:./tmk_core/common/keyboard.c **** /*
 116:./tmk_core/common/keyboard.c ****  * Do keyboard routine jobs: scan mantrix, light LEDs, ...
 117:./tmk_core/common/keyboard.c ****  * This is repeatedly called as fast as possible.
 118:./tmk_core/common/keyboard.c ****  */
 119:./tmk_core/common/keyboard.c **** void keyboard_task(void)
 120:./tmk_core/common/keyboard.c **** {
  74               		.loc 1 120 1 view -0
  75               		.cfi_startproc
  76 0000 5F92      		push r5
  77               	.LCFI0:
  78               		.cfi_def_cfa_offset 3
  79               		.cfi_offset 5, -2
  80 0002 6F92      		push r6
  81               	.LCFI1:
  82               		.cfi_def_cfa_offset 4
  83               		.cfi_offset 6, -3
  84 0004 7F92      		push r7
  85               	.LCFI2:
  86               		.cfi_def_cfa_offset 5
  87               		.cfi_offset 7, -4
  88 0006 8F92      		push r8
  89               	.LCFI3:
  90               		.cfi_def_cfa_offset 6
  91               		.cfi_offset 8, -5
  92 0008 9F92      		push r9
  93               	.LCFI4:
  94               		.cfi_def_cfa_offset 7
  95               		.cfi_offset 9, -6
  96 000a AF92      		push r10
  97               	.LCFI5:
  98               		.cfi_def_cfa_offset 8
  99               		.cfi_offset 10, -7
 100 000c BF92      		push r11
 101               	.LCFI6:
 102               		.cfi_def_cfa_offset 9
 103               		.cfi_offset 11, -8
 104 000e CF92      		push r12
 105               	.LCFI7:
 106               		.cfi_def_cfa_offset 10
 107               		.cfi_offset 12, -9
 108 0010 DF92      		push r13
 109               	.LCFI8:
 110               		.cfi_def_cfa_offset 11
 111               		.cfi_offset 13, -10
 112 0012 EF92      		push r14
 113               	.LCFI9:
 114               		.cfi_def_cfa_offset 12
 115               		.cfi_offset 14, -11
 116 0014 FF92      		push r15
 117               	.LCFI10:
 118               		.cfi_def_cfa_offset 13
 119               		.cfi_offset 15, -12
 120 0016 0F93      		push r16
 121               	.LCFI11:
 122               		.cfi_def_cfa_offset 14
 123               		.cfi_offset 16, -13
 124 0018 1F93      		push r17
 125               	.LCFI12:
 126               		.cfi_def_cfa_offset 15
 127               		.cfi_offset 17, -14
 128 001a CF93      		push r28
 129               	.LCFI13:
 130               		.cfi_def_cfa_offset 16
 131               		.cfi_offset 28, -15
 132 001c DF93      		push r29
 133               	.LCFI14:
 134               		.cfi_def_cfa_offset 17
 135               		.cfi_offset 29, -16
 136 001e CDB7      		in r28,__SP_L__
 137 0020 DEB7      		in r29,__SP_H__
 138               	.LCFI15:
 139               		.cfi_def_cfa_register 28
 140 0022 2A97      		sbiw r28,10
 141               	.LCFI16:
 142               		.cfi_def_cfa_offset 27
 143 0024 0FB6      		in __tmp_reg__,__SREG__
 144 0026 F894      		cli
 145 0028 DEBF      		out __SP_H__,r29
 146 002a 0FBE      		out __SREG__,__tmp_reg__
 147 002c CDBF      		out __SP_L__,r28
 148               	/* prologue: function */
 149               	/* frame size = 10 */
 150               	/* stack size = 25 */
 151               	.L__stack_usage = 25
 121:./tmk_core/common/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 152               		.loc 1 121 5 view .LVU9
 122:./tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 123:./tmk_core/common/keyboard.c ****     static matrix_row_t matrix_ghost[MATRIX_ROWS];
 124:./tmk_core/common/keyboard.c **** #endif
 125:./tmk_core/common/keyboard.c ****     static uint8_t led_status = 0;
 153               		.loc 1 125 5 view .LVU10
 126:./tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = 0;
 154               		.loc 1 126 5 view .LVU11
 155               	.LVL4:
 127:./tmk_core/common/keyboard.c ****     matrix_row_t matrix_change = 0;
 156               		.loc 1 127 5 view .LVU12
 128:./tmk_core/common/keyboard.c **** 
 129:./tmk_core/common/keyboard.c ****     matrix_scan();
 157               		.loc 1 129 5 view .LVU13
 158 002e 0E94 0000 		call matrix_scan
 159               	.LVL5:
 130:./tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 160               		.loc 1 130 5 view .LVU14
 161               	.LBB6:
 162               		.loc 1 130 10 view .LVU15
 163               		.loc 1 130 10 is_stmt 0 view .LVU16
 164 0032 90E0      		ldi r25,lo8(matrix_prev.5005)
 165 0034 A92E      		mov r10,r25
 166 0036 90E0      		ldi r25,hi8(matrix_prev.5005)
 167 0038 B92E      		mov r11,r25
 168               	.LBE6:
 129:./tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 169               		.loc 1 129 5 view .LVU17
 170 003a 10E0      		ldi r17,0
 171 003c 00E0      		ldi r16,0
 172               	.LBB11:
 173               	.LBB7:
 131:./tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 132:./tmk_core/common/keyboard.c ****         matrix_change = matrix_row ^ matrix_prev[r];
 133:./tmk_core/common/keyboard.c ****         if (matrix_change) {
 134:./tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 135:./tmk_core/common/keyboard.c ****             if (has_ghost_in_row(r)) {
 136:./tmk_core/common/keyboard.c ****                 /* Keep track of whether ghosted status has changed for
 137:./tmk_core/common/keyboard.c ****                  * debugging. But don't update matrix_prev until un-ghosted, or
 138:./tmk_core/common/keyboard.c ****                  * the last key would be lost.
 139:./tmk_core/common/keyboard.c ****                  */
 140:./tmk_core/common/keyboard.c ****                 if (debug_matrix && matrix_ghost[r] != matrix_row) {
 141:./tmk_core/common/keyboard.c ****                     matrix_print();
 142:./tmk_core/common/keyboard.c ****                 }
 143:./tmk_core/common/keyboard.c ****                 matrix_ghost[r] = matrix_row;
 144:./tmk_core/common/keyboard.c ****                 continue;
 145:./tmk_core/common/keyboard.c ****             }
 146:./tmk_core/common/keyboard.c ****             matrix_ghost[r] = matrix_row;
 147:./tmk_core/common/keyboard.c **** #endif
 148:./tmk_core/common/keyboard.c ****             if (debug_matrix) matrix_print();
 149:./tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 150:./tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 174               		.loc 1 150 53 view .LVU18
 175 003e 8824      		clr r8
 176 0040 8394      		inc r8
 177 0042 912C      		mov r9,__zero_reg__
 178               	.LVL6:
 179               	.L11:
 180               		.loc 1 150 53 view .LVU19
 181 0044 502E      		mov r5,r16
 182               	.LVL7:
 183               		.loc 1 150 53 view .LVU20
 184               	.LBE7:
 131:./tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 185               		.loc 1 131 9 is_stmt 1 view .LVU21
 131:./tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 186               		.loc 1 131 22 is_stmt 0 view .LVU22
 187 0046 802F      		mov r24,r16
 188 0048 0E94 0000 		call matrix_get_row
 189               	.LVL8:
 190 004c 7C01      		movw r14,r24
 191               	.LVL9:
 132:./tmk_core/common/keyboard.c ****         if (matrix_change) {
 192               		.loc 1 132 9 is_stmt 1 view .LVU23
 132:./tmk_core/common/keyboard.c ****         if (matrix_change) {
 193               		.loc 1 132 49 is_stmt 0 view .LVU24
 194 004e F501      		movw r30,r10
 195 0050 C190      		ld r12,Z+
 196 0052 D190      		ld r13,Z+
 197 0054 5F01      		movw r10,r30
 198               	.LVL10:
 133:./tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 199               		.loc 1 133 9 is_stmt 1 view .LVU25
 133:./tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 200               		.loc 1 133 12 is_stmt 0 view .LVU26
 201 0056 C816      		cp r12,r24
 202 0058 D906      		cpc r13,r25
 203 005a 01F4      		brne .+2
 204 005c 00C0      		rjmp .L5
 148:./tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 205               		.loc 1 148 13 is_stmt 1 view .LVU27
 148:./tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 206               		.loc 1 148 17 is_stmt 0 view .LVU28
 207 005e 8091 0000 		lds r24,debug_config
 148:./tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 208               		.loc 1 148 16 view .LVU29
 209 0062 81FD      		sbrc r24,1
 148:./tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 210               		.loc 1 148 31 is_stmt 1 discriminator 1 view .LVU30
 211 0064 0E94 0000 		call matrix_print
 212               	.LVL11:
 213               	.L6:
 149:./tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 214               		.loc 1 149 13 view .LVU31
 215               	.LBB8:
 149:./tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 216               		.loc 1 149 18 view .LVU32
 149:./tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 217               		.loc 1 149 18 is_stmt 0 view .LVU33
 218               	.LBE8:
 219               	.LBE11:
 129:./tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 220               		.loc 1 129 5 view .LVU34
 221 0068 90E0      		ldi r25,0
 222 006a 80E0      		ldi r24,0
 223               	.LBB12:
 132:./tmk_core/common/keyboard.c ****         if (matrix_change) {
 224               		.loc 1 132 23 view .LVU35
 225 006c CE24      		eor r12,r14
 226               	.LVL12:
 132:./tmk_core/common/keyboard.c ****         if (matrix_change) {
 227               		.loc 1 132 23 view .LVU36
 228 006e DF24      		eor r13,r15
 229               	.LVL13:
 230               	.L10:
 231               	.LBB9:
 232               		.loc 1 150 17 is_stmt 1 view .LVU37
 233               		.loc 1 150 53 is_stmt 0 view .LVU38
 234 0070 3401      		movw r6,r8
 235 0072 082E      		mov r0,r24
 236 0074 00C0      		rjmp 2f
 237               		1:
 238 0076 660C      		lsl r6
 239 0078 771C      		rol r7
 240               		2:
 241 007a 0A94      		dec r0
 242 007c 02F4      		brpl 1b
 243               		.loc 1 150 35 view .LVU39
 244 007e 9601      		movw r18,r12
 245 0080 2621      		and r18,r6
 246 0082 3721      		and r19,r7
 247               		.loc 1 150 20 view .LVU40
 248 0084 232B      		or r18,r19
 249 0086 01F4      		brne .+2
 250 0088 00C0      		rjmp .L7
 151:./tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 251               		.loc 1 151 21 is_stmt 1 view .LVU41
 252               		.loc 1 151 45 is_stmt 0 view .LVU42
 253 008a 8E83      		std Y+6,r24
 254 008c 5F82      		std Y+7,r5
 152:./tmk_core/common/keyboard.c ****                         .key = (keypos_t){ .row = r, .col = c },
 153:./tmk_core/common/keyboard.c ****                         .pressed = (matrix_row & ((matrix_row_t)1<<c)),
 255               		.loc 1 153 48 view .LVU43
 256 008e E620      		and r14,r6
 257               	.LVL14:
 258               		.loc 1 153 48 view .LVU44
 259 0090 F720      		and r15,r7
 260 0092 81E0      		ldi r24,lo8(1)
 261               	.LVL15:
 262               		.loc 1 153 48 view .LVU45
 263 0094 EF28      		or r14,r15
 264 0096 01F4      		brne .L8
 265 0098 80E0      		ldi r24,0
 266               	.L8:
 151:./tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 267               		.loc 1 151 45 view .LVU46
 268 009a 8887      		std Y+8,r24
 154:./tmk_core/common/keyboard.c ****                         .time = (timer_read() | 1) /* time should not be 0 */
 269               		.loc 1 154 34 view .LVU47
 270 009c 0E94 0000 		call timer_read
 271               	.LVL16:
 272               		.loc 1 154 47 view .LVU48
 273 00a0 8160      		ori r24,1
 151:./tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 274               		.loc 1 151 45 view .LVU49
 275 00a2 782F      		mov r23,r24
 276 00a4 9A87      		std Y+10,r25
 277 00a6 8987      		std Y+9,r24
 151:./tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 278               		.loc 1 151 21 view .LVU50
 279 00a8 4E81      		ldd r20,Y+6
 280 00aa 5F81      		ldd r21,Y+7
 281 00ac 6885      		ldd r22,Y+8
 282 00ae 8A85      		ldd r24,Y+10
 283 00b0 0E94 0000 		call action_exec
 284               	.LVL17:
 155:./tmk_core/common/keyboard.c ****                     });
 156:./tmk_core/common/keyboard.c ****                     // record a processed key
 157:./tmk_core/common/keyboard.c ****                     matrix_prev[r] ^= ((matrix_row_t)1<<c);
 285               		.loc 1 157 21 is_stmt 1 view .LVU51
 286               		.loc 1 157 36 is_stmt 0 view .LVU52
 287 00b4 000F      		lsl r16
 288 00b6 111F      		rol r17
 289               	.LVL18:
 290               		.loc 1 157 36 view .LVU53
 291 00b8 F801      		movw r30,r16
 292 00ba E050      		subi r30,lo8(-(matrix_prev.5005))
 293 00bc F040      		sbci r31,hi8(-(matrix_prev.5005))
 294 00be 8081      		ld r24,Z
 295 00c0 9181      		ldd r25,Z+1
 296 00c2 6826      		eor r6,r24
 297 00c4 7926      		eor r7,r25
 298 00c6 7182      		std Z+1,r7
 299 00c8 6082      		st Z,r6
 158:./tmk_core/common/keyboard.c ****                     // process a key per task call
 159:./tmk_core/common/keyboard.c ****                     goto MATRIX_LOOP_END;
 300               		.loc 1 159 21 is_stmt 1 view .LVU54
 301               	.L9:
 302               		.loc 1 159 21 is_stmt 0 view .LVU55
 303               	.LBE9:
 304               	.LBE12:
 160:./tmk_core/common/keyboard.c ****                 }
 161:./tmk_core/common/keyboard.c ****             }
 162:./tmk_core/common/keyboard.c ****         }
 163:./tmk_core/common/keyboard.c ****     }
 164:./tmk_core/common/keyboard.c ****     // call with pseudo tick event when no real key event.
 165:./tmk_core/common/keyboard.c ****     action_exec(TICK);
 166:./tmk_core/common/keyboard.c **** 
 167:./tmk_core/common/keyboard.c **** MATRIX_LOOP_END:
 168:./tmk_core/common/keyboard.c **** 
 169:./tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
 170:./tmk_core/common/keyboard.c ****     // mousekey repeat & acceleration
 171:./tmk_core/common/keyboard.c ****     mousekey_task();
 305               		.loc 1 171 5 is_stmt 1 view .LVU56
 306 00ca 0E94 0000 		call mousekey_task
 307               	.LVL19:
 172:./tmk_core/common/keyboard.c **** #endif
 173:./tmk_core/common/keyboard.c **** 
 174:./tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
 175:./tmk_core/common/keyboard.c ****     ps2_mouse_task();
 176:./tmk_core/common/keyboard.c **** #endif
 177:./tmk_core/common/keyboard.c **** 
 178:./tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
 179:./tmk_core/common/keyboard.c ****     serial_mouse_task();
 180:./tmk_core/common/keyboard.c **** #endif
 181:./tmk_core/common/keyboard.c **** 
 182:./tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
 183:./tmk_core/common/keyboard.c ****     adb_mouse_task();
 184:./tmk_core/common/keyboard.c **** #endif
 185:./tmk_core/common/keyboard.c **** 
 186:./tmk_core/common/keyboard.c **** #ifdef SERIAL_LINK_ENABLE
 187:./tmk_core/common/keyboard.c **** 	serial_link_update();
 188:./tmk_core/common/keyboard.c **** #endif
 189:./tmk_core/common/keyboard.c **** 
 190:./tmk_core/common/keyboard.c **** #ifdef VISUALIZER_ENABLE
 191:./tmk_core/common/keyboard.c ****     visualizer_update(default_layer_state, layer_state, host_keyboard_leds());
 192:./tmk_core/common/keyboard.c **** #endif
 193:./tmk_core/common/keyboard.c **** 
 194:./tmk_core/common/keyboard.c ****     // update LED
 195:./tmk_core/common/keyboard.c ****     if (led_status != host_keyboard_leds()) {
 308               		.loc 1 195 5 view .LVU57
 309               		.loc 1 195 23 is_stmt 0 view .LVU58
 310 00ce 0E94 0000 		call host_keyboard_leds
 311               	.LVL20:
 312               		.loc 1 195 8 view .LVU59
 313 00d2 9091 0000 		lds r25,led_status.5006
 314 00d6 8917      		cp r24,r25
 315 00d8 01F0      		breq .L4
 196:./tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 316               		.loc 1 196 9 is_stmt 1 view .LVU60
 317               		.loc 1 196 22 is_stmt 0 view .LVU61
 318 00da 0E94 0000 		call host_keyboard_leds
 319               	.LVL21:
 320               		.loc 1 196 20 view .LVU62
 321 00de 8093 0000 		sts led_status.5006,r24
 197:./tmk_core/common/keyboard.c ****         keyboard_set_leds(led_status);
 322               		.loc 1 197 9 is_stmt 1 view .LVU63
 323               	.LVL22:
 324               	.LBB13:
 325               	.LBI13:
 198:./tmk_core/common/keyboard.c ****     }
 199:./tmk_core/common/keyboard.c **** }
 200:./tmk_core/common/keyboard.c **** 
 201:./tmk_core/common/keyboard.c **** void keyboard_set_leds(uint8_t leds)
 326               		.loc 1 201 6 view .LVU64
 327               	.LBB14:
 202:./tmk_core/common/keyboard.c **** {
 203:./tmk_core/common/keyboard.c ****     if (debug_keyboard) { debug("keyboard_set_led: "); debug_hex8(leds); debug("\n"); }
 328               		.loc 1 203 5 view .LVU65
 329               		.loc 1 203 54 view .LVU66
 330               		.loc 1 203 72 view .LVU67
 331               		.loc 1 203 85 view .LVU68
 204:./tmk_core/common/keyboard.c ****     led_set(leds);
 332               		.loc 1 204 5 view .LVU69
 333               	/* epilogue start */
 334               	.LBE14:
 335               	.LBE13:
 199:./tmk_core/common/keyboard.c **** 
 336               		.loc 1 199 1 is_stmt 0 view .LVU70
 337 00e2 2A96      		adiw r28,10
 338 00e4 0FB6      		in __tmp_reg__,__SREG__
 339 00e6 F894      		cli
 340 00e8 DEBF      		out __SP_H__,r29
 341 00ea 0FBE      		out __SREG__,__tmp_reg__
 342 00ec CDBF      		out __SP_L__,r28
 343 00ee DF91      		pop r29
 344 00f0 CF91      		pop r28
 345 00f2 1F91      		pop r17
 346 00f4 0F91      		pop r16
 347 00f6 FF90      		pop r15
 348 00f8 EF90      		pop r14
 349 00fa DF90      		pop r13
 350 00fc CF90      		pop r12
 351 00fe BF90      		pop r11
 352 0100 AF90      		pop r10
 353 0102 9F90      		pop r9
 354 0104 8F90      		pop r8
 355 0106 7F90      		pop r7
 356 0108 6F90      		pop r6
 357 010a 5F90      		pop r5
 358               	.LBB16:
 359               	.LBB15:
 360               		.loc 1 204 5 view .LVU71
 361 010c 0C94 0000 		jmp led_set
 362               	.LVL23:
 363               	.L7:
 364               		.loc 1 204 5 view .LVU72
 365 0110 0196      		adiw r24,1
 366               	.LVL24:
 367               		.loc 1 204 5 view .LVU73
 368               	.LBE15:
 369               	.LBE16:
 370               	.LBB17:
 371               	.LBB10:
 149:./tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 372               		.loc 1 149 13 discriminator 2 view .LVU74
 373 0112 8F30      		cpi r24,15
 374 0114 9105      		cpc r25,__zero_reg__
 375 0116 01F0      		breq .+2
 376 0118 00C0      		rjmp .L10
 377               	.LVL25:
 378               	.L5:
 149:./tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 379               		.loc 1 149 13 discriminator 2 view .LVU75
 380 011a 0F5F      		subi r16,-1
 381 011c 1F4F      		sbci r17,-1
 382               	.LVL26:
 149:./tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 383               		.loc 1 149 13 discriminator 2 view .LVU76
 384               	.LBE10:
 130:./tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 385               		.loc 1 130 5 view .LVU77
 386 011e 0930      		cpi r16,9
 387 0120 1105      		cpc r17,__zero_reg__
 388 0122 01F0      		breq .+2
 389 0124 00C0      		rjmp .L11
 390               	.LBE17:
 165:./tmk_core/common/keyboard.c **** 
 391               		.loc 1 165 5 is_stmt 1 view .LVU78
 165:./tmk_core/common/keyboard.c **** 
 392               		.loc 1 165 17 is_stmt 0 view .LVU79
 393 0126 8FEF      		ldi r24,lo8(-1)
 394 0128 8983      		std Y+1,r24
 395 012a 8A83      		std Y+2,r24
 396 012c 1B82      		std Y+3,__zero_reg__
 397 012e 0E94 0000 		call timer_read
 398               	.LVL27:
 399 0132 8160      		ori r24,1
 400 0134 782F      		mov r23,r24
 401 0136 9D83      		std Y+5,r25
 402 0138 8C83      		std Y+4,r24
 165:./tmk_core/common/keyboard.c **** 
 403               		.loc 1 165 5 view .LVU80
 404 013a 4981      		ldd r20,Y+1
 405 013c 5A81      		ldd r21,Y+2
 406 013e 6B81      		ldd r22,Y+3
 407 0140 8D81      		ldd r24,Y+5
 408 0142 0E94 0000 		call action_exec
 409               	.LVL28:
 410 0146 00C0      		rjmp .L9
 411               	.LVL29:
 412               	.L4:
 413               	/* epilogue start */
 199:./tmk_core/common/keyboard.c **** 
 414               		.loc 1 199 1 view .LVU81
 415 0148 2A96      		adiw r28,10
 416 014a 0FB6      		in __tmp_reg__,__SREG__
 417 014c F894      		cli
 418 014e DEBF      		out __SP_H__,r29
 419 0150 0FBE      		out __SREG__,__tmp_reg__
 420 0152 CDBF      		out __SP_L__,r28
 421 0154 DF91      		pop r29
 422 0156 CF91      		pop r28
 423 0158 1F91      		pop r17
 424 015a 0F91      		pop r16
 425 015c FF90      		pop r15
 426 015e EF90      		pop r14
 427 0160 DF90      		pop r13
 428 0162 CF90      		pop r12
 429 0164 BF90      		pop r11
 430 0166 AF90      		pop r10
 431 0168 9F90      		pop r9
 432 016a 8F90      		pop r8
 433 016c 7F90      		pop r7
 434 016e 6F90      		pop r6
 435 0170 5F90      		pop r5
 436 0172 0895      		ret
 437               		.cfi_endproc
 438               	.LFE106:
 440               		.section	.text.keyboard_set_leds,"ax",@progbits
 441               	.global	keyboard_set_leds
 443               	keyboard_set_leds:
 444               	.LVL30:
 445               	.LFB107:
 202:./tmk_core/common/keyboard.c ****     if (debug_keyboard) { debug("keyboard_set_led: "); debug_hex8(leds); debug("\n"); }
 446               		.loc 1 202 1 is_stmt 1 view -0
 447               		.cfi_startproc
 448               	/* prologue: function */
 449               	/* frame size = 0 */
 450               	/* stack size = 0 */
 451               	.L__stack_usage = 0
 203:./tmk_core/common/keyboard.c ****     led_set(leds);
 452               		.loc 1 203 5 view .LVU83
 203:./tmk_core/common/keyboard.c ****     led_set(leds);
 453               		.loc 1 203 54 view .LVU84
 203:./tmk_core/common/keyboard.c ****     led_set(leds);
 454               		.loc 1 203 72 view .LVU85
 203:./tmk_core/common/keyboard.c ****     led_set(leds);
 455               		.loc 1 203 85 view .LVU86
 456               		.loc 1 204 5 view .LVU87
 457 0000 0C94 0000 		jmp led_set
 458               	.LVL31:
 459               		.loc 1 204 5 is_stmt 0 view .LVU88
 460               		.cfi_endproc
 461               	.LFE107:
 463               		.section	.bss.led_status.5006,"aw",@nobits
 466               	led_status.5006:
 467 0000 00        		.zero	1
 468               		.section	.bss.matrix_prev.5005,"aw",@nobits
 471               	matrix_prev.5005:
 472 0000 0000 0000 		.zero	18
 472      0000 0000 
 472      0000 0000 
 472      0000 0000 
 472      0000 
 473               		.text
 474               	.Letext0:
 475               		.file 2 "/usr/avr/include/stdint.h"
 476               		.file 3 "./tmk_core/common/keyboard.h"
 477               		.file 4 "./tmk_core/common/matrix.h"
 478               		.file 5 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../StdRequestType.h"
 479               		.file 6 "./tmk_core/common/action.h"
 480               		.file 7 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../DeviceStandardReq.h"
 481               		.file 8 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/USBTask.h"
 482               		.file 9 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/HostStandardReq.h"
 483               		.file 10 "/usr/avr/include/stdio.h"
 484               		.file 11 "./tmk_core/common/host.h"
 485               		.file 12 "./tmk_core/common/debug.h"
 486               		.file 13 "./quantum/keycode_config.h"
 487               		.file 14 "./quantum/keymap.h"
 488               		.file 15 "./tmk_core/common/timer.h"
 489               		.file 16 "./tmk_core/common/command.h"
 490               		.file 17 "./tmk_core/common/action_layer.h"
 491               		.file 18 "./tmk_core/common/mousekey.h"
 492               		.file 19 "./tmk_core/common/led.h"
 493               		.file 20 "./tmk_core/common/bootmagic.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keyboard.c
     /tmp/ccindbZ7.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccindbZ7.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccindbZ7.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccindbZ7.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/ccindbZ7.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccindbZ7.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccindbZ7.s:14     .text.matrix_setup:0000000000000000 matrix_setup
     /tmp/ccindbZ7.s:32     .text.keyboard_setup:0000000000000000 keyboard_setup
     /tmp/ccindbZ7.s:49     .text.keyboard_init:0000000000000000 keyboard_init
     /tmp/ccindbZ7.s:72     .text.keyboard_task:0000000000000000 keyboard_task
     /tmp/ccindbZ7.s:471    .bss.matrix_prev.5005:0000000000000000 matrix_prev.5005
     /tmp/ccindbZ7.s:466    .bss.led_status.5006:0000000000000000 led_status.5006
     /tmp/ccindbZ7.s:443    .text.keyboard_set_leds:0000000000000000 keyboard_set_leds

UNDEFINED SYMBOLS
timer_init
matrix_init
bootmagic
matrix_scan
matrix_get_row
debug_config
matrix_print
timer_read
action_exec
mousekey_task
host_keyboard_leds
led_set
__do_clear_bss
