   1               		.file	"timer.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.text.timer_init,"ax",@progbits
  12               	.global	timer_init
  14               	timer_init:
  15               	.LFB5:
  16               		.file 1 "./tmk_core/common/avr/timer.c"
   1:./tmk_core/common/avr/timer.c **** /*
   2:./tmk_core/common/avr/timer.c **** Copyright 2011 Jun Wako <wakojun@gmail.com>
   3:./tmk_core/common/avr/timer.c **** 
   4:./tmk_core/common/avr/timer.c **** This program is free software: you can redistribute it and/or modify
   5:./tmk_core/common/avr/timer.c **** it under the terms of the GNU General Public License as published by
   6:./tmk_core/common/avr/timer.c **** the Free Software Foundation, either version 2 of the License, or
   7:./tmk_core/common/avr/timer.c **** (at your option) any later version.
   8:./tmk_core/common/avr/timer.c **** 
   9:./tmk_core/common/avr/timer.c **** This program is distributed in the hope that it will be useful,
  10:./tmk_core/common/avr/timer.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:./tmk_core/common/avr/timer.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:./tmk_core/common/avr/timer.c **** GNU General Public License for more details.
  13:./tmk_core/common/avr/timer.c **** 
  14:./tmk_core/common/avr/timer.c **** You should have received a copy of the GNU General Public License
  15:./tmk_core/common/avr/timer.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:./tmk_core/common/avr/timer.c **** */
  17:./tmk_core/common/avr/timer.c **** 
  18:./tmk_core/common/avr/timer.c **** #include <avr/io.h>
  19:./tmk_core/common/avr/timer.c **** #include <avr/interrupt.h>
  20:./tmk_core/common/avr/timer.c **** #include <util/atomic.h>
  21:./tmk_core/common/avr/timer.c **** #include <stdint.h>
  22:./tmk_core/common/avr/timer.c **** #include "timer_avr.h"
  23:./tmk_core/common/avr/timer.c **** #include "timer.h"
  24:./tmk_core/common/avr/timer.c **** 
  25:./tmk_core/common/avr/timer.c **** 
  26:./tmk_core/common/avr/timer.c **** // counter resolution 1ms
  27:./tmk_core/common/avr/timer.c **** // NOTE: union { uint32_t timer32; struct { uint16_t dummy; uint16_t timer16; }}
  28:./tmk_core/common/avr/timer.c **** volatile uint32_t timer_count;
  29:./tmk_core/common/avr/timer.c **** 
  30:./tmk_core/common/avr/timer.c **** void timer_init(void)
  31:./tmk_core/common/avr/timer.c **** {
  17               		.loc 1 31 1 view -0
  18               		.cfi_startproc
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  32:./tmk_core/common/avr/timer.c ****     // Timer0 CTC mode
  33:./tmk_core/common/avr/timer.c ****     TCCR0A = 0x02;
  23               		.loc 1 33 5 view .LVU1
  24               		.loc 1 33 12 is_stmt 0 view .LVU2
  25 0000 82E0      		ldi r24,lo8(2)
  26 0002 84BD      		out 0x24,r24
  34:./tmk_core/common/avr/timer.c **** 
  35:./tmk_core/common/avr/timer.c **** #if TIMER_PRESCALER == 1
  36:./tmk_core/common/avr/timer.c ****     TCCR0B = 0x01;
  37:./tmk_core/common/avr/timer.c **** #elif TIMER_PRESCALER == 8
  38:./tmk_core/common/avr/timer.c ****     TCCR0B = 0x02;
  39:./tmk_core/common/avr/timer.c **** #elif TIMER_PRESCALER == 64
  40:./tmk_core/common/avr/timer.c ****     TCCR0B = 0x03;
  27               		.loc 1 40 5 is_stmt 1 view .LVU3
  28               		.loc 1 40 12 is_stmt 0 view .LVU4
  29 0004 93E0      		ldi r25,lo8(3)
  30 0006 95BD      		out 0x25,r25
  41:./tmk_core/common/avr/timer.c **** #elif TIMER_PRESCALER == 256
  42:./tmk_core/common/avr/timer.c ****     TCCR0B = 0x04;
  43:./tmk_core/common/avr/timer.c **** #elif TIMER_PRESCALER == 1024
  44:./tmk_core/common/avr/timer.c ****     TCCR0B = 0x05;
  45:./tmk_core/common/avr/timer.c **** #else
  46:./tmk_core/common/avr/timer.c **** #   error "Timer prescaler value is NOT vaild."
  47:./tmk_core/common/avr/timer.c **** #endif
  48:./tmk_core/common/avr/timer.c **** 
  49:./tmk_core/common/avr/timer.c ****     OCR0A = TIMER_RAW_TOP;
  31               		.loc 1 49 5 is_stmt 1 view .LVU5
  32               		.loc 1 49 11 is_stmt 0 view .LVU6
  33 0008 9AEF      		ldi r25,lo8(-6)
  34 000a 97BD      		out 0x27,r25
  50:./tmk_core/common/avr/timer.c ****     TIMSK0 = (1<<OCIE0A);
  35               		.loc 1 50 5 is_stmt 1 view .LVU7
  36               		.loc 1 50 12 is_stmt 0 view .LVU8
  37 000c 8093 6E00 		sts 110,r24
  38               	/* epilogue start */
  51:./tmk_core/common/avr/timer.c **** }
  39               		.loc 1 51 1 view .LVU9
  40 0010 0895      		ret
  41               		.cfi_endproc
  42               	.LFE5:
  44               		.section	.text.timer_clear,"ax",@progbits
  45               	.global	timer_clear
  47               	timer_clear:
  48               	.LFB6:
  52:./tmk_core/common/avr/timer.c **** 
  53:./tmk_core/common/avr/timer.c **** inline
  54:./tmk_core/common/avr/timer.c **** void timer_clear(void)
  55:./tmk_core/common/avr/timer.c **** {
  49               		.loc 1 55 1 is_stmt 1 view -0
  50               		.cfi_startproc
  51               	/* prologue: function */
  52               	/* frame size = 0 */
  53               	/* stack size = 0 */
  54               	.L__stack_usage = 0
  56:./tmk_core/common/avr/timer.c ****   ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
  55               		.loc 1 56 3 view .LVU11
  56               	.LBB22:
  57               		.loc 1 56 3 view .LVU12
  58 0000 8FB7      		in r24,__SREG__
  59               	.LVL0:
  60               	.LBB23:
  61               	.LBI23:
  62               		.file 2 "/usr/avr/include/util/atomic.h"
   1:/usr/avr/include/util/atomic.h **** /* Copyright (c) 2007 Dean Camera
   2:/usr/avr/include/util/atomic.h ****    All rights reserved.
   3:/usr/avr/include/util/atomic.h **** 
   4:/usr/avr/include/util/atomic.h ****    Redistribution and use in source and binary forms, with or without
   5:/usr/avr/include/util/atomic.h ****    modification, are permitted provided that the following conditions are met:
   6:/usr/avr/include/util/atomic.h **** 
   7:/usr/avr/include/util/atomic.h ****    * Redistributions of source code must retain the above copyright
   8:/usr/avr/include/util/atomic.h ****      notice, this list of conditions and the following disclaimer.
   9:/usr/avr/include/util/atomic.h **** 
  10:/usr/avr/include/util/atomic.h ****    * Redistributions in binary form must reproduce the above copyright
  11:/usr/avr/include/util/atomic.h ****      notice, this list of conditions and the following disclaimer in
  12:/usr/avr/include/util/atomic.h ****      the documentation and/or other materials provided with the
  13:/usr/avr/include/util/atomic.h ****      distribution.
  14:/usr/avr/include/util/atomic.h **** 
  15:/usr/avr/include/util/atomic.h ****    * Neither the name of the copyright holders nor the names of
  16:/usr/avr/include/util/atomic.h ****      contributors may be used to endorse or promote products derived
  17:/usr/avr/include/util/atomic.h ****      from this software without specific prior written permission.
  18:/usr/avr/include/util/atomic.h **** 
  19:/usr/avr/include/util/atomic.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  20:/usr/avr/include/util/atomic.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  21:/usr/avr/include/util/atomic.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  22:/usr/avr/include/util/atomic.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  23:/usr/avr/include/util/atomic.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  24:/usr/avr/include/util/atomic.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  25:/usr/avr/include/util/atomic.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  26:/usr/avr/include/util/atomic.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  27:/usr/avr/include/util/atomic.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  28:/usr/avr/include/util/atomic.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  29:/usr/avr/include/util/atomic.h ****   POSSIBILITY OF SUCH DAMAGE.
  30:/usr/avr/include/util/atomic.h **** */
  31:/usr/avr/include/util/atomic.h **** 
  32:/usr/avr/include/util/atomic.h **** /* $Id: atomic.h 2158 2010-06-10 15:48:28Z joerg_wunsch $ */
  33:/usr/avr/include/util/atomic.h **** 
  34:/usr/avr/include/util/atomic.h **** #ifndef _UTIL_ATOMIC_H_
  35:/usr/avr/include/util/atomic.h **** #define _UTIL_ATOMIC_H_ 1
  36:/usr/avr/include/util/atomic.h **** 
  37:/usr/avr/include/util/atomic.h **** #include <avr/io.h>
  38:/usr/avr/include/util/atomic.h **** #include <avr/interrupt.h>
  39:/usr/avr/include/util/atomic.h **** 
  40:/usr/avr/include/util/atomic.h **** #if !defined(__DOXYGEN__)
  41:/usr/avr/include/util/atomic.h **** /* Internal helper functions. */
  42:/usr/avr/include/util/atomic.h **** static __inline__ uint8_t __iSeiRetVal(void)
  43:/usr/avr/include/util/atomic.h **** {
  44:/usr/avr/include/util/atomic.h ****     sei();
  45:/usr/avr/include/util/atomic.h ****     return 1;
  46:/usr/avr/include/util/atomic.h **** }
  47:/usr/avr/include/util/atomic.h **** 
  48:/usr/avr/include/util/atomic.h **** static __inline__ uint8_t __iCliRetVal(void)
  63               		.loc 2 48 27 view .LVU13
  64               	.LBB24:
  49:/usr/avr/include/util/atomic.h **** {
  50:/usr/avr/include/util/atomic.h ****     cli();
  65               		.loc 2 50 5 view .LVU14
  66               	/* #APP */
  67               	 ;  50 "/usr/avr/include/util/atomic.h" 1
  68 0002 F894      		cli
  69               	 ;  0 "" 2
  51:/usr/avr/include/util/atomic.h ****     return 1;
  70               		.loc 2 51 5 view .LVU15
  71               	.LVL1:
  72               		.loc 2 51 5 is_stmt 0 view .LVU16
  73               	/* #NOAPP */
  74               	.LBE24:
  75               	.LBE23:
  76               		.loc 1 56 3 is_stmt 1 view .LVU17
  57:./tmk_core/common/avr/timer.c ****     timer_count = 0;
  77               		.loc 1 57 5 view .LVU18
  78               		.loc 1 57 17 is_stmt 0 view .LVU19
  79 0004 1092 0000 		sts timer_count,__zero_reg__
  80 0008 1092 0000 		sts timer_count+1,__zero_reg__
  81 000c 1092 0000 		sts timer_count+2,__zero_reg__
  82 0010 1092 0000 		sts timer_count+3,__zero_reg__
  56:./tmk_core/common/avr/timer.c ****     timer_count = 0;
  83               		.loc 1 56 3 is_stmt 1 view .LVU20
  84               	.LVL2:
  56:./tmk_core/common/avr/timer.c ****     timer_count = 0;
  85               		.loc 1 56 3 view .LVU21
  86               	.LBB25:
  87               	.LBI25:
  52:/usr/avr/include/util/atomic.h **** }
  53:/usr/avr/include/util/atomic.h **** 
  54:/usr/avr/include/util/atomic.h **** static __inline__ void __iSeiParam(const uint8_t *__s)
  55:/usr/avr/include/util/atomic.h **** {
  56:/usr/avr/include/util/atomic.h ****     sei();
  57:/usr/avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
  58:/usr/avr/include/util/atomic.h ****     (void)__s;
  59:/usr/avr/include/util/atomic.h **** }
  60:/usr/avr/include/util/atomic.h **** 
  61:/usr/avr/include/util/atomic.h **** static __inline__ void __iCliParam(const uint8_t *__s)
  62:/usr/avr/include/util/atomic.h **** {
  63:/usr/avr/include/util/atomic.h ****     cli();
  64:/usr/avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
  65:/usr/avr/include/util/atomic.h ****     (void)__s;
  66:/usr/avr/include/util/atomic.h **** }
  67:/usr/avr/include/util/atomic.h **** 
  68:/usr/avr/include/util/atomic.h **** static __inline__ void __iRestore(const  uint8_t *__s)
  88               		.loc 2 68 24 view .LVU22
  89               	.LBB26:
  69:/usr/avr/include/util/atomic.h **** {
  70:/usr/avr/include/util/atomic.h ****     SREG = *__s;
  90               		.loc 2 70 5 view .LVU23
  91               		.loc 2 70 10 is_stmt 0 view .LVU24
  92 0014 8FBF      		out __SREG__,r24
  71:/usr/avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
  93               		.loc 2 71 5 is_stmt 1 view .LVU25
  94               	.LVL3:
  95               	/* epilogue start */
  96               		.loc 2 71 5 is_stmt 0 view .LVU26
  97               	.LBE26:
  98               	.LBE25:
  99               	.LBE22:
  58:./tmk_core/common/avr/timer.c ****   }
  59:./tmk_core/common/avr/timer.c **** }
 100               		.loc 1 59 1 view .LVU27
 101 0016 0895      		ret
 102               		.cfi_endproc
 103               	.LFE6:
 105               		.section	.text.timer_read,"ax",@progbits
 106               	.global	timer_read
 108               	timer_read:
 109               	.LFB7:
  60:./tmk_core/common/avr/timer.c **** 
  61:./tmk_core/common/avr/timer.c **** inline
  62:./tmk_core/common/avr/timer.c **** uint16_t timer_read(void)
  63:./tmk_core/common/avr/timer.c **** {
 110               		.loc 1 63 1 is_stmt 1 view -0
 111               		.cfi_startproc
 112               	/* prologue: function */
 113               	/* frame size = 0 */
 114               	/* stack size = 0 */
 115               	.L__stack_usage = 0
  64:./tmk_core/common/avr/timer.c ****     uint32_t t;
 116               		.loc 1 64 5 view .LVU29
  65:./tmk_core/common/avr/timer.c **** 
  66:./tmk_core/common/avr/timer.c ****     ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
 117               		.loc 1 66 5 view .LVU30
 118               	.LBB32:
 119               		.loc 1 66 5 view .LVU31
 120 0000 2FB7      		in r18,__SREG__
 121               	.LVL4:
 122               	.LBB33:
 123               	.LBI33:
  48:/usr/avr/include/util/atomic.h **** {
 124               		.loc 2 48 27 view .LVU32
 125               	.LBB34:
  50:/usr/avr/include/util/atomic.h ****     return 1;
 126               		.loc 2 50 5 view .LVU33
 127               	/* #APP */
 128               	 ;  50 "/usr/avr/include/util/atomic.h" 1
 129 0002 F894      		cli
 130               	 ;  0 "" 2
  51:/usr/avr/include/util/atomic.h **** }
 131               		.loc 2 51 5 view .LVU34
 132               	.LVL5:
  51:/usr/avr/include/util/atomic.h **** }
 133               		.loc 2 51 5 is_stmt 0 view .LVU35
 134               	/* #NOAPP */
 135               	.LBE34:
 136               	.LBE33:
 137               		.loc 1 66 5 is_stmt 1 view .LVU36
  67:./tmk_core/common/avr/timer.c ****       t = timer_count;
 138               		.loc 1 67 7 view .LVU37
 139               		.loc 1 67 9 is_stmt 0 view .LVU38
 140 0004 8091 0000 		lds r24,timer_count
 141 0008 9091 0000 		lds r25,timer_count+1
 142 000c A091 0000 		lds r26,timer_count+2
 143 0010 B091 0000 		lds r27,timer_count+3
  66:./tmk_core/common/avr/timer.c ****       t = timer_count;
 144               		.loc 1 66 5 is_stmt 1 view .LVU39
 145               	.LVL6:
  66:./tmk_core/common/avr/timer.c ****       t = timer_count;
 146               		.loc 1 66 5 view .LVU40
 147               	.LBB35:
 148               	.LBI35:
  68:/usr/avr/include/util/atomic.h **** {
 149               		.loc 2 68 24 view .LVU41
 150               	.LBB36:
  70:/usr/avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
 151               		.loc 2 70 5 view .LVU42
  70:/usr/avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
 152               		.loc 2 70 10 is_stmt 0 view .LVU43
 153 0014 2FBF      		out __SREG__,r18
 154               		.loc 2 71 5 is_stmt 1 view .LVU44
 155               	.LVL7:
 156               		.loc 2 71 5 is_stmt 0 view .LVU45
 157               	.LBE36:
 158               	.LBE35:
 159               	.LBE32:
  68:./tmk_core/common/avr/timer.c ****     }
  69:./tmk_core/common/avr/timer.c **** 
  70:./tmk_core/common/avr/timer.c ****     return (t & 0xFFFF);
 160               		.loc 1 70 5 is_stmt 1 view .LVU46
 161               	/* epilogue start */
  71:./tmk_core/common/avr/timer.c **** }
 162               		.loc 1 71 1 is_stmt 0 view .LVU47
 163 0016 0895      		ret
 164               		.cfi_endproc
 165               	.LFE7:
 167               		.section	.text.timer_read32,"ax",@progbits
 168               	.global	timer_read32
 170               	timer_read32:
 171               	.LFB8:
  72:./tmk_core/common/avr/timer.c **** 
  73:./tmk_core/common/avr/timer.c **** inline
  74:./tmk_core/common/avr/timer.c **** uint32_t timer_read32(void)
  75:./tmk_core/common/avr/timer.c **** {
 172               		.loc 1 75 1 is_stmt 1 view -0
 173               		.cfi_startproc
 174 0000 CF93      		push r28
 175               	.LCFI0:
 176               		.cfi_def_cfa_offset 3
 177               		.cfi_offset 28, -2
 178 0002 DF93      		push r29
 179               	.LCFI1:
 180               		.cfi_def_cfa_offset 4
 181               		.cfi_offset 29, -3
 182 0004 00D0      		rcall .
 183 0006 00D0      		rcall .
 184               	.LCFI2:
 185               		.cfi_def_cfa_offset 8
 186 0008 CDB7      		in r28,__SP_L__
 187 000a DEB7      		in r29,__SP_H__
 188               	.LCFI3:
 189               		.cfi_def_cfa_register 28
 190               	/* prologue: function */
 191               	/* frame size = 4 */
 192               	/* stack size = 6 */
 193               	.L__stack_usage = 6
  76:./tmk_core/common/avr/timer.c ****     uint32_t t;
 194               		.loc 1 76 5 view .LVU49
  77:./tmk_core/common/avr/timer.c **** 
  78:./tmk_core/common/avr/timer.c ****     ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
 195               		.loc 1 78 5 view .LVU50
 196               	.LBB42:
 197               		.loc 1 78 5 view .LVU51
 198 000c 8FB7      		in r24,__SREG__
 199               	.LVL8:
 200               	.LBB43:
 201               	.LBI43:
  48:/usr/avr/include/util/atomic.h **** {
 202               		.loc 2 48 27 view .LVU52
 203               	.LBB44:
  50:/usr/avr/include/util/atomic.h ****     return 1;
 204               		.loc 2 50 5 view .LVU53
 205               	/* #APP */
 206               	 ;  50 "/usr/avr/include/util/atomic.h" 1
 207 000e F894      		cli
 208               	 ;  0 "" 2
  51:/usr/avr/include/util/atomic.h **** }
 209               		.loc 2 51 5 view .LVU54
 210               	.LVL9:
  51:/usr/avr/include/util/atomic.h **** }
 211               		.loc 2 51 5 is_stmt 0 view .LVU55
 212               	/* #NOAPP */
 213               	.LBE44:
 214               	.LBE43:
 215               		.loc 1 78 5 is_stmt 1 view .LVU56
  79:./tmk_core/common/avr/timer.c ****       t = timer_count;
 216               		.loc 1 79 7 view .LVU57
 217               		.loc 1 79 9 is_stmt 0 view .LVU58
 218 0010 2091 0000 		lds r18,timer_count
 219 0014 3091 0000 		lds r19,timer_count+1
 220 0018 4091 0000 		lds r20,timer_count+2
 221 001c 5091 0000 		lds r21,timer_count+3
 222 0020 2983      		std Y+1,r18
 223 0022 3A83      		std Y+2,r19
 224 0024 4B83      		std Y+3,r20
 225 0026 5C83      		std Y+4,r21
 226               	.LVL10:
  78:./tmk_core/common/avr/timer.c ****       t = timer_count;
 227               		.loc 1 78 5 is_stmt 1 view .LVU59
  78:./tmk_core/common/avr/timer.c ****       t = timer_count;
 228               		.loc 1 78 5 view .LVU60
 229               	.LBB45:
 230               	.LBI45:
  68:/usr/avr/include/util/atomic.h **** {
 231               		.loc 2 68 24 view .LVU61
 232               	.LBB46:
  70:/usr/avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
 233               		.loc 2 70 5 view .LVU62
  70:/usr/avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
 234               		.loc 2 70 10 is_stmt 0 view .LVU63
 235 0028 8FBF      		out __SREG__,r24
 236               		.loc 2 71 5 is_stmt 1 view .LVU64
 237               	.LVL11:
 238               		.loc 2 71 5 is_stmt 0 view .LVU65
 239               	.LBE46:
 240               	.LBE45:
 241               	.LBE42:
  80:./tmk_core/common/avr/timer.c ****     }
  81:./tmk_core/common/avr/timer.c **** 
  82:./tmk_core/common/avr/timer.c ****     return t;
 242               		.loc 1 82 5 is_stmt 1 view .LVU66
  83:./tmk_core/common/avr/timer.c **** }
 243               		.loc 1 83 1 is_stmt 0 view .LVU67
 244 002a 6981      		ldd r22,Y+1
 245 002c 7A81      		ldd r23,Y+2
 246 002e 8B81      		ldd r24,Y+3
 247 0030 9C81      		ldd r25,Y+4
 248               	/* epilogue start */
 249 0032 0F90      		pop __tmp_reg__
 250 0034 0F90      		pop __tmp_reg__
 251 0036 0F90      		pop __tmp_reg__
 252 0038 0F90      		pop __tmp_reg__
 253 003a DF91      		pop r29
 254 003c CF91      		pop r28
 255 003e 0895      		ret
 256               		.cfi_endproc
 257               	.LFE8:
 259               		.section	.text.timer_elapsed,"ax",@progbits
 260               	.global	timer_elapsed
 262               	timer_elapsed:
 263               	.LVL12:
 264               	.LFB9:
  84:./tmk_core/common/avr/timer.c **** 
  85:./tmk_core/common/avr/timer.c **** inline
  86:./tmk_core/common/avr/timer.c **** uint16_t timer_elapsed(uint16_t last)
  87:./tmk_core/common/avr/timer.c **** {
 265               		.loc 1 87 1 is_stmt 1 view -0
 266               		.cfi_startproc
 267               		.loc 1 87 1 is_stmt 0 view .LVU69
 268 0000 CF92      		push r12
 269               	.LCFI4:
 270               		.cfi_def_cfa_offset 3
 271               		.cfi_offset 12, -2
 272 0002 DF92      		push r13
 273               	.LCFI5:
 274               		.cfi_def_cfa_offset 4
 275               		.cfi_offset 13, -3
 276 0004 EF92      		push r14
 277               	.LCFI6:
 278               		.cfi_def_cfa_offset 5
 279               		.cfi_offset 14, -4
 280 0006 FF92      		push r15
 281               	.LCFI7:
 282               		.cfi_def_cfa_offset 6
 283               		.cfi_offset 15, -5
 284               	/* prologue: function */
 285               	/* frame size = 0 */
 286               	/* stack size = 4 */
 287               	.L__stack_usage = 4
 288 0008 9C01      		movw r18,r24
  88:./tmk_core/common/avr/timer.c ****     uint32_t t;
 289               		.loc 1 88 5 is_stmt 1 view .LVU70
  89:./tmk_core/common/avr/timer.c **** 
  90:./tmk_core/common/avr/timer.c ****     ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
 290               		.loc 1 90 5 view .LVU71
 291               	.LBB52:
 292               		.loc 1 90 5 view .LVU72
 293 000a 4FB7      		in r20,__SREG__
 294               	.LVL13:
 295               	.LBB53:
 296               	.LBI53:
  48:/usr/avr/include/util/atomic.h **** {
 297               		.loc 2 48 27 view .LVU73
 298               	.LBB54:
  50:/usr/avr/include/util/atomic.h ****     return 1;
 299               		.loc 2 50 5 view .LVU74
 300               	/* #APP */
 301               	 ;  50 "/usr/avr/include/util/atomic.h" 1
 302 000c F894      		cli
 303               	 ;  0 "" 2
  51:/usr/avr/include/util/atomic.h **** }
 304               		.loc 2 51 5 view .LVU75
 305               	.LVL14:
  51:/usr/avr/include/util/atomic.h **** }
 306               		.loc 2 51 5 is_stmt 0 view .LVU76
 307               	/* #NOAPP */
 308               	.LBE54:
 309               	.LBE53:
 310               		.loc 1 90 5 is_stmt 1 view .LVU77
  91:./tmk_core/common/avr/timer.c ****       t = timer_count;
 311               		.loc 1 91 7 view .LVU78
 312               		.loc 1 91 9 is_stmt 0 view .LVU79
 313 000e 8091 0000 		lds r24,timer_count
 314 0012 9091 0000 		lds r25,timer_count+1
 315 0016 A091 0000 		lds r26,timer_count+2
 316 001a B091 0000 		lds r27,timer_count+3
 317               	.LVL15:
  90:./tmk_core/common/avr/timer.c ****       t = timer_count;
 318               		.loc 1 90 5 is_stmt 1 view .LVU80
  90:./tmk_core/common/avr/timer.c ****       t = timer_count;
 319               		.loc 1 90 5 view .LVU81
 320               	.LBB55:
 321               	.LBI55:
  68:/usr/avr/include/util/atomic.h **** {
 322               		.loc 2 68 24 view .LVU82
 323               	.LBB56:
  70:/usr/avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
 324               		.loc 2 70 5 view .LVU83
  70:/usr/avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
 325               		.loc 2 70 10 is_stmt 0 view .LVU84
 326 001e 4FBF      		out __SREG__,r20
 327               		.loc 2 71 5 is_stmt 1 view .LVU85
 328               	.LVL16:
 329               		.loc 2 71 5 is_stmt 0 view .LVU86
 330               	.LBE56:
 331               	.LBE55:
 332               	.LBE52:
  92:./tmk_core/common/avr/timer.c ****     }
  93:./tmk_core/common/avr/timer.c **** 
  94:./tmk_core/common/avr/timer.c ****     return TIMER_DIFF_16((t & 0xFFFF), last);
 333               		.loc 1 94 5 is_stmt 1 view .LVU87
 334               		.loc 1 94 12 is_stmt 0 view .LVU88
 335 0020 6C01      		movw r12,r24
 336 0022 7D01      		movw r14,r26
 337 0024 EE24      		clr r14
 338 0026 FF24      		clr r15
 339 0028 A901      		movw r20,r18
 340 002a 70E0      		ldi r23,0
 341 002c 60E0      		ldi r22,0
 342 002e C416      		cp r12,r20
 343 0030 D506      		cpc r13,r21
 344 0032 E606      		cpc r14,r22
 345 0034 F706      		cpc r15,r23
 346 0036 00F0      		brlo .L6
 347               	.LVL17:
 348               	.L8:
 349               		.loc 1 94 12 discriminator 2 view .LVU89
 350 0038 821B      		sub r24,r18
 351 003a 930B      		sbc r25,r19
 352               	/* epilogue start */
  95:./tmk_core/common/avr/timer.c **** }
 353               		.loc 1 95 1 discriminator 2 view .LVU90
 354 003c FF90      		pop r15
 355 003e EF90      		pop r14
 356 0040 DF90      		pop r13
 357 0042 CF90      		pop r12
 358 0044 0895      		ret
 359               	.LVL18:
 360               	.L6:
  94:./tmk_core/common/avr/timer.c **** }
 361               		.loc 1 94 12 discriminator 2 view .LVU91
 362 0046 0197      		sbiw r24,1
 363               	.LVL19:
  94:./tmk_core/common/avr/timer.c **** }
 364               		.loc 1 94 12 discriminator 2 view .LVU92
 365 0048 00C0      		rjmp .L8
 366               		.cfi_endproc
 367               	.LFE9:
 369               		.section	.text.timer_elapsed32,"ax",@progbits
 370               	.global	timer_elapsed32
 372               	timer_elapsed32:
 373               	.LVL20:
 374               	.LFB10:
  96:./tmk_core/common/avr/timer.c **** 
  97:./tmk_core/common/avr/timer.c **** inline
  98:./tmk_core/common/avr/timer.c **** uint32_t timer_elapsed32(uint32_t last)
  99:./tmk_core/common/avr/timer.c **** {
 375               		.loc 1 99 1 is_stmt 1 view -0
 376               		.cfi_startproc
 377               		.loc 1 99 1 is_stmt 0 view .LVU94
 378 0000 0F93      		push r16
 379               	.LCFI8:
 380               		.cfi_def_cfa_offset 3
 381               		.cfi_offset 16, -2
 382 0002 1F93      		push r17
 383               	.LCFI9:
 384               		.cfi_def_cfa_offset 4
 385               		.cfi_offset 17, -3
 386 0004 CF93      		push r28
 387               	.LCFI10:
 388               		.cfi_def_cfa_offset 5
 389               		.cfi_offset 28, -4
 390 0006 DF93      		push r29
 391               	.LCFI11:
 392               		.cfi_def_cfa_offset 6
 393               		.cfi_offset 29, -5
 394 0008 00D0      		rcall .
 395 000a 00D0      		rcall .
 396               	.LCFI12:
 397               		.cfi_def_cfa_offset 10
 398 000c CDB7      		in r28,__SP_L__
 399 000e DEB7      		in r29,__SP_H__
 400               	.LCFI13:
 401               		.cfi_def_cfa_register 28
 402               	/* prologue: function */
 403               	/* frame size = 4 */
 404               	/* stack size = 8 */
 405               	.L__stack_usage = 8
 406 0010 462F      		mov r20,r22
 407 0012 572F      		mov r21,r23
 408 0014 BC01      		movw r22,r24
 409               	.LVL21:
 100:./tmk_core/common/avr/timer.c ****     uint32_t t;
 410               		.loc 1 100 5 is_stmt 1 view .LVU95
 101:./tmk_core/common/avr/timer.c **** 
 102:./tmk_core/common/avr/timer.c ****     ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
 411               		.loc 1 102 5 view .LVU96
 412               	.LBB62:
 413               		.loc 1 102 5 view .LVU97
 414 0016 2FB7      		in r18,__SREG__
 415               	.LVL22:
 416               	.LBB63:
 417               	.LBI63:
  48:/usr/avr/include/util/atomic.h **** {
 418               		.loc 2 48 27 view .LVU98
 419               	.LBB64:
  50:/usr/avr/include/util/atomic.h ****     return 1;
 420               		.loc 2 50 5 view .LVU99
 421               	/* #APP */
 422               	 ;  50 "/usr/avr/include/util/atomic.h" 1
 423 0018 F894      		cli
 424               	 ;  0 "" 2
  51:/usr/avr/include/util/atomic.h **** }
 425               		.loc 2 51 5 view .LVU100
 426               	.LVL23:
  51:/usr/avr/include/util/atomic.h **** }
 427               		.loc 2 51 5 is_stmt 0 view .LVU101
 428               	/* #NOAPP */
 429               	.LBE64:
 430               	.LBE63:
 431               		.loc 1 102 5 is_stmt 1 view .LVU102
 103:./tmk_core/common/avr/timer.c ****       t = timer_count;
 432               		.loc 1 103 7 view .LVU103
 433               		.loc 1 103 9 is_stmt 0 view .LVU104
 434 001a 8091 0000 		lds r24,timer_count
 435 001e 9091 0000 		lds r25,timer_count+1
 436 0022 A091 0000 		lds r26,timer_count+2
 437 0026 B091 0000 		lds r27,timer_count+3
 438               	.LVL24:
 102:./tmk_core/common/avr/timer.c ****       t = timer_count;
 439               		.loc 1 102 5 is_stmt 1 view .LVU105
 102:./tmk_core/common/avr/timer.c ****       t = timer_count;
 440               		.loc 1 102 5 view .LVU106
 441               	.LBB65:
 442               	.LBI65:
  68:/usr/avr/include/util/atomic.h **** {
 443               		.loc 2 68 24 view .LVU107
 444               	.LBB66:
  70:/usr/avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
 445               		.loc 2 70 5 view .LVU108
  70:/usr/avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
 446               		.loc 2 70 10 is_stmt 0 view .LVU109
 447 002a 2FBF      		out __SREG__,r18
 448               		.loc 2 71 5 is_stmt 1 view .LVU110
 449               	.LVL25:
 450               		.loc 2 71 5 is_stmt 0 view .LVU111
 451               	.LBE66:
 452               	.LBE65:
 453               	.LBE62:
 104:./tmk_core/common/avr/timer.c ****     }
 105:./tmk_core/common/avr/timer.c **** 
 106:./tmk_core/common/avr/timer.c ****     return TIMER_DIFF_32(t, last);
 454               		.loc 1 106 5 is_stmt 1 view .LVU112
 455               		.loc 1 106 12 is_stmt 0 view .LVU113
 456 002c 8417      		cp r24,r20
 457 002e 9507      		cpc r25,r21
 458 0030 A607      		cpc r26,r22
 459 0032 B707      		cpc r27,r23
 460 0034 00F0      		brlo .L10
 461               	.LVL26:
 462               	.L12:
 463               		.loc 1 106 12 discriminator 2 view .LVU114
 464 0036 8C01      		movw r16,r24
 465 0038 9D01      		movw r18,r26
 466 003a 041B      		sub r16,r20
 467 003c 150B      		sbc r17,r21
 468 003e 260B      		sbc r18,r22
 469 0040 370B      		sbc r19,r23
 470 0042 0983      		std Y+1,r16
 471 0044 1A83      		std Y+2,r17
 472 0046 2B83      		std Y+3,r18
 473 0048 3C83      		std Y+4,r19
 107:./tmk_core/common/avr/timer.c **** }
 474               		.loc 1 107 1 discriminator 2 view .LVU115
 475 004a 6981      		ldd r22,Y+1
 476 004c 7A81      		ldd r23,Y+2
 477 004e 8B81      		ldd r24,Y+3
 478 0050 9C81      		ldd r25,Y+4
 479               	/* epilogue start */
 480 0052 0F90      		pop __tmp_reg__
 481 0054 0F90      		pop __tmp_reg__
 482 0056 0F90      		pop __tmp_reg__
 483 0058 0F90      		pop __tmp_reg__
 484 005a DF91      		pop r29
 485 005c CF91      		pop r28
 486 005e 1F91      		pop r17
 487 0060 0F91      		pop r16
 488 0062 0895      		ret
 489               	.LVL27:
 490               	.L10:
 106:./tmk_core/common/avr/timer.c **** }
 491               		.loc 1 106 12 discriminator 2 view .LVU116
 492 0064 0197      		sbiw r24,1
 493 0066 A109      		sbc r26,__zero_reg__
 494 0068 B109      		sbc r27,__zero_reg__
 495               	.LVL28:
 106:./tmk_core/common/avr/timer.c **** }
 496               		.loc 1 106 12 discriminator 2 view .LVU117
 497 006a 00C0      		rjmp .L12
 498               		.cfi_endproc
 499               	.LFE10:
 501               		.section	.text.__vector_21,"ax",@progbits
 502               	.global	__vector_21
 504               	__vector_21:
 505               	.LFB11:
 108:./tmk_core/common/avr/timer.c **** 
 109:./tmk_core/common/avr/timer.c **** // excecuted once per 1ms.(excess for just timer count?)
 110:./tmk_core/common/avr/timer.c **** ISR(TIMER0_COMPA_vect)
 111:./tmk_core/common/avr/timer.c **** {
 506               		.loc 1 111 1 is_stmt 1 view -0
 507               		.cfi_startproc
 508 0000 1F92 1FB6 		__gcc_isr 1
 508      1F92 1124 
 508      8F93 
 509 000a 9F93      		push r25
 510               	.LCFI14:
 511               		.cfi_def_cfa_offset 3
 512               		.cfi_offset 25, -2
 513 000c AF93      		push r26
 514               	.LCFI15:
 515               		.cfi_def_cfa_offset 4
 516               		.cfi_offset 26, -3
 517 000e BF93      		push r27
 518               	.LCFI16:
 519               		.cfi_def_cfa_offset 5
 520               		.cfi_offset 27, -4
 521               	/* prologue: Signal */
 522               	/* frame size = 0 */
 523               	/* stack size = 3...7 */
 524               	.L__stack_usage = 3 + __gcc_isr.n_pushed
 112:./tmk_core/common/avr/timer.c ****     timer_count++;
 525               		.loc 1 112 5 view .LVU119
 526               		.loc 1 112 16 is_stmt 0 view .LVU120
 527 0010 8091 0000 		lds r24,timer_count
 528 0014 9091 0000 		lds r25,timer_count+1
 529 0018 A091 0000 		lds r26,timer_count+2
 530 001c B091 0000 		lds r27,timer_count+3
 531 0020 0196      		adiw r24,1
 532 0022 A11D      		adc r26,__zero_reg__
 533 0024 B11D      		adc r27,__zero_reg__
 534 0026 8093 0000 		sts timer_count,r24
 535 002a 9093 0000 		sts timer_count+1,r25
 536 002e A093 0000 		sts timer_count+2,r26
 537 0032 B093 0000 		sts timer_count+3,r27
 538               	/* epilogue start */
 113:./tmk_core/common/avr/timer.c **** }
 539               		.loc 1 113 1 view .LVU121
 540 0036 BF91      		pop r27
 541 0038 AF91      		pop r26
 542 003a 9F91      		pop r25
 543 003c 8F91 1F90 		__gcc_isr 2
 543      1FBE 1F90 
 544 0044 1895      		reti
 545               		__gcc_isr 0,r24
 546               		.cfi_endproc
 547               	.LFE11:
 549               	.global	timer_count
 550               		.section	.bss.timer_count,"aw",@nobits
 553               	timer_count:
 554 0000 0000 0000 		.zero	4
 555               		.text
 556               	.Letext0:
 557               		.file 3 "/usr/avr/include/stdint.h"
 558               		.file 4 "./tmk_core/common/timer.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 timer.c
     /tmp/ccbfTUAC.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccbfTUAC.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccbfTUAC.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccbfTUAC.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/ccbfTUAC.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccbfTUAC.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccbfTUAC.s:14     .text.timer_init:0000000000000000 timer_init
     /tmp/ccbfTUAC.s:47     .text.timer_clear:0000000000000000 timer_clear
     /tmp/ccbfTUAC.s:553    .bss.timer_count:0000000000000000 timer_count
     /tmp/ccbfTUAC.s:108    .text.timer_read:0000000000000000 timer_read
     /tmp/ccbfTUAC.s:170    .text.timer_read32:0000000000000000 timer_read32
     /tmp/ccbfTUAC.s:262    .text.timer_elapsed:0000000000000000 timer_elapsed
     /tmp/ccbfTUAC.s:372    .text.timer_elapsed32:0000000000000000 timer_elapsed32
     /tmp/ccbfTUAC.s:504    .text.__vector_21:0000000000000000 __vector_21
                            *ABS*:0000000000000003 __gcc_isr.n_pushed.001

UNDEFINED SYMBOLS
__do_clear_bss
