   1               		.file	"bootmagic.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.text.scan_keycode,"ax",@progbits
  13               	scan_keycode:
  14               	.LVL0:
  15               	.LFB104:
  16               		.file 1 "./tmk_core/common/bootmagic.c"
   1:./tmk_core/common/bootmagic.c **** #include <stdint.h>
   2:./tmk_core/common/bootmagic.c **** #include <stdbool.h>
   3:./tmk_core/common/bootmagic.c **** #include "wait.h"
   4:./tmk_core/common/bootmagic.c **** #include "matrix.h"
   5:./tmk_core/common/bootmagic.c **** #include "bootloader.h"
   6:./tmk_core/common/bootmagic.c **** #include "debug.h"
   7:./tmk_core/common/bootmagic.c **** #include "keymap.h"
   8:./tmk_core/common/bootmagic.c **** #include "host.h"
   9:./tmk_core/common/bootmagic.c **** #include "action_layer.h"
  10:./tmk_core/common/bootmagic.c **** #include "eeconfig.h"
  11:./tmk_core/common/bootmagic.c **** #include "bootmagic.h"
  12:./tmk_core/common/bootmagic.c **** 
  13:./tmk_core/common/bootmagic.c **** keymap_config_t keymap_config;
  14:./tmk_core/common/bootmagic.c **** 
  15:./tmk_core/common/bootmagic.c **** void bootmagic(void)
  16:./tmk_core/common/bootmagic.c **** {
  17:./tmk_core/common/bootmagic.c ****     /* check signature */
  18:./tmk_core/common/bootmagic.c ****     if (!eeconfig_is_enabled()) {
  19:./tmk_core/common/bootmagic.c ****         eeconfig_init();
  20:./tmk_core/common/bootmagic.c ****     }
  21:./tmk_core/common/bootmagic.c **** 
  22:./tmk_core/common/bootmagic.c ****     /* do scans in case of bounce */
  23:./tmk_core/common/bootmagic.c ****     print("bootmagic scan: ... ");
  24:./tmk_core/common/bootmagic.c ****     uint8_t scan = 100;
  25:./tmk_core/common/bootmagic.c ****     while (scan--) { matrix_scan(); wait_ms(10); }
  26:./tmk_core/common/bootmagic.c ****     print("done.\n");
  27:./tmk_core/common/bootmagic.c **** 
  28:./tmk_core/common/bootmagic.c ****     /* bootmagic skip */
  29:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SKIP)) {
  30:./tmk_core/common/bootmagic.c ****         return;
  31:./tmk_core/common/bootmagic.c ****     }
  32:./tmk_core/common/bootmagic.c **** 
  33:./tmk_core/common/bootmagic.c ****     /* eeconfig clear */
  34:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_EEPROM_CLEAR)) {
  35:./tmk_core/common/bootmagic.c ****         eeconfig_init();
  36:./tmk_core/common/bootmagic.c ****     }
  37:./tmk_core/common/bootmagic.c **** 
  38:./tmk_core/common/bootmagic.c ****     /* bootloader */
  39:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_BOOTLOADER)) {
  40:./tmk_core/common/bootmagic.c ****         bootloader_jump();
  41:./tmk_core/common/bootmagic.c ****     }
  42:./tmk_core/common/bootmagic.c **** 
  43:./tmk_core/common/bootmagic.c ****     /* debug enable */
  44:./tmk_core/common/bootmagic.c ****     debug_config.raw = eeconfig_read_debug();
  45:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_ENABLE)) {
  46:./tmk_core/common/bootmagic.c ****         if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_MATRIX)) {
  47:./tmk_core/common/bootmagic.c ****             debug_config.matrix = !debug_config.matrix;
  48:./tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_KEYBOARD)) {
  49:./tmk_core/common/bootmagic.c ****             debug_config.keyboard = !debug_config.keyboard;
  50:./tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_MOUSE)) {
  51:./tmk_core/common/bootmagic.c ****             debug_config.mouse = !debug_config.mouse;
  52:./tmk_core/common/bootmagic.c ****         } else {
  53:./tmk_core/common/bootmagic.c ****             debug_config.enable = !debug_config.enable;
  54:./tmk_core/common/bootmagic.c ****         }
  55:./tmk_core/common/bootmagic.c ****     }
  56:./tmk_core/common/bootmagic.c ****     eeconfig_update_debug(debug_config.raw);
  57:./tmk_core/common/bootmagic.c **** 
  58:./tmk_core/common/bootmagic.c ****     /* keymap config */
  59:./tmk_core/common/bootmagic.c ****     keymap_config.raw = eeconfig_read_keymap();
  60:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_CONTROL_CAPSLOCK)) {
  61:./tmk_core/common/bootmagic.c ****         keymap_config.swap_control_capslock = !keymap_config.swap_control_capslock;
  62:./tmk_core/common/bootmagic.c ****     }
  63:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_CAPSLOCK_TO_CONTROL)) {
  64:./tmk_core/common/bootmagic.c ****         keymap_config.capslock_to_control = !keymap_config.capslock_to_control;
  65:./tmk_core/common/bootmagic.c ****     }
  66:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_LALT_LGUI)) {
  67:./tmk_core/common/bootmagic.c ****         keymap_config.swap_lalt_lgui = !keymap_config.swap_lalt_lgui;
  68:./tmk_core/common/bootmagic.c ****     }
  69:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_RALT_RGUI)) {
  70:./tmk_core/common/bootmagic.c ****         keymap_config.swap_ralt_rgui = !keymap_config.swap_ralt_rgui;
  71:./tmk_core/common/bootmagic.c ****     }
  72:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_NO_GUI)) {
  73:./tmk_core/common/bootmagic.c ****         keymap_config.no_gui = !keymap_config.no_gui;
  74:./tmk_core/common/bootmagic.c ****     }
  75:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_GRAVE_ESC)) {
  76:./tmk_core/common/bootmagic.c ****         keymap_config.swap_grave_esc = !keymap_config.swap_grave_esc;
  77:./tmk_core/common/bootmagic.c ****     }
  78:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_BACKSLASH_BACKSPACE)) {
  79:./tmk_core/common/bootmagic.c ****         keymap_config.swap_backslash_backspace = !keymap_config.swap_backslash_backspace;
  80:./tmk_core/common/bootmagic.c ****     }
  81:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_HOST_NKRO)) {
  82:./tmk_core/common/bootmagic.c ****         keymap_config.nkro = !keymap_config.nkro;
  83:./tmk_core/common/bootmagic.c ****     }
  84:./tmk_core/common/bootmagic.c ****     eeconfig_update_keymap(keymap_config.raw);
  85:./tmk_core/common/bootmagic.c **** 
  86:./tmk_core/common/bootmagic.c ****     /* default layer */
  87:./tmk_core/common/bootmagic.c ****     uint8_t default_layer = 0;
  88:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_0)) { default_layer |= (1<<0); }
  89:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_1)) { default_layer |= (1<<1); }
  90:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_2)) { default_layer |= (1<<2); }
  91:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_3)) { default_layer |= (1<<3); }
  92:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_4)) { default_layer |= (1<<4); }
  93:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_5)) { default_layer |= (1<<5); }
  94:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_6)) { default_layer |= (1<<6); }
  95:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_7)) { default_layer |= (1<<7); }
  96:./tmk_core/common/bootmagic.c ****     if (default_layer) {
  97:./tmk_core/common/bootmagic.c ****         eeconfig_update_default_layer(default_layer);
  98:./tmk_core/common/bootmagic.c ****         default_layer_set((uint32_t)default_layer);
  99:./tmk_core/common/bootmagic.c ****     } else {
 100:./tmk_core/common/bootmagic.c ****         default_layer = eeconfig_read_default_layer();
 101:./tmk_core/common/bootmagic.c ****         default_layer_set((uint32_t)default_layer);
 102:./tmk_core/common/bootmagic.c ****     }
 103:./tmk_core/common/bootmagic.c **** }
 104:./tmk_core/common/bootmagic.c **** 
 105:./tmk_core/common/bootmagic.c **** static bool scan_keycode(uint8_t keycode)
 106:./tmk_core/common/bootmagic.c **** {
  17               		.loc 1 106 1 view -0
  18               		.cfi_startproc
  19               		.loc 1 106 1 is_stmt 0 view .LVU1
  20 0000 CF92      		push r12
  21               	.LCFI0:
  22               		.cfi_def_cfa_offset 3
  23               		.cfi_offset 12, -2
  24 0002 DF92      		push r13
  25               	.LCFI1:
  26               		.cfi_def_cfa_offset 4
  27               		.cfi_offset 13, -3
  28 0004 EF92      		push r14
  29               	.LCFI2:
  30               		.cfi_def_cfa_offset 5
  31               		.cfi_offset 14, -4
  32 0006 FF92      		push r15
  33               	.LCFI3:
  34               		.cfi_def_cfa_offset 6
  35               		.cfi_offset 15, -5
  36 0008 0F93      		push r16
  37               	.LCFI4:
  38               		.cfi_def_cfa_offset 7
  39               		.cfi_offset 16, -6
  40 000a 1F93      		push r17
  41               	.LCFI5:
  42               		.cfi_def_cfa_offset 8
  43               		.cfi_offset 17, -7
  44 000c CF93      		push r28
  45               	.LCFI6:
  46               		.cfi_def_cfa_offset 9
  47               		.cfi_offset 28, -8
  48               	/* prologue: function */
  49               	/* frame size = 0 */
  50               	/* stack size = 7 */
  51               	.L__stack_usage = 7
 107:./tmk_core/common/bootmagic.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
  52               		.loc 1 107 5 is_stmt 1 view .LVU2
  53               	.LBB4:
  54               		.loc 1 107 10 view .LVU3
  55               	.LVL1:
  56               		.loc 1 107 27 view .LVU4
  57               		.loc 1 107 18 is_stmt 0 view .LVU5
  58 000e C0E0      		ldi r28,0
  59               	.LBB5:
  60               	.LBB6:
  61               	.LBB7:
 108:./tmk_core/common/bootmagic.c ****         matrix_row_t matrix_row = matrix_get_row(r);
 109:./tmk_core/common/bootmagic.c ****         for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 110:./tmk_core/common/bootmagic.c ****             if (matrix_row & ((matrix_row_t)1<<c)) {
 111:./tmk_core/common/bootmagic.c ****                 if (keycode == keymap_key_to_keycode(0, (keypos_t){ .row = r, .col = c })) {
  62               		.loc 1 111 29 view .LVU6
  63 0010 E82E      		mov r14,r24
  64 0012 F12C      		mov r15,__zero_reg__
  65               	.LVL2:
  66               	.L6:
  67               		.loc 1 111 29 view .LVU7
  68               	.LBE7:
  69               	.LBE6:
 108:./tmk_core/common/bootmagic.c ****         matrix_row_t matrix_row = matrix_get_row(r);
  70               		.loc 1 108 9 is_stmt 1 view .LVU8
 108:./tmk_core/common/bootmagic.c ****         matrix_row_t matrix_row = matrix_get_row(r);
  71               		.loc 1 108 35 is_stmt 0 view .LVU9
  72 0014 8C2F      		mov r24,r28
  73 0016 0E94 0000 		call matrix_get_row
  74               	.LVL3:
 109:./tmk_core/common/bootmagic.c ****             if (matrix_row & ((matrix_row_t)1<<c)) {
  75               		.loc 1 109 9 is_stmt 1 view .LVU10
  76               	.LBB9:
 109:./tmk_core/common/bootmagic.c ****             if (matrix_row & ((matrix_row_t)1<<c)) {
  77               		.loc 1 109 14 view .LVU11
 109:./tmk_core/common/bootmagic.c ****             if (matrix_row & ((matrix_row_t)1<<c)) {
  78               		.loc 1 109 31 view .LVU12
  79               	.LBE9:
 108:./tmk_core/common/bootmagic.c ****         matrix_row_t matrix_row = matrix_get_row(r);
  80               		.loc 1 108 35 is_stmt 0 view .LVU13
  81 001a 10E0      		ldi r17,0
  82 001c 00E0      		ldi r16,0
  83               	.LBB10:
 110:./tmk_core/common/bootmagic.c ****                 if (keycode == keymap_key_to_keycode(0, (keypos_t){ .row = r, .col = c })) {
  84               		.loc 1 110 17 view .LVU14
  85 001e C82E      		mov r12,r24
  86 0020 D12C      		mov r13,__zero_reg__
  87               	.LVL4:
  88               	.L5:
 110:./tmk_core/common/bootmagic.c ****                 if (keycode == keymap_key_to_keycode(0, (keypos_t){ .row = r, .col = c })) {
  89               		.loc 1 110 13 is_stmt 1 view .LVU15
 110:./tmk_core/common/bootmagic.c ****                 if (keycode == keymap_key_to_keycode(0, (keypos_t){ .row = r, .col = c })) {
  90               		.loc 1 110 17 is_stmt 0 view .LVU16
  91 0022 C601      		movw r24,r12
  92 0024 002E      		mov r0,r16
  93 0026 00C0      		rjmp 2f
  94               		1:
  95 0028 9595      		asr r25
  96 002a 8795      		ror r24
  97               		2:
  98 002c 0A94      		dec r0
  99 002e 02F4      		brpl 1b
 110:./tmk_core/common/bootmagic.c ****                 if (keycode == keymap_key_to_keycode(0, (keypos_t){ .row = r, .col = c })) {
 100               		.loc 1 110 16 view .LVU17
 101 0030 80FF      		sbrs r24,0
 102 0032 00C0      		rjmp .L2
 103               		.loc 1 111 17 is_stmt 1 view .LVU18
 104               	.LBB8:
 105               		.loc 1 111 32 is_stmt 0 view .LVU19
 106 0034 602F      		mov r22,r16
 107 0036 7C2F      		mov r23,r28
 108 0038 80E0      		ldi r24,0
 109 003a 0E94 0000 		call keymap_key_to_keycode
 110               	.LVL5:
 111               		.loc 1 111 20 view .LVU20
 112 003e E816      		cp r14,r24
 113 0040 F906      		cpc r15,r25
 114 0042 01F4      		brne .L2
 112:./tmk_core/common/bootmagic.c ****                     return true;
 115               		.loc 1 112 21 is_stmt 1 view .LVU21
 116               		.loc 1 112 28 is_stmt 0 view .LVU22
 117 0044 81E0      		ldi r24,lo8(1)
 118               	.LVL6:
 119               	.L1:
 120               	/* epilogue start */
 121               		.loc 1 112 28 view .LVU23
 122               	.LBE8:
 123               	.LBE10:
 124               	.LBE5:
 125               	.LBE4:
 113:./tmk_core/common/bootmagic.c ****                 }
 114:./tmk_core/common/bootmagic.c ****             }
 115:./tmk_core/common/bootmagic.c ****         }
 116:./tmk_core/common/bootmagic.c ****     }
 117:./tmk_core/common/bootmagic.c ****     return false;
 118:./tmk_core/common/bootmagic.c **** }
 126               		.loc 1 118 1 view .LVU24
 127 0046 CF91      		pop r28
 128               	.LVL7:
 129               		.loc 1 118 1 view .LVU25
 130 0048 1F91      		pop r17
 131 004a 0F91      		pop r16
 132 004c FF90      		pop r15
 133 004e EF90      		pop r14
 134               	.LVL8:
 135               		.loc 1 118 1 view .LVU26
 136 0050 DF90      		pop r13
 137 0052 CF90      		pop r12
 138               	.LVL9:
 139               		.loc 1 118 1 view .LVU27
 140 0054 0895      		ret
 141               	.LVL10:
 142               	.L2:
 143               	.LBB13:
 144               	.LBB12:
 145               	.LBB11:
 109:./tmk_core/common/bootmagic.c ****             if (matrix_row & ((matrix_row_t)1<<c)) {
 146               		.loc 1 109 47 is_stmt 1 discriminator 2 view .LVU28
 109:./tmk_core/common/bootmagic.c ****             if (matrix_row & ((matrix_row_t)1<<c)) {
 147               		.loc 1 109 31 discriminator 2 view .LVU29
 148 0056 0F5F      		subi r16,-1
 149 0058 1F4F      		sbci r17,-1
 150               	.LVL11:
 109:./tmk_core/common/bootmagic.c ****             if (matrix_row & ((matrix_row_t)1<<c)) {
 151               		.loc 1 109 31 is_stmt 0 discriminator 2 view .LVU30
 152 005a 0830      		cpi r16,8
 153 005c 1105      		cpc r17,__zero_reg__
 154 005e 01F4      		brne .L5
 155               	.LBE11:
 156               	.LBE12:
 107:./tmk_core/common/bootmagic.c ****         matrix_row_t matrix_row = matrix_get_row(r);
 157               		.loc 1 107 43 is_stmt 1 discriminator 2 view .LVU31
 158 0060 CF5F      		subi r28,lo8(-(1))
 159               	.LVL12:
 107:./tmk_core/common/bootmagic.c ****         matrix_row_t matrix_row = matrix_get_row(r);
 160               		.loc 1 107 27 discriminator 2 view .LVU32
 161 0062 C331      		cpi r28,lo8(19)
 162 0064 01F4      		brne .L6
 163               	.LBE13:
 117:./tmk_core/common/bootmagic.c **** }
 164               		.loc 1 117 12 is_stmt 0 view .LVU33
 165 0066 80E0      		ldi r24,0
 166 0068 00C0      		rjmp .L1
 167               		.cfi_endproc
 168               	.LFE104:
 170               		.section	.text.bootmagic_scan_keycode,"ax",@progbits
 171               	.global	bootmagic_scan_keycode
 173               	bootmagic_scan_keycode:
 174               	.LVL13:
 175               	.LFB105:
 119:./tmk_core/common/bootmagic.c **** 
 120:./tmk_core/common/bootmagic.c **** bool bootmagic_scan_keycode(uint8_t keycode)
 121:./tmk_core/common/bootmagic.c **** {
 176               		.loc 1 121 1 is_stmt 1 view -0
 177               		.cfi_startproc
 178               		.loc 1 121 1 is_stmt 0 view .LVU35
 179 0000 CF93      		push r28
 180               	.LCFI7:
 181               		.cfi_def_cfa_offset 3
 182               		.cfi_offset 28, -2
 183               	/* prologue: function */
 184               	/* frame size = 0 */
 185               	/* stack size = 1 */
 186               	.L__stack_usage = 1
 187 0002 C82F      		mov r28,r24
 122:./tmk_core/common/bootmagic.c ****     if (!scan_keycode(BOOTMAGIC_KEY_SALT)) return false;
 188               		.loc 1 122 5 is_stmt 1 view .LVU36
 189               		.loc 1 122 10 is_stmt 0 view .LVU37
 190 0004 8CE2      		ldi r24,lo8(44)
 191               	.LVL14:
 192               		.loc 1 122 10 view .LVU38
 193 0006 0E94 0000 		call scan_keycode
 194               	.LVL15:
 195               		.loc 1 122 8 view .LVU39
 196 000a 8823      		tst r24
 197 000c 01F0      		breq .L12
 123:./tmk_core/common/bootmagic.c **** 
 124:./tmk_core/common/bootmagic.c ****     return scan_keycode(keycode);
 198               		.loc 1 124 5 is_stmt 1 view .LVU40
 199               		.loc 1 124 12 is_stmt 0 view .LVU41
 200 000e 8C2F      		mov r24,r28
 201               	/* epilogue start */
 125:./tmk_core/common/bootmagic.c **** }...
 202               		.loc 1 125 1 view .LVU42
 203 0010 CF91      		pop r28
 204               	.LVL16:
 124:./tmk_core/common/bootmagic.c ****     return scan_keycode(keycode);
 205               		.loc 1 124 12 view .LVU43
 206 0012 0C94 0000 		jmp scan_keycode
 207               	.LVL17:
 208               	.L12:
 209               		.loc 1 125 1 view .LVU44
 210 0016 80E0      		ldi r24,0
 211               	/* epilogue start */
 212 0018 CF91      		pop r28
 213               	.LVL18:
 214               		.loc 1 125 1 view .LVU45
 215 001a 0895      		ret
 216               		.cfi_endproc
 217               	.LFE105:
 219               		.section	.text.bootmagic,"ax",@progbits
 220               	.global	bootmagic
 222               	bootmagic:
 223               	.LFB103:
  16:./tmk_core/common/bootmagic.c **** {
 224               		.loc 1 16 1 is_stmt 1 view -0
 225               		.cfi_startproc
 226 0000 CF93      		push r28
 227               	.LCFI8:
 228               		.cfi_def_cfa_offset 3
 229               		.cfi_offset 28, -2
 230 0002 DF93      		push r29
 231               	.LCFI9:
 232               		.cfi_def_cfa_offset 4
 233               		.cfi_offset 29, -3
 234 0004 00D0      		rcall .
 235 0006 00D0      		rcall .
 236               	.LCFI10:
 237               		.cfi_def_cfa_offset 8
 238 0008 CDB7      		in r28,__SP_L__
 239 000a DEB7      		in r29,__SP_H__
 240               	.LCFI11:
 241               		.cfi_def_cfa_register 28
 242               	/* prologue: function */
 243               	/* frame size = 4 */
 244               	/* stack size = 6 */
 245               	.L__stack_usage = 6
  18:./tmk_core/common/bootmagic.c ****     if (!eeconfig_is_enabled()) {
 246               		.loc 1 18 5 view .LVU47
  18:./tmk_core/common/bootmagic.c ****     if (!eeconfig_is_enabled()) {
 247               		.loc 1 18 10 is_stmt 0 view .LVU48
 248 000c 0E94 0000 		call eeconfig_is_enabled
 249               	.LVL19:
  18:./tmk_core/common/bootmagic.c ****     if (!eeconfig_is_enabled()) {
 250               		.loc 1 18 8 view .LVU49
 251 0010 8111      		cpse r24,__zero_reg__
 252 0012 00C0      		rjmp .L15
  19:./tmk_core/common/bootmagic.c ****         eeconfig_init();
 253               		.loc 1 19 9 is_stmt 1 view .LVU50
 254 0014 0E94 0000 		call eeconfig_init
 255               	.LVL20:
 256               	.L15:
  16:./tmk_core/common/bootmagic.c **** {
 257               		.loc 1 16 1 is_stmt 0 discriminator 1 view .LVU51
 258 0018 95E6      		ldi r25,lo8(101)
 259 001a 9983      		std Y+1,r25
 260 001c 00C0      		rjmp .L16
 261               	.LVL21:
 262               	.L17:
  25:./tmk_core/common/bootmagic.c ****     while (scan--) { matrix_scan(); wait_ms(10); }
 263               		.loc 1 25 22 is_stmt 1 discriminator 2 view .LVU52
 264 001e 0E94 0000 		call matrix_scan
 265               	.LVL22:
  25:./tmk_core/common/bootmagic.c ****     while (scan--) { matrix_scan(); wait_ms(10); }
 266               		.loc 1 25 37 discriminator 2 view .LVU53
 267               	.LBB14:
 268               	.LBI14:
 269               		.file 2 "/usr/avr/include/util/delay.h"
   1:/usr/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/avr/include/util/delay.h **** 
   6:/usr/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/avr/include/util/delay.h **** 
   9:/usr/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/avr/include/util/delay.h **** 
  12:/usr/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/avr/include/util/delay.h ****      distribution.
  16:/usr/avr/include/util/delay.h **** 
  17:/usr/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/avr/include/util/delay.h **** 
  21:/usr/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/avr/include/util/delay.h **** 
  33:/usr/avr/include/util/delay.h **** /* $Id: delay.h.in 2506 2016-02-08 10:05:45Z joerg_wunsch $ */
  34:/usr/avr/include/util/delay.h **** 
  35:/usr/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/avr/include/util/delay.h **** 
  38:/usr/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/usr/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/usr/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/usr/avr/include/util/delay.h **** #  endif
  42:/usr/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/usr/avr/include/util/delay.h **** 
  44:/usr/avr/include/util/delay.h **** #include <inttypes.h>
  45:/usr/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/usr/avr/include/util/delay.h **** #include <math.h>
  47:/usr/avr/include/util/delay.h **** 
  48:/usr/avr/include/util/delay.h **** /** \file */
  49:/usr/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/usr/avr/include/util/delay.h ****     \code
  51:/usr/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/usr/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/usr/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/usr/avr/include/util/delay.h ****     \endcode
  55:/usr/avr/include/util/delay.h **** 
  56:/usr/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/usr/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/usr/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/usr/avr/include/util/delay.h ****     used.
  60:/usr/avr/include/util/delay.h **** 
  61:/usr/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/usr/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/usr/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/usr/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/usr/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/usr/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/usr/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/usr/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/usr/avr/include/util/delay.h **** 
  70:/usr/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/usr/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/usr/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/usr/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/usr/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/usr/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/usr/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/usr/avr/include/util/delay.h ****     routines linked into the application.
  78:/usr/avr/include/util/delay.h **** 
  79:/usr/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/usr/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/usr/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/usr/avr/include/util/delay.h **** 
  83:/usr/avr/include/util/delay.h **** */
  84:/usr/avr/include/util/delay.h **** 
  85:/usr/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/usr/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/usr/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/usr/avr/include/util/delay.h **** #endif
  89:/usr/avr/include/util/delay.h **** 
  90:/usr/avr/include/util/delay.h **** #ifndef F_CPU
  91:/usr/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/usr/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/usr/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/usr/avr/include/util/delay.h ****     \def F_CPU
  95:/usr/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/usr/avr/include/util/delay.h **** 
  97:/usr/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/usr/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/usr/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/usr/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/usr/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/usr/avr/include/util/delay.h **** 
 103:/usr/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/usr/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/usr/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/usr/avr/include/util/delay.h ****     integer value.
 107:/usr/avr/include/util/delay.h ****  */
 108:/usr/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/usr/avr/include/util/delay.h **** #endif
 110:/usr/avr/include/util/delay.h **** 
 111:/usr/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/usr/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/usr/avr/include/util/delay.h **** #endif
 114:/usr/avr/include/util/delay.h **** 
 115:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/usr/avr/include/util/delay.h **** #  include <math.h>
 119:/usr/avr/include/util/delay.h **** #endif
 120:/usr/avr/include/util/delay.h **** 
 121:/usr/avr/include/util/delay.h **** /**
 122:/usr/avr/include/util/delay.h ****    \ingroup util_delay
 123:/usr/avr/include/util/delay.h **** 
 124:/usr/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/usr/avr/include/util/delay.h **** 
 126:/usr/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/usr/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/usr/avr/include/util/delay.h **** 
 129:/usr/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/usr/avr/include/util/delay.h **** 
 131:/usr/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/usr/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/usr/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/usr/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/usr/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/usr/avr/include/util/delay.h **** 
 137:/usr/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/usr/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/usr/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/usr/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/usr/avr/include/util/delay.h **** 
 142:/usr/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/usr/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/usr/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/usr/avr/include/util/delay.h ****    microseconds of delay.
 146:/usr/avr/include/util/delay.h **** 
 147:/usr/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/usr/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/usr/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/usr/avr/include/util/delay.h ****    respectively.
 151:/usr/avr/include/util/delay.h **** 
 152:/usr/avr/include/util/delay.h ****    \note
 153:/usr/avr/include/util/delay.h **** 
 154:/usr/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/usr/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/usr/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/usr/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/usr/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/usr/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/usr/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/usr/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/usr/avr/include/util/delay.h ****    not available to the compiler then.
 163:/usr/avr/include/util/delay.h **** 
 164:/usr/avr/include/util/delay.h ****  */
 165:/usr/avr/include/util/delay.h **** void
 166:/usr/avr/include/util/delay.h **** _delay_ms(double __ms)
 270               		.loc 2 166 1 discriminator 2 view .LVU54
 271               	.LBB15:
 167:/usr/avr/include/util/delay.h **** {
 168:/usr/avr/include/util/delay.h **** 	double __tmp ;
 272               		.loc 2 168 2 discriminator 2 view .LVU55
 169:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/usr/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 273               		.loc 2 172 2 discriminator 2 view .LVU56
 173:/usr/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 274               		.loc 2 173 2 discriminator 2 view .LVU57
 174:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 275               		.loc 2 174 2 discriminator 2 view .LVU58
 175:/usr/avr/include/util/delay.h **** 
 176:/usr/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/usr/avr/include/util/delay.h **** 
 179:/usr/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/usr/avr/include/util/delay.h **** 
 182:/usr/avr/include/util/delay.h **** 	#else
 183:/usr/avr/include/util/delay.h **** 		//round up by default
 184:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 276               		.loc 2 184 3 discriminator 2 view .LVU59
 185:/usr/avr/include/util/delay.h **** 	#endif
 186:/usr/avr/include/util/delay.h **** 
 187:/usr/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 277               		.loc 2 187 2 discriminator 2 view .LVU60
 278 0022 8FE3      		ldi r24,lo8(-25537)
 279 0024 9CE9      		ldi r25,hi8(-25537)
 280 0026 0197      	1:	sbiw r24,1
 281 0028 01F4      		brne 1b
 282 002a 00C0      		rjmp .
 283 002c 0000      		nop
 284               	.LVL23:
 285               	.L16:
 286               		.loc 2 187 2 is_stmt 0 discriminator 2 view .LVU61
 287               	.LBE15:
 288               	.LBE14:
  25:./tmk_core/common/bootmagic.c ****     while (scan--) { matrix_scan(); wait_ms(10); }
 289               		.loc 1 25 12 is_stmt 1 discriminator 1 view .LVU62
  25:./tmk_core/common/bootmagic.c ****     while (scan--) { matrix_scan(); wait_ms(10); }
 290               		.loc 1 25 12 is_stmt 0 discriminator 1 view .LVU63
 291 002e A981      		ldd r26,Y+1
 292 0030 A150      		subi r26,lo8(-(-1))
 293 0032 A983      		std Y+1,r26
 294               	.LVL24:
  25:./tmk_core/common/bootmagic.c ****     while (scan--) { matrix_scan(); wait_ms(10); }
 295               		.loc 1 25 12 discriminator 1 view .LVU64
 296 0034 A111      		cpse r26,__zero_reg__
 297 0036 00C0      		rjmp .L17
  26:./tmk_core/common/bootmagic.c ****     print("done.\n");
 298               		.loc 1 26 21 is_stmt 1 view .LVU65
  29:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SKIP)) {
 299               		.loc 1 29 5 view .LVU66
  29:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SKIP)) {
 300               		.loc 1 29 9 is_stmt 0 view .LVU67
 301 0038 89E2      		ldi r24,lo8(41)
 302 003a 0E94 0000 		call bootmagic_scan_keycode
 303               	.LVL25:
  29:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SKIP)) {
 304               		.loc 1 29 8 view .LVU68
 305 003e 8111      		cpse r24,__zero_reg__
 306 0040 00C0      		rjmp .L14
  34:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_EEPROM_CLEAR)) {
 307               		.loc 1 34 5 is_stmt 1 view .LVU69
  34:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_EEPROM_CLEAR)) {
 308               		.loc 1 34 9 is_stmt 0 view .LVU70
 309 0042 8AE2      		ldi r24,lo8(42)
 310 0044 0E94 0000 		call bootmagic_scan_keycode
 311               	.LVL26:
  34:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_EEPROM_CLEAR)) {
 312               		.loc 1 34 8 view .LVU71
 313 0048 8111      		cpse r24,__zero_reg__
  35:./tmk_core/common/bootmagic.c ****         eeconfig_init();
 314               		.loc 1 35 9 is_stmt 1 view .LVU72
 315 004a 0E94 0000 		call eeconfig_init
 316               	.LVL27:
 317               	.L19:
  39:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_BOOTLOADER)) {
 318               		.loc 1 39 5 view .LVU73
  39:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_BOOTLOADER)) {
 319               		.loc 1 39 9 is_stmt 0 view .LVU74
 320 004e 85E0      		ldi r24,lo8(5)
 321 0050 0E94 0000 		call bootmagic_scan_keycode
 322               	.LVL28:
  39:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_BOOTLOADER)) {
 323               		.loc 1 39 8 view .LVU75
 324 0054 8111      		cpse r24,__zero_reg__
  40:./tmk_core/common/bootmagic.c ****         bootloader_jump();
 325               		.loc 1 40 9 is_stmt 1 view .LVU76
 326 0056 0E94 0000 		call bootloader_jump
 327               	.LVL29:
 328               	.L20:
  44:./tmk_core/common/bootmagic.c ****     debug_config.raw = eeconfig_read_debug();
 329               		.loc 1 44 5 view .LVU77
  44:./tmk_core/common/bootmagic.c ****     debug_config.raw = eeconfig_read_debug();
 330               		.loc 1 44 24 is_stmt 0 view .LVU78
 331 005a 0E94 0000 		call eeconfig_read_debug
 332               	.LVL30:
  44:./tmk_core/common/bootmagic.c ****     debug_config.raw = eeconfig_read_debug();
 333               		.loc 1 44 22 view .LVU79
 334 005e 8093 0000 		sts debug_config,r24
  45:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_ENABLE)) {
 335               		.loc 1 45 5 is_stmt 1 view .LVU80
  45:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_ENABLE)) {
 336               		.loc 1 45 9 is_stmt 0 view .LVU81
 337 0062 87E0      		ldi r24,lo8(7)
 338 0064 0E94 0000 		call bootmagic_scan_keycode
 339               	.LVL31:
  45:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_ENABLE)) {
 340               		.loc 1 45 8 view .LVU82
 341 0068 8823      		tst r24
 342 006a 01F0      		breq .L21
  46:./tmk_core/common/bootmagic.c ****         if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_MATRIX)) {
 343               		.loc 1 46 9 is_stmt 1 view .LVU83
  46:./tmk_core/common/bootmagic.c ****         if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_MATRIX)) {
 344               		.loc 1 46 13 is_stmt 0 view .LVU84
 345 006c 8BE1      		ldi r24,lo8(27)
 346 006e 0E94 0000 		call bootmagic_scan_keycode
 347               	.LVL32:
  46:./tmk_core/common/bootmagic.c ****         if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_MATRIX)) {
 348               		.loc 1 46 12 view .LVU85
 349 0072 8823      		tst r24
 350 0074 01F4      		brne .+2
 351 0076 00C0      		rjmp .L22
  47:./tmk_core/common/bootmagic.c ****             debug_config.matrix = !debug_config.matrix;
 352               		.loc 1 47 13 is_stmt 1 view .LVU86
  47:./tmk_core/common/bootmagic.c ****             debug_config.matrix = !debug_config.matrix;
 353               		.loc 1 47 48 is_stmt 0 view .LVU87
 354 0078 9091 0000 		lds r25,debug_config
  47:./tmk_core/common/bootmagic.c ****             debug_config.matrix = !debug_config.matrix;
 355               		.loc 1 47 33 view .LVU88
 356 007c 892F      		mov r24,r25
 357 007e 8D7F      		andi r24,~(1<<1)
 358 0080 91FF      		sbrs r25,1
 359 0082 8260      		ori r24,1<<1
 360               	.L93:
  53:./tmk_core/common/bootmagic.c ****             debug_config.enable = !debug_config.enable;
 361               		.loc 1 53 33 view .LVU89
 362 0084 8093 0000 		sts debug_config,r24
 363               	.LVL33:
 364               	.L21:
  56:./tmk_core/common/bootmagic.c ****     eeconfig_update_debug(debug_config.raw);
 365               		.loc 1 56 5 is_stmt 1 view .LVU90
 366 0088 8091 0000 		lds r24,debug_config
 367 008c 0E94 0000 		call eeconfig_update_debug
 368               	.LVL34:
  59:./tmk_core/common/bootmagic.c ****     keymap_config.raw = eeconfig_read_keymap();
 369               		.loc 1 59 5 view .LVU91
  59:./tmk_core/common/bootmagic.c ****     keymap_config.raw = eeconfig_read_keymap();
 370               		.loc 1 59 25 is_stmt 0 view .LVU92
 371 0090 0E94 0000 		call eeconfig_read_keymap
 372               	.LVL35:
 373 0094 90E0      		ldi r25,0
 374 0096 9093 0000 		sts keymap_config+1,r25
 375 009a 8093 0000 		sts keymap_config,r24
  60:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_CONTROL_CAPSLOCK)) {
 376               		.loc 1 60 5 is_stmt 1 view .LVU93
  60:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_CONTROL_CAPSLOCK)) {
 377               		.loc 1 60 9 is_stmt 0 view .LVU94
 378 009e 80EE      		ldi r24,lo8(-32)
 379 00a0 0E94 0000 		call bootmagic_scan_keycode
 380               	.LVL36:
  60:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_CONTROL_CAPSLOCK)) {
 381               		.loc 1 60 8 view .LVU95
 382 00a4 8823      		tst r24
 383 00a6 01F0      		breq .L25
  61:./tmk_core/common/bootmagic.c ****         keymap_config.swap_control_capslock = !keymap_config.swap_control_capslock;
 384               		.loc 1 61 9 is_stmt 1 view .LVU96
  61:./tmk_core/common/bootmagic.c ****         keymap_config.swap_control_capslock = !keymap_config.swap_control_capslock;
 385               		.loc 1 61 61 is_stmt 0 view .LVU97
 386 00a8 9091 0000 		lds r25,keymap_config
  61:./tmk_core/common/bootmagic.c ****         keymap_config.swap_control_capslock = !keymap_config.swap_control_capslock;
 387               		.loc 1 61 45 view .LVU98
 388 00ac 892F      		mov r24,r25
 389 00ae 8E7F      		andi r24,~(1<<0)
 390 00b0 90FF      		sbrs r25,0
 391 00b2 8160      		ori r24,1<<0
 392 00b4 8093 0000 		sts keymap_config,r24
 393               	.L25:
  63:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_CAPSLOCK_TO_CONTROL)) {
 394               		.loc 1 63 5 is_stmt 1 view .LVU99
  63:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_CAPSLOCK_TO_CONTROL)) {
 395               		.loc 1 63 9 is_stmt 0 view .LVU100
 396 00b8 89E3      		ldi r24,lo8(57)
 397 00ba 0E94 0000 		call bootmagic_scan_keycode
 398               	.LVL37:
  63:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_CAPSLOCK_TO_CONTROL)) {
 399               		.loc 1 63 8 view .LVU101
 400 00be 8823      		tst r24
 401 00c0 01F0      		breq .L26
  64:./tmk_core/common/bootmagic.c ****         keymap_config.capslock_to_control = !keymap_config.capslock_to_control;
 402               		.loc 1 64 9 is_stmt 1 view .LVU102
  64:./tmk_core/common/bootmagic.c ****         keymap_config.capslock_to_control = !keymap_config.capslock_to_control;
 403               		.loc 1 64 59 is_stmt 0 view .LVU103
 404 00c2 9091 0000 		lds r25,keymap_config
  64:./tmk_core/common/bootmagic.c ****         keymap_config.capslock_to_control = !keymap_config.capslock_to_control;
 405               		.loc 1 64 43 view .LVU104
 406 00c6 892F      		mov r24,r25
 407 00c8 8D7F      		andi r24,~(1<<1)
 408 00ca 91FF      		sbrs r25,1
 409 00cc 8260      		ori r24,1<<1
 410 00ce 8093 0000 		sts keymap_config,r24
 411               	.L26:
  66:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_LALT_LGUI)) {
 412               		.loc 1 66 5 is_stmt 1 view .LVU105
  66:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_LALT_LGUI)) {
 413               		.loc 1 66 9 is_stmt 0 view .LVU106
 414 00d2 82EE      		ldi r24,lo8(-30)
 415 00d4 0E94 0000 		call bootmagic_scan_keycode
 416               	.LVL38:
  66:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_LALT_LGUI)) {
 417               		.loc 1 66 8 view .LVU107
 418 00d8 8823      		tst r24
 419 00da 01F0      		breq .L27
  67:./tmk_core/common/bootmagic.c ****         keymap_config.swap_lalt_lgui = !keymap_config.swap_lalt_lgui;
 420               		.loc 1 67 9 is_stmt 1 view .LVU108
  67:./tmk_core/common/bootmagic.c ****         keymap_config.swap_lalt_lgui = !keymap_config.swap_lalt_lgui;
 421               		.loc 1 67 54 is_stmt 0 view .LVU109
 422 00dc 9091 0000 		lds r25,keymap_config
  67:./tmk_core/common/bootmagic.c ****         keymap_config.swap_lalt_lgui = !keymap_config.swap_lalt_lgui;
 423               		.loc 1 67 38 view .LVU110
 424 00e0 892F      		mov r24,r25
 425 00e2 8B7F      		andi r24,~(1<<2)
 426 00e4 92FF      		sbrs r25,2
 427 00e6 8460      		ori r24,1<<2
 428 00e8 8093 0000 		sts keymap_config,r24
 429               	.L27:
  69:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_RALT_RGUI)) {
 430               		.loc 1 69 5 is_stmt 1 view .LVU111
  69:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_RALT_RGUI)) {
 431               		.loc 1 69 9 is_stmt 0 view .LVU112
 432 00ec 86EE      		ldi r24,lo8(-26)
 433 00ee 0E94 0000 		call bootmagic_scan_keycode
 434               	.LVL39:
  69:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_RALT_RGUI)) {
 435               		.loc 1 69 8 view .LVU113
 436 00f2 8823      		tst r24
 437 00f4 01F0      		breq .L28
  70:./tmk_core/common/bootmagic.c ****         keymap_config.swap_ralt_rgui = !keymap_config.swap_ralt_rgui;
 438               		.loc 1 70 9 is_stmt 1 view .LVU114
  70:./tmk_core/common/bootmagic.c ****         keymap_config.swap_ralt_rgui = !keymap_config.swap_ralt_rgui;
 439               		.loc 1 70 54 is_stmt 0 view .LVU115
 440 00f6 9091 0000 		lds r25,keymap_config
  70:./tmk_core/common/bootmagic.c ****         keymap_config.swap_ralt_rgui = !keymap_config.swap_ralt_rgui;
 441               		.loc 1 70 38 view .LVU116
 442 00fa 892F      		mov r24,r25
 443 00fc 877F      		andi r24,~(1<<3)
 444 00fe 93FF      		sbrs r25,3
 445 0100 8860      		ori r24,1<<3
 446 0102 8093 0000 		sts keymap_config,r24
 447               	.L28:
  72:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_NO_GUI)) {
 448               		.loc 1 72 5 is_stmt 1 view .LVU117
  72:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_NO_GUI)) {
 449               		.loc 1 72 9 is_stmt 0 view .LVU118
 450 0106 83EE      		ldi r24,lo8(-29)
 451 0108 0E94 0000 		call bootmagic_scan_keycode
 452               	.LVL40:
  72:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_NO_GUI)) {
 453               		.loc 1 72 8 view .LVU119
 454 010c 8823      		tst r24
 455 010e 01F0      		breq .L29
  73:./tmk_core/common/bootmagic.c ****         keymap_config.no_gui = !keymap_config.no_gui;
 456               		.loc 1 73 9 is_stmt 1 view .LVU120
  73:./tmk_core/common/bootmagic.c ****         keymap_config.no_gui = !keymap_config.no_gui;
 457               		.loc 1 73 46 is_stmt 0 view .LVU121
 458 0110 9091 0000 		lds r25,keymap_config
  73:./tmk_core/common/bootmagic.c ****         keymap_config.no_gui = !keymap_config.no_gui;
 459               		.loc 1 73 30 view .LVU122
 460 0114 892F      		mov r24,r25
 461 0116 8F7E      		andi r24,~(1<<4)
 462 0118 94FF      		sbrs r25,4
 463 011a 8061      		ori r24,1<<4
 464 011c 8093 0000 		sts keymap_config,r24
 465               	.L29:
  75:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_GRAVE_ESC)) {
 466               		.loc 1 75 5 is_stmt 1 view .LVU123
  75:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_GRAVE_ESC)) {
 467               		.loc 1 75 9 is_stmt 0 view .LVU124
 468 0120 85E3      		ldi r24,lo8(53)
 469 0122 0E94 0000 		call bootmagic_scan_keycode
 470               	.LVL41:
  75:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_GRAVE_ESC)) {
 471               		.loc 1 75 8 view .LVU125
 472 0126 8823      		tst r24
 473 0128 01F0      		breq .L30
  76:./tmk_core/common/bootmagic.c ****         keymap_config.swap_grave_esc = !keymap_config.swap_grave_esc;
 474               		.loc 1 76 9 is_stmt 1 view .LVU126
  76:./tmk_core/common/bootmagic.c ****         keymap_config.swap_grave_esc = !keymap_config.swap_grave_esc;
 475               		.loc 1 76 54 is_stmt 0 view .LVU127
 476 012a 9091 0000 		lds r25,keymap_config
  76:./tmk_core/common/bootmagic.c ****         keymap_config.swap_grave_esc = !keymap_config.swap_grave_esc;
 477               		.loc 1 76 38 view .LVU128
 478 012e 892F      		mov r24,r25
 479 0130 8F7D      		andi r24,~(1<<5)
 480 0132 95FF      		sbrs r25,5
 481 0134 8062      		ori r24,1<<5
 482 0136 8093 0000 		sts keymap_config,r24
 483               	.L30:
  78:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_BACKSLASH_BACKSPACE)) {
 484               		.loc 1 78 5 is_stmt 1 view .LVU129
  78:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_BACKSLASH_BACKSPACE)) {
 485               		.loc 1 78 9 is_stmt 0 view .LVU130
 486 013a 81E3      		ldi r24,lo8(49)
 487 013c 0E94 0000 		call bootmagic_scan_keycode
 488               	.LVL42:
  78:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_BACKSLASH_BACKSPACE)) {
 489               		.loc 1 78 8 view .LVU131
 490 0140 8823      		tst r24
 491 0142 01F0      		breq .L31
  79:./tmk_core/common/bootmagic.c ****         keymap_config.swap_backslash_backspace = !keymap_config.swap_backslash_backspace;
 492               		.loc 1 79 9 is_stmt 1 view .LVU132
  79:./tmk_core/common/bootmagic.c ****         keymap_config.swap_backslash_backspace = !keymap_config.swap_backslash_backspace;
 493               		.loc 1 79 64 is_stmt 0 view .LVU133
 494 0144 9091 0000 		lds r25,keymap_config
  79:./tmk_core/common/bootmagic.c ****         keymap_config.swap_backslash_backspace = !keymap_config.swap_backslash_backspace;
 495               		.loc 1 79 48 view .LVU134
 496 0148 892F      		mov r24,r25
 497 014a 8F7B      		andi r24,~(1<<6)
 498 014c 96FF      		sbrs r25,6
 499 014e 8064      		ori r24,1<<6
 500 0150 8093 0000 		sts keymap_config,r24
 501               	.L31:
  81:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_HOST_NKRO)) {
 502               		.loc 1 81 5 is_stmt 1 view .LVU135
  81:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_HOST_NKRO)) {
 503               		.loc 1 81 9 is_stmt 0 view .LVU136
 504 0154 81E1      		ldi r24,lo8(17)
 505 0156 0E94 0000 		call bootmagic_scan_keycode
 506               	.LVL43:
  81:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_HOST_NKRO)) {
 507               		.loc 1 81 8 view .LVU137
 508 015a 8823      		tst r24
 509 015c 01F0      		breq .L32
  82:./tmk_core/common/bootmagic.c ****         keymap_config.nkro = !keymap_config.nkro;
 510               		.loc 1 82 9 is_stmt 1 view .LVU138
  82:./tmk_core/common/bootmagic.c ****         keymap_config.nkro = !keymap_config.nkro;
 511               		.loc 1 82 44 is_stmt 0 view .LVU139
 512 015e 9091 0000 		lds r25,keymap_config
  82:./tmk_core/common/bootmagic.c ****         keymap_config.nkro = !keymap_config.nkro;
 513               		.loc 1 82 28 view .LVU140
 514 0162 892F      		mov r24,r25
 515 0164 97FB      		bst r25,7
 516 0166 87F9      		bld r24,7
 517 0168 8058      		subi r24,0x80
 518 016a 8093 0000 		sts keymap_config,r24
 519               	.L32:
  84:./tmk_core/common/bootmagic.c ****     eeconfig_update_keymap(keymap_config.raw);
 520               		.loc 1 84 5 is_stmt 1 view .LVU141
 521 016e 8091 0000 		lds r24,keymap_config
 522 0172 0E94 0000 		call eeconfig_update_keymap
 523               	.LVL44:
  87:./tmk_core/common/bootmagic.c ****     uint8_t default_layer = 0;
 524               		.loc 1 87 5 view .LVU142
  88:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_0)) { default_layer |= (1<<0); }
 525               		.loc 1 88 5 view .LVU143
  88:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_0)) { default_layer |= (1<<0); }
 526               		.loc 1 88 9 is_stmt 0 view .LVU144
 527 0176 87E2      		ldi r24,lo8(39)
 528 0178 0E94 0000 		call bootmagic_scan_keycode
 529               	.LVL45:
 530 017c 8983      		std Y+1,r24
 531               	.LVL46:
  89:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_1)) { default_layer |= (1<<1); }
 532               		.loc 1 89 5 is_stmt 1 view .LVU145
  89:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_1)) { default_layer |= (1<<1); }
 533               		.loc 1 89 9 is_stmt 0 view .LVU146
 534 017e 8EE1      		ldi r24,lo8(30)
 535               	.LVL47:
  89:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_1)) { default_layer |= (1<<1); }
 536               		.loc 1 89 9 view .LVU147
 537 0180 0E94 0000 		call bootmagic_scan_keycode
 538               	.LVL48:
  89:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_1)) { default_layer |= (1<<1); }
 539               		.loc 1 89 8 view .LVU148
 540 0184 8823      		tst r24
 541 0186 01F0      		breq .L33
  89:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_1)) { default_layer |= (1<<1); }
 542               		.loc 1 89 66 is_stmt 1 discriminator 1 view .LVU149
  89:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_1)) { default_layer |= (1<<1); }
 543               		.loc 1 89 80 is_stmt 0 discriminator 1 view .LVU150
 544 0188 B981      		ldd r27,Y+1
 545 018a B260      		ori r27,lo8(2)
 546 018c B983      		std Y+1,r27
 547               	.LVL49:
 548               	.L33:
  90:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_2)) { default_layer |= (1<<2); }
 549               		.loc 1 90 5 is_stmt 1 view .LVU151
  90:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_2)) { default_layer |= (1<<2); }
 550               		.loc 1 90 9 is_stmt 0 view .LVU152
 551 018e 8FE1      		ldi r24,lo8(31)
 552 0190 0E94 0000 		call bootmagic_scan_keycode
 553               	.LVL50:
  90:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_2)) { default_layer |= (1<<2); }
 554               		.loc 1 90 8 view .LVU153
 555 0194 8823      		tst r24
 556 0196 01F0      		breq .L34
  90:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_2)) { default_layer |= (1<<2); }
 557               		.loc 1 90 66 is_stmt 1 discriminator 1 view .LVU154
  90:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_2)) { default_layer |= (1<<2); }
 558               		.loc 1 90 80 is_stmt 0 discriminator 1 view .LVU155
 559 0198 2981      		ldd r18,Y+1
 560 019a 2460      		ori r18,lo8(4)
 561 019c 2983      		std Y+1,r18
 562               	.LVL51:
 563               	.L34:
  91:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_3)) { default_layer |= (1<<3); }
 564               		.loc 1 91 5 is_stmt 1 view .LVU156
  91:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_3)) { default_layer |= (1<<3); }
 565               		.loc 1 91 9 is_stmt 0 view .LVU157
 566 019e 80E2      		ldi r24,lo8(32)
 567 01a0 0E94 0000 		call bootmagic_scan_keycode
 568               	.LVL52:
  91:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_3)) { default_layer |= (1<<3); }
 569               		.loc 1 91 8 view .LVU158
 570 01a4 8823      		tst r24
 571 01a6 01F0      		breq .L35
  91:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_3)) { default_layer |= (1<<3); }
 572               		.loc 1 91 66 is_stmt 1 discriminator 1 view .LVU159
  91:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_3)) { default_layer |= (1<<3); }
 573               		.loc 1 91 80 is_stmt 0 discriminator 1 view .LVU160
 574 01a8 3981      		ldd r19,Y+1
 575 01aa 3860      		ori r19,lo8(8)
 576 01ac 3983      		std Y+1,r19
 577               	.LVL53:
 578               	.L35:
  92:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_4)) { default_layer |= (1<<4); }
 579               		.loc 1 92 5 is_stmt 1 view .LVU161
  92:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_4)) { default_layer |= (1<<4); }
 580               		.loc 1 92 9 is_stmt 0 view .LVU162
 581 01ae 81E2      		ldi r24,lo8(33)
 582 01b0 0E94 0000 		call bootmagic_scan_keycode
 583               	.LVL54:
  92:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_4)) { default_layer |= (1<<4); }
 584               		.loc 1 92 8 view .LVU163
 585 01b4 8823      		tst r24
 586 01b6 01F0      		breq .L36
  92:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_4)) { default_layer |= (1<<4); }
 587               		.loc 1 92 66 is_stmt 1 discriminator 1 view .LVU164
  92:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_4)) { default_layer |= (1<<4); }
 588               		.loc 1 92 80 is_stmt 0 discriminator 1 view .LVU165
 589 01b8 4981      		ldd r20,Y+1
 590 01ba 4061      		ori r20,lo8(16)
 591 01bc 4983      		std Y+1,r20
 592               	.LVL55:
 593               	.L36:
  93:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_5)) { default_layer |= (1<<5); }
 594               		.loc 1 93 5 is_stmt 1 view .LVU166
  93:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_5)) { default_layer |= (1<<5); }
 595               		.loc 1 93 9 is_stmt 0 view .LVU167
 596 01be 82E2      		ldi r24,lo8(34)
 597 01c0 0E94 0000 		call bootmagic_scan_keycode
 598               	.LVL56:
  93:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_5)) { default_layer |= (1<<5); }
 599               		.loc 1 93 8 view .LVU168
 600 01c4 8823      		tst r24
 601 01c6 01F0      		breq .L37
  93:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_5)) { default_layer |= (1<<5); }
 602               		.loc 1 93 66 is_stmt 1 discriminator 1 view .LVU169
  93:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_5)) { default_layer |= (1<<5); }
 603               		.loc 1 93 80 is_stmt 0 discriminator 1 view .LVU170
 604 01c8 5981      		ldd r21,Y+1
 605 01ca 5062      		ori r21,lo8(32)
 606 01cc 5983      		std Y+1,r21
 607               	.LVL57:
 608               	.L37:
  94:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_6)) { default_layer |= (1<<6); }
 609               		.loc 1 94 5 is_stmt 1 view .LVU171
  94:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_6)) { default_layer |= (1<<6); }
 610               		.loc 1 94 9 is_stmt 0 view .LVU172
 611 01ce 83E2      		ldi r24,lo8(35)
 612 01d0 0E94 0000 		call bootmagic_scan_keycode
 613               	.LVL58:
  94:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_6)) { default_layer |= (1<<6); }
 614               		.loc 1 94 8 view .LVU173
 615 01d4 8823      		tst r24
 616 01d6 01F0      		breq .L38
  94:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_6)) { default_layer |= (1<<6); }
 617               		.loc 1 94 66 is_stmt 1 discriminator 1 view .LVU174
  94:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_6)) { default_layer |= (1<<6); }
 618               		.loc 1 94 80 is_stmt 0 discriminator 1 view .LVU175
 619 01d8 8981      		ldd r24,Y+1
 620 01da 8064      		ori r24,lo8(64)
 621 01dc 8983      		std Y+1,r24
 622               	.LVL59:
 623               	.L38:
  95:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_7)) { default_layer |= (1<<7); }
 624               		.loc 1 95 5 is_stmt 1 view .LVU176
  95:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_7)) { default_layer |= (1<<7); }
 625               		.loc 1 95 9 is_stmt 0 view .LVU177
 626 01de 84E2      		ldi r24,lo8(36)
 627 01e0 0E94 0000 		call bootmagic_scan_keycode
 628               	.LVL60:
  95:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_7)) { default_layer |= (1<<7); }
 629               		.loc 1 95 8 view .LVU178
 630 01e4 8823      		tst r24
 631 01e6 01F0      		breq .L39
  95:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_7)) { default_layer |= (1<<7); }
 632               		.loc 1 95 66 is_stmt 1 discriminator 1 view .LVU179
  95:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_7)) { default_layer |= (1<<7); }
 633               		.loc 1 95 80 is_stmt 0 discriminator 1 view .LVU180
 634 01e8 9981      		ldd r25,Y+1
 635 01ea 9068      		ori r25,lo8(-128)
 636 01ec 9983      		std Y+1,r25
 637               	.LVL61:
  96:./tmk_core/common/bootmagic.c ****     if (default_layer) {
 638               		.loc 1 96 5 is_stmt 1 discriminator 1 view .LVU181
 639               	.L40:
  97:./tmk_core/common/bootmagic.c ****         eeconfig_update_default_layer(default_layer);
 640               		.loc 1 97 9 view .LVU182
 641 01ee 8981      		ldd r24,Y+1
 642 01f0 0E94 0000 		call eeconfig_update_default_layer
 643               	.LVL62:
  98:./tmk_core/common/bootmagic.c ****         default_layer_set((uint32_t)default_layer);
 644               		.loc 1 98 9 view .LVU183
 645 01f4 3981      		ldd r19,Y+1
 646 01f6 232F      		mov r18,r19
 647               	.LVL63:
 648               	.L94:
 101:./tmk_core/common/bootmagic.c ****         default_layer_set((uint32_t)default_layer);
 649               		.loc 1 101 9 is_stmt 0 view .LVU184
 650 01f8 30E0      		ldi r19,0
 651 01fa 50E0      		ldi r21,0
 652 01fc 40E0      		ldi r20,0
 653 01fe 2983      		std Y+1,r18
 654 0200 3A83      		std Y+2,r19
 655 0202 4B83      		std Y+3,r20
 656 0204 5C83      		std Y+4,r21
 657 0206 CA01      		movw r24,r20
 658 0208 B901      		movw r22,r18
 659               	/* epilogue start */
 103:./tmk_core/common/bootmagic.c **** }
 660               		.loc 1 103 1 view .LVU185
 661 020a 0F90      		pop __tmp_reg__
 662 020c 0F90      		pop __tmp_reg__
 663 020e 0F90      		pop __tmp_reg__
 664 0210 0F90      		pop __tmp_reg__
 665 0212 DF91      		pop r29
 666 0214 CF91      		pop r28
 101:./tmk_core/common/bootmagic.c ****         default_layer_set((uint32_t)default_layer);
 667               		.loc 1 101 9 view .LVU186
 668 0216 0C94 0000 		jmp default_layer_set
 669               	.LVL64:
 670               	.L22:
  48:./tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_KEYBOARD)) {
 671               		.loc 1 48 16 is_stmt 1 view .LVU187
  48:./tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_KEYBOARD)) {
 672               		.loc 1 48 20 is_stmt 0 view .LVU188
 673 021a 8EE0      		ldi r24,lo8(14)
 674 021c 0E94 0000 		call bootmagic_scan_keycode
 675               	.LVL65:
  48:./tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_KEYBOARD)) {
 676               		.loc 1 48 19 view .LVU189
 677 0220 8823      		tst r24
 678 0222 01F0      		breq .L23
  49:./tmk_core/common/bootmagic.c ****             debug_config.keyboard = !debug_config.keyboard;
 679               		.loc 1 49 13 is_stmt 1 view .LVU190
  49:./tmk_core/common/bootmagic.c ****             debug_config.keyboard = !debug_config.keyboard;
 680               		.loc 1 49 50 is_stmt 0 view .LVU191
 681 0224 9091 0000 		lds r25,debug_config
  49:./tmk_core/common/bootmagic.c ****             debug_config.keyboard = !debug_config.keyboard;
 682               		.loc 1 49 35 view .LVU192
 683 0228 892F      		mov r24,r25
 684 022a 8B7F      		andi r24,~(1<<2)
 685 022c 92FF      		sbrs r25,2
 686 022e 8460      		ori r24,1<<2
 687 0230 00C0      		rjmp .L93
 688               	.L23:
  50:./tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_MOUSE)) {
 689               		.loc 1 50 16 is_stmt 1 view .LVU193
  50:./tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_MOUSE)) {
 690               		.loc 1 50 20 is_stmt 0 view .LVU194
 691 0232 80E1      		ldi r24,lo8(16)
 692 0234 0E94 0000 		call bootmagic_scan_keycode
 693               	.LVL66:
 694 0238 9091 0000 		lds r25,debug_config
  50:./tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_MOUSE)) {
 695               		.loc 1 50 19 view .LVU195
 696 023c 8823      		tst r24
 697 023e 01F0      		breq .L24
  51:./tmk_core/common/bootmagic.c ****             debug_config.mouse = !debug_config.mouse;
 698               		.loc 1 51 13 is_stmt 1 view .LVU196
  51:./tmk_core/common/bootmagic.c ****             debug_config.mouse = !debug_config.mouse;
 699               		.loc 1 51 32 is_stmt 0 view .LVU197
 700 0240 892F      		mov r24,r25
 701 0242 877F      		andi r24,~(1<<3)
 702 0244 93FF      		sbrs r25,3
 703 0246 8860      		ori r24,1<<3
 704 0248 00C0      		rjmp .L93
 705               	.L24:
  53:./tmk_core/common/bootmagic.c ****             debug_config.enable = !debug_config.enable;
 706               		.loc 1 53 13 is_stmt 1 view .LVU198
  53:./tmk_core/common/bootmagic.c ****             debug_config.enable = !debug_config.enable;
 707               		.loc 1 53 33 is_stmt 0 view .LVU199
 708 024a 892F      		mov r24,r25
 709 024c 8E7F      		andi r24,~(1<<0)
 710 024e 90FF      		sbrs r25,0
 711 0250 8160      		ori r24,1<<0
 712 0252 00C0      		rjmp .L93
 713               	.LVL67:
 714               	.L39:
  96:./tmk_core/common/bootmagic.c ****     if (default_layer) {
 715               		.loc 1 96 5 is_stmt 1 view .LVU200
  96:./tmk_core/common/bootmagic.c ****     if (default_layer) {
 716               		.loc 1 96 8 is_stmt 0 view .LVU201
 717 0254 A981      		ldd r26,Y+1
 718 0256 A111      		cpse r26,__zero_reg__
 719 0258 00C0      		rjmp .L40
 100:./tmk_core/common/bootmagic.c ****         default_layer = eeconfig_read_default_layer();
 720               		.loc 1 100 9 is_stmt 1 view .LVU202
 100:./tmk_core/common/bootmagic.c ****         default_layer = eeconfig_read_default_layer();
 721               		.loc 1 100 25 is_stmt 0 view .LVU203
 722 025a 0E94 0000 		call eeconfig_read_default_layer
 723               	.LVL68:
 101:./tmk_core/common/bootmagic.c ****         default_layer_set((uint32_t)default_layer);
 724               		.loc 1 101 9 is_stmt 1 view .LVU204
 725 025e 282F      		mov r18,r24
 726 0260 00C0      		rjmp .L94
 727               	.LVL69:
 728               	.L14:
 729               	/* epilogue start */
 103:./tmk_core/common/bootmagic.c **** }
 730               		.loc 1 103 1 is_stmt 0 view .LVU205
 731 0262 0F90      		pop __tmp_reg__
 732 0264 0F90      		pop __tmp_reg__
 733 0266 0F90      		pop __tmp_reg__
 734 0268 0F90      		pop __tmp_reg__
 735 026a DF91      		pop r29
 736 026c CF91      		pop r28
 737 026e 0895      		ret
 738               		.cfi_endproc
 739               	.LFE103:
 741               	.global	keymap_config
 742               		.section	.bss.keymap_config,"aw",@nobits
 745               	keymap_config:
 746 0000 0000      		.zero	2
 747               		.text
 748               	.Letext0:
 749               		.file 3 "/usr/avr/include/stdint.h"
 750               		.file 4 "./tmk_core/common/matrix.h"
 751               		.file 5 "./tmk_core/common/debug.h"
 752               		.file 6 "./tmk_core/common/keyboard.h"
 753               		.file 7 "./quantum/keycode_config.h"
 754               		.file 8 "./quantum/keymap.h"
 755               		.file 9 "/usr/avr/include/math.h"
 756               		.file 10 "./tmk_core/common/action_layer.h"
 757               		.file 11 "./tmk_core/common/eeconfig.h"
 758               		.file 12 "./tmk_core/common/bootloader.h"
 759               		.file 13 "./tmk_core/common/keycode.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 bootmagic.c
     /tmp/ccGRxxOC.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccGRxxOC.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccGRxxOC.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccGRxxOC.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/ccGRxxOC.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccGRxxOC.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccGRxxOC.s:13     .text.scan_keycode:0000000000000000 scan_keycode
     /tmp/ccGRxxOC.s:173    .text.bootmagic_scan_keycode:0000000000000000 bootmagic_scan_keycode
     /tmp/ccGRxxOC.s:222    .text.bootmagic:0000000000000000 bootmagic
     /tmp/ccGRxxOC.s:745    .bss.keymap_config:0000000000000000 keymap_config

UNDEFINED SYMBOLS
matrix_get_row
keymap_key_to_keycode
eeconfig_is_enabled
eeconfig_init
matrix_scan
bootloader_jump
eeconfig_read_debug
debug_config
eeconfig_update_debug
eeconfig_read_keymap
eeconfig_update_keymap
eeconfig_update_default_layer
default_layer_set
eeconfig_read_default_layer
__do_clear_bss
